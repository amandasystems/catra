// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R7 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 64];
  s0 -> s0 [0, 65535] { R28 += 1 };
  s0 -> s2 [65, 65];
  s0 -> s1 [66, 65535];
  s1 -> s1 [0, 64];
  s1 -> s2 [65, 65];
  s1 -> s1 [66, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R11943 += 1, R11944 += 1 };
  s0 -> s1 [0, 65535] { R11944 += 1, R43 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R11944 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s0 [0, 65535] { R11945 += 1, R11946 += 1 };
  s0 -> s1 [0, 65535] { R11946 += 1, R104 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R11946 += 1, R104 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 84] { R11948 += 1 };
  s0 -> s2 [0, 65535] { R11948 += 1, R106 += 1 };
  s0 -> s0 [0, 65535] { R11947 += 1, R11948 += 1 };
  s0 -> s1 [86, 65535] { R11948 += 1 };
  s1 -> s1 [0, 84] { R11948 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [86, 65535] { R11948 += 1 };
  s2 -> s1 [0, 84] { R11948 += 1 };
  s2 -> s2 [0, 65535] { R11948 += 1, R106 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [86, 65535] { R11948 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 89] { R11950 += 1 };
  s0 -> s2 [0, 65535] { R11950 += 1, R108 += 1 };
  s0 -> s0 [0, 65535] { R11949 += 1, R11950 += 1 };
  s0 -> s1 [91, 65535] { R11950 += 1 };
  s1 -> s1 [0, 89] { R11950 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [91, 65535] { R11950 += 1 };
  s2 -> s1 [0, 89] { R11950 += 1 };
  s2 -> s2 [0, 65535] { R11950 += 1, R108 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [91, 65535] { R11950 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 88] { R11952 += 1 };
  s0 -> s2 [0, 65535] { R11952 += 1, R110 += 1 };
  s0 -> s0 [0, 65535] { R11951 += 1, R11952 += 1 };
  s0 -> s1 [90, 65535] { R11952 += 1 };
  s1 -> s1 [0, 88] { R11952 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [90, 65535] { R11952 += 1 };
  s2 -> s1 [0, 88] { R11952 += 1 };
  s2 -> s2 [0, 65535] { R11952 += 1, R110 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [90, 65535] { R11952 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 72] { R11954 += 1 };
  s0 -> s2 [0, 65535] { R11954 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R11953 += 1, R11954 += 1 };
  s0 -> s1 [74, 65535] { R11954 += 1 };
  s1 -> s1 [0, 72] { R11954 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [74, 65535] { R11954 += 1 };
  s2 -> s1 [0, 72] { R11954 += 1 };
  s2 -> s2 [0, 65535] { R11954 += 1, R112 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R11954 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R11956 += 1, R116 += 1, R117 += 1 };
  s0 -> s0 [0, 65535] { R11955 += 1, R11956 += 1 };
  s0 -> s2 [0, 65535] { R11956 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [0, 65535] { R11956 += 1, R116 += 1, R117 += 1 };
  s1 -> s2 [0, 65535] { R11956 += 1, R117 += 1, R118 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R11956 += 1 };
  s2 -> s2 [0, 65535] { R11956 += 1, R117 += 1, R118 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11956 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R11958 += 1 };
  s0 -> s0 [0, 65535] { R11957 += 1, R11958 += 1 };
  s1 -> s1 [0, 65535] { R11958 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R11960 += 1, R123 += 1, R124 += 1 };
  s0 -> s2 [0, 65535] { R11960 += 1, R122 += 1, R123 += 1 };
  s0 -> s0 [0, 65535] { R11959 += 1, R11960 += 1 };
  s1 -> s4 [0, 65535] { R11960 += 1 };
  s1 -> s1 [0, 65535] { R11960 += 1, R123 += 1, R124 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11960 += 1, R123 += 1, R124 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11960 += 1, R122 += 1, R123 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11960 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 107] { R11962 += 1, R128 += 1 };
  s0 -> s2 [0, 65535] { R11962 += 1, R127 += 1, R128 += 1 };
  s0 -> s0 [0, 65535] { R11961 += 1, R11962 += 1 };
  s0 -> s3 [108, 108] { R11962 += 1, R128 += 1 };
  s0 -> s1 [109, 65535] { R11962 += 1, R128 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s13 [0, 65535] { R11962 += 1 };
  s1 -> s1 [0, 65535] { R11962 += 1, R128 += 1 };
  s2 -> s1 [0, 107] { R11962 += 1, R128 += 1 };
  s2 -> s2 [0, 65535] { R11962 += 1, R127 += 1, R128 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R11962 += 1, R128 += 1 };
  s2 -> s1 [109, 65535] { R11962 += 1, R128 += 1 };
  s3 -> s1 [0, 110] { R11962 += 1, R128 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11962 += 1 };
  s3 -> s5 [111, 111] { R11962 += 1, R128 += 1 };
  s3 -> s1 [112, 65535] { R11962 += 1, R128 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R11962 += 1, R128 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11962 += 1 };
  s5 -> s6 [99, 99] { R11962 += 1, R128 += 1 };
  s5 -> s1 [100, 65535] { R11962 += 1, R128 += 1 };
  s6 -> s1 [0, 96] { R11962 += 1, R128 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R11962 += 1 };
  s6 -> s7 [97, 97] { R11962 += 1, R128 += 1 };
  s6 -> s1 [98, 65535] { R11962 += 1, R128 += 1 };
  s7 -> s1 [0, 107] { R11962 += 1, R128 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s7 [0, 65535] { R11962 += 1 };
  s7 -> s8 [108, 108] { R11962 += 1, R128 += 1 };
  s7 -> s1 [109, 65535] { R11962 += 1, R128 += 1 };
  s8 -> s1 [0, 103] { R11962 += 1, R128 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s8 [0, 65535] { R11962 += 1 };
  s8 -> s9 [104, 104] { R11962 += 1, R128 += 1 };
  s8 -> s1 [105, 65535] { R11962 += 1, R128 += 1 };
  s9 -> s1 [0, 110] { R11962 += 1, R128 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s9 [0, 65535] { R11962 += 1 };
  s9 -> s10 [111, 111] { R11962 += 1, R128 += 1 };
  s9 -> s1 [112, 65535] { R11962 += 1, R128 += 1 };
  s10 -> s1 [0, 114] { R11962 += 1, R128 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s10 [0, 65535] { R11962 += 1 };
  s10 -> s11 [115, 115] { R11962 += 1, R128 += 1 };
  s10 -> s1 [116, 65535] { R11962 += 1, R128 += 1 };
  s11 -> s1 [0, 115] { R11962 += 1, R128 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s11 [0, 65535] { R11962 += 1 };
  s11 -> s12 [116, 116] { R11962 += 1, R128 += 1 };
  s11 -> s1 [117, 65535] { R11962 += 1, R128 += 1 };
  s12 -> s1 [0, 65535] { R11962 += 1, R128 += 1 };
  s13 -> s4 [0, 65535];
  s13 -> s13 [0, 65535] { R11962 += 1 };
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R11964 += 1, R132 += 1, R133 += 1 };
  s0 -> s2 [0, 65535] { R11964 += 1, R133 += 1, R134 += 1 };
  s0 -> s0 [0, 65535] { R11963 += 1, R11964 += 1 };
  s1 -> s1 [0, 65535] { R11964 += 1, R132 += 1, R133 += 1 };
  s1 -> s2 [0, 65535] { R11964 += 1, R133 += 1, R134 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11964 += 1, R133 += 1, R134 += 1 };
  s2 -> s3 [0, 65535] { R11964 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11964 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s0 [0, 65535] { R11965 += 1, R11966 += 1 };
  s0 -> s1 [0, 65535] { R11966 += 1, R139 += 1, R140 += 1 };
  s0 -> s2 [0, 65535] { R11966 += 1, R138 += 1, R139 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R11966 += 1 };
  s1 -> s1 [0, 65535] { R11966 += 1, R139 += 1, R140 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11966 += 1, R139 += 1, R140 += 1 };
  s2 -> s2 [0, 65535] { R11966 += 1, R138 += 1, R139 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11966 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 107] { R11968 += 1, R144 += 1 };
  s0 -> s0 [0, 65535] { R11967 += 1, R11968 += 1 };
  s0 -> s2 [0, 65535] { R11968 += 1, R143 += 1, R144 += 1 };
  s0 -> s3 [108, 108] { R11968 += 1, R144 += 1 };
  s0 -> s1 [109, 65535] { R11968 += 1, R144 += 1 };
  s1 -> s13 [0, 65535] { R11968 += 1 };
  s1 -> s1 [0, 65535] { R11968 += 1, R144 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 107] { R11968 += 1, R144 += 1 };
  s2 -> s2 [0, 65535] { R11968 += 1, R143 += 1, R144 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R11968 += 1, R144 += 1 };
  s2 -> s1 [109, 65535] { R11968 += 1, R144 += 1 };
  s3 -> s1 [0, 110] { R11968 += 1, R144 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11968 += 1 };
  s3 -> s5 [111, 111] { R11968 += 1, R144 += 1 };
  s3 -> s1 [112, 65535] { R11968 += 1, R144 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R11968 += 1, R144 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11968 += 1 };
  s5 -> s6 [99, 99] { R11968 += 1, R144 += 1 };
  s5 -> s1 [100, 65535] { R11968 += 1, R144 += 1 };
  s6 -> s1 [0, 96] { R11968 += 1, R144 += 1 };
  s6 -> s6 [0, 65535] { R11968 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s7 [97, 97] { R11968 += 1, R144 += 1 };
  s6 -> s1 [98, 65535] { R11968 += 1, R144 += 1 };
  s7 -> s1 [0, 107] { R11968 += 1, R144 += 1 };
  s7 -> s7 [0, 65535] { R11968 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s8 [108, 108] { R11968 += 1, R144 += 1 };
  s7 -> s1 [109, 65535] { R11968 += 1, R144 += 1 };
  s8 -> s1 [0, 103] { R11968 += 1, R144 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s8 [0, 65535] { R11968 += 1 };
  s8 -> s9 [104, 104] { R11968 += 1, R144 += 1 };
  s8 -> s1 [105, 65535] { R11968 += 1, R144 += 1 };
  s9 -> s1 [0, 110] { R11968 += 1, R144 += 1 };
  s9 -> s9 [0, 65535] { R11968 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s10 [111, 111] { R11968 += 1, R144 += 1 };
  s9 -> s1 [112, 65535] { R11968 += 1, R144 += 1 };
  s10 -> s1 [0, 114] { R11968 += 1, R144 += 1 };
  s10 -> s10 [0, 65535] { R11968 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s11 [115, 115] { R11968 += 1, R144 += 1 };
  s10 -> s1 [116, 65535] { R11968 += 1, R144 += 1 };
  s11 -> s1 [0, 115] { R11968 += 1, R144 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s11 [0, 65535] { R11968 += 1 };
  s11 -> s12 [116, 116] { R11968 += 1, R144 += 1 };
  s11 -> s1 [117, 65535] { R11968 += 1, R144 += 1 };
  s12 -> s1 [0, 65535] { R11968 += 1, R144 += 1 };
  s13 -> s13 [0, 65535] { R11968 += 1 };
  s13 -> s4 [0, 65535];
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R11970 += 1, R148 += 1, R149 += 1 };
  s0 -> s0 [0, 65535] { R11969 += 1, R11970 += 1 };
  s0 -> s2 [0, 65535] { R11970 += 1, R149 += 1, R150 += 1 };
  s1 -> s1 [0, 65535] { R11970 += 1, R148 += 1, R149 += 1 };
  s1 -> s2 [0, 65535] { R11970 += 1, R149 += 1, R150 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11970 += 1, R149 += 1, R150 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R11970 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11970 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R11972 += 1, R154 += 1, R155 += 1 };
  s0 -> s0 [0, 65535] { R11971 += 1, R11972 += 1 };
  s0 -> s2 [0, 65535] { R11972 += 1, R155 += 1, R156 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11972 += 1, R154 += 1, R155 += 1 };
  s1 -> s2 [0, 65535] { R11972 += 1, R155 += 1, R156 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11972 += 1, R155 += 1, R156 += 1 };
  s2 -> s4 [0, 65535] { R11972 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11972 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 107] { R11974 += 1, R160 += 1 };
  s0 -> s0 [0, 65535] { R11973 += 1, R11974 += 1 };
  s0 -> s2 [0, 65535] { R11974 += 1, R159 += 1, R160 += 1 };
  s0 -> s3 [108, 108] { R11974 += 1, R160 += 1 };
  s0 -> s1 [109, 65535] { R11974 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11974 += 1, R160 += 1 };
  s1 -> s13 [0, 65535] { R11974 += 1 };
  s2 -> s1 [0, 107] { R11974 += 1, R160 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11974 += 1, R159 += 1, R160 += 1 };
  s2 -> s3 [108, 108] { R11974 += 1, R160 += 1 };
  s2 -> s1 [109, 65535] { R11974 += 1, R160 += 1 };
  s3 -> s1 [0, 110] { R11974 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R11974 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [111, 111] { R11974 += 1, R160 += 1 };
  s3 -> s1 [112, 65535] { R11974 += 1, R160 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R11974 += 1, R160 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R11974 += 1 };
  s5 -> s6 [99, 99] { R11974 += 1, R160 += 1 };
  s5 -> s1 [100, 65535] { R11974 += 1, R160 += 1 };
  s6 -> s1 [0, 96] { R11974 += 1, R160 += 1 };
  s6 -> s6 [0, 65535] { R11974 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s7 [97, 97] { R11974 += 1, R160 += 1 };
  s6 -> s1 [98, 65535] { R11974 += 1, R160 += 1 };
  s7 -> s1 [0, 107] { R11974 += 1, R160 += 1 };
  s7 -> s7 [0, 65535] { R11974 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s8 [108, 108] { R11974 += 1, R160 += 1 };
  s7 -> s1 [109, 65535] { R11974 += 1, R160 += 1 };
  s8 -> s1 [0, 103] { R11974 += 1, R160 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s8 [0, 65535] { R11974 += 1 };
  s8 -> s9 [104, 104] { R11974 += 1, R160 += 1 };
  s8 -> s1 [105, 65535] { R11974 += 1, R160 += 1 };
  s9 -> s1 [0, 110] { R11974 += 1, R160 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s9 [0, 65535] { R11974 += 1 };
  s9 -> s10 [111, 111] { R11974 += 1, R160 += 1 };
  s9 -> s1 [112, 65535] { R11974 += 1, R160 += 1 };
  s10 -> s1 [0, 114] { R11974 += 1, R160 += 1 };
  s10 -> s10 [0, 65535] { R11974 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s11 [115, 115] { R11974 += 1, R160 += 1 };
  s10 -> s1 [116, 65535] { R11974 += 1, R160 += 1 };
  s11 -> s1 [0, 115] { R11974 += 1, R160 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s11 [0, 65535] { R11974 += 1 };
  s11 -> s12 [116, 116] { R11974 += 1, R160 += 1 };
  s11 -> s1 [117, 65535] { R11974 += 1, R160 += 1 };
  s12 -> s1 [0, 65535] { R11974 += 1, R160 += 1 };
  s13 -> s4 [0, 65535];
  s13 -> s13 [0, 65535] { R11974 += 1 };
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R11976 += 1, R165 += 1, R166 += 1 };
  s0 -> s2 [0, 65535] { R11976 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R11975 += 1, R11976 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R11976 += 1 };
  s1 -> s1 [0, 65535] { R11976 += 1, R165 += 1, R166 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11976 += 1, R165 += 1, R166 += 1 };
  s2 -> s2 [0, 65535] { R11976 += 1, R164 += 1, R165 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11976 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R11978 += 1, R170 += 1, R171 += 1 };
  s0 -> s0 [0, 65535] { R11977 += 1, R11978 += 1 };
  s0 -> s2 [0, 65535] { R11978 += 1, R171 += 1, R172 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R11978 += 1, R170 += 1, R171 += 1 };
  s1 -> s2 [0, 65535] { R11978 += 1, R171 += 1, R172 += 1 };
  s2 -> s3 [0, 65535] { R11978 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R11978 += 1, R171 += 1, R172 += 1 };
  s3 -> s3 [0, 65535] { R11978 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R11980 += 1 };
  s0 -> s0 [0, 65535] { R11979 += 1, R11980 += 1 };
  s1 -> s1 [0, 65535] { R11980 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_22 {
  init s0;
  s0 -> s0 [0, 65535] { R11981 += 1, R11982 += 1 };
  s0 -> s1 [0, 65535] { R11982 += 1, R177 += 1, R178 += 1 };
  s0 -> s2 [0, 65535] { R11982 += 1, R176 += 1, R177 += 1 };
  s1 -> s4 [0, 65535] { R11982 += 1 };
  s1 -> s1 [0, 65535] { R11982 += 1, R177 += 1, R178 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R11982 += 1, R177 += 1, R178 += 1 };
  s2 -> s2 [0, 65535] { R11982 += 1, R176 += 1, R177 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11982 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R11984 += 1 };
  s0 -> s0 [0, 65535] { R11983 += 1, R11984 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R11984 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 89] { R11986 += 1, R183 += 1, R184 += 1 };
  s0 -> s2 [0, 65535] { R11986 += 1, R182 += 1, R183 += 1 };
  s0 -> s0 [0, 65535] { R11985 += 1, R11986 += 1 };
  s0 -> s3 [90, 90] { R11986 += 1, R183 += 1, R184 += 1 };
  s0 -> s4 [90, 90] { R11986 += 1, R183 += 1, R184 += 1 };
  s0 -> s1 [91, 65535] { R11986 += 1, R183 += 1, R184 += 1 };
  s1 -> s1 [0, 89] { R11986 += 1, R183 += 1, R184 += 1 };
  s1 -> s1 [0, 65535] { R11986 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [90, 90] { R11986 += 1, R183 += 1, R184 += 1 };
  s1 -> s4 [90, 90] { R11986 += 1, R183 += 1, R184 += 1 };
  s1 -> s1 [91, 65535] { R11986 += 1, R183 += 1, R184 += 1 };
  s2 -> s1 [0, 89] { R11986 += 1, R183 += 1, R184 += 1 };
  s2 -> s2 [0, 65535] { R11986 += 1, R182 += 1, R183 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [90, 90] { R11986 += 1, R183 += 1, R184 += 1 };
  s2 -> s4 [90, 90] { R11986 += 1, R183 += 1, R184 += 1 };
  s2 -> s1 [91, 65535] { R11986 += 1, R183 += 1, R184 += 1 };
  s3 -> s3 [0, 65535] { R11986 += 1, R183 += 1, R184 += 1 };
  s3 -> s6 [0, 65535] { R11986 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R11986 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11986 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s0 [0, 65535] { R11987 += 1, R11988 += 1 };
  s0 -> s1 [0, 65535] { R11988 += 1, R188 += 1, R189 += 1 };
  s0 -> s2 [0, 65535] { R11988 += 1, R189 += 1, R190 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R11988 += 1, R188 += 1, R189 += 1 };
  s1 -> s2 [0, 65535] { R11988 += 1, R189 += 1, R190 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R11988 += 1, R189 += 1, R190 += 1 };
  s2 -> s4 [0, 65535] { R11988 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R11988 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s0 [0, 65535] { R11989 += 1, R11990 += 1 };
  s0 -> s1 [0, 65535] { R11990 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R11990 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 88] { R11992 += 1, R195 += 1, R196 += 1 };
  s0 -> s2 [0, 65535] { R11992 += 1, R194 += 1, R195 += 1 };
  s0 -> s0 [0, 65535] { R11991 += 1, R11992 += 1 };
  s0 -> s3 [89, 89] { R11992 += 1, R195 += 1, R196 += 1 };
  s0 -> s4 [89, 89] { R11992 += 1, R195 += 1, R196 += 1 };
  s0 -> s1 [90, 65535] { R11992 += 1, R195 += 1, R196 += 1 };
  s1 -> s1 [0, 88] { R11992 += 1, R195 += 1, R196 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R11992 += 1 };
  s1 -> s3 [89, 89] { R11992 += 1, R195 += 1, R196 += 1 };
  s1 -> s4 [89, 89] { R11992 += 1, R195 += 1, R196 += 1 };
  s1 -> s1 [90, 65535] { R11992 += 1, R195 += 1, R196 += 1 };
  s2 -> s1 [0, 88] { R11992 += 1, R195 += 1, R196 += 1 };
  s2 -> s2 [0, 65535] { R11992 += 1, R194 += 1, R195 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [89, 89] { R11992 += 1, R195 += 1, R196 += 1 };
  s2 -> s4 [89, 89] { R11992 += 1, R195 += 1, R196 += 1 };
  s2 -> s1 [90, 65535] { R11992 += 1, R195 += 1, R196 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R11992 += 1 };
  s4 -> s5 [0, 65535] { R11992 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R11992 += 1, R195 += 1, R196 += 1 };
  s5 -> s5 [0, 65535] { R11992 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s0 [0, 65535] { R11993 += 1, R11994 += 1 };
  s0 -> s1 [0, 65535] { R11994 += 1, R200 += 1, R201 += 1 };
  s0 -> s2 [0, 65535] { R11994 += 1, R201 += 1, R202 += 1 };
  s1 -> s1 [0, 65535] { R11994 += 1, R200 += 1, R201 += 1 };
  s1 -> s2 [0, 65535] { R11994 += 1, R201 += 1, R202 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R11994 += 1 };
  s2 -> s2 [0, 65535] { R11994 += 1, R201 += 1, R202 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R11994 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 65535] { R11996 += 1 };
  s0 -> s0 [0, 65535] { R11995 += 1, R11996 += 1 };
  s1 -> s1 [0, 65535] { R11996 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 72] { R11998 += 1, R207 += 1, R208 += 1 };
  s0 -> s2 [0, 65535] { R11998 += 1, R206 += 1, R207 += 1 };
  s0 -> s0 [0, 65535] { R11997 += 1, R11998 += 1 };
  s0 -> s3 [73, 73] { R11998 += 1, R207 += 1, R208 += 1 };
  s0 -> s4 [73, 73] { R11998 += 1, R207 += 1, R208 += 1 };
  s0 -> s1 [74, 65535] { R11998 += 1, R207 += 1, R208 += 1 };
  s1 -> s1 [0, 72] { R11998 += 1, R207 += 1, R208 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R11998 += 1 };
  s1 -> s3 [73, 73] { R11998 += 1, R207 += 1, R208 += 1 };
  s1 -> s4 [73, 73] { R11998 += 1, R207 += 1, R208 += 1 };
  s1 -> s1 [74, 65535] { R11998 += 1, R207 += 1, R208 += 1 };
  s2 -> s1 [0, 72] { R11998 += 1, R207 += 1, R208 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R11998 += 1, R206 += 1, R207 += 1 };
  s2 -> s3 [73, 73] { R11998 += 1, R207 += 1, R208 += 1 };
  s2 -> s4 [73, 73] { R11998 += 1, R207 += 1, R208 += 1 };
  s2 -> s1 [74, 65535] { R11998 += 1, R207 += 1, R208 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R11998 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R11998 += 1 };
  s4 -> s4 [0, 65535] { R11998 += 1, R207 += 1, R208 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R11998 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s0 [0, 65535] { R12021 += 1, R12022 += 1 };
  s0 -> s1 [0, 65535] { R12022 += 1, R44 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R12022 += 1, R44 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R12024 += 1, R103 += 1 };
  s0 -> s0 [0, 65535] { R12023 += 1, R12024 += 1 };
  s0 -> s2 [65, 65] { R12024 += 1, R103 += 1 };
  s0 -> s3 [65, 65] { R12024 += 1, R103 += 1 };
  s0 -> s1 [66, 65535] { R12024 += 1, R103 += 1 };
  s1 -> s1 [0, 64] { R12024 += 1, R103 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12024 += 1, R103 += 1 };
  s1 -> s3 [65, 65] { R12024 += 1, R103 += 1 };
  s1 -> s1 [66, 65535] { R12024 += 1, R103 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12024 += 1, R103 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 64] { R12026 += 1, R105 += 1 };
  s0 -> s0 [0, 65535] { R12025 += 1, R12026 += 1 };
  s0 -> s2 [65, 65] { R12026 += 1, R105 += 1 };
  s0 -> s3 [65, 65] { R12026 += 1, R105 += 1 };
  s0 -> s1 [66, 65535] { R12026 += 1, R105 += 1 };
  s1 -> s1 [0, 64] { R12026 += 1, R105 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12026 += 1, R105 += 1 };
  s1 -> s3 [65, 65] { R12026 += 1, R105 += 1 };
  s1 -> s1 [66, 65535] { R12026 += 1, R105 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12026 += 1, R105 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R12028 += 1, R107 += 1 };
  s0 -> s0 [0, 65535] { R12027 += 1, R12028 += 1 };
  s0 -> s2 [65, 65] { R12028 += 1, R107 += 1 };
  s0 -> s3 [65, 65] { R12028 += 1, R107 += 1 };
  s0 -> s1 [66, 65535] { R12028 += 1, R107 += 1 };
  s1 -> s1 [0, 64] { R12028 += 1, R107 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12028 += 1, R107 += 1 };
  s1 -> s3 [65, 65] { R12028 += 1, R107 += 1 };
  s1 -> s1 [66, 65535] { R12028 += 1, R107 += 1 };
  s2 -> s2 [0, 65535] { R12028 += 1, R107 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 64] { R12030 += 1, R109 += 1 };
  s0 -> s0 [0, 65535] { R12029 += 1, R12030 += 1 };
  s0 -> s2 [65, 65] { R12030 += 1, R109 += 1 };
  s0 -> s3 [65, 65] { R12030 += 1, R109 += 1 };
  s0 -> s1 [66, 65535] { R12030 += 1, R109 += 1 };
  s1 -> s1 [0, 64] { R12030 += 1, R109 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12030 += 1, R109 += 1 };
  s1 -> s3 [65, 65] { R12030 += 1, R109 += 1 };
  s1 -> s1 [66, 65535] { R12030 += 1, R109 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12030 += 1, R109 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 64] { R12032 += 1, R111 += 1 };
  s0 -> s0 [0, 65535] { R12031 += 1, R12032 += 1 };
  s0 -> s2 [65, 65] { R12032 += 1, R111 += 1 };
  s0 -> s3 [65, 65] { R12032 += 1, R111 += 1 };
  s0 -> s1 [66, 65535] { R12032 += 1, R111 += 1 };
  s1 -> s1 [0, 64] { R12032 += 1, R111 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12032 += 1, R111 += 1 };
  s1 -> s3 [65, 65] { R12032 += 1, R111 += 1 };
  s1 -> s1 [66, 65535] { R12032 += 1, R111 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12032 += 1, R111 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R12034 += 1, R113 += 1, R114 += 1 };
  s0 -> s0 [0, 65535] { R12033 += 1, R12034 += 1 };
  s0 -> s2 [65, 65] { R12034 += 1, R113 += 1, R114 += 1 };
  s0 -> s3 [65, 65] { R12034 += 1, R113 += 1, R114 += 1 };
  s0 -> s1 [66, 65535] { R12034 += 1, R113 += 1, R114 += 1 };
  s1 -> s1 [0, 64] { R12034 += 1, R113 += 1, R114 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12034 += 1, R113 += 1, R114 += 1 };
  s1 -> s3 [65, 65] { R12034 += 1, R113 += 1, R114 += 1 };
  s1 -> s1 [66, 65535] { R12034 += 1, R113 += 1, R114 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12034 += 1, R113 += 1, R114 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 64] { R12036 += 1 };
  s0 -> s0 [0, 65535] { R12035 += 1, R12036 += 1 };
  s0 -> s2 [65, 65] { R12036 += 1 };
  s0 -> s3 [65, 65] { R12036 += 1 };
  s0 -> s1 [66, 65535] { R12036 += 1 };
  s1 -> s1 [0, 64] { R12036 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12036 += 1 };
  s1 -> s3 [65, 65] { R12036 += 1 };
  s1 -> s1 [66, 65535] { R12036 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12036 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 64] { R12038 += 1, R119 += 1, R120 += 1 };
  s0 -> s0 [0, 65535] { R12037 += 1, R12038 += 1 };
  s0 -> s2 [65, 65] { R12038 += 1, R119 += 1, R120 += 1 };
  s0 -> s3 [65, 65] { R12038 += 1, R119 += 1, R120 += 1 };
  s0 -> s1 [66, 65535] { R12038 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 64] { R12038 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12038 += 1, R119 += 1, R120 += 1 };
  s1 -> s3 [65, 65] { R12038 += 1, R119 += 1, R120 += 1 };
  s1 -> s1 [66, 65535] { R12038 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12038 += 1, R119 += 1, R120 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 64] { R12040 += 1, R125 += 1, R126 += 1 };
  s0 -> s0 [0, 65535] { R12039 += 1, R12040 += 1 };
  s0 -> s2 [65, 65] { R12040 += 1, R125 += 1, R126 += 1 };
  s0 -> s3 [65, 65] { R12040 += 1, R125 += 1, R126 += 1 };
  s0 -> s1 [66, 65535] { R12040 += 1, R125 += 1, R126 += 1 };
  s1 -> s1 [0, 64] { R12040 += 1, R125 += 1, R126 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12040 += 1, R125 += 1, R126 += 1 };
  s1 -> s3 [65, 65] { R12040 += 1, R125 += 1, R126 += 1 };
  s1 -> s1 [66, 65535] { R12040 += 1, R125 += 1, R126 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12040 += 1, R125 += 1, R126 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_41 {
  init s0;
  s0 -> s1 [0, 64] { R12042 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R12041 += 1, R12042 += 1 };
  s0 -> s2 [65, 65] { R12042 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [65, 65] { R12042 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [66, 65535] { R12042 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 64] { R12042 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12042 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [65, 65] { R12042 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [66, 65535] { R12042 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12042 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_42 {
  init s0;
  s0 -> s1 [0, 64] { R12044 += 1, R135 += 1, R136 += 1 };
  s0 -> s0 [0, 65535] { R12043 += 1, R12044 += 1 };
  s0 -> s2 [65, 65] { R12044 += 1, R135 += 1, R136 += 1 };
  s0 -> s3 [65, 65] { R12044 += 1, R135 += 1, R136 += 1 };
  s0 -> s1 [66, 65535] { R12044 += 1, R135 += 1, R136 += 1 };
  s1 -> s1 [0, 64] { R12044 += 1, R135 += 1, R136 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12044 += 1, R135 += 1, R136 += 1 };
  s1 -> s3 [65, 65] { R12044 += 1, R135 += 1, R136 += 1 };
  s1 -> s1 [66, 65535] { R12044 += 1, R135 += 1, R136 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12044 += 1, R135 += 1, R136 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_43 {
  init s0;
  s0 -> s1 [0, 64] { R12046 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R12045 += 1, R12046 += 1 };
  s0 -> s2 [65, 65] { R12046 += 1, R141 += 1, R142 += 1 };
  s0 -> s3 [65, 65] { R12046 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [66, 65535] { R12046 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 64] { R12046 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12046 += 1, R141 += 1, R142 += 1 };
  s1 -> s3 [65, 65] { R12046 += 1, R141 += 1, R142 += 1 };
  s1 -> s1 [66, 65535] { R12046 += 1, R141 += 1, R142 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12046 += 1, R141 += 1, R142 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_44 {
  init s0;
  s0 -> s1 [0, 64] { R12048 += 1, R145 += 1, R146 += 1 };
  s0 -> s0 [0, 65535] { R12047 += 1, R12048 += 1 };
  s0 -> s2 [65, 65] { R12048 += 1, R145 += 1, R146 += 1 };
  s0 -> s3 [65, 65] { R12048 += 1, R145 += 1, R146 += 1 };
  s0 -> s1 [66, 65535] { R12048 += 1, R145 += 1, R146 += 1 };
  s1 -> s1 [0, 64] { R12048 += 1, R145 += 1, R146 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12048 += 1, R145 += 1, R146 += 1 };
  s1 -> s3 [65, 65] { R12048 += 1, R145 += 1, R146 += 1 };
  s1 -> s1 [66, 65535] { R12048 += 1, R145 += 1, R146 += 1 };
  s2 -> s2 [0, 65535] { R12048 += 1, R145 += 1, R146 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_45 {
  init s0;
  s0 -> s1 [0, 64] { R12050 += 1, R151 += 1, R152 += 1 };
  s0 -> s0 [0, 65535] { R12049 += 1, R12050 += 1 };
  s0 -> s2 [65, 65] { R12050 += 1, R151 += 1, R152 += 1 };
  s0 -> s3 [65, 65] { R12050 += 1, R151 += 1, R152 += 1 };
  s0 -> s1 [66, 65535] { R12050 += 1, R151 += 1, R152 += 1 };
  s1 -> s1 [0, 64] { R12050 += 1, R151 += 1, R152 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12050 += 1, R151 += 1, R152 += 1 };
  s1 -> s3 [65, 65] { R12050 += 1, R151 += 1, R152 += 1 };
  s1 -> s1 [66, 65535] { R12050 += 1, R151 += 1, R152 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12050 += 1, R151 += 1, R152 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_46 {
  init s0;
  s0 -> s1 [0, 64] { R12052 += 1, R157 += 1, R158 += 1 };
  s0 -> s0 [0, 65535] { R12051 += 1, R12052 += 1 };
  s0 -> s2 [65, 65] { R12052 += 1, R157 += 1, R158 += 1 };
  s0 -> s3 [65, 65] { R12052 += 1, R157 += 1, R158 += 1 };
  s0 -> s1 [66, 65535] { R12052 += 1, R157 += 1, R158 += 1 };
  s1 -> s1 [0, 64] { R12052 += 1, R157 += 1, R158 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12052 += 1, R157 += 1, R158 += 1 };
  s1 -> s3 [65, 65] { R12052 += 1, R157 += 1, R158 += 1 };
  s1 -> s1 [66, 65535] { R12052 += 1, R157 += 1, R158 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12052 += 1, R157 += 1, R158 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_47 {
  init s0;
  s0 -> s1 [0, 64] { R12054 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R12053 += 1, R12054 += 1 };
  s0 -> s2 [65, 65] { R12054 += 1, R161 += 1, R162 += 1 };
  s0 -> s3 [65, 65] { R12054 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [66, 65535] { R12054 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 64] { R12054 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12054 += 1, R161 += 1, R162 += 1 };
  s1 -> s3 [65, 65] { R12054 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [66, 65535] { R12054 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12054 += 1, R161 += 1, R162 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_48 {
  init s0;
  s0 -> s1 [0, 64] { R12056 += 1, R167 += 1, R168 += 1 };
  s0 -> s0 [0, 65535] { R12055 += 1, R12056 += 1 };
  s0 -> s2 [65, 65] { R12056 += 1, R167 += 1, R168 += 1 };
  s0 -> s3 [65, 65] { R12056 += 1, R167 += 1, R168 += 1 };
  s0 -> s1 [66, 65535] { R12056 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 64] { R12056 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12056 += 1, R167 += 1, R168 += 1 };
  s1 -> s3 [65, 65] { R12056 += 1, R167 += 1, R168 += 1 };
  s1 -> s1 [66, 65535] { R12056 += 1, R167 += 1, R168 += 1 };
  s2 -> s2 [0, 65535] { R12056 += 1, R167 += 1, R168 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_49 {
  init s0;
  s0 -> s1 [0, 64] { R12058 += 1 };
  s0 -> s0 [0, 65535] { R12057 += 1, R12058 += 1 };
  s0 -> s2 [65, 65] { R12058 += 1 };
  s0 -> s3 [65, 65] { R12058 += 1 };
  s0 -> s1 [66, 65535] { R12058 += 1 };
  s1 -> s1 [0, 64] { R12058 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12058 += 1 };
  s1 -> s3 [65, 65] { R12058 += 1 };
  s1 -> s1 [66, 65535] { R12058 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12058 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_50 {
  init s0;
  s0 -> s1 [0, 64] { R12060 += 1, R173 += 1, R174 += 1 };
  s0 -> s0 [0, 65535] { R12059 += 1, R12060 += 1 };
  s0 -> s2 [65, 65] { R12060 += 1, R173 += 1, R174 += 1 };
  s0 -> s3 [65, 65] { R12060 += 1, R173 += 1, R174 += 1 };
  s0 -> s1 [66, 65535] { R12060 += 1, R173 += 1, R174 += 1 };
  s1 -> s1 [0, 64] { R12060 += 1, R173 += 1, R174 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12060 += 1, R173 += 1, R174 += 1 };
  s1 -> s3 [65, 65] { R12060 += 1, R173 += 1, R174 += 1 };
  s1 -> s1 [66, 65535] { R12060 += 1, R173 += 1, R174 += 1 };
  s2 -> s2 [0, 65535] { R12060 += 1, R173 += 1, R174 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_51 {
  init s0;
  s0 -> s1 [0, 64] { R12062 += 1 };
  s0 -> s0 [0, 65535] { R12061 += 1, R12062 += 1 };
  s0 -> s2 [65, 65] { R12062 += 1 };
  s0 -> s3 [65, 65] { R12062 += 1 };
  s0 -> s1 [66, 65535] { R12062 += 1 };
  s1 -> s1 [0, 64] { R12062 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12062 += 1 };
  s1 -> s3 [65, 65] { R12062 += 1 };
  s1 -> s1 [66, 65535] { R12062 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12062 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_52 {
  init s0;
  s0 -> s1 [0, 64] { R12064 += 1, R179 += 1, R180 += 1 };
  s0 -> s0 [0, 65535] { R12063 += 1, R12064 += 1 };
  s0 -> s2 [65, 65] { R12064 += 1, R179 += 1, R180 += 1 };
  s0 -> s3 [65, 65] { R12064 += 1, R179 += 1, R180 += 1 };
  s0 -> s1 [66, 65535] { R12064 += 1, R179 += 1, R180 += 1 };
  s1 -> s1 [0, 64] { R12064 += 1, R179 += 1, R180 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12064 += 1, R179 += 1, R180 += 1 };
  s1 -> s3 [65, 65] { R12064 += 1, R179 += 1, R180 += 1 };
  s1 -> s1 [66, 65535] { R12064 += 1, R179 += 1, R180 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12064 += 1, R179 += 1, R180 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_53 {
  init s0;
  s0 -> s1 [0, 64] { R12066 += 1, R185 += 1, R186 += 1 };
  s0 -> s0 [0, 65535] { R12065 += 1, R12066 += 1 };
  s0 -> s2 [65, 65] { R12066 += 1, R185 += 1, R186 += 1 };
  s0 -> s3 [65, 65] { R12066 += 1, R185 += 1, R186 += 1 };
  s0 -> s1 [66, 65535] { R12066 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 64] { R12066 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12066 += 1, R185 += 1, R186 += 1 };
  s1 -> s3 [65, 65] { R12066 += 1, R185 += 1, R186 += 1 };
  s1 -> s1 [66, 65535] { R12066 += 1, R185 += 1, R186 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12066 += 1, R185 += 1, R186 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_54 {
  init s0;
  s0 -> s1 [0, 64] { R12068 += 1 };
  s0 -> s0 [0, 65535] { R12067 += 1, R12068 += 1 };
  s0 -> s2 [65, 65] { R12068 += 1 };
  s0 -> s3 [65, 65] { R12068 += 1 };
  s0 -> s1 [66, 65535] { R12068 += 1 };
  s1 -> s1 [0, 64] { R12068 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12068 += 1 };
  s1 -> s3 [65, 65] { R12068 += 1 };
  s1 -> s1 [66, 65535] { R12068 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12068 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_55 {
  init s0;
  s0 -> s1 [0, 64] { R12070 += 1, R191 += 1, R192 += 1 };
  s0 -> s0 [0, 65535] { R12069 += 1, R12070 += 1 };
  s0 -> s2 [65, 65] { R12070 += 1, R191 += 1, R192 += 1 };
  s0 -> s3 [65, 65] { R12070 += 1, R191 += 1, R192 += 1 };
  s0 -> s1 [66, 65535] { R12070 += 1, R191 += 1, R192 += 1 };
  s1 -> s1 [0, 64] { R12070 += 1, R191 += 1, R192 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12070 += 1, R191 += 1, R192 += 1 };
  s1 -> s3 [65, 65] { R12070 += 1, R191 += 1, R192 += 1 };
  s1 -> s1 [66, 65535] { R12070 += 1, R191 += 1, R192 += 1 };
  s2 -> s2 [0, 65535] { R12070 += 1, R191 += 1, R192 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_56 {
  init s0;
  s0 -> s1 [0, 64] { R12072 += 1, R197 += 1, R198 += 1 };
  s0 -> s0 [0, 65535] { R12071 += 1, R12072 += 1 };
  s0 -> s2 [65, 65] { R12072 += 1, R197 += 1, R198 += 1 };
  s0 -> s3 [65, 65] { R12072 += 1, R197 += 1, R198 += 1 };
  s0 -> s1 [66, 65535] { R12072 += 1, R197 += 1, R198 += 1 };
  s1 -> s1 [0, 64] { R12072 += 1, R197 += 1, R198 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12072 += 1, R197 += 1, R198 += 1 };
  s1 -> s3 [65, 65] { R12072 += 1, R197 += 1, R198 += 1 };
  s1 -> s1 [66, 65535] { R12072 += 1, R197 += 1, R198 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R12072 += 1, R197 += 1, R198 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_57 {
  init s0;
  s0 -> s1 [0, 64] { R12074 += 1 };
  s0 -> s0 [0, 65535] { R12073 += 1, R12074 += 1 };
  s0 -> s2 [65, 65] { R12074 += 1 };
  s0 -> s3 [65, 65] { R12074 += 1 };
  s0 -> s1 [66, 65535] { R12074 += 1 };
  s1 -> s1 [0, 64] { R12074 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12074 += 1 };
  s1 -> s3 [65, 65] { R12074 += 1 };
  s1 -> s1 [66, 65535] { R12074 += 1 };
  s2 -> s2 [0, 65535] { R12074 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_58 {
  init s0;
  s0 -> s1 [0, 64] { R12076 += 1, R203 += 1, R204 += 1 };
  s0 -> s0 [0, 65535] { R12075 += 1, R12076 += 1 };
  s0 -> s2 [65, 65] { R12076 += 1, R203 += 1, R204 += 1 };
  s0 -> s3 [65, 65] { R12076 += 1, R203 += 1, R204 += 1 };
  s0 -> s1 [66, 65535] { R12076 += 1, R203 += 1, R204 += 1 };
  s1 -> s1 [0, 64] { R12076 += 1, R203 += 1, R204 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R12076 += 1, R203 += 1, R204 += 1 };
  s1 -> s3 [65, 65] { R12076 += 1, R203 += 1, R204 += 1 };
  s1 -> s1 [66, 65535] { R12076 += 1, R203 += 1, R204 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12076 += 1, R203 += 1, R204 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_59 {
  init s0;
  s0 -> s1 [0, 43] { R12078 += 1 };
  s0 -> s0 [0, 65535] { R12077 += 1, R12078 += 1 };
  s0 -> s1 [45, 45] { R12078 += 1 };
  s0 -> s2 [46, 46] { R12078 += 1 };
  s0 -> s1 [48, 62] { R12078 += 1 };
  s0 -> s3 [65, 65] { R12078 += 1 };
  s0 -> s1 [66, 65535] { R12078 += 1 };
  s1 -> s1 [0, 43] { R12078 += 1 };
  s1 -> s1 [45, 45] { R12078 += 1 };
  s1 -> s2 [46, 46] { R12078 += 1 };
  s1 -> s1 [48, 62] { R12078 += 1 };
  s1 -> s3 [65, 65] { R12078 += 1 };
  s1 -> s1 [66, 65535] { R12078 += 1 };
  s2 -> s1 [0, 43] { R12078 += 1 };
  s2 -> s1 [45, 45] { R12078 += 1 };
  s2 -> s2 [46, 46] { R12078 += 1 };
  s2 -> s1 [48, 62] { R12078 += 1 };
  s2 -> s3 [65, 65] { R12078 += 1 };
  s2 -> s1 [66, 114] { R12078 += 1 };
  s2 -> s8 [115, 115] { R12078 += 1 };
  s2 -> s1 [116, 65535] { R12078 += 1 };
  s3 -> s3 [0, 43] { R12078 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R12078 += 1 };
  s3 -> s4 [46, 46] { R12078 += 1 };
  s3 -> s3 [48, 62] { R12078 += 1 };
  s3 -> s3 [65, 65535] { R12078 += 1 };
  s4 -> s3 [0, 43] { R12078 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R12078 += 1 };
  s4 -> s4 [46, 46] { R12078 += 1 };
  s4 -> s3 [48, 62] { R12078 += 1 };
  s4 -> s3 [65, 114] { R12078 += 1 };
  s4 -> s5 [115, 115] { R12078 += 1 };
  s4 -> s3 [116, 65535] { R12078 += 1 };
  s5 -> s3 [0, 43] { R12078 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R12078 += 1 };
  s5 -> s4 [46, 46] { R12078 += 1 };
  s5 -> s3 [48, 62] { R12078 += 1 };
  s5 -> s3 [65, 110] { R12078 += 1 };
  s5 -> s6 [111, 111] { R12078 += 1 };
  s5 -> s3 [112, 65535] { R12078 += 1 };
  s6 -> s3 [0, 43] { R12078 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R12078 += 1 };
  s6 -> s4 [46, 46] { R12078 += 1 };
  s6 -> s3 [48, 62] { R12078 += 1 };
  s6 -> s3 [65, 98] { R12078 += 1 };
  s6 -> s7 [99, 99] { R12078 += 1 };
  s6 -> s3 [100, 65535] { R12078 += 1 };
  s7 -> s3 [0, 43] { R12078 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R12078 += 1 };
  s7 -> s4 [46, 46] { R12078 += 1 };
  s7 -> s3 [48, 62] { R12078 += 1 };
  s7 -> s3 [65, 106] { R12078 += 1 };
  s7 -> s3 [108, 65535] { R12078 += 1 };
  s8 -> s1 [0, 43] { R12078 += 1 };
  s8 -> s1 [45, 45] { R12078 += 1 };
  s8 -> s2 [46, 46] { R12078 += 1 };
  s8 -> s1 [48, 62] { R12078 += 1 };
  s8 -> s3 [65, 65] { R12078 += 1 };
  s8 -> s1 [66, 110] { R12078 += 1 };
  s8 -> s9 [111, 111] { R12078 += 1 };
  s8 -> s1 [112, 65535] { R12078 += 1 };
  s9 -> s1 [0, 43] { R12078 += 1 };
  s9 -> s1 [45, 45] { R12078 += 1 };
  s9 -> s2 [46, 46] { R12078 += 1 };
  s9 -> s1 [48, 62] { R12078 += 1 };
  s9 -> s3 [65, 65] { R12078 += 1 };
  s9 -> s1 [66, 98] { R12078 += 1 };
  s9 -> s10 [99, 99] { R12078 += 1 };
  s9 -> s1 [100, 65535] { R12078 += 1 };
  s10 -> s1 [0, 43] { R12078 += 1 };
  s10 -> s1 [45, 45] { R12078 += 1 };
  s10 -> s2 [46, 46] { R12078 += 1 };
  s10 -> s1 [48, 62] { R12078 += 1 };
  s10 -> s3 [65, 65] { R12078 += 1 };
  s10 -> s1 [66, 106] { R12078 += 1 };
  s10 -> s1 [108, 65535] { R12078 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_60 {
  init s0;
  s0 -> s0 [0, 65535] { R12079 += 1, R12080 += 1 };
  s0 -> s1 [0, 65535] { R12080 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R12080 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_61 {
  init s0;
  s0 -> s1 [0, 57] { R12082 += 1 };
  s0 -> s2 [0, 65535] { R12082 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R12081 += 1, R12082 += 1 };
  s0 -> s3 [58, 58] { R12082 += 1 };
  s0 -> s1 [59, 65535] { R12082 += 1 };
  s1 -> s1 [0, 57] { R12082 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R12082 += 1 };
  s1 -> s1 [59, 65535] { R12082 += 1 };
  s2 -> s1 [0, 57] { R12082 += 1 };
  s2 -> s2 [0, 65535] { R12082 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [58, 58] { R12082 += 1 };
  s2 -> s1 [59, 65535] { R12082 += 1 };
  s3 -> s3 [0, 65535] { R12082 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_62 {
  init s0;
  s0 -> s1 [0, 64] { R12084 += 1 };
  s0 -> s2 [0, 65535] { R12084 += 1, R25 += 1 };
  s0 -> s0 [0, 65535] { R12083 += 1, R12084 += 1 };
  s0 -> s3 [65, 65] { R12084 += 1 };
  s0 -> s1 [66, 65535] { R12084 += 1 };
  s1 -> s1 [0, 64] { R12084 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R12084 += 1 };
  s1 -> s1 [66, 65535] { R12084 += 1 };
  s2 -> s1 [0, 64] { R12084 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12084 += 1, R25 += 1 };
  s2 -> s3 [65, 65] { R12084 += 1 };
  s2 -> s1 [66, 65535] { R12084 += 1 };
  s3 -> s3 [0, 65535] { R12084 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_63 {
  init s0;
  s0 -> s1 [0, 90] { R12086 += 1, R46 += 1 };
  s0 -> s0 [0, 65535] { R12085 += 1, R12086 += 1 };
  s0 -> s2 [0, 65535] { R12086 += 1, R45 += 1, R46 += 1 };
  s0 -> s3 [91, 91] { R12086 += 1, R46 += 1 };
  s0 -> s1 [92, 65535] { R12086 += 1, R46 += 1 };
  s1 -> s1 [0, 65535] { R12086 += 1, R46 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R12086 += 1 };
  s2 -> s1 [0, 90] { R12086 += 1, R46 += 1 };
  s2 -> s2 [0, 65535] { R12086 += 1, R45 += 1, R46 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [91, 91] { R12086 += 1, R46 += 1 };
  s2 -> s1 [92, 65535] { R12086 += 1, R46 += 1 };
  s3 -> s1 [0, 65535] { R12086 += 1, R46 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12086 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton uri_64 {
  init s0;
  s0 -> s1 [0, 65535] { R12088 += 1, R47 += 1, R48 += 1 };
  s0 -> s0 [0, 65535] { R12087 += 1, R12088 += 1 };
  s0 -> s2 [0, 65535] { R12088 += 1, R48 += 1, R8 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12088 += 1, R47 += 1, R48 += 1 };
  s1 -> s2 [0, 65535] { R12088 += 1, R48 += 1, R8 += 1 };
  s2 -> s3 [0, 65535] { R12088 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12088 += 1, R48 += 1, R8 += 1 };
  s3 -> s3 [0, 65535] { R12088 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_65 {
  init s0;
  s0 -> s1 [0, 64] { R12090 += 1, R11920 += 1 };
  s0 -> s0 [0, 65535] { R12089 += 1, R12090 += 1 };
  s0 -> s2 [0, 65535] { R12090 += 1, R11919 += 1, R11920 += 1 };
  s0 -> s1 [66, 65535] { R12090 += 1, R11920 += 1 };
  s1 -> s1 [0, 64] { R12090 += 1, R11920 += 1 };
  s1 -> s1 [0, 65535] { R12090 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [66, 65535] { R12090 += 1, R11920 += 1 };
  s2 -> s1 [0, 64] { R12090 += 1, R11920 += 1 };
  s2 -> s2 [0, 65535] { R12090 += 1, R11919 += 1, R11920 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [66, 65535] { R12090 += 1, R11920 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_66 {
  init s0;
  s0 -> s1 [0, 65535] { R12092 += 1, R11921 += 1, R11922 += 1 };
  s0 -> s2 [0, 65535] { R12092 += 1, R11922 += 1, R41 += 1 };
  s0 -> s0 [0, 65535] { R12091 += 1, R12092 += 1 };
  s1 -> s1 [0, 65535] { R12092 += 1, R11921 += 1, R11922 += 1 };
  s1 -> s2 [0, 65535] { R12092 += 1, R11922 += 1, R41 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R12092 += 1 };
  s2 -> s2 [0, 65535] { R12092 += 1, R11922 += 1, R41 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12092 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_67 {
  init s0;
  s0 -> s1 [0, 65] { R12094 += 1, R11924 += 1 };
  s0 -> s2 [0, 65535] { R12094 += 1, R11923 += 1, R11924 += 1 };
  s0 -> s0 [0, 65535] { R12093 += 1, R12094 += 1 };
  s0 -> s1 [81, 65535] { R12094 += 1, R11924 += 1 };
  s1 -> s1 [0, 65] { R12094 += 1, R11924 += 1 };
  s1 -> s1 [0, 65535] { R12094 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [81, 65535] { R12094 += 1, R11924 += 1 };
  s2 -> s1 [0, 65] { R12094 += 1, R11924 += 1 };
  s2 -> s2 [0, 65535] { R12094 += 1, R11923 += 1, R11924 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [81, 65535] { R12094 += 1, R11924 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_68 {
  init s0;
  s0 -> s1 [0, 65535] { R12096 += 1, R11926 += 1, R702 += 1 };
  s0 -> s2 [0, 65535] { R12096 += 1, R11925 += 1, R11926 += 1 };
  s0 -> s0 [0, 65535] { R12095 += 1, R12096 += 1 };
  s1 -> s1 [0, 65535] { R12096 += 1, R11926 += 1, R702 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R12096 += 1 };
  s2 -> s1 [0, 65535] { R12096 += 1, R11926 += 1, R702 += 1 };
  s2 -> s2 [0, 65535] { R12096 += 1, R11925 += 1, R11926 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12096 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_69 {
  init s0;
  s0 -> s1 [0, 80] { R12098 += 1, R11928 += 1 };
  s0 -> s2 [0, 65535] { R12098 += 1, R11928 += 1, R704 += 1 };
  s0 -> s0 [0, 65535] { R12097 += 1, R12098 += 1 };
  s0 -> s3 [0, 65535] { R12098 += 1, R11927 += 1, R11928 += 1 };
  s0 -> s1 [82, 65535] { R12098 += 1, R11928 += 1 };
  s1 -> s1 [0, 80] { R12098 += 1, R11928 += 1 };
  s1 -> s1 [0, 65535] { R12098 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [82, 65535] { R12098 += 1, R11928 += 1 };
  s2 -> s1 [0, 80] { R12098 += 1, R11928 += 1 };
  s2 -> s2 [0, 65535] { R12098 += 1, R11928 += 1, R704 += 1 };
  s2 -> s5 [0, 65535] { R12098 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [82, 65535] { R12098 += 1, R11928 += 1 };
  s3 -> s1 [0, 80] { R12098 += 1, R11928 += 1 };
  s3 -> s2 [0, 65535] { R12098 += 1, R11928 += 1, R704 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12098 += 1, R11927 += 1, R11928 += 1 };
  s3 -> s1 [82, 65535] { R12098 += 1, R11928 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12098 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_70 {
  init s0;
  s0 -> s1 [0, 80] { R12100 += 1, R11930 += 1, R708 += 1 };
  s0 -> s2 [0, 65535] { R12100 += 1, R11930 += 1, R707 += 1, R708 += 1 };
  s0 -> s3 [0, 65535] { R12100 += 1, R11929 += 1, R11930 += 1 };
  s0 -> s0 [0, 65535] { R12099 += 1, R12100 += 1 };
  s0 -> s1 [82, 65535] { R12100 += 1, R11930 += 1, R708 += 1 };
  s1 -> s1 [0, 80] { R12100 += 1, R11930 += 1, R708 += 1 };
  s1 -> s1 [0, 65535] { R12100 += 1, R11930 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R12100 += 1 };
  s1 -> s1 [82, 65535] { R12100 += 1, R11930 += 1, R708 += 1 };
  s2 -> s1 [0, 80] { R12100 += 1, R11930 += 1, R708 += 1 };
  s2 -> s2 [0, 65535] { R12100 += 1, R11930 += 1, R707 += 1, R708 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R12100 += 1 };
  s2 -> s1 [82, 65535] { R12100 += 1, R11930 += 1, R708 += 1 };
  s3 -> s1 [0, 80] { R12100 += 1, R11930 += 1, R708 += 1 };
  s3 -> s2 [0, 65535] { R12100 += 1, R11930 += 1, R707 += 1, R708 += 1 };
  s3 -> s3 [0, 65535] { R12100 += 1, R11929 += 1, R11930 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [82, 65535] { R12100 += 1, R11930 += 1, R708 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12100 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_71 {
  init s0;
  s0 -> s1 [0, 65535] { R12102 += 1, R11932 += 1, R712 += 1, R713 += 1 };
  s0 -> s2 [0, 65535] { R12102 += 1, R11932 += 1, R713 += 1, R714 += 1 };
  s0 -> s0 [0, 65535] { R12101 += 1, R12102 += 1 };
  s0 -> s3 [0, 65535] { R12102 += 1, R11931 += 1, R11932 += 1 };
  s1 -> s1 [0, 65535] { R12102 += 1, R11932 += 1, R712 += 1, R713 += 1 };
  s1 -> s2 [0, 65535] { R12102 += 1, R11932 += 1, R713 += 1, R714 += 1 };
  s1 -> s5 [0, 65535] { R12102 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12102 += 1, R11932 += 1, R713 += 1, R714 += 1 };
  s2 -> s5 [0, 65535] { R12102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R12102 += 1, R11932 += 1 };
  s3 -> s1 [0, 65535] { R12102 += 1, R11932 += 1, R712 += 1, R713 += 1 };
  s3 -> s2 [0, 65535] { R12102 += 1, R11932 += 1, R713 += 1, R714 += 1 };
  s3 -> s3 [0, 65535] { R12102 += 1, R11931 += 1, R11932 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12102 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R12102 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R12102 += 1, R11932 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_72 {
  init s0;
  s0 -> s1 [0, 81] { R12104 += 1, R11934 += 1, R10784 += 1 };
  s0 -> s0 [0, 65535] { R12103 += 1, R12104 += 1 };
  s0 -> s2 [0, 65535] { R12104 += 1, R11933 += 1, R11934 += 1 };
  s0 -> s1 [0, 65535] { R12104 += 1, R11934 += 1 };
  s0 -> s1 [91, 65535] { R12104 += 1, R11934 += 1, R10784 += 1 };
  s1 -> s1 [0, 81] { R12104 += 1, R11934 += 1, R10784 += 1 };
  s1 -> s4 [0, 65535] { R12104 += 1 };
  s1 -> s1 [0, 65535] { R12104 += 1, R11934 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [91, 65535] { R12104 += 1, R11934 += 1, R10784 += 1 };
  s2 -> s1 [0, 81] { R12104 += 1, R11934 += 1, R10784 += 1 };
  s2 -> s2 [0, 65535] { R12104 += 1, R11933 += 1, R11934 += 1 };
  s2 -> s1 [0, 65535] { R12104 += 1, R11934 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [91, 65535] { R12104 += 1, R11934 += 1, R10784 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12104 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_73 {
  init s0;
  s0 -> s1 [0, 65535] { R12106 += 1, R11936 += 1, R10788 += 1, R10789 += 1 };
  s0 -> s2 [0, 65535] { R12106 += 1, R11936 += 1, R10789 += 1, R10790 += 1 };
  s0 -> s0 [0, 65535] { R12105 += 1, R12106 += 1 };
  s0 -> s3 [0, 65535] { R12106 += 1, R11935 += 1, R11936 += 1 };
  s1 -> s1 [0, 65535] { R12106 += 1, R11936 += 1, R10788 += 1, R10789 += 1 };
  s1 -> s2 [0, 65535] { R12106 += 1, R11936 += 1, R10789 += 1, R10790 += 1 };
  s1 -> s5 [0, 65535] { R12106 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R12106 += 1 };
  s2 -> s2 [0, 65535] { R12106 += 1, R11936 += 1, R10789 += 1, R10790 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R12106 += 1, R11936 += 1 };
  s3 -> s1 [0, 65535] { R12106 += 1, R11936 += 1, R10788 += 1, R10789 += 1 };
  s3 -> s2 [0, 65535] { R12106 += 1, R11936 += 1, R10789 += 1, R10790 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12106 += 1, R11935 += 1, R11936 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12106 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R12106 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R12106 += 1, R11936 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_74 {
  init s0;
  s0 -> s1 [0, 65535] { R12108 += 1, R11938 += 1 };
  s0 -> s0 [0, 65535] { R12107 += 1, R12108 += 1 };
  s0 -> s2 [0, 65535] { R12108 += 1, R11937 += 1, R11938 += 1 };
  s0 -> s3 [0, 65535] { R12108 += 1, R11938 += 1, R11911 += 1, R11912 += 1 };
  s1 -> s1 [0, 65535] { R12108 += 1, R11938 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R12108 += 1 };
  s2 -> s1 [0, 65535] { R12108 += 1, R11938 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12108 += 1, R11937 += 1, R11938 += 1 };
  s2 -> s3 [0, 65535] { R12108 += 1, R11938 += 1, R11911 += 1, R11912 += 1 };
  s3 -> s1 [0, 65535] { R12108 += 1, R11938 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R12108 += 1 };
  s3 -> s3 [0, 65535] { R12108 += 1, R11938 += 1, R11911 += 1, R11912 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12108 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_75 {
  init s0;
  s0 -> s1 [0, 65535] { R12110 += 1, R11940 += 1 };
  s0 -> s0 [0, 65535] { R12109 += 1, R12110 += 1 };
  s0 -> s2 [0, 65535] { R12110 += 1, R11939 += 1, R11940 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12110 += 1, R11940 += 1 };
  s1 -> s4 [0, 65535] { R12110 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12110 += 1, R11940 += 1 };
  s2 -> s2 [0, 65535] { R12110 += 1, R11939 += 1, R11940 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12110 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_76 {
  init s0;
  s0 -> s1 [0, 80] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s0 -> s0 [0, 65535] { R12111 += 1, R12112 += 1 };
  s0 -> s2 [0, 65535] { R12112 += 1, R11942 += 1, R11916 += 1, R11917 += 1 };
  s0 -> s3 [0, 65535] { R12112 += 1, R11941 += 1, R11942 += 1 };
  s0 -> s4 [81, 81] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s0 -> s5 [81, 81] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s0 -> s1 [82, 65535] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s1 -> s1 [0, 80] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s1 -> s1 [0, 65535] { R12112 += 1, R11942 += 1 };
  s1 -> s6 [0, 65535] { R12112 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [81, 81] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s1 -> s5 [81, 81] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s1 -> s1 [82, 65535] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s2 -> s1 [0, 80] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s2 -> s6 [0, 65535] { R12112 += 1 };
  s2 -> s2 [0, 65535] { R12112 += 1, R11942 += 1, R11916 += 1, R11917 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [81, 81] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s2 -> s5 [81, 81] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s2 -> s1 [82, 65535] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s3 -> s1 [0, 80] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s3 -> s2 [0, 65535] { R12112 += 1, R11942 += 1, R11916 += 1, R11917 += 1 };
  s3 -> s3 [0, 65535] { R12112 += 1, R11941 += 1, R11942 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [81, 81] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s3 -> s5 [81, 81] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s3 -> s1 [82, 65535] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s4 -> s6 [0, 65535] { R12112 += 1 };
  s4 -> s4 [0, 65535] { R12112 += 1, R11942 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R12112 += 1 };
  s5 -> s7 [0, 65535] { R12112 += 1, R11942 += 1 };
  s5 -> s5 [0, 65535] { R12112 += 1, R11942 += 1, R11917 += 1, R11918 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R12112 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R12112 += 1 };
  s7 -> s7 [0, 65535] { R12112 += 1, R11942 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_77 {
  init s0;
  s0 -> s1 [0, 65535] { R12114 += 1, R11999 += 1, R12000 += 1 };
  s0 -> s2 [0, 65535] { R12114 += 1, R12000 += 1, R42 += 1 };
  s0 -> s0 [0, 65535] { R12113 += 1, R12114 += 1 };
  s1 -> s1 [0, 65535] { R12114 += 1, R11999 += 1, R12000 += 1 };
  s1 -> s2 [0, 65535] { R12114 += 1, R12000 += 1, R42 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12114 += 1, R12000 += 1, R42 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R12114 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12114 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_78 {
  init s0;
  s0 -> s1 [0, 64] { R12116 += 1, R12002 += 1 };
  s0 -> s0 [0, 65535] { R12115 += 1, R12116 += 1 };
  s0 -> s2 [0, 65535] { R12116 += 1, R12001 += 1, R12002 += 1 };
  s0 -> s3 [65, 65] { R12116 += 1, R12002 += 1 };
  s0 -> s4 [65, 65] { R12116 += 1, R12002 += 1 };
  s0 -> s5 [81, 81] { R12116 += 1, R12002 += 1 };
  s0 -> s1 [82, 65535] { R12116 += 1, R12002 += 1 };
  s1 -> s1 [0, 64] { R12116 += 1, R12002 += 1 };
  s1 -> s3 [65, 65] { R12116 += 1, R12002 += 1 };
  s1 -> s4 [65, 65] { R12116 += 1, R12002 += 1 };
  s1 -> s5 [81, 81] { R12116 += 1, R12002 += 1 };
  s1 -> s1 [82, 65535] { R12116 += 1, R12002 += 1 };
  s2 -> s1 [0, 64] { R12116 += 1, R12002 += 1 };
  s2 -> s2 [0, 65535] { R12116 += 1, R12001 += 1, R12002 += 1 };
  s2 -> s3 [65, 65] { R12116 += 1, R12002 += 1 };
  s2 -> s4 [65, 65] { R12116 += 1, R12002 += 1 };
  s2 -> s5 [81, 81] { R12116 += 1, R12002 += 1 };
  s2 -> s1 [82, 65535] { R12116 += 1, R12002 += 1 };
  s3 -> s3 [0, 65] { R12116 += 1, R12002 += 1 };
  s3 -> s8 [81, 81] { R12116 += 1, R12002 += 1 };
  s3 -> s3 [82, 65535] { R12116 += 1, R12002 += 1 };
  s5 -> s5 [0, 64] { R12116 += 1, R12002 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R12116 += 1 };
  s5 -> s7 [65, 65] { R12116 += 1, R12002 += 1 };
  s5 -> s8 [65, 65] { R12116 += 1, R12002 += 1 };
  s5 -> s5 [81, 65535] { R12116 += 1, R12002 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12116 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65] { R12116 += 1, R12002 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R12116 += 1 };
  s8 -> s8 [81, 65535] { R12116 += 1, R12002 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_79 {
  init s0;
  s0 -> s1 [0, 64] { R12118 += 1, R12004 += 1, R701 += 1 };
  s0 -> s0 [0, 65535] { R12117 += 1, R12118 += 1 };
  s0 -> s2 [0, 65535] { R12118 += 1, R12003 += 1, R12004 += 1 };
  s0 -> s3 [65, 65] { R12118 += 1, R12004 += 1, R701 += 1 };
  s0 -> s4 [65, 65] { R12118 += 1, R12004 += 1, R701 += 1 };
  s0 -> s1 [66, 65535] { R12118 += 1, R12004 += 1, R701 += 1 };
  s1 -> s1 [0, 64] { R12118 += 1, R12004 += 1, R701 += 1 };
  s1 -> s1 [0, 65535] { R12118 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R12118 += 1, R12004 += 1, R701 += 1 };
  s1 -> s4 [65, 65] { R12118 += 1, R12004 += 1, R701 += 1 };
  s1 -> s1 [66, 65535] { R12118 += 1, R12004 += 1, R701 += 1 };
  s2 -> s1 [0, 64] { R12118 += 1, R12004 += 1, R701 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12118 += 1, R12003 += 1, R12004 += 1 };
  s2 -> s3 [65, 65] { R12118 += 1, R12004 += 1, R701 += 1 };
  s2 -> s4 [65, 65] { R12118 += 1, R12004 += 1, R701 += 1 };
  s2 -> s1 [66, 65535] { R12118 += 1, R12004 += 1, R701 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R12118 += 1 };
  s3 -> s3 [0, 65535] { R12118 += 1, R12004 += 1, R701 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12118 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12118 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_80 {
  init s0;
  s0 -> s1 [0, 64] { R12120 += 1, R12006 += 1, R703 += 1 };
  s0 -> s0 [0, 65535] { R12119 += 1, R12120 += 1 };
  s0 -> s2 [0, 65535] { R12120 += 1, R12005 += 1, R12006 += 1 };
  s0 -> s3 [65, 65] { R12120 += 1, R12006 += 1, R703 += 1 };
  s0 -> s4 [65, 65] { R12120 += 1, R12006 += 1, R703 += 1 };
  s0 -> s1 [66, 65535] { R12120 += 1, R12006 += 1, R703 += 1 };
  s1 -> s1 [0, 64] { R12120 += 1, R12006 += 1, R703 += 1 };
  s1 -> s1 [0, 65535] { R12120 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R12120 += 1, R12006 += 1, R703 += 1 };
  s1 -> s4 [65, 65] { R12120 += 1, R12006 += 1, R703 += 1 };
  s1 -> s1 [66, 65535] { R12120 += 1, R12006 += 1, R703 += 1 };
  s2 -> s1 [0, 64] { R12120 += 1, R12006 += 1, R703 += 1 };
  s2 -> s2 [0, 65535] { R12120 += 1, R12005 += 1, R12006 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R12120 += 1, R12006 += 1, R703 += 1 };
  s2 -> s4 [65, 65] { R12120 += 1, R12006 += 1, R703 += 1 };
  s2 -> s1 [66, 65535] { R12120 += 1, R12006 += 1, R703 += 1 };
  s3 -> s6 [0, 65535] { R12120 += 1 };
  s3 -> s3 [0, 65535] { R12120 += 1, R12006 += 1, R703 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12120 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12120 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_81 {
  init s0;
  s0 -> s1 [0, 64] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s0 -> s0 [0, 65535] { R12121 += 1, R12122 += 1 };
  s0 -> s2 [0, 65535] { R12122 += 1, R12007 += 1, R12008 += 1 };
  s0 -> s3 [65, 65] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s0 -> s4 [65, 65] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s0 -> s1 [66, 65535] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s1 -> s1 [0, 64] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s1 -> s1 [0, 65535] { R12122 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s1 -> s4 [65, 65] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s1 -> s1 [66, 65535] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s2 -> s1 [0, 64] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s2 -> s2 [0, 65535] { R12122 += 1, R12007 += 1, R12008 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s2 -> s4 [65, 65] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s2 -> s1 [66, 65535] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s3 -> s3 [0, 65535] { R12122 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12122 += 1, R12008 += 1, R705 += 1, R706 += 1 };
  s4 -> s6 [0, 65535] { R12122 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12122 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_82 {
  init s0;
  s0 -> s1 [0, 64] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s0 -> s0 [0, 65535] { R12123 += 1, R12124 += 1 };
  s0 -> s2 [0, 65535] { R12124 += 1, R12009 += 1, R12010 += 1 };
  s0 -> s3 [65, 65] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s0 -> s4 [65, 65] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s0 -> s1 [66, 65535] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s1 -> s1 [0, 64] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12124 += 1 };
  s1 -> s3 [65, 65] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s1 -> s4 [65, 65] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s1 -> s1 [66, 65535] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s2 -> s1 [0, 64] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12124 += 1, R12009 += 1, R12010 += 1 };
  s2 -> s3 [65, 65] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s2 -> s4 [65, 65] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s2 -> s1 [66, 65535] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12124 += 1, R12010 += 1, R709 += 1, R710 += 1 };
  s3 -> s6 [0, 65535] { R12124 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12124 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12124 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_83 {
  init s0;
  s0 -> s1 [0, 64] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s0 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s0 -> s0 [0, 65535] { R12125 += 1, R12126 += 1 };
  s0 -> s3 [0, 65535] { R12126 += 1, R12011 += 1, R12012 += 1 };
  s0 -> s4 [65, 65] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s0 -> s5 [65, 65] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s0 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s0 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s0 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s0 -> s1 [66, 65535] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s0 -> s2 [91, 107] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s0 -> s8 [108, 108] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s0 -> s2 [109, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s1 -> s1 [0, 64] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s1 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s1 -> s4 [65, 65] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s1 -> s5 [65, 65] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s1 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s1 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s1 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s1 -> s1 [66, 65535] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s1 -> s2 [91, 107] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s1 -> s8 [108, 108] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s1 -> s2 [109, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s2 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s2 -> s35 [0, 65535];
  s2 -> s2 [0, 65535] { R12126 += 1 };
  s2 -> s6 [65, 65] { R12126 += 1, R12012 += 1 };
  s2 -> s7 [65, 65] { R12126 += 1, R12012 += 1 };
  s2 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s2 -> s2 [66, 65535] { R12126 += 1, R12012 += 1 };
  s2 -> s2 [91, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s3 -> s1 [0, 64] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s3 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s3 -> s3 [0, 65535] { R12126 += 1, R12011 += 1, R12012 += 1 };
  s3 -> s4 [65, 65] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s3 -> s5 [65, 65] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s3 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s3 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s3 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s3 -> s1 [66, 65535] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s3 -> s2 [91, 107] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s3 -> s8 [108, 108] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s3 -> s2 [109, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s4 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s4 -> s4 [0, 65535] { R12126 += 1, R12012 += 1, R10781 += 1, R10782 += 1 };
  s4 -> s7 [91, 107] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s4 -> s10 [108, 108] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s4 -> s7 [109, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s6 -> s35 [0, 65535];
  s6 -> s6 [0, 65535] { R12126 += 1 };
  s7 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s7 -> s34 [0, 65535] { R12126 += 1 };
  s7 -> s35 [0, 65535];
  s7 -> s7 [0, 65535] { R12126 += 1, R12012 += 1 };
  s7 -> s7 [91, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s8 -> s8 [0, 64] { R12126 += 1, R12012 += 1 };
  s8 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s8 -> s9 [65, 65] { R12126 += 1, R12012 += 1 };
  s8 -> s10 [65, 65] { R12126 += 1, R12012 += 1 };
  s8 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s8 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s8 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s8 -> s8 [66, 65535] { R12126 += 1, R12012 += 1 };
  s8 -> s2 [91, 110] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s8 -> s11 [111, 111] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s8 -> s2 [112, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s10 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s10 -> s10 [0, 65535] { R12126 += 1, R12012 += 1 };
  s10 -> s7 [91, 110] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s10 -> s12 [111, 111] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s10 -> s7 [112, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s11 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s11 -> s11 [0, 64] { R12126 += 1, R12012 += 1 };
  s11 -> s12 [65, 65] { R12126 += 1, R12012 += 1 };
  s11 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s11 -> s13 [65, 65] { R12126 += 1, R12012 += 1 };
  s11 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s11 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s11 -> s11 [66, 65535] { R12126 += 1, R12012 += 1 };
  s11 -> s2 [91, 98] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s11 -> s14 [99, 99] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s11 -> s2 [100, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s12 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s12 -> s12 [0, 65535] { R12126 += 1, R12012 += 1 };
  s12 -> s7 [91, 98] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s12 -> s16 [99, 99] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s12 -> s7 [100, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s14 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s14 -> s14 [0, 64] { R12126 += 1, R12012 += 1 };
  s14 -> s15 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s14 -> s16 [65, 65] { R12126 += 1, R12012 += 1 };
  s14 -> s17 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s14 -> s18 [65, 65] { R12126 += 1, R12012 += 1 };
  s14 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s14 -> s14 [66, 65535] { R12126 += 1, R12012 += 1 };
  s14 -> s2 [91, 96] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s14 -> s19 [97, 97] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s14 -> s2 [98, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s15 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s15 -> s15 [0, 65535] { R12126 += 1, R12012 += 1 };
  s15 -> s7 [91, 107] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s15 -> s21 [108, 108] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s15 -> s7 [109, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s16 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s16 -> s16 [0, 65535] { R12126 += 1, R12012 += 1 };
  s16 -> s7 [91, 96] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s16 -> s15 [97, 97] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s16 -> s7 [98, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s19 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s19 -> s19 [0, 64] { R12126 += 1, R12012 += 1 };
  s19 -> s15 [65, 65] { R12126 += 1, R12012 += 1 };
  s19 -> s17 [65, 65] { R12126 += 1, R12012 += 1 };
  s19 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s19 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s19 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s19 -> s19 [66, 65535] { R12126 += 1, R12012 += 1 };
  s19 -> s2 [91, 107] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s19 -> s20 [108, 108] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s19 -> s2 [109, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s20 -> s20 [0, 64] { R12126 += 1, R12012 += 1 };
  s20 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s20 -> s21 [65, 65] { R12126 += 1, R12012 += 1 };
  s20 -> s22 [65, 65] { R12126 += 1, R12012 += 1 };
  s20 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s20 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s20 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s20 -> s20 [66, 65535] { R12126 += 1, R12012 += 1 };
  s20 -> s2 [91, 103] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s20 -> s23 [104, 104] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s20 -> s2 [105, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s21 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s21 -> s21 [0, 65535] { R12126 += 1, R12012 += 1 };
  s21 -> s7 [91, 103] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s21 -> s25 [104, 104] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s21 -> s7 [105, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s23 -> s23 [0, 64] { R12126 += 1, R12012 += 1 };
  s23 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s23 -> s24 [65, 65] { R12126 += 1, R12012 += 1 };
  s23 -> s25 [65, 65] { R12126 += 1, R12012 += 1 };
  s23 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s23 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s23 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s23 -> s23 [66, 65535] { R12126 += 1, R12012 += 1 };
  s23 -> s2 [91, 110] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s23 -> s26 [111, 111] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s23 -> s2 [112, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s25 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s25 -> s25 [0, 65535] { R12126 += 1, R12012 += 1 };
  s25 -> s7 [91, 110] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s25 -> s27 [111, 111] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s25 -> s7 [112, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s26 -> s26 [0, 64] { R12126 += 1, R12012 += 1 };
  s26 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s26 -> s27 [65, 65] { R12126 += 1, R12012 += 1 };
  s26 -> s28 [65, 65] { R12126 += 1, R12012 += 1 };
  s26 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s26 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s26 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s26 -> s26 [66, 65535] { R12126 += 1, R12012 += 1 };
  s26 -> s2 [91, 114] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s26 -> s29 [115, 115] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s26 -> s2 [116, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s27 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s27 -> s27 [0, 65535] { R12126 += 1, R12012 += 1 };
  s27 -> s7 [91, 114] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s27 -> s30 [115, 115] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s27 -> s7 [116, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s29 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s29 -> s29 [0, 64] { R12126 += 1, R12012 += 1 };
  s29 -> s30 [65, 65] { R12126 += 1, R12012 += 1 };
  s29 -> s31 [65, 65] { R12126 += 1, R12012 += 1 };
  s29 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s29 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s29 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s29 -> s29 [66, 65535] { R12126 += 1, R12012 += 1 };
  s29 -> s2 [91, 115] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s29 -> s32 [116, 116] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s29 -> s2 [117, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s30 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s30 -> s30 [0, 65535] { R12126 += 1, R12012 += 1 };
  s30 -> s7 [91, 115] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s30 -> s33 [116, 116] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s30 -> s7 [117, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s32 -> s2 [0, 64] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s32 -> s6 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s32 -> s7 [65, 65] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s32 -> s2 [66, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s32 -> s2 [91, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s33 -> s7 [0, 81] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s33 -> s7 [91, 65535] { R12126 += 1, R12012 += 1, R10782 += 1 };
  s34 -> s34 [0, 65535] { R12126 += 1 };
  s34 -> s35 [0, 65535];
  s35 -> s35 [0, 65535];
  accepting s34, s2, s6, s7, s35;
};
automaton uri_84 {
  init s0;
  s0 -> s1 [0, 64] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s0 -> s0 [0, 65535] { R12127 += 1, R12128 += 1 };
  s0 -> s2 [0, 65535] { R12128 += 1, R12013 += 1, R12014 += 1 };
  s0 -> s3 [65, 65] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s0 -> s4 [65, 65] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s0 -> s1 [66, 65535] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s1 -> s1 [0, 64] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s1 -> s1 [0, 65535] { R12128 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s1 -> s4 [65, 65] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s1 -> s1 [66, 65535] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s2 -> s1 [0, 64] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s2 -> s2 [0, 65535] { R12128 += 1, R12013 += 1, R12014 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s2 -> s4 [65, 65] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s2 -> s1 [66, 65535] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s3 -> s3 [0, 65535] { R12128 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R12128 += 1 };
  s4 -> s4 [0, 65535] { R12128 += 1, R12014 += 1, R10785 += 1, R10786 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R12128 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_85 {
  init s0;
  s0 -> s1 [0, 64] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s0 -> s2 [0, 64] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s0 -> s0 [0, 65535] { R12129 += 1, R12130 += 1 };
  s0 -> s3 [0, 65535] { R12130 += 1, R12015 += 1, R12016 += 1 };
  s0 -> s4 [65, 65] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s0 -> s5 [65, 65] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s0 -> s6 [65, 65] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s0 -> s7 [65, 65] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s0 -> s1 [66, 65535] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s0 -> s2 [66, 65535] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s1 -> s1 [0, 64] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s1 -> s1 [0, 65535] { R12130 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [65, 65] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s1 -> s7 [65, 65] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s1 -> s1 [66, 65535] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s2 -> s1 [0, 64] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s2 -> s2 [0, 64] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s2 -> s4 [65, 65] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s2 -> s5 [65, 65] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s2 -> s6 [65, 65] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s2 -> s7 [65, 65] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s2 -> s1 [66, 65535] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s2 -> s2 [66, 65535] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s3 -> s1 [0, 64] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s3 -> s2 [0, 64] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s3 -> s3 [0, 65535] { R12130 += 1, R12015 += 1, R12016 += 1 };
  s3 -> s4 [65, 65] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s3 -> s5 [65, 65] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s3 -> s6 [65, 65] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s3 -> s7 [65, 65] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s3 -> s1 [66, 65535] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s3 -> s2 [66, 65535] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s5 -> s5 [0, 65535] { R12130 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R12130 += 1, R12016 += 1, R11907 += 1, R11908 += 1 };
  s6 -> s7 [0, 65535] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R12130 += 1, R12016 += 1, R11908 += 1, R11909 += 1 };
  s7 -> s9 [0, 65535] { R12130 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R12130 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton uri_86 {
  init s0;
  s0 -> s1 [0, 64] { R12132 += 1, R12018 += 1 };
  s0 -> s2 [0, 65535] { R12132 += 1, R12017 += 1, R12018 += 1 };
  s0 -> s0 [0, 65535] { R12131 += 1, R12132 += 1 };
  s0 -> s3 [65, 65] { R12132 += 1, R12018 += 1 };
  s0 -> s4 [65, 65] { R12132 += 1, R12018 += 1 };
  s0 -> s1 [66, 65535] { R12132 += 1, R12018 += 1 };
  s1 -> s1 [0, 64] { R12132 += 1, R12018 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R12132 += 1 };
  s1 -> s3 [65, 65] { R12132 += 1, R12018 += 1 };
  s1 -> s4 [65, 65] { R12132 += 1, R12018 += 1 };
  s1 -> s1 [66, 65535] { R12132 += 1, R12018 += 1 };
  s2 -> s1 [0, 64] { R12132 += 1, R12018 += 1 };
  s2 -> s2 [0, 65535] { R12132 += 1, R12017 += 1, R12018 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R12132 += 1, R12018 += 1 };
  s2 -> s4 [65, 65] { R12132 += 1, R12018 += 1 };
  s2 -> s1 [66, 65535] { R12132 += 1, R12018 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R12132 += 1 };
  s4 -> s5 [0, 65535] { R12132 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R12132 += 1, R12018 += 1 };
  s5 -> s5 [0, 65535] { R12132 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_87 {
  init s0;
  s0 -> s1 [0, 64] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s0 -> s2 [0, 65535] { R12134 += 1, R12019 += 1, R12020 += 1 };
  s0 -> s0 [0, 65535] { R12133 += 1, R12134 += 1 };
  s0 -> s3 [65, 65] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s0 -> s4 [65, 65] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s0 -> s1 [66, 65535] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s1 -> s1 [0, 64] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12134 += 1 };
  s1 -> s3 [65, 65] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s1 -> s4 [65, 65] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s1 -> s1 [66, 65535] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s2 -> s1 [0, 64] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12134 += 1, R12019 += 1, R12020 += 1 };
  s2 -> s3 [65, 65] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s2 -> s4 [65, 65] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s2 -> s1 [66, 65535] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s3 -> s6 [0, 65535] { R12134 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12134 += 1, R12020 += 1, R11913 += 1, R11914 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12134 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12134 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P65
automaton P65_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
synchronised {  // Automata constraining P97
automaton P97_0 {
  init s0;
  s0 -> s1 [122, 122];
  accepting s1;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining P103
automaton P103_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
synchronised {  // Automata constraining P91
automaton P91_0 {
  init s0;
  s0 -> s1 [121, 121];
  accepting s1;
};
};
synchronised {  // Automata constraining P85
automaton P85_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
constraint R6 = R11942 && R7 = R12134 && R45 = 0 && R46 = 1 && R47 = 0 && R48 = 1 && R104 + R103 = 0 && R702 + R701 + -1*R10789 + -1*R10786 = 0 && R707 + R705 = 0 && R708 + R706 + -1*R10789 + -1*R10786 = 0 && R712 + R709 = 0 && R713 + R710 + -1*R10789 + -1*R10786 = 0 && R10783 + R10781 = 0 && R10784 + R10782 + -1*R10789 + -1*R10786 = 0 && R10788 + R10785 = 0 && R11919 = 0 && R11920 = R11942 && R11921 = 0 && R11922 = R11942 && R11923 = 0 && R11924 = R11942 && R11925 = 0 && R11926 = R11942 && R11927 = 0 && R11928 = R11942 && R11929 = 0 && R11930 = R11942 && R11931 = 0 && R11932 = R11942 && R11933 = 0 && R11934 = R11942 && R11935 = 0 && R11936 = R11942 && R11937 = 0 && R11938 = R11942 && R11939 = 0 && R11940 = R11942 && R11941 = 0 && R11943 = 0 && R11944 = R12134 && R11945 = 0 && R11946 = R12134 && R11947 = 0 && R11948 = R12134 && R11949 = 0 && R11950 = R12134 && R11951 = 0 && R11952 = R12134 && R11953 = 0 && R11954 = R12134 && R11955 = 0 && R11956 = R12134 && R11957 = 0 && R11958 = R12134 && R11959 = 0 && R11960 = R12134 && R11961 = 0 && R11962 = R12134 && R11963 = 0 && R11964 = R12134 && R11965 = 0 && R11966 = R12134 && R11967 = 0 && R11968 = R12134 && R11969 = 0 && R11970 = R12134 && R11971 = 0 && R11972 = R12134 && R11973 = 0 && R11974 = R12134 && R11975 = 0 && R11976 = R12134 && R11977 = 0 && R11978 = R12134 && R11979 = 0 && R11980 = R12134 && R11981 = 0 && R11982 = R12134 && R11983 = 0 && R11984 = R12134 && R11985 = 0 && R11986 = R12134 && R11987 = 0 && R11988 = R12134 && R11989 = 0 && R11990 = R12134 && R11991 = 0 && R11992 = R12134 && R11993 = 0 && R11994 = R12134 && R11995 = 0 && R11996 = R12134 && R11997 = 0 && R11998 = R12134 && R12001 = 0 && R12002 = 0 && R12011 = 0 && R12012 = 0 && R12015 = 0 && R12016 = 0 && R12077 = 10 && R12078 = R12134 && R12079 = 10 && R12080 = R12134 && R12081 = 10 && R12082 = R12134 && R12083 = 10 && R12084 = R12134 && R12085 = 10 && R12086 = R12134 && R12087 = 10 && R12088 = R12134 && R12089 = 10 && R12090 = R12134 && R12091 = 10 && R12092 = R12134 && R12093 = 10 && R12094 = R12134 && R12095 = 10 && R12096 = R12134 && R12097 = 10 && R12098 = R12134 && R12099 = 10 && R12100 = R12134 && R12101 = 10 && R12102 = R12134 && R12103 = 10 && R12104 = R12134 && R12105 = 10 && R12106 = R12134 && R12107 = 10 && R12108 = R12134 && R12109 = 10 && R12110 = R12134 && R12111 = 10 && R12112 = R12134 && R12113 = 10 && R12114 = R12134 && R12115 = 10 && R12116 = R12134 && R12117 = 10 && R12118 = R12134 && R12119 = 10 && R12120 = R12134 && R12121 = 10 && R12122 = R12134 && R12123 = 10 && R12124 = R12134 && R12125 = 10 && R12126 = R12134 && R12127 = 10 && R12128 = R12134 && R12129 = 10 && R12130 = R12134 && R12131 = 10 && R12132 = R12134 && R12133 = 10 && R134 + R131 + R184 + R181 != 0 && R150 + R147 + R196 + R193 != 0 && R166 + R163 + R208 + R205 != 0 && R10790 + R10787 + R11918 + R11915 != 0 && R24 < 1 && R25 < 1 && R28 < 1 && R106 + R105 < 1 && R108 + R107 < 1 && R110 + R109 < 1 && R112 + R111 < 1 && R704 + R703 < 1 && -1*R10789 < R10786 && 0 < R11942 && 9 < R12134 && (R42 = 0 || (R11999 = 0 && R12000 = 0)) && (R42 = 0 || (R12003 = 0 && R12004 = 0)) && (R42 = 0 || (R12005 = 0 && R12006 = 0)) && (R42 = 0 || (R12007 = 0 && R12008 = 0)) && (R42 = 0 || (R12009 = 0 && R12010 = 0)) && (R42 = 0 || (R12013 = 0 && R12014 = 0)) && (R42 = 0 || (R12017 = 0 && R12018 = 0)) && (R42 = 0 || (R12019 = 0 && R12020 = 0)) && (R44 = 0 || (R12021 = 0 && R12022 = 0)) && (R44 = 0 || (R12023 = 0 && R12024 = 0)) && (R44 = 0 || (R12025 = 0 && R12026 = 0)) && (R44 = 0 || (R12027 = 0 && R12028 = 0)) && (R44 = 0 || (R12029 = 0 && R12030 = 0)) && (R44 = 0 || (R12031 = 0 && R12032 = 0)) && (R44 = 0 || (R12033 = 0 && R12034 = 0)) && (R44 = 0 || (R12035 = 0 && R12036 = 0)) && (R44 = 0 || (R12037 = 0 && R12038 = 0)) && (R44 = 0 || (R12039 = 0 && R12040 = 0)) && (R44 = 0 || (R12041 = 0 && R12042 = 0)) && (R44 = 0 || (R12043 = 0 && R12044 = 0)) && (R44 = 0 || (R12045 = 0 && R12046 = 0)) && (R44 = 0 || (R12047 = 0 && R12048 = 0)) && (R44 = 0 || (R12049 = 0 && R12050 = 0)) && (R44 = 0 || (R12051 = 0 && R12052 = 0)) && (R44 = 0 || (R12053 = 0 && R12054 = 0)) && (R44 = 0 || (R12055 = 0 && R12056 = 0)) && (R44 = 0 || (R12057 = 0 && R12058 = 0)) && (R44 = 0 || (R12059 = 0 && R12060 = 0)) && (R44 = 0 || (R12061 = 0 && R12062 = 0)) && (R44 = 0 || (R12063 = 0 && R12064 = 0)) && (R44 = 0 || (R12065 = 0 && R12066 = 0)) && (R44 = 0 || (R12067 = 0 && R12068 = 0)) && (R44 = 0 || (R12069 = 0 && R12070 = 0)) && (R44 = 0 || (R12071 = 0 && R12072 = 0)) && (R44 = 0 || (R12073 = 0 && R12074 = 0)) && (R44 = 0 || (R12075 = 0 && R12076 = 0)) && (R118 + R115 = 0 || (R116 + R113 = 0 && R117 + R114 = 0)) && (R124 + R121 = 0 || (R122 + R119 = 0 && R123 + R120 = 0)) && (R124 + R121 = 0 || (R127 + R125 = 0 && R128 + R126 = 0)) && (R124 + R121 = 0 || (R132 + R129 = 0 && R133 + R130 = 0)) && (R140 + R137 = 0 || (R138 + R135 = 0 && R139 + R136 = 0)) && (R140 + R137 = 0 || (R143 + R141 = 0 && R144 + R142 = 0)) && (R140 + R137 = 0 || (R148 + R145 = 0 && R149 + R146 = 0)) && (R156 + R153 = 0 || (R154 + R151 = 0 && R155 + R152 = 0)) && (R156 + R153 = 0 || (R159 + R157 = 0 && R160 + R158 = 0)) && (R156 + R153 = 0 || (R164 + R161 = 0 && R165 + R162 = 0)) && (R172 + R169 = 0 || (R170 + R167 = 0 && R171 + R168 = 0)) && (R178 + R175 = 0 || (R176 + R173 = 0 && R177 + R174 = 0)) && (R178 + R175 = 0 || (R182 + R179 = 0 && R183 + R180 = 0)) && (R190 + R187 = 0 || (R188 + R185 = 0 && R189 + R186 = 0)) && (R190 + R187 = 0 || (R194 + R191 = 0 && R195 + R192 = 0)) && (R202 + R199 = 0 || (R200 + R197 = 0 && R201 + R198 = 0)) && (R202 + R199 = 0 || (R206 + R203 = 0 && R207 + R204 = 0)) && (R11912 + R11909 = 0 || (R11910 + R11907 = 0 && R11911 + R11908 = 0)) && (R11912 + R11909 = 0 || (R11916 + R11913 = 0 && R11917 + R11914 = 0));
// End of Parikh automata intersection problem
