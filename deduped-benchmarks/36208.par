// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining P83
automaton P83_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R5 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 64];
  s0 -> s0 [0, 65535] { R20 += 1 };
  s0 -> s2 [65, 65];
  s0 -> s1 [66, 65535];
  s1 -> s1 [0, 64];
  s1 -> s2 [65, 65];
  s1 -> s1 [66, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R13625 += 1, R13626 += 1 };
  s0 -> s1 [0, 65535] { R13626 += 1, R31 += 1 };
  s1 -> s1 [0, 65535] { R13626 += 1, R31 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s0 [0, 65535] { R13627 += 1, R13628 += 1 };
  s0 -> s1 [0, 65535] { R13628 += 1, R68 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13628 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 88] { R13630 += 1 };
  s0 -> s2 [0, 65535] { R13630 += 1, R70 += 1 };
  s0 -> s0 [0, 65535] { R13629 += 1, R13630 += 1 };
  s0 -> s1 [90, 65535] { R13630 += 1 };
  s1 -> s1 [0, 88] { R13630 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [90, 65535] { R13630 += 1 };
  s2 -> s1 [0, 88] { R13630 += 1 };
  s2 -> s2 [0, 65535] { R13630 += 1, R70 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [90, 65535] { R13630 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 72] { R13632 += 1 };
  s0 -> s2 [0, 65535] { R13632 += 1, R72 += 1 };
  s0 -> s0 [0, 65535] { R13631 += 1, R13632 += 1 };
  s0 -> s1 [74, 65535] { R13632 += 1 };
  s1 -> s1 [0, 72] { R13632 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [74, 65535] { R13632 += 1 };
  s2 -> s1 [0, 72] { R13632 += 1 };
  s2 -> s2 [0, 65535] { R13632 += 1, R72 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R13632 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R13634 += 1, R77 += 1, R78 += 1 };
  s0 -> s2 [0, 65535] { R13634 += 1, R76 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R13633 += 1, R13634 += 1 };
  s1 -> s1 [0, 65535] { R13634 += 1, R77 += 1, R78 += 1 };
  s1 -> s4 [0, 65535] { R13634 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13634 += 1, R77 += 1, R78 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13634 += 1, R76 += 1, R77 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13634 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R13636 += 1 };
  s0 -> s0 [0, 65535] { R13635 += 1, R13636 += 1 };
  s1 -> s1 [0, 65535] { R13636 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R13638 += 1, R82 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R13637 += 1, R13638 += 1 };
  s0 -> s2 [0, 65535] { R13638 += 1, R83 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R13638 += 1, R82 += 1, R83 += 1 };
  s1 -> s2 [0, 65535] { R13638 += 1, R83 += 1, R84 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13638 += 1 };
  s2 -> s2 [0, 65535] { R13638 += 1, R83 += 1, R84 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13638 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 107] { R13640 += 1, R88 += 1 };
  s0 -> s2 [0, 65535] { R13640 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R13639 += 1, R13640 += 1 };
  s0 -> s3 [108, 108] { R13640 += 1, R88 += 1 };
  s0 -> s1 [109, 65535] { R13640 += 1, R88 += 1 };
  s1 -> s1 [0, 65535] { R13640 += 1, R88 += 1 };
  s1 -> s13 [0, 65535] { R13640 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 107] { R13640 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R13640 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R13640 += 1, R88 += 1 };
  s2 -> s1 [109, 65535] { R13640 += 1, R88 += 1 };
  s3 -> s1 [0, 110] { R13640 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R13640 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [111, 111] { R13640 += 1, R88 += 1 };
  s3 -> s1 [112, 65535] { R13640 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R13640 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R13640 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [99, 99] { R13640 += 1, R88 += 1 };
  s5 -> s1 [100, 65535] { R13640 += 1, R88 += 1 };
  s6 -> s1 [0, 96] { R13640 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R13640 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s7 [97, 97] { R13640 += 1, R88 += 1 };
  s6 -> s1 [98, 65535] { R13640 += 1, R88 += 1 };
  s7 -> s1 [0, 107] { R13640 += 1, R88 += 1 };
  s7 -> s7 [0, 65535] { R13640 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s8 [108, 108] { R13640 += 1, R88 += 1 };
  s7 -> s1 [109, 65535] { R13640 += 1, R88 += 1 };
  s8 -> s1 [0, 103] { R13640 += 1, R88 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s8 [0, 65535] { R13640 += 1 };
  s8 -> s9 [104, 104] { R13640 += 1, R88 += 1 };
  s8 -> s1 [105, 65535] { R13640 += 1, R88 += 1 };
  s9 -> s1 [0, 110] { R13640 += 1, R88 += 1 };
  s9 -> s9 [0, 65535] { R13640 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s10 [111, 111] { R13640 += 1, R88 += 1 };
  s9 -> s1 [112, 65535] { R13640 += 1, R88 += 1 };
  s10 -> s1 [0, 114] { R13640 += 1, R88 += 1 };
  s10 -> s10 [0, 65535] { R13640 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s11 [115, 115] { R13640 += 1, R88 += 1 };
  s10 -> s1 [116, 65535] { R13640 += 1, R88 += 1 };
  s11 -> s1 [0, 115] { R13640 += 1, R88 += 1 };
  s11 -> s11 [0, 65535] { R13640 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s12 [116, 116] { R13640 += 1, R88 += 1 };
  s11 -> s1 [117, 65535] { R13640 += 1, R88 += 1 };
  s12 -> s1 [0, 65535] { R13640 += 1, R88 += 1 };
  s13 -> s13 [0, 65535] { R13640 += 1 };
  s13 -> s4 [0, 65535];
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R13642 += 1, R93 += 1, R94 += 1 };
  s0 -> s0 [0, 65535] { R13641 += 1, R13642 += 1 };
  s0 -> s2 [0, 65535] { R13642 += 1, R92 += 1, R93 += 1 };
  s1 -> s1 [0, 65535] { R13642 += 1, R93 += 1, R94 += 1 };
  s1 -> s4 [0, 65535] { R13642 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13642 += 1, R93 += 1, R94 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13642 += 1, R92 += 1, R93 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13642 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 65535] { R13644 += 1, R98 += 1, R99 += 1 };
  s0 -> s0 [0, 65535] { R13643 += 1, R13644 += 1 };
  s0 -> s2 [0, 65535] { R13644 += 1, R99 += 1, R100 += 1 };
  s1 -> s1 [0, 65535] { R13644 += 1, R98 += 1, R99 += 1 };
  s1 -> s2 [0, 65535] { R13644 += 1, R99 += 1, R100 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13644 += 1 };
  s2 -> s2 [0, 65535] { R13644 += 1, R99 += 1, R100 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13644 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R13646 += 1 };
  s0 -> s0 [0, 65535] { R13645 += 1, R13646 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13646 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_14 {
  init s0;
  s0 -> s0 [0, 65535] { R13647 += 1, R13648 += 1 };
  s0 -> s1 [0, 65535] { R13648 += 1, R105 += 1, R106 += 1 };
  s0 -> s2 [0, 65535] { R13648 += 1, R104 += 1, R105 += 1 };
  s1 -> s1 [0, 65535] { R13648 += 1, R105 += 1, R106 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13648 += 1 };
  s2 -> s1 [0, 65535] { R13648 += 1, R105 += 1, R106 += 1 };
  s2 -> s2 [0, 65535] { R13648 += 1, R104 += 1, R105 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13648 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R13650 += 1 };
  s0 -> s0 [0, 65535] { R13649 += 1, R13650 += 1 };
  s1 -> s1 [0, 65535] { R13650 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 72] { R13652 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R13651 += 1, R13652 += 1 };
  s0 -> s2 [0, 65535] { R13652 += 1, R110 += 1, R111 += 1 };
  s0 -> s3 [73, 73] { R13652 += 1, R111 += 1, R112 += 1 };
  s0 -> s4 [73, 73] { R13652 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [74, 65535] { R13652 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 72] { R13652 += 1, R111 += 1, R112 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13652 += 1 };
  s1 -> s3 [73, 73] { R13652 += 1, R111 += 1, R112 += 1 };
  s1 -> s4 [73, 73] { R13652 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [74, 65535] { R13652 += 1, R111 += 1, R112 += 1 };
  s2 -> s1 [0, 72] { R13652 += 1, R111 += 1, R112 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13652 += 1, R110 += 1, R111 += 1 };
  s2 -> s3 [73, 73] { R13652 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [73, 73] { R13652 += 1, R111 += 1, R112 += 1 };
  s2 -> s1 [74, 65535] { R13652 += 1, R111 += 1, R112 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13652 += 1, R111 += 1, R112 += 1 };
  s3 -> s6 [0, 65535] { R13652 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13652 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13652 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s0 [0, 65535] { R13675 += 1, R13676 += 1 };
  s0 -> s1 [0, 65535] { R13676 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13676 += 1, R32 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 64] { R13678 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R13677 += 1, R13678 += 1 };
  s0 -> s2 [65, 65] { R13678 += 1, R67 += 1 };
  s0 -> s3 [65, 65] { R13678 += 1, R67 += 1 };
  s0 -> s1 [66, 65535] { R13678 += 1, R67 += 1 };
  s1 -> s1 [0, 64] { R13678 += 1, R67 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13678 += 1, R67 += 1 };
  s1 -> s3 [65, 65] { R13678 += 1, R67 += 1 };
  s1 -> s1 [66, 65535] { R13678 += 1, R67 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13678 += 1, R67 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 64] { R13680 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R13679 += 1, R13680 += 1 };
  s0 -> s2 [65, 65] { R13680 += 1, R69 += 1 };
  s0 -> s3 [65, 65] { R13680 += 1, R69 += 1 };
  s0 -> s1 [66, 65535] { R13680 += 1, R69 += 1 };
  s1 -> s1 [0, 64] { R13680 += 1, R69 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13680 += 1, R69 += 1 };
  s1 -> s3 [65, 65] { R13680 += 1, R69 += 1 };
  s1 -> s1 [66, 65535] { R13680 += 1, R69 += 1 };
  s2 -> s2 [0, 65535] { R13680 += 1, R69 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 64] { R13682 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R13681 += 1, R13682 += 1 };
  s0 -> s2 [65, 65] { R13682 += 1, R71 += 1 };
  s0 -> s3 [65, 65] { R13682 += 1, R71 += 1 };
  s0 -> s1 [66, 65535] { R13682 += 1, R71 += 1 };
  s1 -> s1 [0, 64] { R13682 += 1, R71 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13682 += 1, R71 += 1 };
  s1 -> s3 [65, 65] { R13682 += 1, R71 += 1 };
  s1 -> s1 [66, 65535] { R13682 += 1, R71 += 1 };
  s2 -> s2 [0, 65535] { R13682 += 1, R71 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 64] { R13684 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13683 += 1, R13684 += 1 };
  s0 -> s2 [65, 65] { R13684 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [65, 65] { R13684 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [66, 65535] { R13684 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 64] { R13684 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13684 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [65, 65] { R13684 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [66, 65535] { R13684 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R13684 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 64] { R13686 += 1 };
  s0 -> s0 [0, 65535] { R13685 += 1, R13686 += 1 };
  s0 -> s2 [65, 65] { R13686 += 1 };
  s0 -> s3 [65, 65] { R13686 += 1 };
  s0 -> s1 [66, 65535] { R13686 += 1 };
  s1 -> s1 [0, 64] { R13686 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13686 += 1 };
  s1 -> s3 [65, 65] { R13686 += 1 };
  s1 -> s1 [66, 65535] { R13686 += 1 };
  s2 -> s2 [0, 65535] { R13686 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 64] { R13688 += 1, R79 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R13687 += 1, R13688 += 1 };
  s0 -> s2 [65, 65] { R13688 += 1, R79 += 1, R80 += 1 };
  s0 -> s3 [65, 65] { R13688 += 1, R79 += 1, R80 += 1 };
  s0 -> s1 [66, 65535] { R13688 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 64] { R13688 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13688 += 1, R79 += 1, R80 += 1 };
  s1 -> s3 [65, 65] { R13688 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [66, 65535] { R13688 += 1, R79 += 1, R80 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13688 += 1, R79 += 1, R80 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 64] { R13690 += 1, R85 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R13689 += 1, R13690 += 1 };
  s0 -> s2 [65, 65] { R13690 += 1, R85 += 1, R86 += 1 };
  s0 -> s3 [65, 65] { R13690 += 1, R85 += 1, R86 += 1 };
  s0 -> s1 [66, 65535] { R13690 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 64] { R13690 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13690 += 1, R85 += 1, R86 += 1 };
  s1 -> s3 [65, 65] { R13690 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [66, 65535] { R13690 += 1, R85 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13690 += 1, R85 += 1, R86 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 64] { R13692 += 1, R89 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R13691 += 1, R13692 += 1 };
  s0 -> s2 [65, 65] { R13692 += 1, R89 += 1, R90 += 1 };
  s0 -> s3 [65, 65] { R13692 += 1, R89 += 1, R90 += 1 };
  s0 -> s1 [66, 65535] { R13692 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 64] { R13692 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13692 += 1, R89 += 1, R90 += 1 };
  s1 -> s3 [65, 65] { R13692 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [66, 65535] { R13692 += 1, R89 += 1, R90 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13692 += 1, R89 += 1, R90 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R13694 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R13693 += 1, R13694 += 1 };
  s0 -> s2 [65, 65] { R13694 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [65, 65] { R13694 += 1, R95 += 1, R96 += 1 };
  s0 -> s1 [66, 65535] { R13694 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 64] { R13694 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13694 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [65, 65] { R13694 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [66, 65535] { R13694 += 1, R95 += 1, R96 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13694 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R13696 += 1 };
  s0 -> s0 [0, 65535] { R13695 += 1, R13696 += 1 };
  s0 -> s2 [65, 65] { R13696 += 1 };
  s0 -> s3 [65, 65] { R13696 += 1 };
  s0 -> s1 [66, 65535] { R13696 += 1 };
  s1 -> s1 [0, 64] { R13696 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13696 += 1 };
  s1 -> s3 [65, 65] { R13696 += 1 };
  s1 -> s1 [66, 65535] { R13696 += 1 };
  s2 -> s2 [0, 65535] { R13696 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R13698 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R13697 += 1, R13698 += 1 };
  s0 -> s2 [65, 65] { R13698 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [65, 65] { R13698 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [66, 65535] { R13698 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 64] { R13698 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13698 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [65, 65] { R13698 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [66, 65535] { R13698 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13698 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R13700 += 1 };
  s0 -> s0 [0, 65535] { R13699 += 1, R13700 += 1 };
  s0 -> s2 [65, 65] { R13700 += 1 };
  s0 -> s3 [65, 65] { R13700 += 1 };
  s0 -> s1 [66, 65535] { R13700 += 1 };
  s1 -> s1 [0, 64] { R13700 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13700 += 1 };
  s1 -> s3 [65, 65] { R13700 += 1 };
  s1 -> s1 [66, 65535] { R13700 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13700 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R13702 += 1, R107 += 1, R108 += 1 };
  s0 -> s0 [0, 65535] { R13701 += 1, R13702 += 1 };
  s0 -> s2 [65, 65] { R13702 += 1, R107 += 1, R108 += 1 };
  s0 -> s3 [65, 65] { R13702 += 1, R107 += 1, R108 += 1 };
  s0 -> s1 [66, 65535] { R13702 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 64] { R13702 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13702 += 1, R107 += 1, R108 += 1 };
  s1 -> s3 [65, 65] { R13702 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [66, 65535] { R13702 += 1, R107 += 1, R108 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13702 += 1, R107 += 1, R108 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 43] { R13704 += 1 };
  s0 -> s0 [0, 65535] { R13703 += 1, R13704 += 1 };
  s0 -> s1 [45, 45] { R13704 += 1 };
  s0 -> s2 [46, 46] { R13704 += 1 };
  s0 -> s1 [48, 62] { R13704 += 1 };
  s0 -> s3 [65, 65] { R13704 += 1 };
  s0 -> s1 [66, 65535] { R13704 += 1 };
  s1 -> s1 [0, 43] { R13704 += 1 };
  s1 -> s1 [45, 45] { R13704 += 1 };
  s1 -> s2 [46, 46] { R13704 += 1 };
  s1 -> s1 [48, 62] { R13704 += 1 };
  s1 -> s3 [65, 65] { R13704 += 1 };
  s1 -> s1 [66, 65535] { R13704 += 1 };
  s2 -> s1 [0, 43] { R13704 += 1 };
  s2 -> s1 [45, 45] { R13704 += 1 };
  s2 -> s2 [46, 46] { R13704 += 1 };
  s2 -> s1 [48, 62] { R13704 += 1 };
  s2 -> s3 [65, 65] { R13704 += 1 };
  s2 -> s1 [66, 114] { R13704 += 1 };
  s2 -> s8 [115, 115] { R13704 += 1 };
  s2 -> s1 [116, 65535] { R13704 += 1 };
  s3 -> s3 [0, 43] { R13704 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R13704 += 1 };
  s3 -> s4 [46, 46] { R13704 += 1 };
  s3 -> s3 [48, 62] { R13704 += 1 };
  s3 -> s3 [65, 65535] { R13704 += 1 };
  s4 -> s3 [0, 43] { R13704 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R13704 += 1 };
  s4 -> s4 [46, 46] { R13704 += 1 };
  s4 -> s3 [48, 62] { R13704 += 1 };
  s4 -> s3 [65, 114] { R13704 += 1 };
  s4 -> s5 [115, 115] { R13704 += 1 };
  s4 -> s3 [116, 65535] { R13704 += 1 };
  s5 -> s3 [0, 43] { R13704 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R13704 += 1 };
  s5 -> s4 [46, 46] { R13704 += 1 };
  s5 -> s3 [48, 62] { R13704 += 1 };
  s5 -> s3 [65, 110] { R13704 += 1 };
  s5 -> s6 [111, 111] { R13704 += 1 };
  s5 -> s3 [112, 65535] { R13704 += 1 };
  s6 -> s3 [0, 43] { R13704 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R13704 += 1 };
  s6 -> s4 [46, 46] { R13704 += 1 };
  s6 -> s3 [48, 62] { R13704 += 1 };
  s6 -> s3 [65, 98] { R13704 += 1 };
  s6 -> s7 [99, 99] { R13704 += 1 };
  s6 -> s3 [100, 65535] { R13704 += 1 };
  s7 -> s3 [0, 43] { R13704 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R13704 += 1 };
  s7 -> s4 [46, 46] { R13704 += 1 };
  s7 -> s3 [48, 62] { R13704 += 1 };
  s7 -> s3 [65, 106] { R13704 += 1 };
  s7 -> s3 [108, 65535] { R13704 += 1 };
  s8 -> s1 [0, 43] { R13704 += 1 };
  s8 -> s1 [45, 45] { R13704 += 1 };
  s8 -> s2 [46, 46] { R13704 += 1 };
  s8 -> s1 [48, 62] { R13704 += 1 };
  s8 -> s3 [65, 65] { R13704 += 1 };
  s8 -> s1 [66, 110] { R13704 += 1 };
  s8 -> s9 [111, 111] { R13704 += 1 };
  s8 -> s1 [112, 65535] { R13704 += 1 };
  s9 -> s1 [0, 43] { R13704 += 1 };
  s9 -> s1 [45, 45] { R13704 += 1 };
  s9 -> s2 [46, 46] { R13704 += 1 };
  s9 -> s1 [48, 62] { R13704 += 1 };
  s9 -> s3 [65, 65] { R13704 += 1 };
  s9 -> s1 [66, 98] { R13704 += 1 };
  s9 -> s10 [99, 99] { R13704 += 1 };
  s9 -> s1 [100, 65535] { R13704 += 1 };
  s10 -> s1 [0, 43] { R13704 += 1 };
  s10 -> s1 [45, 45] { R13704 += 1 };
  s10 -> s2 [46, 46] { R13704 += 1 };
  s10 -> s1 [48, 62] { R13704 += 1 };
  s10 -> s3 [65, 65] { R13704 += 1 };
  s10 -> s1 [66, 106] { R13704 += 1 };
  s10 -> s1 [108, 65535] { R13704 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 65535] { R13706 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R13705 += 1, R13706 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13706 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 57] { R13708 += 1 };
  s0 -> s0 [0, 65535] { R13707 += 1, R13708 += 1 };
  s0 -> s2 [0, 65535] { R13708 += 1, R16 += 1 };
  s0 -> s3 [58, 58] { R13708 += 1 };
  s0 -> s1 [59, 65535] { R13708 += 1 };
  s1 -> s1 [0, 57] { R13708 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R13708 += 1 };
  s1 -> s1 [59, 65535] { R13708 += 1 };
  s2 -> s1 [0, 57] { R13708 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13708 += 1, R16 += 1 };
  s2 -> s3 [58, 58] { R13708 += 1 };
  s2 -> s1 [59, 65535] { R13708 += 1 };
  s3 -> s3 [0, 65535] { R13708 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R13710 += 1 };
  s0 -> s0 [0, 65535] { R13709 += 1, R13710 += 1 };
  s0 -> s2 [0, 65535] { R13710 += 1, R17 += 1 };
  s0 -> s3 [65, 65] { R13710 += 1 };
  s0 -> s1 [66, 65535] { R13710 += 1 };
  s1 -> s1 [0, 64] { R13710 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R13710 += 1 };
  s1 -> s1 [66, 65535] { R13710 += 1 };
  s2 -> s1 [0, 64] { R13710 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13710 += 1, R17 += 1 };
  s2 -> s3 [65, 65] { R13710 += 1 };
  s2 -> s1 [66, 65535] { R13710 += 1 };
  s3 -> s3 [0, 65535] { R13710 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 90] { R13712 += 1, R34 += 1 };
  s0 -> s2 [0, 65535] { R13712 += 1, R33 += 1, R34 += 1 };
  s0 -> s0 [0, 65535] { R13711 += 1, R13712 += 1 };
  s0 -> s3 [91, 91] { R13712 += 1, R34 += 1 };
  s0 -> s1 [92, 65535] { R13712 += 1, R34 += 1 };
  s1 -> s1 [0, 65535] { R13712 += 1, R34 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13712 += 1 };
  s2 -> s1 [0, 90] { R13712 += 1, R34 += 1 };
  s2 -> s2 [0, 65535] { R13712 += 1, R33 += 1, R34 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [91, 91] { R13712 += 1, R34 += 1 };
  s2 -> s1 [92, 65535] { R13712 += 1, R34 += 1 };
  s3 -> s1 [0, 65535] { R13712 += 1, R34 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13712 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 65535] { R13714 += 1, R35 += 1, R36 += 1 };
  s0 -> s2 [0, 65535] { R13714 += 1, R36 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R13713 += 1, R13714 += 1 };
  s1 -> s1 [0, 65535] { R13714 += 1, R35 += 1, R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R13714 += 1, R36 += 1, R6 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13714 += 1 };
  s2 -> s2 [0, 65535] { R13714 += 1, R36 += 1, R6 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13714 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R13716 += 1, R13602 += 1 };
  s0 -> s0 [0, 65535] { R13715 += 1, R13716 += 1 };
  s0 -> s2 [0, 65535] { R13716 += 1, R13601 += 1, R13602 += 1 };
  s0 -> s1 [66, 65535] { R13716 += 1, R13602 += 1 };
  s1 -> s1 [0, 64] { R13716 += 1, R13602 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13716 += 1 };
  s1 -> s1 [66, 65535] { R13716 += 1, R13602 += 1 };
  s2 -> s1 [0, 64] { R13716 += 1, R13602 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13716 += 1, R13601 += 1, R13602 += 1 };
  s2 -> s1 [66, 65535] { R13716 += 1, R13602 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 65535] { R13718 += 1, R13604 += 1, R29 += 1 };
  s0 -> s2 [0, 65535] { R13718 += 1, R13603 += 1, R13604 += 1 };
  s0 -> s0 [0, 65535] { R13717 += 1, R13718 += 1 };
  s1 -> s1 [0, 65535] { R13718 += 1, R13604 += 1, R29 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13718 += 1 };
  s2 -> s1 [0, 65535] { R13718 += 1, R13604 += 1, R29 += 1 };
  s2 -> s2 [0, 65535] { R13718 += 1, R13603 += 1, R13604 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13718 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 65] { R13720 += 1, R13606 += 1 };
  s0 -> s2 [0, 65535] { R13720 += 1, R13605 += 1, R13606 += 1 };
  s0 -> s0 [0, 65535] { R13719 += 1, R13720 += 1 };
  s0 -> s1 [81, 65535] { R13720 += 1, R13606 += 1 };
  s1 -> s1 [0, 65] { R13720 += 1, R13606 += 1 };
  s1 -> s1 [0, 65535] { R13720 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [81, 65535] { R13720 += 1, R13606 += 1 };
  s2 -> s1 [0, 65] { R13720 += 1, R13606 += 1 };
  s2 -> s2 [0, 65535] { R13720 += 1, R13605 += 1, R13606 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [81, 65535] { R13720 += 1, R13606 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 65535] { R13722 += 1, R13608 += 1, R494 += 1 };
  s0 -> s0 [0, 65535] { R13721 += 1, R13722 += 1 };
  s0 -> s2 [0, 65535] { R13722 += 1, R13607 += 1, R13608 += 1 };
  s1 -> s4 [0, 65535] { R13722 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13722 += 1, R13608 += 1, R494 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13722 += 1, R13608 += 1, R494 += 1 };
  s2 -> s2 [0, 65535] { R13722 += 1, R13607 += 1, R13608 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13722 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_41 {
  init s0;
  s0 -> s1 [0, 80] { R13724 += 1, R13610 += 1 };
  s0 -> s2 [0, 65535] { R13724 += 1, R13609 += 1, R13610 += 1 };
  s0 -> s3 [0, 65535] { R13724 += 1, R13610 += 1, R496 += 1 };
  s0 -> s0 [0, 65535] { R13723 += 1, R13724 += 1 };
  s0 -> s1 [82, 65535] { R13724 += 1, R13610 += 1 };
  s1 -> s1 [0, 80] { R13724 += 1, R13610 += 1 };
  s1 -> s1 [0, 65535] { R13724 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [82, 65535] { R13724 += 1, R13610 += 1 };
  s2 -> s1 [0, 80] { R13724 += 1, R13610 += 1 };
  s2 -> s2 [0, 65535] { R13724 += 1, R13609 += 1, R13610 += 1 };
  s2 -> s3 [0, 65535] { R13724 += 1, R13610 += 1, R496 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [82, 65535] { R13724 += 1, R13610 += 1 };
  s3 -> s1 [0, 80] { R13724 += 1, R13610 += 1 };
  s3 -> s3 [0, 65535] { R13724 += 1, R13610 += 1, R496 += 1 };
  s3 -> s4 [0, 65535] { R13724 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [82, 65535] { R13724 += 1, R13610 += 1 };
  s4 -> s4 [0, 65535] { R13724 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_42 {
  init s0;
  s0 -> s1 [0, 80] { R13726 += 1, R13612 += 1, R500 += 1 };
  s0 -> s0 [0, 65535] { R13725 += 1, R13726 += 1 };
  s0 -> s2 [0, 65535] { R13726 += 1, R13611 += 1, R13612 += 1 };
  s0 -> s3 [0, 65535] { R13726 += 1, R13612 += 1, R499 += 1, R500 += 1 };
  s0 -> s1 [82, 65535] { R13726 += 1, R13612 += 1, R500 += 1 };
  s1 -> s1 [0, 80] { R13726 += 1, R13612 += 1, R500 += 1 };
  s1 -> s4 [0, 65535] { R13726 += 1 };
  s1 -> s1 [0, 65535] { R13726 += 1, R13612 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [82, 65535] { R13726 += 1, R13612 += 1, R500 += 1 };
  s2 -> s1 [0, 80] { R13726 += 1, R13612 += 1, R500 += 1 };
  s2 -> s2 [0, 65535] { R13726 += 1, R13611 += 1, R13612 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R13726 += 1, R13612 += 1, R499 += 1, R500 += 1 };
  s2 -> s1 [82, 65535] { R13726 += 1, R13612 += 1, R500 += 1 };
  s3 -> s1 [0, 80] { R13726 += 1, R13612 += 1, R500 += 1 };
  s3 -> s4 [0, 65535] { R13726 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13726 += 1, R13612 += 1, R499 += 1, R500 += 1 };
  s3 -> s1 [82, 65535] { R13726 += 1, R13612 += 1, R500 += 1 };
  s4 -> s4 [0, 65535] { R13726 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_43 {
  init s0;
  s0 -> s1 [0, 65535] { R13728 += 1, R13614 += 1, R505 += 1, R506 += 1 };
  s0 -> s2 [0, 65535] { R13728 += 1, R13613 += 1, R13614 += 1 };
  s0 -> s0 [0, 65535] { R13727 += 1, R13728 += 1 };
  s0 -> s3 [0, 65535] { R13728 += 1, R13614 += 1, R504 += 1, R505 += 1 };
  s1 -> s1 [0, 65535] { R13728 += 1, R13614 += 1, R505 += 1, R506 += 1 };
  s1 -> s6 [0, 65535] { R13728 += 1, R13614 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13728 += 1 };
  s2 -> s1 [0, 65535] { R13728 += 1, R13614 += 1, R505 += 1, R506 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13728 += 1, R13613 += 1, R13614 += 1 };
  s2 -> s3 [0, 65535] { R13728 += 1, R13614 += 1, R504 += 1, R505 += 1 };
  s3 -> s1 [0, 65535] { R13728 += 1, R13614 += 1, R505 += 1, R506 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13728 += 1, R13614 += 1, R504 += 1, R505 += 1 };
  s3 -> s5 [0, 65535] { R13728 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13728 += 1 };
  s6 -> s6 [0, 65535] { R13728 += 1, R13614 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13728 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_44 {
  init s0;
  s0 -> s1 [0, 81] { R13730 += 1, R13616 += 1, R8056 += 1 };
  s0 -> s1 [0, 65535] { R13730 += 1, R13616 += 1 };
  s0 -> s2 [0, 65535] { R13730 += 1, R13615 += 1, R13616 += 1 };
  s0 -> s0 [0, 65535] { R13729 += 1, R13730 += 1 };
  s0 -> s1 [91, 65535] { R13730 += 1, R13616 += 1, R8056 += 1 };
  s1 -> s1 [0, 81] { R13730 += 1, R13616 += 1, R8056 += 1 };
  s1 -> s4 [0, 65535] { R13730 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13730 += 1, R13616 += 1 };
  s1 -> s1 [91, 65535] { R13730 += 1, R13616 += 1, R8056 += 1 };
  s2 -> s1 [0, 81] { R13730 += 1, R13616 += 1, R8056 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13730 += 1, R13616 += 1 };
  s2 -> s2 [0, 65535] { R13730 += 1, R13615 += 1, R13616 += 1 };
  s2 -> s1 [91, 65535] { R13730 += 1, R13616 += 1, R8056 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13730 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_45 {
  init s0;
  s0 -> s1 [0, 65535] { R13732 += 1, R13618 += 1 };
  s0 -> s0 [0, 65535] { R13731 += 1, R13732 += 1 };
  s0 -> s2 [0, 65535] { R13732 += 1, R13617 += 1, R13618 += 1 };
  s1 -> s1 [0, 65535] { R13732 += 1, R13618 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13732 += 1 };
  s2 -> s1 [0, 65535] { R13732 += 1, R13618 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13732 += 1, R13617 += 1, R13618 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13732 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_46 {
  init s0;
  s0 -> s1 [0, 65535] { R13734 += 1, R13620 += 1, R13094 += 1, R13095 += 1 };
  s0 -> s2 [0, 65535] { R13734 += 1, R13619 += 1, R13620 += 1 };
  s0 -> s3 [0, 65535] { R13734 += 1, R13620 += 1, R13095 += 1, R13096 += 1 };
  s0 -> s0 [0, 65535] { R13733 += 1, R13734 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13734 += 1, R13620 += 1, R13094 += 1, R13095 += 1 };
  s1 -> s3 [0, 65535] { R13734 += 1, R13620 += 1, R13095 += 1, R13096 += 1 };
  s1 -> s5 [0, 65535] { R13734 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R13734 += 1, R13620 += 1, R13094 += 1, R13095 += 1 };
  s2 -> s2 [0, 65535] { R13734 += 1, R13619 += 1, R13620 += 1 };
  s2 -> s3 [0, 65535] { R13734 += 1, R13620 += 1, R13095 += 1, R13096 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13734 += 1, R13620 += 1, R13095 += 1, R13096 += 1 };
  s3 -> s5 [0, 65535] { R13734 += 1 };
  s3 -> s6 [0, 65535] { R13734 += 1, R13620 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13734 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13734 += 1 };
  s6 -> s6 [0, 65535] { R13734 += 1, R13620 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_47 {
  init s0;
  s0 -> s1 [0, 65535] { R13736 += 1, R13621 += 1, R13622 += 1 };
  s0 -> s2 [0, 65535] { R13736 += 1, R13622 += 1 };
  s0 -> s0 [0, 65535] { R13735 += 1, R13736 += 1 };
  s1 -> s1 [0, 65535] { R13736 += 1, R13621 += 1, R13622 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13736 += 1, R13622 += 1 };
  s2 -> s3 [0, 65535] { R13736 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13736 += 1, R13622 += 1 };
  s3 -> s3 [0, 65535] { R13736 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_48 {
  init s0;
  s0 -> s1 [0, 65535] { R13738 += 1, R13623 += 1, R13624 += 1 };
  s0 -> s0 [0, 65535] { R13737 += 1, R13738 += 1 };
  s0 -> s2 [0, 65535] { R13738 += 1, R13624 += 1 };
  s0 -> s3 [0, 65535] { R13738 += 1, R13624 += 1, R13599 += 1, R13600 += 1 };
  s1 -> s1 [0, 65535] { R13738 += 1, R13623 += 1, R13624 += 1 };
  s1 -> s2 [0, 65535] { R13738 += 1, R13624 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R13738 += 1, R13624 += 1, R13599 += 1, R13600 += 1 };
  s2 -> s2 [0, 65535] { R13738 += 1, R13624 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13738 += 1 };
  s3 -> s2 [0, 65535] { R13738 += 1, R13624 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13738 += 1 };
  s3 -> s3 [0, 65535] { R13738 += 1, R13624 += 1, R13599 += 1, R13600 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13738 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_49 {
  init s0;
  s0 -> s1 [0, 65535] { R13740 += 1, R13654 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R13739 += 1, R13740 += 1 };
  s0 -> s2 [0, 65535] { R13740 += 1, R13653 += 1, R13654 += 1 };
  s1 -> s4 [0, 65535] { R13740 += 1 };
  s1 -> s1 [0, 65535] { R13740 += 1, R13654 += 1, R30 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13740 += 1, R13654 += 1, R30 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13740 += 1, R13653 += 1, R13654 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13740 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_50 {
  init s0;
  s0 -> s1 [0, 64] { R13742 += 1, R13656 += 1 };
  s0 -> s2 [0, 65535] { R13742 += 1, R13655 += 1, R13656 += 1 };
  s0 -> s0 [0, 65535] { R13741 += 1, R13742 += 1 };
  s0 -> s3 [65, 65] { R13742 += 1, R13656 += 1 };
  s0 -> s4 [65, 65] { R13742 += 1, R13656 += 1 };
  s0 -> s5 [81, 81] { R13742 += 1, R13656 += 1 };
  s0 -> s1 [82, 65535] { R13742 += 1, R13656 += 1 };
  s1 -> s1 [0, 64] { R13742 += 1, R13656 += 1 };
  s1 -> s3 [65, 65] { R13742 += 1, R13656 += 1 };
  s1 -> s4 [65, 65] { R13742 += 1, R13656 += 1 };
  s1 -> s5 [81, 81] { R13742 += 1, R13656 += 1 };
  s1 -> s1 [82, 65535] { R13742 += 1, R13656 += 1 };
  s2 -> s1 [0, 64] { R13742 += 1, R13656 += 1 };
  s2 -> s2 [0, 65535] { R13742 += 1, R13655 += 1, R13656 += 1 };
  s2 -> s3 [65, 65] { R13742 += 1, R13656 += 1 };
  s2 -> s4 [65, 65] { R13742 += 1, R13656 += 1 };
  s2 -> s5 [81, 81] { R13742 += 1, R13656 += 1 };
  s2 -> s1 [82, 65535] { R13742 += 1, R13656 += 1 };
  s4 -> s4 [0, 65] { R13742 += 1, R13656 += 1 };
  s4 -> s8 [81, 81] { R13742 += 1, R13656 += 1 };
  s4 -> s4 [82, 65535] { R13742 += 1, R13656 += 1 };
  s5 -> s5 [0, 64] { R13742 += 1, R13656 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13742 += 1 };
  s5 -> s7 [65, 65] { R13742 += 1, R13656 += 1 };
  s5 -> s8 [65, 65] { R13742 += 1, R13656 += 1 };
  s5 -> s5 [81, 65535] { R13742 += 1, R13656 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13742 += 1 };
  s8 -> s8 [0, 65] { R13742 += 1, R13656 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13742 += 1 };
  s8 -> s8 [81, 65535] { R13742 += 1, R13656 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_51 {
  init s0;
  s0 -> s1 [0, 64] { R13744 += 1, R13658 += 1, R493 += 1 };
  s0 -> s0 [0, 65535] { R13743 += 1, R13744 += 1 };
  s0 -> s2 [0, 65535] { R13744 += 1, R13657 += 1, R13658 += 1 };
  s0 -> s3 [65, 65] { R13744 += 1, R13658 += 1, R493 += 1 };
  s0 -> s4 [65, 65] { R13744 += 1, R13658 += 1, R493 += 1 };
  s0 -> s1 [66, 65535] { R13744 += 1, R13658 += 1, R493 += 1 };
  s1 -> s1 [0, 64] { R13744 += 1, R13658 += 1, R493 += 1 };
  s1 -> s1 [0, 65535] { R13744 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R13744 += 1, R13658 += 1, R493 += 1 };
  s1 -> s4 [65, 65] { R13744 += 1, R13658 += 1, R493 += 1 };
  s1 -> s1 [66, 65535] { R13744 += 1, R13658 += 1, R493 += 1 };
  s2 -> s1 [0, 64] { R13744 += 1, R13658 += 1, R493 += 1 };
  s2 -> s2 [0, 65535] { R13744 += 1, R13657 += 1, R13658 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R13744 += 1, R13658 += 1, R493 += 1 };
  s2 -> s4 [65, 65] { R13744 += 1, R13658 += 1, R493 += 1 };
  s2 -> s1 [66, 65535] { R13744 += 1, R13658 += 1, R493 += 1 };
  s3 -> s3 [0, 65535] { R13744 += 1, R13658 += 1, R493 += 1 };
  s3 -> s6 [0, 65535] { R13744 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13744 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13744 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_52 {
  init s0;
  s0 -> s1 [0, 64] { R13746 += 1, R13660 += 1, R495 += 1 };
  s0 -> s0 [0, 65535] { R13745 += 1, R13746 += 1 };
  s0 -> s2 [0, 65535] { R13746 += 1, R13659 += 1, R13660 += 1 };
  s0 -> s3 [65, 65] { R13746 += 1, R13660 += 1, R495 += 1 };
  s0 -> s4 [65, 65] { R13746 += 1, R13660 += 1, R495 += 1 };
  s0 -> s1 [66, 65535] { R13746 += 1, R13660 += 1, R495 += 1 };
  s1 -> s1 [0, 64] { R13746 += 1, R13660 += 1, R495 += 1 };
  s1 -> s1 [0, 65535] { R13746 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R13746 += 1, R13660 += 1, R495 += 1 };
  s1 -> s4 [65, 65] { R13746 += 1, R13660 += 1, R495 += 1 };
  s1 -> s1 [66, 65535] { R13746 += 1, R13660 += 1, R495 += 1 };
  s2 -> s1 [0, 64] { R13746 += 1, R13660 += 1, R495 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13746 += 1, R13659 += 1, R13660 += 1 };
  s2 -> s3 [65, 65] { R13746 += 1, R13660 += 1, R495 += 1 };
  s2 -> s4 [65, 65] { R13746 += 1, R13660 += 1, R495 += 1 };
  s2 -> s1 [66, 65535] { R13746 += 1, R13660 += 1, R495 += 1 };
  s3 -> s3 [0, 65535] { R13746 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13746 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13746 += 1, R13660 += 1, R495 += 1 };
  s5 -> s5 [0, 65535] { R13746 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_53 {
  init s0;
  s0 -> s1 [0, 64] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s0 -> s0 [0, 65535] { R13747 += 1, R13748 += 1 };
  s0 -> s2 [0, 65535] { R13748 += 1, R13661 += 1, R13662 += 1 };
  s0 -> s3 [65, 65] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s0 -> s4 [65, 65] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s0 -> s1 [66, 65535] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s1 -> s1 [0, 64] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13748 += 1 };
  s1 -> s3 [65, 65] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s1 -> s4 [65, 65] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s1 -> s1 [66, 65535] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s2 -> s1 [0, 64] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13748 += 1, R13661 += 1, R13662 += 1 };
  s2 -> s3 [65, 65] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s2 -> s4 [65, 65] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s2 -> s1 [66, 65535] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s3 -> s3 [0, 65535] { R13748 += 1, R13662 += 1, R497 += 1, R498 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13748 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13748 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13748 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_54 {
  init s0;
  s0 -> s1 [0, 64] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s0 -> s2 [0, 65535] { R13750 += 1, R13663 += 1, R13664 += 1 };
  s0 -> s0 [0, 65535] { R13749 += 1, R13750 += 1 };
  s0 -> s3 [65, 65] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s0 -> s4 [65, 65] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s0 -> s1 [66, 65535] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s1 -> s1 [0, 64] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s1 -> s1 [0, 65535] { R13750 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s1 -> s4 [65, 65] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s1 -> s1 [66, 65535] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s2 -> s1 [0, 64] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13750 += 1, R13663 += 1, R13664 += 1 };
  s2 -> s3 [65, 65] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s2 -> s4 [65, 65] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s2 -> s1 [66, 65535] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s3 -> s6 [0, 65535] { R13750 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13750 += 1, R13664 += 1, R501 += 1, R502 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13750 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13750 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_55 {
  init s0;
  s0 -> s1 [0, 64] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s0 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s0 -> s3 [0, 65535] { R13752 += 1, R13665 += 1, R13666 += 1 };
  s0 -> s0 [0, 65535] { R13751 += 1, R13752 += 1 };
  s0 -> s4 [65, 65] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s0 -> s5 [65, 65] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s0 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s0 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s0 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s0 -> s1 [66, 65535] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s0 -> s2 [91, 107] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s0 -> s8 [108, 108] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s0 -> s2 [109, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s1 -> s1 [0, 64] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s1 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s1 -> s4 [65, 65] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s1 -> s5 [65, 65] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s1 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s1 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s1 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s1 -> s1 [66, 65535] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s1 -> s2 [91, 107] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s1 -> s8 [108, 108] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s1 -> s2 [109, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s2 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s2 -> s34 [0, 65535];
  s2 -> s2 [0, 65535] { R13752 += 1 };
  s2 -> s6 [65, 65] { R13752 += 1, R13666 += 1 };
  s2 -> s7 [65, 65] { R13752 += 1, R13666 += 1 };
  s2 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s2 -> s2 [66, 65535] { R13752 += 1, R13666 += 1 };
  s2 -> s2 [91, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s3 -> s1 [0, 64] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s3 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s3 -> s3 [0, 65535] { R13752 += 1, R13665 += 1, R13666 += 1 };
  s3 -> s4 [65, 65] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s3 -> s5 [65, 65] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s3 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s3 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s3 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s3 -> s1 [66, 65535] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s3 -> s2 [91, 107] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s3 -> s8 [108, 108] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s3 -> s2 [109, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s5 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s5 -> s5 [0, 65535] { R13752 += 1, R13666 += 1, R8053 += 1, R8054 += 1 };
  s5 -> s6 [91, 107] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s5 -> s9 [108, 108] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s5 -> s6 [109, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s6 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s6 -> s35 [0, 65535] { R13752 += 1 };
  s6 -> s34 [0, 65535];
  s6 -> s6 [0, 65535] { R13752 += 1, R13666 += 1 };
  s6 -> s6 [91, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s7 -> s34 [0, 65535];
  s7 -> s7 [0, 65535] { R13752 += 1 };
  s8 -> s8 [0, 64] { R13752 += 1, R13666 += 1 };
  s8 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s8 -> s9 [65, 65] { R13752 += 1, R13666 += 1 };
  s8 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s8 -> s10 [65, 65] { R13752 += 1, R13666 += 1 };
  s8 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s8 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s8 -> s8 [66, 65535] { R13752 += 1, R13666 += 1 };
  s8 -> s2 [91, 110] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s8 -> s11 [111, 111] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s8 -> s2 [112, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s9 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s9 -> s9 [0, 65535] { R13752 += 1, R13666 += 1 };
  s9 -> s6 [91, 110] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s9 -> s12 [111, 111] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s9 -> s6 [112, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s11 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s11 -> s11 [0, 64] { R13752 += 1, R13666 += 1 };
  s11 -> s12 [65, 65] { R13752 += 1, R13666 += 1 };
  s11 -> s13 [65, 65] { R13752 += 1, R13666 += 1 };
  s11 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s11 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s11 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s11 -> s11 [66, 65535] { R13752 += 1, R13666 += 1 };
  s11 -> s2 [91, 98] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s11 -> s14 [99, 99] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s11 -> s2 [100, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s12 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s12 -> s12 [0, 65535] { R13752 += 1, R13666 += 1 };
  s12 -> s6 [91, 98] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s12 -> s17 [99, 99] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s12 -> s6 [100, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s14 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s14 -> s14 [0, 64] { R13752 += 1, R13666 += 1 };
  s14 -> s15 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s14 -> s16 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s14 -> s17 [65, 65] { R13752 += 1, R13666 += 1 };
  s14 -> s18 [65, 65] { R13752 += 1, R13666 += 1 };
  s14 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s14 -> s14 [66, 65535] { R13752 += 1, R13666 += 1 };
  s14 -> s2 [91, 96] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s14 -> s19 [97, 97] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s14 -> s2 [98, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s16 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s16 -> s16 [0, 65535] { R13752 += 1, R13666 += 1 };
  s16 -> s6 [91, 107] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s16 -> s22 [108, 108] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s16 -> s6 [109, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s17 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s17 -> s17 [0, 65535] { R13752 += 1, R13666 += 1 };
  s17 -> s6 [91, 96] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s17 -> s16 [97, 97] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s17 -> s6 [98, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s19 -> s19 [0, 64] { R13752 += 1, R13666 += 1 };
  s19 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s19 -> s15 [65, 65] { R13752 += 1, R13666 += 1 };
  s19 -> s16 [65, 65] { R13752 += 1, R13666 += 1 };
  s19 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s19 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s19 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s19 -> s19 [66, 65535] { R13752 += 1, R13666 += 1 };
  s19 -> s2 [91, 107] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s19 -> s20 [108, 108] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s19 -> s2 [109, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s20 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s20 -> s20 [0, 64] { R13752 += 1, R13666 += 1 };
  s20 -> s21 [65, 65] { R13752 += 1, R13666 += 1 };
  s20 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s20 -> s22 [65, 65] { R13752 += 1, R13666 += 1 };
  s20 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s20 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s20 -> s20 [66, 65535] { R13752 += 1, R13666 += 1 };
  s20 -> s2 [91, 103] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s20 -> s23 [104, 104] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s20 -> s2 [105, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s22 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s22 -> s22 [0, 65535] { R13752 += 1, R13666 += 1 };
  s22 -> s6 [91, 103] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s22 -> s25 [104, 104] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s22 -> s6 [105, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s23 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s23 -> s23 [0, 64] { R13752 += 1, R13666 += 1 };
  s23 -> s24 [65, 65] { R13752 += 1, R13666 += 1 };
  s23 -> s25 [65, 65] { R13752 += 1, R13666 += 1 };
  s23 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s23 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s23 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s23 -> s23 [66, 65535] { R13752 += 1, R13666 += 1 };
  s23 -> s2 [91, 110] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s23 -> s26 [111, 111] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s23 -> s2 [112, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s25 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s25 -> s25 [0, 65535] { R13752 += 1, R13666 += 1 };
  s25 -> s6 [91, 110] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s25 -> s28 [111, 111] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s25 -> s6 [112, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s26 -> s26 [0, 64] { R13752 += 1, R13666 += 1 };
  s26 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s26 -> s27 [65, 65] { R13752 += 1, R13666 += 1 };
  s26 -> s28 [65, 65] { R13752 += 1, R13666 += 1 };
  s26 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s26 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s26 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s26 -> s26 [66, 65535] { R13752 += 1, R13666 += 1 };
  s26 -> s2 [91, 114] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s26 -> s29 [115, 115] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s26 -> s2 [116, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s28 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s28 -> s28 [0, 65535] { R13752 += 1, R13666 += 1 };
  s28 -> s6 [91, 114] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s28 -> s31 [115, 115] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s28 -> s6 [116, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s29 -> s29 [0, 64] { R13752 += 1, R13666 += 1 };
  s29 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s29 -> s30 [65, 65] { R13752 += 1, R13666 += 1 };
  s29 -> s31 [65, 65] { R13752 += 1, R13666 += 1 };
  s29 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s29 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s29 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s29 -> s29 [66, 65535] { R13752 += 1, R13666 += 1 };
  s29 -> s2 [91, 115] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s29 -> s32 [116, 116] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s29 -> s2 [117, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s31 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s31 -> s31 [0, 65535] { R13752 += 1, R13666 += 1 };
  s31 -> s6 [91, 115] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s31 -> s33 [116, 116] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s31 -> s6 [117, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s32 -> s2 [0, 64] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s32 -> s6 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s32 -> s7 [65, 65] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s32 -> s2 [66, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s32 -> s2 [91, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s33 -> s6 [0, 81] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s33 -> s6 [91, 65535] { R13752 += 1, R13666 += 1, R8054 += 1 };
  s34 -> s34 [0, 65535];
  s35 -> s35 [0, 65535] { R13752 += 1 };
  s35 -> s34 [0, 65535];
  accepting s34, s2, s6, s7, s35;
};
automaton uri_56 {
  init s0;
  s0 -> s1 [0, 64] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s0 -> s2 [0, 64] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s0 -> s0 [0, 65535] { R13753 += 1, R13754 += 1 };
  s0 -> s3 [0, 65535] { R13754 += 1, R13667 += 1, R13668 += 1 };
  s0 -> s4 [65, 65] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s0 -> s5 [65, 65] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s0 -> s6 [65, 65] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s0 -> s7 [65, 65] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s0 -> s1 [66, 65535] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s0 -> s2 [66, 65535] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s1 -> s1 [0, 64] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s1 -> s2 [0, 64] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s1 -> s4 [65, 65] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s1 -> s5 [65, 65] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s1 -> s6 [65, 65] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s1 -> s7 [65, 65] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s1 -> s1 [66, 65535] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s1 -> s2 [66, 65535] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s2 -> s2 [0, 64] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s2 -> s11 [0, 64] { R13754 += 1, R13668 += 1 };
  s2 -> s8 [65, 65] { R13754 += 1, R13668 += 1 };
  s2 -> s5 [65, 65] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s2 -> s7 [65, 65] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s2 -> s12 [65, 65] { R13754 += 1, R13668 += 1 };
  s2 -> s2 [66, 65535] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s2 -> s11 [66, 65535] { R13754 += 1, R13668 += 1 };
  s3 -> s1 [0, 64] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s3 -> s2 [0, 64] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s3 -> s3 [0, 65535] { R13754 += 1, R13667 += 1, R13668 += 1 };
  s3 -> s4 [65, 65] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s3 -> s5 [65, 65] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s3 -> s6 [65, 65] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s3 -> s7 [65, 65] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s3 -> s1 [66, 65535] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s3 -> s2 [66, 65535] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s4 -> s4 [0, 65535] { R13754 += 1, R13668 += 1, R13085 += 1, R13086 += 1 };
  s4 -> s7 [0, 65535] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s7 -> s8 [0, 65535] { R13754 += 1, R13668 += 1 };
  s7 -> s7 [0, 65535] { R13754 += 1, R13668 += 1, R13086 += 1, R13087 += 1 };
  s8 -> s9 [0, 65535] { R13754 += 1 };
  s8 -> s8 [0, 65535] { R13754 += 1, R13668 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R13754 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 64] { R13754 += 1, R13668 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R13754 += 1 };
  s11 -> s8 [65, 65] { R13754 += 1, R13668 += 1 };
  s11 -> s12 [65, 65] { R13754 += 1, R13668 += 1 };
  s11 -> s11 [66, 65535] { R13754 += 1, R13668 += 1 };
  s12 -> s12 [0, 65535] { R13754 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton uri_57 {
  init s0;
  s0 -> s1 [0, 64] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s0 -> s2 [0, 65535] { R13756 += 1, R13669 += 1, R13670 += 1 };
  s0 -> s0 [0, 65535] { R13755 += 1, R13756 += 1 };
  s0 -> s3 [65, 65] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s0 -> s4 [65, 65] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s0 -> s1 [66, 65535] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s1 -> s1 [0, 64] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s1 -> s1 [0, 65535] { R13756 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s1 -> s4 [65, 65] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s1 -> s1 [66, 65535] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s2 -> s1 [0, 64] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13756 += 1, R13669 += 1, R13670 += 1 };
  s2 -> s3 [65, 65] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s2 -> s4 [65, 65] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s2 -> s1 [66, 65535] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s3 -> s3 [0, 65535] { R13756 += 1, R13670 += 1, R13091 += 1, R13092 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13756 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13756 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13756 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_58 {
  init s0;
  s0 -> s1 [0, 64] { R13758 += 1, R13672 += 1 };
  s0 -> s0 [0, 65535] { R13757 += 1, R13758 += 1 };
  s0 -> s2 [0, 65535] { R13758 += 1, R13671 += 1, R13672 += 1 };
  s0 -> s3 [65, 65] { R13758 += 1, R13672 += 1 };
  s0 -> s4 [65, 65] { R13758 += 1, R13672 += 1 };
  s0 -> s1 [66, 65535] { R13758 += 1, R13672 += 1 };
  s1 -> s1 [0, 64] { R13758 += 1, R13672 += 1 };
  s1 -> s1 [0, 65535] { R13758 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R13758 += 1, R13672 += 1 };
  s1 -> s4 [65, 65] { R13758 += 1, R13672 += 1 };
  s1 -> s1 [66, 65535] { R13758 += 1, R13672 += 1 };
  s2 -> s1 [0, 64] { R13758 += 1, R13672 += 1 };
  s2 -> s2 [0, 65535] { R13758 += 1, R13671 += 1, R13672 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R13758 += 1, R13672 += 1 };
  s2 -> s4 [65, 65] { R13758 += 1, R13672 += 1 };
  s2 -> s1 [66, 65535] { R13758 += 1, R13672 += 1 };
  s3 -> s3 [0, 65535] { R13758 += 1, R13672 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13758 += 1 };
  s4 -> s4 [0, 65535] { R13758 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13758 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_59 {
  init s0;
  s0 -> s1 [0, 64] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s0 -> s2 [0, 64] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s0 -> s3 [0, 65535] { R13760 += 1, R13673 += 1, R13674 += 1 };
  s0 -> s0 [0, 65535] { R13759 += 1, R13760 += 1 };
  s0 -> s4 [65, 65] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s0 -> s5 [65, 65] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s0 -> s6 [65, 65] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s0 -> s7 [65, 65] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s0 -> s1 [66, 80] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s0 -> s2 [66, 65535] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s0 -> s8 [81, 81] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s0 -> s1 [82, 65535] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s1 -> s1 [0, 64] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s1 -> s5 [65, 65] { R13760 += 1, R13674 += 1 };
  s1 -> s6 [65, 65] { R13760 += 1, R13674 += 1 };
  s1 -> s1 [66, 80] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s1 -> s1 [66, 65535] { R13760 += 1, R13674 += 1 };
  s1 -> s8 [81, 81] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s1 -> s1 [82, 65535] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s2 -> s1 [0, 64] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s2 -> s2 [0, 64] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s2 -> s4 [65, 65] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s2 -> s5 [65, 65] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s2 -> s6 [65, 65] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s2 -> s7 [65, 65] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s2 -> s1 [66, 80] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s2 -> s2 [66, 65535] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s2 -> s8 [81, 81] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s2 -> s1 [82, 65535] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s3 -> s1 [0, 64] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s3 -> s2 [0, 64] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s3 -> s3 [0, 65535] { R13760 += 1, R13673 += 1, R13674 += 1 };
  s3 -> s4 [65, 65] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s3 -> s5 [65, 65] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s3 -> s6 [65, 65] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s3 -> s7 [65, 65] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s3 -> s1 [66, 80] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s3 -> s2 [66, 65535] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s3 -> s8 [81, 81] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s3 -> s1 [82, 65535] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s6 -> s6 [0, 80] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s6 -> s6 [0, 65535] { R13760 += 1, R13674 += 1 };
  s6 -> s11 [81, 81] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s6 -> s6 [82, 65535] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s7 -> s6 [0, 80] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s7 -> s7 [0, 65535] { R13760 += 1, R13674 += 1, R13595 += 1, R13596 += 1 };
  s7 -> s11 [81, 81] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s7 -> s6 [82, 65535] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s8 -> s8 [0, 64] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R13760 += 1 };
  s8 -> s10 [65, 65] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s8 -> s11 [65, 65] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s8 -> s8 [66, 65535] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13760 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R13760 += 1 };
  s11 -> s11 [0, 65535] { R13760 += 1, R13674 += 1, R13596 += 1, R13597 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R13760 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P89
automaton P89_0 {
  init s0;
  s0 -> s1 [121, 121];
  accepting s1;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining P61
automaton P61_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
