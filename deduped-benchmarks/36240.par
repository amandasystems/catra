// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R16, R17, R20, R2189, R2190, R2191, R2192, R2193, R2194, R2859, R2860, R2861, R2862, R2863, R2864, R2865, R2866, R2867, R2868, R2869, R2870, R2871, R2872, R2873, R2874, R2875, R2876, R2877, R2878, R2879, R2880, R2881, R2882, R2883, R2884, R2885, R2886, R2887, R2888, R2889, R2890, R2891, R2892, R2893, R2894, R2895, R2896, R2897, R2898, R2899, R29, R2900, R2901, R2902, R2903, R2904, R2905, R2906, R2907, R2908, R2909, R2910, R2911, R2912, R2913, R2914, R2915, R2916, R2917, R2918, R2919, R2920, R2921, R2922, R2923, R2924, R2925, R2926, R2927, R2928, R2929, R2930, R2931, R2932, R2933, R2934, R2935, R2936, R2937, R2938, R2939, R2940, R2941, R2942, R2943, R2944, R2945, R2946, R2947, R2948, R2949, R2950, R2951, R2952, R2953, R2954, R2955, R2956, R2957, R2958, R2959, R2960, R2961, R2962, R2963, R2964, R2965, R2966, R2967, R2968, R2969, R2970, R2971, R2972, R2973, R2974, R2975, R2976, R2977, R2978, R2979, R2980, R2981, R2982, R2983, R2984, R2985, R2986, R2987, R2988, R2989, R2990, R2991, R2992, R2993, R2994, R2995, R2996, R2997, R2998, R2999, R30, R3000, R3001, R3002, R3003, R3004, R3005, R3006, R3007, R3008, R3009, R3010, R3011, R3012, R3013, R3014, R3015, R3016, R3017, R3018, R3019, R3020, R3021, R3022, R3023, R3024, R31, R32, R33, R34, R35, R36, R4, R493, R494, R495, R496, R497, R498, R499, R5, R500, R501, R502, R503, R504, R505, R506, R507, R508, R509, R510, R511, R512, R513, R514, R515, R516, R6, R67, R68, R69, R70, R71, R72, R73, R74, R75, R76, R77, R78, R79, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining P83
automaton P83_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R5 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 64];
  s0 -> s0 [0, 65535] { R20 += 1 };
  s0 -> s2 [65, 65];
  s0 -> s1 [66, 65535];
  s1 -> s1 [0, 64];
  s1 -> s2 [65, 65];
  s1 -> s1 [66, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R2890 += 1, R31 += 1 };
  s0 -> s0 [0, 65535] { R2889 += 1, R2890 += 1 };
  s1 -> s1 [0, 65535] { R2890 += 1, R31 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s0 [0, 65535] { R2891 += 1, R2892 += 1 };
  s0 -> s1 [0, 65535] { R2892 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R2892 += 1, R68 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 88] { R2894 += 1 };
  s0 -> s0 [0, 65535] { R2893 += 1, R2894 += 1 };
  s0 -> s2 [0, 65535] { R2894 += 1, R70 += 1 };
  s0 -> s1 [90, 65535] { R2894 += 1 };
  s1 -> s1 [0, 88] { R2894 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [90, 65535] { R2894 += 1 };
  s2 -> s1 [0, 88] { R2894 += 1 };
  s2 -> s2 [0, 65535] { R2894 += 1, R70 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [90, 65535] { R2894 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 72] { R2896 += 1 };
  s0 -> s0 [0, 65535] { R2895 += 1, R2896 += 1 };
  s0 -> s2 [0, 65535] { R2896 += 1, R72 += 1 };
  s0 -> s1 [74, 65535] { R2896 += 1 };
  s1 -> s1 [0, 72] { R2896 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [74, 65535] { R2896 += 1 };
  s2 -> s1 [0, 72] { R2896 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2896 += 1, R72 += 1 };
  s2 -> s1 [74, 65535] { R2896 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_7 {
  init s0;
  s0 -> s0 [0, 65535] { R2897 += 1, R2898 += 1 };
  s0 -> s1 [0, 65535] { R2898 += 1, R77 += 1, R78 += 1 };
  s0 -> s2 [0, 65535] { R2898 += 1, R76 += 1, R77 += 1 };
  s1 -> s4 [0, 65535] { R2898 += 1 };
  s1 -> s1 [0, 65535] { R2898 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2898 += 1, R77 += 1, R78 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2898 += 1, R76 += 1, R77 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2898 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s0 [0, 65535] { R2899 += 1, R2900 += 1 };
  s0 -> s1 [0, 65535] { R2900 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2900 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R2902 += 1, R83 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R2902 += 1, R82 += 1, R83 += 1 };
  s0 -> s0 [0, 65535] { R2901 += 1, R2902 += 1 };
  s1 -> s1 [0, 65535] { R2902 += 1, R83 += 1, R84 += 1 };
  s1 -> s4 [0, 65535] { R2902 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2902 += 1, R83 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2902 += 1, R82 += 1, R83 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2902 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 107] { R2904 += 1, R88 += 1 };
  s0 -> s2 [0, 65535] { R2904 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R2903 += 1, R2904 += 1 };
  s0 -> s3 [108, 108] { R2904 += 1, R88 += 1 };
  s0 -> s1 [109, 65535] { R2904 += 1, R88 += 1 };
  s1 -> s13 [0, 65535] { R2904 += 1 };
  s1 -> s1 [0, 65535] { R2904 += 1, R88 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 107] { R2904 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R2904 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R2904 += 1, R88 += 1 };
  s2 -> s1 [109, 65535] { R2904 += 1, R88 += 1 };
  s3 -> s1 [0, 110] { R2904 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R2904 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [111, 111] { R2904 += 1, R88 += 1 };
  s3 -> s1 [112, 65535] { R2904 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R2904 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R2904 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [99, 99] { R2904 += 1, R88 += 1 };
  s5 -> s1 [100, 65535] { R2904 += 1, R88 += 1 };
  s6 -> s1 [0, 96] { R2904 += 1, R88 += 1 };
  s6 -> s6 [0, 65535] { R2904 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s7 [97, 97] { R2904 += 1, R88 += 1 };
  s6 -> s1 [98, 65535] { R2904 += 1, R88 += 1 };
  s7 -> s1 [0, 107] { R2904 += 1, R88 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s7 [0, 65535] { R2904 += 1 };
  s7 -> s8 [108, 108] { R2904 += 1, R88 += 1 };
  s7 -> s1 [109, 65535] { R2904 += 1, R88 += 1 };
  s8 -> s1 [0, 103] { R2904 += 1, R88 += 1 };
  s8 -> s8 [0, 65535] { R2904 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s9 [104, 104] { R2904 += 1, R88 += 1 };
  s8 -> s1 [105, 65535] { R2904 += 1, R88 += 1 };
  s9 -> s1 [0, 110] { R2904 += 1, R88 += 1 };
  s9 -> s9 [0, 65535] { R2904 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s10 [111, 111] { R2904 += 1, R88 += 1 };
  s9 -> s1 [112, 65535] { R2904 += 1, R88 += 1 };
  s10 -> s1 [0, 114] { R2904 += 1, R88 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s10 [0, 65535] { R2904 += 1 };
  s10 -> s11 [115, 115] { R2904 += 1, R88 += 1 };
  s10 -> s1 [116, 65535] { R2904 += 1, R88 += 1 };
  s11 -> s1 [0, 115] { R2904 += 1, R88 += 1 };
  s11 -> s11 [0, 65535] { R2904 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s12 [116, 116] { R2904 += 1, R88 += 1 };
  s11 -> s1 [117, 65535] { R2904 += 1, R88 += 1 };
  s12 -> s1 [0, 65535] { R2904 += 1, R88 += 1 };
  s13 -> s13 [0, 65535] { R2904 += 1 };
  s13 -> s4 [0, 65535];
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R2906 += 1, R92 += 1, R93 += 1 };
  s0 -> s0 [0, 65535] { R2905 += 1, R2906 += 1 };
  s0 -> s2 [0, 65535] { R2906 += 1, R93 += 1, R94 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2906 += 1, R92 += 1, R93 += 1 };
  s1 -> s2 [0, 65535] { R2906 += 1, R93 += 1, R94 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2906 += 1 };
  s2 -> s2 [0, 65535] { R2906 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2906 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s0 [0, 65535] { R2907 += 1, R2908 += 1 };
  s0 -> s1 [0, 65535] { R2908 += 1, R99 += 1, R100 += 1 };
  s0 -> s2 [0, 65535] { R2908 += 1, R98 += 1, R99 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2908 += 1, R99 += 1, R100 += 1 };
  s1 -> s4 [0, 65535] { R2908 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2908 += 1, R99 += 1, R100 += 1 };
  s2 -> s2 [0, 65535] { R2908 += 1, R98 += 1, R99 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2908 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s0 [0, 65535] { R2909 += 1, R2910 += 1 };
  s0 -> s1 [0, 65535] { R2910 += 1 };
  s1 -> s1 [0, 65535] { R2910 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R2912 += 1, R105 += 1, R106 += 1 };
  s0 -> s0 [0, 65535] { R2911 += 1, R2912 += 1 };
  s0 -> s2 [0, 65535] { R2912 += 1, R104 += 1, R105 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2912 += 1, R105 += 1, R106 += 1 };
  s1 -> s4 [0, 65535] { R2912 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2912 += 1, R105 += 1, R106 += 1 };
  s2 -> s2 [0, 65535] { R2912 += 1, R104 += 1, R105 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2912 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R2914 += 1 };
  s0 -> s0 [0, 65535] { R2913 += 1, R2914 += 1 };
  s1 -> s1 [0, 65535] { R2914 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 72] { R2916 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R2915 += 1, R2916 += 1 };
  s0 -> s2 [0, 65535] { R2916 += 1, R110 += 1, R111 += 1 };
  s0 -> s3 [73, 73] { R2916 += 1, R111 += 1, R112 += 1 };
  s0 -> s4 [73, 73] { R2916 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [74, 65535] { R2916 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 72] { R2916 += 1, R111 += 1, R112 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2916 += 1 };
  s1 -> s3 [73, 73] { R2916 += 1, R111 += 1, R112 += 1 };
  s1 -> s4 [73, 73] { R2916 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [74, 65535] { R2916 += 1, R111 += 1, R112 += 1 };
  s2 -> s1 [0, 72] { R2916 += 1, R111 += 1, R112 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2916 += 1, R110 += 1, R111 += 1 };
  s2 -> s3 [73, 73] { R2916 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [73, 73] { R2916 += 1, R111 += 1, R112 += 1 };
  s2 -> s1 [74, 65535] { R2916 += 1, R111 += 1, R112 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2916 += 1, R111 += 1, R112 += 1 };
  s3 -> s6 [0, 65535] { R2916 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2916 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2916 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R2940 += 1, R32 += 1 };
  s0 -> s0 [0, 65535] { R2939 += 1, R2940 += 1 };
  s1 -> s1 [0, 65535] { R2940 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 64] { R2942 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R2941 += 1, R2942 += 1 };
  s0 -> s2 [65, 65] { R2942 += 1, R67 += 1 };
  s0 -> s3 [65, 65] { R2942 += 1, R67 += 1 };
  s0 -> s1 [66, 65535] { R2942 += 1, R67 += 1 };
  s1 -> s1 [0, 64] { R2942 += 1, R67 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2942 += 1, R67 += 1 };
  s1 -> s3 [65, 65] { R2942 += 1, R67 += 1 };
  s1 -> s1 [66, 65535] { R2942 += 1, R67 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2942 += 1, R67 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 64] { R2944 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R2943 += 1, R2944 += 1 };
  s0 -> s2 [65, 65] { R2944 += 1, R69 += 1 };
  s0 -> s3 [65, 65] { R2944 += 1, R69 += 1 };
  s0 -> s1 [66, 65535] { R2944 += 1, R69 += 1 };
  s1 -> s1 [0, 64] { R2944 += 1, R69 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2944 += 1, R69 += 1 };
  s1 -> s3 [65, 65] { R2944 += 1, R69 += 1 };
  s1 -> s1 [66, 65535] { R2944 += 1, R69 += 1 };
  s2 -> s2 [0, 65535] { R2944 += 1, R69 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 64] { R2946 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R2945 += 1, R2946 += 1 };
  s0 -> s2 [65, 65] { R2946 += 1, R71 += 1 };
  s0 -> s3 [65, 65] { R2946 += 1, R71 += 1 };
  s0 -> s1 [66, 65535] { R2946 += 1, R71 += 1 };
  s1 -> s1 [0, 64] { R2946 += 1, R71 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2946 += 1, R71 += 1 };
  s1 -> s3 [65, 65] { R2946 += 1, R71 += 1 };
  s1 -> s1 [66, 65535] { R2946 += 1, R71 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2946 += 1, R71 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 64] { R2948 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2947 += 1, R2948 += 1 };
  s0 -> s2 [65, 65] { R2948 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [65, 65] { R2948 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [66, 65535] { R2948 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 64] { R2948 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2948 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [65, 65] { R2948 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [66, 65535] { R2948 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R2948 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 64] { R2950 += 1 };
  s0 -> s0 [0, 65535] { R2949 += 1, R2950 += 1 };
  s0 -> s2 [65, 65] { R2950 += 1 };
  s0 -> s3 [65, 65] { R2950 += 1 };
  s0 -> s1 [66, 65535] { R2950 += 1 };
  s1 -> s1 [0, 64] { R2950 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2950 += 1 };
  s1 -> s3 [65, 65] { R2950 += 1 };
  s1 -> s1 [66, 65535] { R2950 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2950 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 64] { R2952 += 1, R79 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R2951 += 1, R2952 += 1 };
  s0 -> s2 [65, 65] { R2952 += 1, R79 += 1, R80 += 1 };
  s0 -> s3 [65, 65] { R2952 += 1, R79 += 1, R80 += 1 };
  s0 -> s1 [66, 65535] { R2952 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 64] { R2952 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2952 += 1, R79 += 1, R80 += 1 };
  s1 -> s3 [65, 65] { R2952 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [66, 65535] { R2952 += 1, R79 += 1, R80 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2952 += 1, R79 += 1, R80 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 64] { R2954 += 1, R85 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R2953 += 1, R2954 += 1 };
  s0 -> s2 [65, 65] { R2954 += 1, R85 += 1, R86 += 1 };
  s0 -> s3 [65, 65] { R2954 += 1, R85 += 1, R86 += 1 };
  s0 -> s1 [66, 65535] { R2954 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 64] { R2954 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2954 += 1, R85 += 1, R86 += 1 };
  s1 -> s3 [65, 65] { R2954 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [66, 65535] { R2954 += 1, R85 += 1, R86 += 1 };
  s2 -> s2 [0, 65535] { R2954 += 1, R85 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 64] { R2956 += 1, R89 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R2955 += 1, R2956 += 1 };
  s0 -> s2 [65, 65] { R2956 += 1, R89 += 1, R90 += 1 };
  s0 -> s3 [65, 65] { R2956 += 1, R89 += 1, R90 += 1 };
  s0 -> s1 [66, 65535] { R2956 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 64] { R2956 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2956 += 1, R89 += 1, R90 += 1 };
  s1 -> s3 [65, 65] { R2956 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [66, 65535] { R2956 += 1, R89 += 1, R90 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2956 += 1, R89 += 1, R90 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R2958 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R2957 += 1, R2958 += 1 };
  s0 -> s2 [65, 65] { R2958 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [65, 65] { R2958 += 1, R95 += 1, R96 += 1 };
  s0 -> s1 [66, 65535] { R2958 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 64] { R2958 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2958 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [65, 65] { R2958 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [66, 65535] { R2958 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2958 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R2960 += 1 };
  s0 -> s0 [0, 65535] { R2959 += 1, R2960 += 1 };
  s0 -> s2 [65, 65] { R2960 += 1 };
  s0 -> s3 [65, 65] { R2960 += 1 };
  s0 -> s1 [66, 65535] { R2960 += 1 };
  s1 -> s1 [0, 64] { R2960 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2960 += 1 };
  s1 -> s3 [65, 65] { R2960 += 1 };
  s1 -> s1 [66, 65535] { R2960 += 1 };
  s2 -> s2 [0, 65535] { R2960 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R2962 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R2961 += 1, R2962 += 1 };
  s0 -> s2 [65, 65] { R2962 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [65, 65] { R2962 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [66, 65535] { R2962 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 64] { R2962 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2962 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [65, 65] { R2962 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [66, 65535] { R2962 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2962 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R2964 += 1 };
  s0 -> s0 [0, 65535] { R2963 += 1, R2964 += 1 };
  s0 -> s2 [65, 65] { R2964 += 1 };
  s0 -> s3 [65, 65] { R2964 += 1 };
  s0 -> s1 [66, 65535] { R2964 += 1 };
  s1 -> s1 [0, 64] { R2964 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2964 += 1 };
  s1 -> s3 [65, 65] { R2964 += 1 };
  s1 -> s1 [66, 65535] { R2964 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2964 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R2966 += 1, R107 += 1, R108 += 1 };
  s0 -> s0 [0, 65535] { R2965 += 1, R2966 += 1 };
  s0 -> s2 [65, 65] { R2966 += 1, R107 += 1, R108 += 1 };
  s0 -> s3 [65, 65] { R2966 += 1, R107 += 1, R108 += 1 };
  s0 -> s1 [66, 65535] { R2966 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 64] { R2966 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2966 += 1, R107 += 1, R108 += 1 };
  s1 -> s3 [65, 65] { R2966 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [66, 65535] { R2966 += 1, R107 += 1, R108 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2966 += 1, R107 += 1, R108 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 43] { R2968 += 1 };
  s0 -> s0 [0, 65535] { R2967 += 1, R2968 += 1 };
  s0 -> s1 [45, 45] { R2968 += 1 };
  s0 -> s2 [46, 46] { R2968 += 1 };
  s0 -> s1 [48, 62] { R2968 += 1 };
  s0 -> s3 [65, 65] { R2968 += 1 };
  s0 -> s1 [66, 65535] { R2968 += 1 };
  s1 -> s1 [0, 43] { R2968 += 1 };
  s1 -> s1 [45, 45] { R2968 += 1 };
  s1 -> s2 [46, 46] { R2968 += 1 };
  s1 -> s1 [48, 62] { R2968 += 1 };
  s1 -> s3 [65, 65] { R2968 += 1 };
  s1 -> s1 [66, 65535] { R2968 += 1 };
  s2 -> s1 [0, 43] { R2968 += 1 };
  s2 -> s1 [45, 45] { R2968 += 1 };
  s2 -> s2 [46, 46] { R2968 += 1 };
  s2 -> s1 [48, 62] { R2968 += 1 };
  s2 -> s3 [65, 65] { R2968 += 1 };
  s2 -> s1 [66, 114] { R2968 += 1 };
  s2 -> s8 [115, 115] { R2968 += 1 };
  s2 -> s1 [116, 65535] { R2968 += 1 };
  s3 -> s3 [0, 43] { R2968 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R2968 += 1 };
  s3 -> s4 [46, 46] { R2968 += 1 };
  s3 -> s3 [48, 62] { R2968 += 1 };
  s3 -> s3 [65, 65535] { R2968 += 1 };
  s4 -> s3 [0, 43] { R2968 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R2968 += 1 };
  s4 -> s4 [46, 46] { R2968 += 1 };
  s4 -> s3 [48, 62] { R2968 += 1 };
  s4 -> s3 [65, 114] { R2968 += 1 };
  s4 -> s5 [115, 115] { R2968 += 1 };
  s4 -> s3 [116, 65535] { R2968 += 1 };
  s5 -> s3 [0, 43] { R2968 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R2968 += 1 };
  s5 -> s4 [46, 46] { R2968 += 1 };
  s5 -> s3 [48, 62] { R2968 += 1 };
  s5 -> s3 [65, 110] { R2968 += 1 };
  s5 -> s6 [111, 111] { R2968 += 1 };
  s5 -> s3 [112, 65535] { R2968 += 1 };
  s6 -> s3 [0, 43] { R2968 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R2968 += 1 };
  s6 -> s4 [46, 46] { R2968 += 1 };
  s6 -> s3 [48, 62] { R2968 += 1 };
  s6 -> s3 [65, 98] { R2968 += 1 };
  s6 -> s7 [99, 99] { R2968 += 1 };
  s6 -> s3 [100, 65535] { R2968 += 1 };
  s7 -> s3 [0, 43] { R2968 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R2968 += 1 };
  s7 -> s4 [46, 46] { R2968 += 1 };
  s7 -> s3 [48, 62] { R2968 += 1 };
  s7 -> s3 [65, 106] { R2968 += 1 };
  s7 -> s3 [108, 65535] { R2968 += 1 };
  s8 -> s1 [0, 43] { R2968 += 1 };
  s8 -> s1 [45, 45] { R2968 += 1 };
  s8 -> s2 [46, 46] { R2968 += 1 };
  s8 -> s1 [48, 62] { R2968 += 1 };
  s8 -> s3 [65, 65] { R2968 += 1 };
  s8 -> s1 [66, 110] { R2968 += 1 };
  s8 -> s9 [111, 111] { R2968 += 1 };
  s8 -> s1 [112, 65535] { R2968 += 1 };
  s9 -> s1 [0, 43] { R2968 += 1 };
  s9 -> s1 [45, 45] { R2968 += 1 };
  s9 -> s2 [46, 46] { R2968 += 1 };
  s9 -> s1 [48, 62] { R2968 += 1 };
  s9 -> s3 [65, 65] { R2968 += 1 };
  s9 -> s1 [66, 98] { R2968 += 1 };
  s9 -> s10 [99, 99] { R2968 += 1 };
  s9 -> s1 [100, 65535] { R2968 += 1 };
  s10 -> s1 [0, 43] { R2968 += 1 };
  s10 -> s1 [45, 45] { R2968 += 1 };
  s10 -> s2 [46, 46] { R2968 += 1 };
  s10 -> s1 [48, 62] { R2968 += 1 };
  s10 -> s3 [65, 65] { R2968 += 1 };
  s10 -> s1 [66, 106] { R2968 += 1 };
  s10 -> s1 [108, 65535] { R2968 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_32 {
  init s0;
  s0 -> s0 [0, 65535] { R2969 += 1, R2970 += 1 };
  s0 -> s1 [0, 65535] { R2970 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R2970 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 57] { R2972 += 1 };
  s0 -> s0 [0, 65535] { R2971 += 1, R2972 += 1 };
  s0 -> s2 [0, 65535] { R2972 += 1, R16 += 1 };
  s0 -> s3 [58, 58] { R2972 += 1 };
  s0 -> s1 [59, 65535] { R2972 += 1 };
  s1 -> s1 [0, 57] { R2972 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R2972 += 1 };
  s1 -> s1 [59, 65535] { R2972 += 1 };
  s2 -> s1 [0, 57] { R2972 += 1 };
  s2 -> s2 [0, 65535] { R2972 += 1, R16 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [58, 58] { R2972 += 1 };
  s2 -> s1 [59, 65535] { R2972 += 1 };
  s3 -> s3 [0, 65535] { R2972 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R2974 += 1 };
  s0 -> s2 [0, 65535] { R2974 += 1, R17 += 1 };
  s0 -> s0 [0, 65535] { R2973 += 1, R2974 += 1 };
  s0 -> s3 [65, 65] { R2974 += 1 };
  s0 -> s1 [66, 65535] { R2974 += 1 };
  s1 -> s1 [0, 64] { R2974 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R2974 += 1 };
  s1 -> s1 [66, 65535] { R2974 += 1 };
  s2 -> s1 [0, 64] { R2974 += 1 };
  s2 -> s2 [0, 65535] { R2974 += 1, R17 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [65, 65] { R2974 += 1 };
  s2 -> s1 [66, 65535] { R2974 += 1 };
  s3 -> s3 [0, 65535] { R2974 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 90] { R2976 += 1, R34 += 1 };
  s0 -> s2 [0, 65535] { R2976 += 1, R33 += 1, R34 += 1 };
  s0 -> s0 [0, 65535] { R2975 += 1, R2976 += 1 };
  s0 -> s3 [91, 91] { R2976 += 1, R34 += 1 };
  s0 -> s1 [92, 65535] { R2976 += 1, R34 += 1 };
  s1 -> s5 [0, 65535] { R2976 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2976 += 1, R34 += 1 };
  s2 -> s1 [0, 90] { R2976 += 1, R34 += 1 };
  s2 -> s2 [0, 65535] { R2976 += 1, R33 += 1, R34 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [91, 91] { R2976 += 1, R34 += 1 };
  s2 -> s1 [92, 65535] { R2976 += 1, R34 += 1 };
  s3 -> s1 [0, 65535] { R2976 += 1, R34 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2976 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 65535] { R2978 += 1, R35 += 1, R36 += 1 };
  s0 -> s2 [0, 65535] { R2978 += 1, R36 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R2977 += 1, R2978 += 1 };
  s1 -> s1 [0, 65535] { R2978 += 1, R35 += 1, R36 += 1 };
  s1 -> s2 [0, 65535] { R2978 += 1, R36 += 1, R6 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2978 += 1, R36 += 1, R6 += 1 };
  s2 -> s3 [0, 65535] { R2978 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2978 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R2980 += 1, R2866 += 1 };
  s0 -> s0 [0, 65535] { R2979 += 1, R2980 += 1 };
  s0 -> s2 [0, 65535] { R2980 += 1, R2865 += 1, R2866 += 1 };
  s0 -> s1 [66, 65535] { R2980 += 1, R2866 += 1 };
  s1 -> s1 [0, 64] { R2980 += 1, R2866 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2980 += 1 };
  s1 -> s1 [66, 65535] { R2980 += 1, R2866 += 1 };
  s2 -> s1 [0, 64] { R2980 += 1, R2866 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2980 += 1, R2865 += 1, R2866 += 1 };
  s2 -> s1 [66, 65535] { R2980 += 1, R2866 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 65535] { R2982 += 1, R2867 += 1, R2868 += 1 };
  s0 -> s0 [0, 65535] { R2981 += 1, R2982 += 1 };
  s0 -> s2 [0, 65535] { R2982 += 1, R2868 += 1, R29 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2982 += 1, R2867 += 1, R2868 += 1 };
  s1 -> s2 [0, 65535] { R2982 += 1, R2868 += 1, R29 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2982 += 1, R2868 += 1, R29 += 1 };
  s2 -> s4 [0, 65535] { R2982 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2982 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 65] { R2984 += 1, R2870 += 1 };
  s0 -> s0 [0, 65535] { R2983 += 1, R2984 += 1 };
  s0 -> s2 [0, 65535] { R2984 += 1, R2869 += 1, R2870 += 1 };
  s0 -> s1 [81, 65535] { R2984 += 1, R2870 += 1 };
  s1 -> s1 [0, 65] { R2984 += 1, R2870 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2984 += 1 };
  s1 -> s1 [81, 65535] { R2984 += 1, R2870 += 1 };
  s2 -> s1 [0, 65] { R2984 += 1, R2870 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2984 += 1, R2869 += 1, R2870 += 1 };
  s2 -> s1 [81, 65535] { R2984 += 1, R2870 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 65535] { R2986 += 1, R2871 += 1, R2872 += 1 };
  s0 -> s0 [0, 65535] { R2985 += 1, R2986 += 1 };
  s0 -> s2 [0, 65535] { R2986 += 1, R2872 += 1, R494 += 1 };
  s1 -> s1 [0, 65535] { R2986 += 1, R2871 += 1, R2872 += 1 };
  s1 -> s2 [0, 65535] { R2986 += 1, R2872 += 1, R494 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2986 += 1, R2872 += 1, R494 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2986 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2986 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_41 {
  init s0;
  s0 -> s1 [0, 80] { R2988 += 1, R2874 += 1 };
  s0 -> s2 [0, 65535] { R2988 += 1, R2873 += 1, R2874 += 1 };
  s0 -> s0 [0, 65535] { R2987 += 1, R2988 += 1 };
  s0 -> s3 [0, 65535] { R2988 += 1, R2874 += 1, R496 += 1 };
  s0 -> s1 [82, 65535] { R2988 += 1, R2874 += 1 };
  s1 -> s1 [0, 80] { R2988 += 1, R2874 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2988 += 1 };
  s1 -> s1 [82, 65535] { R2988 += 1, R2874 += 1 };
  s2 -> s1 [0, 80] { R2988 += 1, R2874 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2988 += 1, R2873 += 1, R2874 += 1 };
  s2 -> s3 [0, 65535] { R2988 += 1, R2874 += 1, R496 += 1 };
  s2 -> s1 [82, 65535] { R2988 += 1, R2874 += 1 };
  s3 -> s1 [0, 80] { R2988 += 1, R2874 += 1 };
  s3 -> s4 [0, 65535] { R2988 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2988 += 1, R2874 += 1, R496 += 1 };
  s3 -> s1 [82, 65535] { R2988 += 1, R2874 += 1 };
  s4 -> s4 [0, 65535] { R2988 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_42 {
  init s0;
  s0 -> s1 [0, 80] { R2990 += 1, R2876 += 1, R500 += 1 };
  s0 -> s2 [0, 65535] { R2990 += 1, R2875 += 1, R2876 += 1 };
  s0 -> s3 [0, 65535] { R2990 += 1, R2876 += 1, R499 += 1, R500 += 1 };
  s0 -> s0 [0, 65535] { R2989 += 1, R2990 += 1 };
  s0 -> s1 [82, 65535] { R2990 += 1, R2876 += 1, R500 += 1 };
  s1 -> s1 [0, 80] { R2990 += 1, R2876 += 1, R500 += 1 };
  s1 -> s4 [0, 65535] { R2990 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2990 += 1, R2876 += 1 };
  s1 -> s1 [82, 65535] { R2990 += 1, R2876 += 1, R500 += 1 };
  s2 -> s1 [0, 80] { R2990 += 1, R2876 += 1, R500 += 1 };
  s2 -> s2 [0, 65535] { R2990 += 1, R2875 += 1, R2876 += 1 };
  s2 -> s3 [0, 65535] { R2990 += 1, R2876 += 1, R499 += 1, R500 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [82, 65535] { R2990 += 1, R2876 += 1, R500 += 1 };
  s3 -> s1 [0, 80] { R2990 += 1, R2876 += 1, R500 += 1 };
  s3 -> s4 [0, 65535] { R2990 += 1 };
  s3 -> s3 [0, 65535] { R2990 += 1, R2876 += 1, R499 += 1, R500 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [82, 65535] { R2990 += 1, R2876 += 1, R500 += 1 };
  s4 -> s4 [0, 65535] { R2990 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_43 {
  init s0;
  s0 -> s1 [0, 65535] { R2992 += 1, R2877 += 1, R2878 += 1 };
  s0 -> s2 [0, 65535] { R2992 += 1, R2878 += 1, R505 += 1, R506 += 1 };
  s0 -> s0 [0, 65535] { R2991 += 1, R2992 += 1 };
  s0 -> s3 [0, 65535] { R2992 += 1, R2878 += 1, R504 += 1, R505 += 1 };
  s1 -> s1 [0, 65535] { R2992 += 1, R2877 += 1, R2878 += 1 };
  s1 -> s2 [0, 65535] { R2992 += 1, R2878 += 1, R505 += 1, R506 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R2992 += 1, R2878 += 1, R504 += 1, R505 += 1 };
  s2 -> s4 [0, 65535] { R2992 += 1 };
  s2 -> s6 [0, 65535] { R2992 += 1, R2878 += 1 };
  s2 -> s2 [0, 65535] { R2992 += 1, R2878 += 1, R505 += 1, R506 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R2992 += 1 };
  s3 -> s2 [0, 65535] { R2992 += 1, R2878 += 1, R505 += 1, R506 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2992 += 1, R2878 += 1, R504 += 1, R505 += 1 };
  s4 -> s4 [0, 65535] { R2992 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2992 += 1 };
  s6 -> s6 [0, 65535] { R2992 += 1, R2878 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_44 {
  init s0;
  s0 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s0 -> s0 [0, 65535] { R2993 += 1, R2994 += 1 };
  s0 -> s2 [0, 65535] { R2994 += 1, R2880 += 1, R509 += 1, R510 += 1 };
  s0 -> s3 [0, 65535] { R2994 += 1, R2879 += 1, R2880 += 1 };
  s0 -> s1 [91, 107] { R2994 += 1, R2880 += 1, R510 += 1 };
  s0 -> s4 [108, 108] { R2994 += 1, R2880 += 1, R510 += 1 };
  s0 -> s1 [109, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s1 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s1 -> s1 [0, 65535] { R2994 += 1, R2880 += 1 };
  s1 -> s5 [0, 65535] { R2994 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [91, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s2 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s2 -> s5 [0, 65535] { R2994 += 1 };
  s2 -> s2 [0, 65535] { R2994 += 1, R2880 += 1, R509 += 1, R510 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [91, 107] { R2994 += 1, R2880 += 1, R510 += 1 };
  s2 -> s4 [108, 108] { R2994 += 1, R2880 += 1, R510 += 1 };
  s2 -> s1 [109, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s3 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s3 -> s2 [0, 65535] { R2994 += 1, R2880 += 1, R509 += 1, R510 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2994 += 1, R2879 += 1, R2880 += 1 };
  s3 -> s1 [91, 107] { R2994 += 1, R2880 += 1, R510 += 1 };
  s3 -> s4 [108, 108] { R2994 += 1, R2880 += 1, R510 += 1 };
  s3 -> s1 [109, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s4 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s4 -> s5 [0, 65535] { R2994 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2994 += 1, R2880 += 1 };
  s4 -> s1 [91, 110] { R2994 += 1, R2880 += 1, R510 += 1 };
  s4 -> s7 [111, 111] { R2994 += 1, R2880 += 1, R510 += 1 };
  s4 -> s1 [112, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s5 -> s5 [0, 65535] { R2994 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s7 -> s5 [0, 65535] { R2994 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2994 += 1, R2880 += 1 };
  s7 -> s1 [91, 98] { R2994 += 1, R2880 += 1, R510 += 1 };
  s7 -> s8 [99, 99] { R2994 += 1, R2880 += 1, R510 += 1 };
  s7 -> s1 [100, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s8 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s8 -> s5 [0, 65535] { R2994 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2994 += 1, R2880 += 1 };
  s8 -> s1 [91, 96] { R2994 += 1, R2880 += 1, R510 += 1 };
  s8 -> s9 [97, 97] { R2994 += 1, R2880 += 1, R510 += 1 };
  s8 -> s1 [98, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s9 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s9 -> s5 [0, 65535] { R2994 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R2994 += 1, R2880 += 1 };
  s9 -> s1 [91, 107] { R2994 += 1, R2880 += 1, R510 += 1 };
  s9 -> s10 [108, 108] { R2994 += 1, R2880 += 1, R510 += 1 };
  s9 -> s1 [109, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s10 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s10 -> s10 [0, 65535] { R2994 += 1, R2880 += 1 };
  s10 -> s5 [0, 65535] { R2994 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s1 [91, 103] { R2994 += 1, R2880 += 1, R510 += 1 };
  s10 -> s11 [104, 104] { R2994 += 1, R2880 += 1, R510 += 1 };
  s10 -> s1 [105, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s11 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s11 -> s5 [0, 65535] { R2994 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s11 [0, 65535] { R2994 += 1, R2880 += 1 };
  s11 -> s1 [91, 110] { R2994 += 1, R2880 += 1, R510 += 1 };
  s11 -> s12 [111, 111] { R2994 += 1, R2880 += 1, R510 += 1 };
  s11 -> s1 [112, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s12 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s12 -> s5 [0, 65535] { R2994 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s12 [0, 65535] { R2994 += 1, R2880 += 1 };
  s12 -> s1 [91, 114] { R2994 += 1, R2880 += 1, R510 += 1 };
  s12 -> s13 [115, 115] { R2994 += 1, R2880 += 1, R510 += 1 };
  s12 -> s1 [116, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s13 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s13 -> s13 [0, 65535] { R2994 += 1, R2880 += 1 };
  s13 -> s5 [0, 65535] { R2994 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s1 [91, 115] { R2994 += 1, R2880 += 1, R510 += 1 };
  s13 -> s14 [116, 116] { R2994 += 1, R2880 += 1, R510 += 1 };
  s13 -> s1 [117, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  s14 -> s1 [0, 81] { R2994 += 1, R2880 += 1, R510 += 1 };
  s14 -> s1 [91, 65535] { R2994 += 1, R2880 += 1, R510 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_45 {
  init s0;
  s0 -> s1 [0, 65535] { R2996 += 1, R2882 += 1, R515 += 1, R516 += 1 };
  s0 -> s0 [0, 65535] { R2995 += 1, R2996 += 1 };
  s0 -> s2 [0, 65535] { R2996 += 1, R2882 += 1, R514 += 1, R515 += 1 };
  s0 -> s3 [0, 65535] { R2996 += 1, R2881 += 1, R2882 += 1 };
  s1 -> s6 [0, 65535] { R2996 += 1, R2882 += 1 };
  s1 -> s1 [0, 65535] { R2996 += 1, R2882 += 1, R515 += 1, R516 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2996 += 1 };
  s2 -> s1 [0, 65535] { R2996 += 1, R2882 += 1, R515 += 1, R516 += 1 };
  s2 -> s2 [0, 65535] { R2996 += 1, R2882 += 1, R514 += 1, R515 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2996 += 1 };
  s3 -> s1 [0, 65535] { R2996 += 1, R2882 += 1, R515 += 1, R516 += 1 };
  s3 -> s2 [0, 65535] { R2996 += 1, R2882 += 1, R514 += 1, R515 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2996 += 1, R2881 += 1, R2882 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2996 += 1 };
  s6 -> s6 [0, 65535] { R2996 += 1, R2882 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2996 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_46 {
  init s0;
  s0 -> s0 [0, 65535] { R2997 += 1, R2998 += 1 };
  s0 -> s1 [0, 65535] { R2998 += 1, R2883 += 1, R2884 += 1 };
  s0 -> s2 [0, 65535] { R2998 += 1, R2884 += 1 };
  s1 -> s1 [0, 65535] { R2998 += 1, R2883 += 1, R2884 += 1 };
  s1 -> s2 [0, 65535] { R2998 += 1, R2884 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2998 += 1 };
  s2 -> s2 [0, 65535] { R2998 += 1, R2884 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2998 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_47 {
  init s0;
  s0 -> s1 [0, 65535] { R3000 += 1, R2885 += 1, R2886 += 1 };
  s0 -> s0 [0, 65535] { R2999 += 1, R3000 += 1 };
  s0 -> s2 [0, 65535] { R3000 += 1, R2886 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3000 += 1, R2885 += 1, R2886 += 1 };
  s1 -> s2 [0, 65535] { R3000 += 1, R2886 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3000 += 1 };
  s2 -> s2 [0, 65535] { R3000 += 1, R2886 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3000 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_48 {
  init s0;
  s0 -> s1 [0, 65535] { R3002 += 1, R2887 += 1, R2888 += 1 };
  s0 -> s2 [0, 65535] { R3002 += 1, R2888 += 1 };
  s0 -> s0 [0, 65535] { R3001 += 1, R3002 += 1 };
  s1 -> s1 [0, 65535] { R3002 += 1, R2887 += 1, R2888 += 1 };
  s1 -> s2 [0, 65535] { R3002 += 1, R2888 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3002 += 1, R2888 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3002 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3002 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_49 {
  init s0;
  s0 -> s1 [0, 65535] { R3004 += 1, R2917 += 1, R2918 += 1 };
  s0 -> s0 [0, 65535] { R3003 += 1, R3004 += 1 };
  s0 -> s2 [0, 65535] { R3004 += 1, R2918 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R3004 += 1, R2917 += 1, R2918 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R3004 += 1, R2918 += 1, R30 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3004 += 1 };
  s2 -> s2 [0, 65535] { R3004 += 1, R2918 += 1, R30 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3004 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_50 {
  init s0;
  s0 -> s1 [0, 64] { R3006 += 1, R2920 += 1 };
  s0 -> s2 [0, 65535] { R3006 += 1, R2919 += 1, R2920 += 1 };
  s0 -> s0 [0, 65535] { R3005 += 1, R3006 += 1 };
  s0 -> s3 [65, 65] { R3006 += 1, R2920 += 1 };
  s0 -> s4 [65, 65] { R3006 += 1, R2920 += 1 };
  s0 -> s5 [81, 81] { R3006 += 1, R2920 += 1 };
  s0 -> s1 [82, 65535] { R3006 += 1, R2920 += 1 };
  s1 -> s1 [0, 64] { R3006 += 1, R2920 += 1 };
  s1 -> s3 [65, 65] { R3006 += 1, R2920 += 1 };
  s1 -> s4 [65, 65] { R3006 += 1, R2920 += 1 };
  s1 -> s5 [81, 81] { R3006 += 1, R2920 += 1 };
  s1 -> s1 [82, 65535] { R3006 += 1, R2920 += 1 };
  s2 -> s1 [0, 64] { R3006 += 1, R2920 += 1 };
  s2 -> s2 [0, 65535] { R3006 += 1, R2919 += 1, R2920 += 1 };
  s2 -> s3 [65, 65] { R3006 += 1, R2920 += 1 };
  s2 -> s4 [65, 65] { R3006 += 1, R2920 += 1 };
  s2 -> s5 [81, 81] { R3006 += 1, R2920 += 1 };
  s2 -> s1 [82, 65535] { R3006 += 1, R2920 += 1 };
  s4 -> s4 [0, 65] { R3006 += 1, R2920 += 1 };
  s4 -> s8 [81, 81] { R3006 += 1, R2920 += 1 };
  s4 -> s4 [82, 65535] { R3006 += 1, R2920 += 1 };
  s5 -> s5 [0, 64] { R3006 += 1, R2920 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3006 += 1 };
  s5 -> s7 [65, 65] { R3006 += 1, R2920 += 1 };
  s5 -> s8 [65, 65] { R3006 += 1, R2920 += 1 };
  s5 -> s5 [81, 65535] { R3006 += 1, R2920 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3006 += 1 };
  s8 -> s8 [0, 65] { R3006 += 1, R2920 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3006 += 1 };
  s8 -> s8 [81, 65535] { R3006 += 1, R2920 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_51 {
  init s0;
  s0 -> s1 [0, 64] { R3008 += 1, R2922 += 1, R493 += 1 };
  s0 -> s2 [0, 65535] { R3008 += 1, R2921 += 1, R2922 += 1 };
  s0 -> s0 [0, 65535] { R3007 += 1, R3008 += 1 };
  s0 -> s3 [65, 65] { R3008 += 1, R2922 += 1, R493 += 1 };
  s0 -> s4 [65, 65] { R3008 += 1, R2922 += 1, R493 += 1 };
  s0 -> s1 [66, 65535] { R3008 += 1, R2922 += 1, R493 += 1 };
  s1 -> s1 [0, 64] { R3008 += 1, R2922 += 1, R493 += 1 };
  s1 -> s1 [0, 65535] { R3008 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R3008 += 1, R2922 += 1, R493 += 1 };
  s1 -> s4 [65, 65] { R3008 += 1, R2922 += 1, R493 += 1 };
  s1 -> s1 [66, 65535] { R3008 += 1, R2922 += 1, R493 += 1 };
  s2 -> s1 [0, 64] { R3008 += 1, R2922 += 1, R493 += 1 };
  s2 -> s2 [0, 65535] { R3008 += 1, R2921 += 1, R2922 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R3008 += 1, R2922 += 1, R493 += 1 };
  s2 -> s4 [65, 65] { R3008 += 1, R2922 += 1, R493 += 1 };
  s2 -> s1 [66, 65535] { R3008 += 1, R2922 += 1, R493 += 1 };
  s3 -> s3 [0, 65535] { R3008 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3008 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3008 += 1, R2922 += 1, R493 += 1 };
  s5 -> s5 [0, 65535] { R3008 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_52 {
  init s0;
  s0 -> s1 [0, 64] { R3010 += 1, R2924 += 1, R495 += 1 };
  s0 -> s2 [0, 65535] { R3010 += 1, R2923 += 1, R2924 += 1 };
  s0 -> s0 [0, 65535] { R3009 += 1, R3010 += 1 };
  s0 -> s3 [65, 65] { R3010 += 1, R2924 += 1, R495 += 1 };
  s0 -> s4 [65, 65] { R3010 += 1, R2924 += 1, R495 += 1 };
  s0 -> s1 [66, 65535] { R3010 += 1, R2924 += 1, R495 += 1 };
  s1 -> s1 [0, 64] { R3010 += 1, R2924 += 1, R495 += 1 };
  s1 -> s1 [0, 65535] { R3010 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R3010 += 1, R2924 += 1, R495 += 1 };
  s1 -> s4 [65, 65] { R3010 += 1, R2924 += 1, R495 += 1 };
  s1 -> s1 [66, 65535] { R3010 += 1, R2924 += 1, R495 += 1 };
  s2 -> s1 [0, 64] { R3010 += 1, R2924 += 1, R495 += 1 };
  s2 -> s2 [0, 65535] { R3010 += 1, R2923 += 1, R2924 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R3010 += 1, R2924 += 1, R495 += 1 };
  s2 -> s4 [65, 65] { R3010 += 1, R2924 += 1, R495 += 1 };
  s2 -> s1 [66, 65535] { R3010 += 1, R2924 += 1, R495 += 1 };
  s3 -> s3 [0, 65535] { R3010 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3010 += 1 };
  s4 -> s4 [0, 65535] { R3010 += 1, R2924 += 1, R495 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3010 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_53 {
  init s0;
  s0 -> s1 [0, 64] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s0 -> s2 [0, 65535] { R3012 += 1, R2925 += 1, R2926 += 1 };
  s0 -> s0 [0, 65535] { R3011 += 1, R3012 += 1 };
  s0 -> s3 [65, 65] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s0 -> s4 [65, 65] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s0 -> s1 [66, 65535] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s1 -> s1 [0, 64] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s1 -> s1 [0, 65535] { R3012 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s1 -> s4 [65, 65] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s1 -> s1 [66, 65535] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s2 -> s1 [0, 64] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3012 += 1, R2925 += 1, R2926 += 1 };
  s2 -> s3 [65, 65] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s2 -> s4 [65, 65] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s2 -> s1 [66, 65535] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3012 += 1 };
  s4 -> s5 [0, 65535] { R3012 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3012 += 1, R2926 += 1, R497 += 1, R498 += 1 };
  s5 -> s5 [0, 65535] { R3012 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_54 {
  init s0;
  s0 -> s1 [0, 64] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s0 -> s2 [0, 65535] { R3014 += 1, R2927 += 1, R2928 += 1 };
  s0 -> s0 [0, 65535] { R3013 += 1, R3014 += 1 };
  s0 -> s3 [65, 65] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s0 -> s4 [65, 65] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s0 -> s1 [66, 65535] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s1 -> s1 [0, 64] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3014 += 1 };
  s1 -> s3 [65, 65] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s1 -> s4 [65, 65] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s1 -> s1 [66, 65535] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s2 -> s1 [0, 64] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3014 += 1, R2927 += 1, R2928 += 1 };
  s2 -> s3 [65, 65] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s2 -> s4 [65, 65] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s2 -> s1 [66, 65535] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s3 -> s3 [0, 65535] { R3014 += 1, R2928 += 1, R501 += 1, R502 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3014 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3014 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3014 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_55 {
  init s0;
  s0 -> s1 [0, 64] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s0 -> s0 [0, 65535] { R3015 += 1, R3016 += 1 };
  s0 -> s2 [0, 65535] { R3016 += 1, R2929 += 1, R2930 += 1 };
  s0 -> s3 [65, 65] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s0 -> s4 [65, 65] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s0 -> s1 [66, 65535] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s1 -> s1 [0, 64] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3016 += 1 };
  s1 -> s3 [65, 65] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s1 -> s4 [65, 65] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s1 -> s1 [66, 65535] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s2 -> s1 [0, 64] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3016 += 1, R2929 += 1, R2930 += 1 };
  s2 -> s3 [65, 65] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s2 -> s4 [65, 65] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s2 -> s1 [66, 65535] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s3 -> s3 [0, 65535] { R3016 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3016 += 1, R2930 += 1, R507 += 1, R508 += 1 };
  s4 -> s6 [0, 65535] { R3016 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3016 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_56 {
  init s0;
  s0 -> s1 [0, 64] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s0 -> s2 [0, 65535] { R3018 += 1, R2931 += 1, R2932 += 1 };
  s0 -> s0 [0, 65535] { R3017 += 1, R3018 += 1 };
  s0 -> s3 [65, 65] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s0 -> s4 [65, 65] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s0 -> s1 [66, 65535] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s1 -> s1 [0, 64] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s1 -> s1 [0, 65535] { R3018 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s1 -> s4 [65, 65] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s1 -> s1 [66, 65535] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s2 -> s1 [0, 64] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s2 -> s2 [0, 65535] { R3018 += 1, R2931 += 1, R2932 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s2 -> s4 [65, 65] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s2 -> s1 [66, 65535] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s3 -> s6 [0, 65535] { R3018 += 1 };
  s3 -> s3 [0, 65535] { R3018 += 1, R2932 += 1, R511 += 1, R512 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3018 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3018 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_57 {
  init s0;
  s0 -> s1 [0, 64] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s0 -> s2 [0, 64] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s0 -> s3 [0, 65535] { R3020 += 1, R2933 += 1, R2934 += 1 };
  s0 -> s0 [0, 65535] { R3019 += 1, R3020 += 1 };
  s0 -> s4 [65, 65] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s0 -> s5 [65, 65] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s0 -> s6 [65, 65] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s0 -> s7 [65, 65] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s0 -> s1 [66, 65535] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s0 -> s2 [66, 65535] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s1 -> s1 [0, 64] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s1 -> s2 [0, 64] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s1 -> s4 [65, 65] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s1 -> s5 [65, 65] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s1 -> s6 [65, 65] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s1 -> s7 [65, 65] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s1 -> s1 [66, 65535] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s1 -> s2 [66, 65535] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s2 -> s2 [0, 64] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s2 -> s11 [0, 64] { R3020 += 1, R2934 += 1 };
  s2 -> s5 [65, 65] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s2 -> s12 [65, 65] { R3020 += 1, R2934 += 1 };
  s2 -> s8 [65, 65] { R3020 += 1, R2934 += 1 };
  s2 -> s7 [65, 65] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s2 -> s2 [66, 65535] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s2 -> s11 [66, 65535] { R3020 += 1, R2934 += 1 };
  s3 -> s1 [0, 64] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s3 -> s2 [0, 64] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s3 -> s3 [0, 65535] { R3020 += 1, R2933 += 1, R2934 += 1 };
  s3 -> s4 [65, 65] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s3 -> s5 [65, 65] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s3 -> s6 [65, 65] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s3 -> s7 [65, 65] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s3 -> s1 [66, 65535] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s3 -> s2 [66, 65535] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s4 -> s4 [0, 65535] { R3020 += 1, R2934 += 1, R2189 += 1, R2190 += 1 };
  s4 -> s7 [0, 65535] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s7 -> s8 [0, 65535] { R3020 += 1, R2934 += 1 };
  s7 -> s7 [0, 65535] { R3020 += 1, R2934 += 1, R2190 += 1, R2191 += 1 };
  s8 -> s8 [0, 65535] { R3020 += 1, R2934 += 1 };
  s8 -> s9 [0, 65535] { R3020 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R3020 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 64] { R3020 += 1, R2934 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R3020 += 1 };
  s11 -> s12 [65, 65] { R3020 += 1, R2934 += 1 };
  s11 -> s8 [65, 65] { R3020 += 1, R2934 += 1 };
  s11 -> s11 [66, 65535] { R3020 += 1, R2934 += 1 };
  s12 -> s12 [0, 65535] { R3020 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton uri_58 {
  init s0;
  s0 -> s1 [0, 64] { R3022 += 1, R2936 += 1 };
  s0 -> s2 [0, 65535] { R3022 += 1, R2935 += 1, R2936 += 1 };
  s0 -> s0 [0, 65535] { R3021 += 1, R3022 += 1 };
  s0 -> s3 [65, 65] { R3022 += 1, R2936 += 1 };
  s0 -> s4 [65, 65] { R3022 += 1, R2936 += 1 };
  s0 -> s1 [66, 65535] { R3022 += 1, R2936 += 1 };
  s1 -> s1 [0, 64] { R3022 += 1, R2936 += 1 };
  s1 -> s1 [0, 65535] { R3022 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3022 += 1, R2936 += 1 };
  s1 -> s4 [65, 65] { R3022 += 1, R2936 += 1 };
  s1 -> s1 [66, 65535] { R3022 += 1, R2936 += 1 };
  s2 -> s1 [0, 64] { R3022 += 1, R2936 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3022 += 1, R2935 += 1, R2936 += 1 };
  s2 -> s3 [65, 65] { R3022 += 1, R2936 += 1 };
  s2 -> s4 [65, 65] { R3022 += 1, R2936 += 1 };
  s2 -> s1 [66, 65535] { R3022 += 1, R2936 += 1 };
  s3 -> s3 [0, 65535] { R3022 += 1, R2936 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3022 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3022 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3022 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_59 {
  init s0;
  s0 -> s1 [0, 64] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s0 -> s2 [0, 64] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s0 -> s0 [0, 65535] { R3023 += 1, R3024 += 1 };
  s0 -> s3 [0, 65535] { R3024 += 1, R2937 += 1, R2938 += 1 };
  s0 -> s4 [65, 65] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s0 -> s5 [65, 65] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s0 -> s6 [65, 65] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s0 -> s7 [65, 65] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s0 -> s2 [66, 80] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s0 -> s1 [66, 65535] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s0 -> s8 [81, 81] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s0 -> s2 [82, 65535] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s1 -> s1 [0, 64] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s1 -> s2 [0, 64] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s1 -> s4 [65, 65] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s1 -> s5 [65, 65] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s1 -> s6 [65, 65] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s1 -> s7 [65, 65] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s1 -> s2 [66, 80] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s1 -> s1 [66, 65535] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s1 -> s8 [81, 81] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s1 -> s2 [82, 65535] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s2 -> s2 [0, 64] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s2 -> s6 [65, 65] { R3024 += 1, R2938 += 1 };
  s2 -> s7 [65, 65] { R3024 += 1, R2938 += 1 };
  s2 -> s2 [66, 80] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s2 -> s2 [66, 65535] { R3024 += 1, R2938 += 1 };
  s2 -> s8 [81, 81] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s2 -> s2 [82, 65535] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s3 -> s1 [0, 64] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s3 -> s2 [0, 64] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s3 -> s3 [0, 65535] { R3024 += 1, R2937 += 1, R2938 += 1 };
  s3 -> s4 [65, 65] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s3 -> s5 [65, 65] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s3 -> s6 [65, 65] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s3 -> s7 [65, 65] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s3 -> s2 [66, 80] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s3 -> s1 [66, 65535] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s3 -> s8 [81, 81] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s3 -> s2 [82, 65535] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s5 -> s6 [0, 80] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s5 -> s5 [0, 65535] { R3024 += 1, R2938 += 1, R2859 += 1, R2860 += 1 };
  s5 -> s11 [81, 81] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s5 -> s6 [82, 65535] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s6 -> s6 [0, 80] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s6 -> s6 [0, 65535] { R3024 += 1, R2938 += 1 };
  s6 -> s11 [81, 81] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s6 -> s6 [82, 65535] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s8 -> s9 [0, 64] { R3024 += 1, R2938 += 1 };
  s8 -> s8 [0, 64] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s8 -> s10 [65, 65] { R3024 += 1, R2938 += 1 };
  s8 -> s11 [65, 65] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s8 -> s12 [65, 65] { R3024 += 1, R2938 += 1 };
  s8 -> s13 [65, 65] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s8 -> s9 [66, 65535] { R3024 += 1, R2938 += 1 };
  s8 -> s8 [66, 65535] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s9 -> s9 [0, 64] { R3024 += 1, R2938 += 1 };
  s9 -> s9 [0, 65535] { R3024 += 1 };
  s9 -> s14 [0, 65535];
  s9 -> s10 [65, 65] { R3024 += 1, R2938 += 1 };
  s9 -> s12 [65, 65] { R3024 += 1, R2938 += 1 };
  s9 -> s9 [66, 65535] { R3024 += 1, R2938 += 1 };
  s10 -> s10 [0, 65535] { R3024 += 1 };
  s10 -> s14 [0, 65535];
  s11 -> s11 [0, 65535] { R3024 += 1, R2938 += 1, R2860 += 1, R2861 += 1 };
  s11 -> s12 [0, 65535] { R3024 += 1, R2938 += 1 };
  s12 -> s12 [0, 65535] { R3024 += 1, R2938 += 1 };
  s12 -> s14 [0, 65535];
  s12 -> s15 [0, 65535] { R3024 += 1 };
  s14 -> s14 [0, 65535];
  s15 -> s14 [0, 65535];
  s15 -> s15 [0, 65535] { R3024 += 1 };
  accepting s12, s9, s14, s15, s10;
};
};
synchronised {  // Automata constraining P89
automaton P89_0 {
  init s0;
  s0 -> s1 [121, 121];
  accepting s1;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining P61
automaton P61_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
constraint R4 = R2888 && R5 = R3024 && R33 = 0 && R34 = 1 && R35 = 0 && R36 = 1 && R68 + R67 = 0 && R2865 = 0 && R2866 = R2888 && R2867 = 0 && R2868 = R2888 && R2869 = 0 && R2870 = R2888 && R2871 = 0 && R2872 = R2888 && R2873 = 0 && R2874 = R2888 && R2875 = 0 && R2876 = R2888 && R2877 = 0 && R2878 = R2888 && R2879 = 0 && R2880 = R2888 && R2881 = 0 && R2882 = R2888 && R2883 = 0 && R2884 = R2888 && R2885 = 0 && R2886 = R2888 && R2887 = 0 && R2889 = 0 && R2890 = R3024 && R2891 = 0 && R2892 = R3024 && R2893 = 0 && R2894 = R3024 && R2895 = 0 && R2896 = R3024 && R2897 = 0 && R2898 = R3024 && R2899 = 0 && R2900 = R3024 && R2901 = 0 && R2902 = R3024 && R2903 = 0 && R2904 = R3024 && R2905 = 0 && R2906 = R3024 && R2907 = 0 && R2908 = R3024 && R2909 = 0 && R2910 = R3024 && R2911 = 0 && R2912 = R3024 && R2913 = 0 && R2914 = R3024 && R2915 = 0 && R2916 = R3024 && R2919 = 0 && R2920 = 0 && R2933 = 0 && R2934 = 0 && R2937 = 0 && R2938 = 0 && R2967 = 10 && R2968 = R3024 && R2969 = 10 && R2970 = R3024 && R2971 = 10 && R2972 = R3024 && R2973 = 10 && R2974 = R3024 && R2975 = 10 && R2976 = R3024 && R2977 = 10 && R2978 = R3024 && R2979 = 10 && R2980 = R3024 && R2981 = 10 && R2982 = R3024 && R2983 = 10 && R2984 = R3024 && R2985 = 10 && R2986 = R3024 && R2987 = 10 && R2988 = R3024 && R2989 = 10 && R2990 = R3024 && R2991 = 10 && R2992 = R3024 && R2993 = 10 && R2994 = R3024 && R2995 = 10 && R2996 = R3024 && R2997 = 10 && R2998 = R3024 && R2999 = 10 && R3000 = R3024 && R3001 = 10 && R3002 = R3024 && R3003 = 10 && R3004 = R3024 && R3005 = 10 && R3006 = R3024 && R3007 = 10 && R3008 = R3024 && R3009 = 10 && R3010 = R3024 && R3011 = 10 && R3012 = R3024 && R3013 = 10 && R3014 = R3024 && R3015 = 10 && R3016 = R3024 && R3017 = 10 && R3018 = R3024 && R3019 = 10 && R3020 = R3024 && R3021 = 10 && R3022 = R3024 && R3023 = 10 && R94 + R91 + R112 + R109 != 0 && R516 + R513 + R2864 + R2861 != 0 && R16 < 1 && R17 < 1 && R20 < 1 && R70 + R69 < 1 && R72 + R71 < 1 && -1*R494 + -1*R493 < 1 && R496 + R495 < 1 && 0 < R2888 && 9 < R3024 && (R494 + R493 != 0 || R506 + R503 = 0 || (R499 + R497 = 0 && R500 + R498 = 0)) && (R494 + R493 != 0 || R506 + R503 = 0 || (R504 + R501 = 0 && R505 + R502 = 0)) && (R494 + R493 != 0 || R506 + R503 = 0 || (R509 + R507 = 0 && R510 + R508 = 0)) && (R494 + R493 != 0 || R506 + R503 = 0 || (R514 + R511 = 0 && R515 + R512 = 0)) && (R499 + R497 != 0 || R494 + R493 + -1*R500 + -1*R498 = 0 || R494 + R493 < 1) && (R504 + R501 != 0 || R494 + R493 + -1*R505 + -1*R502 = 0 || R494 + R493 < 1) && (R509 + R507 != 0 || R494 + R493 + -1*R510 + -1*R508 = 0 || R494 + R493 < 1) && (R514 + R511 != 0 || R494 + R493 + -1*R515 + -1*R512 = 0 || R494 + R493 < 1) && (R30 = 0 || (R2917 = 0 && R2918 = 0)) && (R30 = 0 || (R2921 = 0 && R2922 = 0)) && (R30 = 0 || (R2923 = 0 && R2924 = 0)) && (R30 = 0 || (R2925 = 0 && R2926 = 0)) && (R30 = 0 || (R2927 = 0 && R2928 = 0)) && (R30 = 0 || (R2929 = 0 && R2930 = 0)) && (R30 = 0 || (R2931 = 0 && R2932 = 0)) && (R30 = 0 || (R2935 = 0 && R2936 = 0)) && (R32 = 0 || (R2939 = 0 && R2940 = 0)) && (R32 = 0 || (R2941 = 0 && R2942 = 0)) && (R32 = 0 || (R2943 = 0 && R2944 = 0)) && (R32 = 0 || (R2945 = 0 && R2946 = 0)) && (R32 = 0 || (R2947 = 0 && R2948 = 0)) && (R32 = 0 || (R2949 = 0 && R2950 = 0)) && (R32 = 0 || (R2951 = 0 && R2952 = 0)) && (R32 = 0 || (R2953 = 0 && R2954 = 0)) && (R32 = 0 || (R2955 = 0 && R2956 = 0)) && (R32 = 0 || (R2957 = 0 && R2958 = 0)) && (R32 = 0 || (R2959 = 0 && R2960 = 0)) && (R32 = 0 || (R2961 = 0 && R2962 = 0)) && (R32 = 0 || (R2963 = 0 && R2964 = 0)) && (R32 = 0 || (R2965 = 0 && R2966 = 0)) && (R78 + R75 = 0 || (R76 + R73 = 0 && R77 + R74 = 0)) && (R84 + R81 = 0 || (R82 + R79 = 0 && R83 + R80 = 0)) && (R84 + R81 = 0 || (R87 + R85 = 0 && R88 + R86 = 0)) && (R84 + R81 = 0 || (R92 + R89 = 0 && R93 + R90 = 0)) && (R100 + R97 = 0 || (R98 + R95 = 0 && R99 + R96 = 0)) && (R106 + R103 = 0 || (R104 + R101 = 0 && R105 + R102 = 0)) && (R106 + R103 = 0 || (R110 + R107 = 0 && R111 + R108 = 0)) && (R499 + R497 = 0 || R494 + R493 < 1) && (R504 + R501 = 0 || R494 + R493 < 1) && (R509 + R507 = 0 || R494 + R493 < 1) && (R514 + R511 = 0 || R494 + R493 < 1) && (R2194 + R2191 = 0 || (R2192 + R2189 = 0 && R2193 + R2190 = 0)) && (R2194 + R2191 = 0 || (R2862 + R2859 = 0 && R2863 + R2860 = 0));
// End of Parikh automata intersection problem
