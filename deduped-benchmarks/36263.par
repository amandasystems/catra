// Parikh automata intersection problem, generated by OSTRICH+
counter int
synchronised {  // Automata constraining P83
automaton P83_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R5 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 64];
  s0 -> s0 [0, 65535] { R20 += 1 };
  s0 -> s2 [65, 65];
  s0 -> s1 [66, 65535];
  s1 -> s1 [0, 64];
  s1 -> s2 [65, 65];
  s1 -> s1 [66, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R12949 += 1, R12950 += 1 };
  s0 -> s1 [0, 65535] { R12950 += 1, R31 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R12950 += 1, R31 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 65535] { R12952 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R12951 += 1, R12952 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R12952 += 1, R68 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 88] { R12954 += 1 };
  s0 -> s2 [0, 65535] { R12954 += 1, R70 += 1 };
  s0 -> s0 [0, 65535] { R12953 += 1, R12954 += 1 };
  s0 -> s1 [90, 65535] { R12954 += 1 };
  s1 -> s1 [0, 88] { R12954 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [90, 65535] { R12954 += 1 };
  s2 -> s1 [0, 88] { R12954 += 1 };
  s2 -> s2 [0, 65535] { R12954 += 1, R70 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [90, 65535] { R12954 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 72] { R12956 += 1 };
  s0 -> s2 [0, 65535] { R12956 += 1, R72 += 1 };
  s0 -> s0 [0, 65535] { R12955 += 1, R12956 += 1 };
  s0 -> s1 [74, 65535] { R12956 += 1 };
  s1 -> s1 [0, 72] { R12956 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [74, 65535] { R12956 += 1 };
  s2 -> s1 [0, 72] { R12956 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12956 += 1, R72 += 1 };
  s2 -> s1 [74, 65535] { R12956 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R12958 += 1, R77 += 1, R78 += 1 };
  s0 -> s2 [0, 65535] { R12958 += 1, R76 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R12957 += 1, R12958 += 1 };
  s1 -> s1 [0, 65535] { R12958 += 1, R77 += 1, R78 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R12958 += 1 };
  s2 -> s1 [0, 65535] { R12958 += 1, R77 += 1, R78 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12958 += 1, R76 += 1, R77 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12958 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s0 [0, 65535] { R12959 += 1, R12960 += 1 };
  s0 -> s1 [0, 65535] { R12960 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R12960 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_9 {
  init s0;
  s0 -> s0 [0, 65535] { R12961 += 1, R12962 += 1 };
  s0 -> s1 [0, 65535] { R12962 += 1, R82 += 1, R83 += 1 };
  s0 -> s2 [0, 65535] { R12962 += 1, R83 += 1, R84 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12962 += 1, R82 += 1, R83 += 1 };
  s1 -> s2 [0, 65535] { R12962 += 1, R83 += 1, R84 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12962 += 1, R83 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R12962 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12962 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 107] { R12964 += 1, R88 += 1 };
  s0 -> s2 [0, 65535] { R12964 += 1, R87 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R12963 += 1, R12964 += 1 };
  s0 -> s3 [108, 108] { R12964 += 1, R88 += 1 };
  s0 -> s1 [109, 65535] { R12964 += 1, R88 += 1 };
  s1 -> s13 [0, 65535] { R12964 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12964 += 1, R88 += 1 };
  s2 -> s1 [0, 107] { R12964 += 1, R88 += 1 };
  s2 -> s2 [0, 65535] { R12964 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R12964 += 1, R88 += 1 };
  s2 -> s1 [109, 65535] { R12964 += 1, R88 += 1 };
  s3 -> s1 [0, 110] { R12964 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R12964 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [111, 111] { R12964 += 1, R88 += 1 };
  s3 -> s1 [112, 65535] { R12964 += 1, R88 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R12964 += 1, R88 += 1 };
  s5 -> s5 [0, 65535] { R12964 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [99, 99] { R12964 += 1, R88 += 1 };
  s5 -> s1 [100, 65535] { R12964 += 1, R88 += 1 };
  s6 -> s1 [0, 96] { R12964 += 1, R88 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R12964 += 1 };
  s6 -> s7 [97, 97] { R12964 += 1, R88 += 1 };
  s6 -> s1 [98, 65535] { R12964 += 1, R88 += 1 };
  s7 -> s1 [0, 107] { R12964 += 1, R88 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s7 [0, 65535] { R12964 += 1 };
  s7 -> s8 [108, 108] { R12964 += 1, R88 += 1 };
  s7 -> s1 [109, 65535] { R12964 += 1, R88 += 1 };
  s8 -> s1 [0, 103] { R12964 += 1, R88 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s8 [0, 65535] { R12964 += 1 };
  s8 -> s9 [104, 104] { R12964 += 1, R88 += 1 };
  s8 -> s1 [105, 65535] { R12964 += 1, R88 += 1 };
  s9 -> s1 [0, 110] { R12964 += 1, R88 += 1 };
  s9 -> s9 [0, 65535] { R12964 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s10 [111, 111] { R12964 += 1, R88 += 1 };
  s9 -> s1 [112, 65535] { R12964 += 1, R88 += 1 };
  s10 -> s1 [0, 114] { R12964 += 1, R88 += 1 };
  s10 -> s10 [0, 65535] { R12964 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s11 [115, 115] { R12964 += 1, R88 += 1 };
  s10 -> s1 [116, 65535] { R12964 += 1, R88 += 1 };
  s11 -> s1 [0, 115] { R12964 += 1, R88 += 1 };
  s11 -> s11 [0, 65535] { R12964 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s12 [116, 116] { R12964 += 1, R88 += 1 };
  s11 -> s1 [117, 65535] { R12964 += 1, R88 += 1 };
  s12 -> s1 [0, 65535] { R12964 += 1, R88 += 1 };
  s13 -> s13 [0, 65535] { R12964 += 1 };
  s13 -> s4 [0, 65535];
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R12966 += 1, R92 += 1, R93 += 1 };
  s0 -> s0 [0, 65535] { R12965 += 1, R12966 += 1 };
  s0 -> s2 [0, 65535] { R12966 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535] { R12966 += 1, R92 += 1, R93 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R12966 += 1, R93 += 1, R94 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R12966 += 1 };
  s2 -> s2 [0, 65535] { R12966 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12966 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s0 [0, 65535] { R12967 += 1, R12968 += 1 };
  s0 -> s1 [0, 65535] { R12968 += 1, R99 += 1, R100 += 1 };
  s0 -> s2 [0, 65535] { R12968 += 1, R98 += 1, R99 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12968 += 1, R99 += 1, R100 += 1 };
  s1 -> s4 [0, 65535] { R12968 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12968 += 1, R99 += 1, R100 += 1 };
  s2 -> s2 [0, 65535] { R12968 += 1, R98 += 1, R99 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12968 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R12970 += 1 };
  s0 -> s0 [0, 65535] { R12969 += 1, R12970 += 1 };
  s1 -> s1 [0, 65535] { R12970 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R12972 += 1, R104 += 1, R105 += 1 };
  s0 -> s0 [0, 65535] { R12971 += 1, R12972 += 1 };
  s0 -> s2 [0, 65535] { R12972 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [0, 65535] { R12972 += 1, R104 += 1, R105 += 1 };
  s1 -> s2 [0, 65535] { R12972 += 1, R105 += 1, R106 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R12972 += 1 };
  s2 -> s2 [0, 65535] { R12972 += 1, R105 += 1, R106 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12972 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R12974 += 1 };
  s0 -> s0 [0, 65535] { R12973 += 1, R12974 += 1 };
  s1 -> s1 [0, 65535] { R12974 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 72] { R12976 += 1, R111 += 1, R112 += 1 };
  s0 -> s2 [0, 65535] { R12976 += 1, R110 += 1, R111 += 1 };
  s0 -> s0 [0, 65535] { R12975 += 1, R12976 += 1 };
  s0 -> s3 [73, 73] { R12976 += 1, R111 += 1, R112 += 1 };
  s0 -> s4 [73, 73] { R12976 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [74, 65535] { R12976 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 72] { R12976 += 1, R111 += 1, R112 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12976 += 1 };
  s1 -> s3 [73, 73] { R12976 += 1, R111 += 1, R112 += 1 };
  s1 -> s4 [73, 73] { R12976 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [74, 65535] { R12976 += 1, R111 += 1, R112 += 1 };
  s2 -> s1 [0, 72] { R12976 += 1, R111 += 1, R112 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12976 += 1, R110 += 1, R111 += 1 };
  s2 -> s3 [73, 73] { R12976 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [73, 73] { R12976 += 1, R111 += 1, R112 += 1 };
  s2 -> s1 [74, 65535] { R12976 += 1, R111 += 1, R112 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12976 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12976 += 1, R111 += 1, R112 += 1 };
  s4 -> s6 [0, 65535] { R12976 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12976 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s0 [0, 65535] { R12999 += 1, R13000 += 1 };
  s0 -> s1 [0, 65535] { R13000 += 1, R32 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13000 += 1, R32 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 64] { R13002 += 1, R67 += 1 };
  s0 -> s0 [0, 65535] { R13001 += 1, R13002 += 1 };
  s0 -> s2 [65, 65] { R13002 += 1, R67 += 1 };
  s0 -> s3 [65, 65] { R13002 += 1, R67 += 1 };
  s0 -> s1 [66, 65535] { R13002 += 1, R67 += 1 };
  s1 -> s1 [0, 64] { R13002 += 1, R67 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13002 += 1, R67 += 1 };
  s1 -> s3 [65, 65] { R13002 += 1, R67 += 1 };
  s1 -> s1 [66, 65535] { R13002 += 1, R67 += 1 };
  s2 -> s2 [0, 65535] { R13002 += 1, R67 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 64] { R13004 += 1, R69 += 1 };
  s0 -> s0 [0, 65535] { R13003 += 1, R13004 += 1 };
  s0 -> s2 [65, 65] { R13004 += 1, R69 += 1 };
  s0 -> s3 [65, 65] { R13004 += 1, R69 += 1 };
  s0 -> s1 [66, 65535] { R13004 += 1, R69 += 1 };
  s1 -> s1 [0, 64] { R13004 += 1, R69 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13004 += 1, R69 += 1 };
  s1 -> s3 [65, 65] { R13004 += 1, R69 += 1 };
  s1 -> s1 [66, 65535] { R13004 += 1, R69 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13004 += 1, R69 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 64] { R13006 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R13005 += 1, R13006 += 1 };
  s0 -> s2 [65, 65] { R13006 += 1, R71 += 1 };
  s0 -> s3 [65, 65] { R13006 += 1, R71 += 1 };
  s0 -> s1 [66, 65535] { R13006 += 1, R71 += 1 };
  s1 -> s1 [0, 64] { R13006 += 1, R71 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13006 += 1, R71 += 1 };
  s1 -> s3 [65, 65] { R13006 += 1, R71 += 1 };
  s1 -> s1 [66, 65535] { R13006 += 1, R71 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13006 += 1, R71 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 64] { R13008 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13007 += 1, R13008 += 1 };
  s0 -> s2 [65, 65] { R13008 += 1, R73 += 1, R74 += 1 };
  s0 -> s3 [65, 65] { R13008 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [66, 65535] { R13008 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 64] { R13008 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13008 += 1, R73 += 1, R74 += 1 };
  s1 -> s3 [65, 65] { R13008 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [66, 65535] { R13008 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13008 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 64] { R13010 += 1 };
  s0 -> s0 [0, 65535] { R13009 += 1, R13010 += 1 };
  s0 -> s2 [65, 65] { R13010 += 1 };
  s0 -> s3 [65, 65] { R13010 += 1 };
  s0 -> s1 [66, 65535] { R13010 += 1 };
  s1 -> s1 [0, 64] { R13010 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13010 += 1 };
  s1 -> s3 [65, 65] { R13010 += 1 };
  s1 -> s1 [66, 65535] { R13010 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13010 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 64] { R13012 += 1, R79 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R13011 += 1, R13012 += 1 };
  s0 -> s2 [65, 65] { R13012 += 1, R79 += 1, R80 += 1 };
  s0 -> s3 [65, 65] { R13012 += 1, R79 += 1, R80 += 1 };
  s0 -> s1 [66, 65535] { R13012 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 64] { R13012 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13012 += 1, R79 += 1, R80 += 1 };
  s1 -> s3 [65, 65] { R13012 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [66, 65535] { R13012 += 1, R79 += 1, R80 += 1 };
  s2 -> s2 [0, 65535] { R13012 += 1, R79 += 1, R80 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 64] { R13014 += 1, R85 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R13013 += 1, R13014 += 1 };
  s0 -> s2 [65, 65] { R13014 += 1, R85 += 1, R86 += 1 };
  s0 -> s3 [65, 65] { R13014 += 1, R85 += 1, R86 += 1 };
  s0 -> s1 [66, 65535] { R13014 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 64] { R13014 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13014 += 1, R85 += 1, R86 += 1 };
  s1 -> s3 [65, 65] { R13014 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [66, 65535] { R13014 += 1, R85 += 1, R86 += 1 };
  s2 -> s2 [0, 65535] { R13014 += 1, R85 += 1, R86 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 64] { R13016 += 1, R89 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R13015 += 1, R13016 += 1 };
  s0 -> s2 [65, 65] { R13016 += 1, R89 += 1, R90 += 1 };
  s0 -> s3 [65, 65] { R13016 += 1, R89 += 1, R90 += 1 };
  s0 -> s1 [66, 65535] { R13016 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 64] { R13016 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13016 += 1, R89 += 1, R90 += 1 };
  s1 -> s3 [65, 65] { R13016 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [66, 65535] { R13016 += 1, R89 += 1, R90 += 1 };
  s2 -> s2 [0, 65535] { R13016 += 1, R89 += 1, R90 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R13018 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R13017 += 1, R13018 += 1 };
  s0 -> s2 [65, 65] { R13018 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [65, 65] { R13018 += 1, R95 += 1, R96 += 1 };
  s0 -> s1 [66, 65535] { R13018 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 64] { R13018 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13018 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [65, 65] { R13018 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [66, 65535] { R13018 += 1, R95 += 1, R96 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R13018 += 1, R95 += 1, R96 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R13020 += 1 };
  s0 -> s0 [0, 65535] { R13019 += 1, R13020 += 1 };
  s0 -> s2 [65, 65] { R13020 += 1 };
  s0 -> s3 [65, 65] { R13020 += 1 };
  s0 -> s1 [66, 65535] { R13020 += 1 };
  s1 -> s1 [0, 64] { R13020 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13020 += 1 };
  s1 -> s3 [65, 65] { R13020 += 1 };
  s1 -> s1 [66, 65535] { R13020 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13020 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R13022 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R13021 += 1, R13022 += 1 };
  s0 -> s2 [65, 65] { R13022 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [65, 65] { R13022 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [66, 65535] { R13022 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 64] { R13022 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13022 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [65, 65] { R13022 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [66, 65535] { R13022 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13022 += 1, R101 += 1, R102 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R13024 += 1 };
  s0 -> s0 [0, 65535] { R13023 += 1, R13024 += 1 };
  s0 -> s2 [65, 65] { R13024 += 1 };
  s0 -> s3 [65, 65] { R13024 += 1 };
  s0 -> s1 [66, 65535] { R13024 += 1 };
  s1 -> s1 [0, 64] { R13024 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13024 += 1 };
  s1 -> s3 [65, 65] { R13024 += 1 };
  s1 -> s1 [66, 65535] { R13024 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13024 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R13026 += 1, R107 += 1, R108 += 1 };
  s0 -> s0 [0, 65535] { R13025 += 1, R13026 += 1 };
  s0 -> s2 [65, 65] { R13026 += 1, R107 += 1, R108 += 1 };
  s0 -> s3 [65, 65] { R13026 += 1, R107 += 1, R108 += 1 };
  s0 -> s1 [66, 65535] { R13026 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 64] { R13026 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R13026 += 1, R107 += 1, R108 += 1 };
  s1 -> s3 [65, 65] { R13026 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [66, 65535] { R13026 += 1, R107 += 1, R108 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13026 += 1, R107 += 1, R108 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 43] { R13028 += 1 };
  s0 -> s0 [0, 65535] { R13027 += 1, R13028 += 1 };
  s0 -> s1 [45, 45] { R13028 += 1 };
  s0 -> s2 [46, 46] { R13028 += 1 };
  s0 -> s1 [48, 62] { R13028 += 1 };
  s0 -> s3 [65, 65] { R13028 += 1 };
  s0 -> s1 [66, 65535] { R13028 += 1 };
  s1 -> s1 [0, 43] { R13028 += 1 };
  s1 -> s1 [45, 45] { R13028 += 1 };
  s1 -> s2 [46, 46] { R13028 += 1 };
  s1 -> s1 [48, 62] { R13028 += 1 };
  s1 -> s3 [65, 65] { R13028 += 1 };
  s1 -> s1 [66, 65535] { R13028 += 1 };
  s2 -> s1 [0, 43] { R13028 += 1 };
  s2 -> s1 [45, 45] { R13028 += 1 };
  s2 -> s2 [46, 46] { R13028 += 1 };
  s2 -> s1 [48, 62] { R13028 += 1 };
  s2 -> s3 [65, 65] { R13028 += 1 };
  s2 -> s1 [66, 114] { R13028 += 1 };
  s2 -> s8 [115, 115] { R13028 += 1 };
  s2 -> s1 [116, 65535] { R13028 += 1 };
  s3 -> s3 [0, 43] { R13028 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R13028 += 1 };
  s3 -> s4 [46, 46] { R13028 += 1 };
  s3 -> s3 [48, 62] { R13028 += 1 };
  s3 -> s3 [65, 65535] { R13028 += 1 };
  s4 -> s3 [0, 43] { R13028 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R13028 += 1 };
  s4 -> s4 [46, 46] { R13028 += 1 };
  s4 -> s3 [48, 62] { R13028 += 1 };
  s4 -> s3 [65, 114] { R13028 += 1 };
  s4 -> s5 [115, 115] { R13028 += 1 };
  s4 -> s3 [116, 65535] { R13028 += 1 };
  s5 -> s3 [0, 43] { R13028 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R13028 += 1 };
  s5 -> s4 [46, 46] { R13028 += 1 };
  s5 -> s3 [48, 62] { R13028 += 1 };
  s5 -> s3 [65, 110] { R13028 += 1 };
  s5 -> s6 [111, 111] { R13028 += 1 };
  s5 -> s3 [112, 65535] { R13028 += 1 };
  s6 -> s3 [0, 43] { R13028 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R13028 += 1 };
  s6 -> s4 [46, 46] { R13028 += 1 };
  s6 -> s3 [48, 62] { R13028 += 1 };
  s6 -> s3 [65, 98] { R13028 += 1 };
  s6 -> s7 [99, 99] { R13028 += 1 };
  s6 -> s3 [100, 65535] { R13028 += 1 };
  s7 -> s3 [0, 43] { R13028 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R13028 += 1 };
  s7 -> s4 [46, 46] { R13028 += 1 };
  s7 -> s3 [48, 62] { R13028 += 1 };
  s7 -> s3 [65, 106] { R13028 += 1 };
  s7 -> s3 [108, 65535] { R13028 += 1 };
  s8 -> s1 [0, 43] { R13028 += 1 };
  s8 -> s1 [45, 45] { R13028 += 1 };
  s8 -> s2 [46, 46] { R13028 += 1 };
  s8 -> s1 [48, 62] { R13028 += 1 };
  s8 -> s3 [65, 65] { R13028 += 1 };
  s8 -> s1 [66, 110] { R13028 += 1 };
  s8 -> s9 [111, 111] { R13028 += 1 };
  s8 -> s1 [112, 65535] { R13028 += 1 };
  s9 -> s1 [0, 43] { R13028 += 1 };
  s9 -> s1 [45, 45] { R13028 += 1 };
  s9 -> s2 [46, 46] { R13028 += 1 };
  s9 -> s1 [48, 62] { R13028 += 1 };
  s9 -> s3 [65, 65] { R13028 += 1 };
  s9 -> s1 [66, 98] { R13028 += 1 };
  s9 -> s10 [99, 99] { R13028 += 1 };
  s9 -> s1 [100, 65535] { R13028 += 1 };
  s10 -> s1 [0, 43] { R13028 += 1 };
  s10 -> s1 [45, 45] { R13028 += 1 };
  s10 -> s2 [46, 46] { R13028 += 1 };
  s10 -> s1 [48, 62] { R13028 += 1 };
  s10 -> s3 [65, 65] { R13028 += 1 };
  s10 -> s1 [66, 106] { R13028 += 1 };
  s10 -> s1 [108, 65535] { R13028 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_32 {
  init s0;
  s0 -> s0 [0, 65535] { R13029 += 1, R13030 += 1 };
  s0 -> s1 [0, 65535] { R13030 += 1, R4 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13030 += 1, R4 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 57] { R13032 += 1 };
  s0 -> s2 [0, 65535] { R13032 += 1, R16 += 1 };
  s0 -> s0 [0, 65535] { R13031 += 1, R13032 += 1 };
  s0 -> s3 [58, 58] { R13032 += 1 };
  s0 -> s1 [59, 65535] { R13032 += 1 };
  s1 -> s1 [0, 57] { R13032 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R13032 += 1 };
  s1 -> s1 [59, 65535] { R13032 += 1 };
  s2 -> s1 [0, 57] { R13032 += 1 };
  s2 -> s2 [0, 65535] { R13032 += 1, R16 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [58, 58] { R13032 += 1 };
  s2 -> s1 [59, 65535] { R13032 += 1 };
  s3 -> s3 [0, 65535] { R13032 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R13034 += 1 };
  s0 -> s2 [0, 65535] { R13034 += 1, R17 += 1 };
  s0 -> s0 [0, 65535] { R13033 += 1, R13034 += 1 };
  s0 -> s3 [65, 65] { R13034 += 1 };
  s0 -> s1 [66, 65535] { R13034 += 1 };
  s1 -> s1 [0, 64] { R13034 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R13034 += 1 };
  s1 -> s1 [66, 65535] { R13034 += 1 };
  s2 -> s1 [0, 64] { R13034 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13034 += 1, R17 += 1 };
  s2 -> s3 [65, 65] { R13034 += 1 };
  s2 -> s1 [66, 65535] { R13034 += 1 };
  s3 -> s3 [0, 65535] { R13034 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 90] { R13036 += 1, R34 += 1 };
  s0 -> s0 [0, 65535] { R13035 += 1, R13036 += 1 };
  s0 -> s2 [0, 65535] { R13036 += 1, R33 += 1, R34 += 1 };
  s0 -> s3 [91, 91] { R13036 += 1, R34 += 1 };
  s0 -> s1 [92, 65535] { R13036 += 1, R34 += 1 };
  s1 -> s1 [0, 65535] { R13036 += 1, R34 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13036 += 1 };
  s2 -> s1 [0, 90] { R13036 += 1, R34 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13036 += 1, R33 += 1, R34 += 1 };
  s2 -> s3 [91, 91] { R13036 += 1, R34 += 1 };
  s2 -> s1 [92, 65535] { R13036 += 1, R34 += 1 };
  s3 -> s1 [0, 65535] { R13036 += 1, R34 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13036 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 65535] { R13038 += 1, R35 += 1, R36 += 1 };
  s0 -> s0 [0, 65535] { R13037 += 1, R13038 += 1 };
  s0 -> s2 [0, 65535] { R13038 += 1, R36 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R13038 += 1, R35 += 1, R36 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13038 += 1, R36 += 1, R6 += 1 };
  s2 -> s3 [0, 65535] { R13038 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13038 += 1, R36 += 1, R6 += 1 };
  s3 -> s3 [0, 65535] { R13038 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R13040 += 1, R12926 += 1 };
  s0 -> s2 [0, 65535] { R13040 += 1, R12925 += 1, R12926 += 1 };
  s0 -> s0 [0, 65535] { R13039 += 1, R13040 += 1 };
  s0 -> s1 [66, 65535] { R13040 += 1, R12926 += 1 };
  s1 -> s1 [0, 64] { R13040 += 1, R12926 += 1 };
  s1 -> s1 [0, 65535] { R13040 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [66, 65535] { R13040 += 1, R12926 += 1 };
  s2 -> s1 [0, 64] { R13040 += 1, R12926 += 1 };
  s2 -> s2 [0, 65535] { R13040 += 1, R12925 += 1, R12926 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [66, 65535] { R13040 += 1, R12926 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 65535] { R13042 += 1, R12927 += 1, R12928 += 1 };
  s0 -> s2 [0, 65535] { R13042 += 1, R12928 += 1, R29 += 1 };
  s0 -> s0 [0, 65535] { R13041 += 1, R13042 += 1 };
  s1 -> s1 [0, 65535] { R13042 += 1, R12927 += 1, R12928 += 1 };
  s1 -> s2 [0, 65535] { R13042 += 1, R12928 += 1, R29 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13042 += 1 };
  s2 -> s2 [0, 65535] { R13042 += 1, R12928 += 1, R29 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13042 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 65] { R13044 += 1, R12930 += 1 };
  s0 -> s0 [0, 65535] { R13043 += 1, R13044 += 1 };
  s0 -> s2 [0, 65535] { R13044 += 1, R12929 += 1, R12930 += 1 };
  s0 -> s1 [81, 65535] { R13044 += 1, R12930 += 1 };
  s1 -> s1 [0, 65] { R13044 += 1, R12930 += 1 };
  s1 -> s1 [0, 65535] { R13044 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [81, 65535] { R13044 += 1, R12930 += 1 };
  s2 -> s1 [0, 65] { R13044 += 1, R12930 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13044 += 1, R12929 += 1, R12930 += 1 };
  s2 -> s1 [81, 65535] { R13044 += 1, R12930 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 65535] { R13046 += 1, R12932 += 1, R494 += 1 };
  s0 -> s0 [0, 65535] { R13045 += 1, R13046 += 1 };
  s0 -> s2 [0, 65535] { R13046 += 1, R12931 += 1, R12932 += 1 };
  s1 -> s1 [0, 65535] { R13046 += 1, R12932 += 1, R494 += 1 };
  s1 -> s4 [0, 65535] { R13046 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13046 += 1, R12932 += 1, R494 += 1 };
  s2 -> s2 [0, 65535] { R13046 += 1, R12931 += 1, R12932 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13046 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_41 {
  init s0;
  s0 -> s1 [0, 80] { R13048 += 1, R12934 += 1 };
  s0 -> s2 [0, 65535] { R13048 += 1, R12934 += 1, R496 += 1 };
  s0 -> s0 [0, 65535] { R13047 += 1, R13048 += 1 };
  s0 -> s3 [0, 65535] { R13048 += 1, R12933 += 1, R12934 += 1 };
  s0 -> s1 [82, 65535] { R13048 += 1, R12934 += 1 };
  s1 -> s1 [0, 80] { R13048 += 1, R12934 += 1 };
  s1 -> s1 [0, 65535] { R13048 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [82, 65535] { R13048 += 1, R12934 += 1 };
  s2 -> s1 [0, 80] { R13048 += 1, R12934 += 1 };
  s2 -> s2 [0, 65535] { R13048 += 1, R12934 += 1, R496 += 1 };
  s2 -> s5 [0, 65535] { R13048 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [82, 65535] { R13048 += 1, R12934 += 1 };
  s3 -> s1 [0, 80] { R13048 += 1, R12934 += 1 };
  s3 -> s2 [0, 65535] { R13048 += 1, R12934 += 1, R496 += 1 };
  s3 -> s3 [0, 65535] { R13048 += 1, R12933 += 1, R12934 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [82, 65535] { R13048 += 1, R12934 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13048 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_42 {
  init s0;
  s0 -> s1 [0, 80] { R13050 += 1, R12936 += 1, R500 += 1 };
  s0 -> s2 [0, 65535] { R13050 += 1, R12935 += 1, R12936 += 1 };
  s0 -> s0 [0, 65535] { R13049 += 1, R13050 += 1 };
  s0 -> s3 [0, 65535] { R13050 += 1, R12936 += 1, R499 += 1, R500 += 1 };
  s0 -> s1 [82, 65535] { R13050 += 1, R12936 += 1, R500 += 1 };
  s1 -> s1 [0, 80] { R13050 += 1, R12936 += 1, R500 += 1 };
  s1 -> s1 [0, 65535] { R13050 += 1, R12936 += 1 };
  s1 -> s4 [0, 65535] { R13050 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [82, 65535] { R13050 += 1, R12936 += 1, R500 += 1 };
  s2 -> s1 [0, 80] { R13050 += 1, R12936 += 1, R500 += 1 };
  s2 -> s2 [0, 65535] { R13050 += 1, R12935 += 1, R12936 += 1 };
  s2 -> s3 [0, 65535] { R13050 += 1, R12936 += 1, R499 += 1, R500 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [82, 65535] { R13050 += 1, R12936 += 1, R500 += 1 };
  s3 -> s1 [0, 80] { R13050 += 1, R12936 += 1, R500 += 1 };
  s3 -> s4 [0, 65535] { R13050 += 1 };
  s3 -> s3 [0, 65535] { R13050 += 1, R12936 += 1, R499 += 1, R500 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [82, 65535] { R13050 += 1, R12936 += 1, R500 += 1 };
  s4 -> s4 [0, 65535] { R13050 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_43 {
  init s0;
  s0 -> s1 [0, 65535] { R13052 += 1, R12937 += 1, R12938 += 1 };
  s0 -> s0 [0, 65535] { R13051 += 1, R13052 += 1 };
  s0 -> s2 [0, 65535] { R13052 += 1, R12938 += 1, R505 += 1, R506 += 1 };
  s0 -> s3 [0, 65535] { R13052 += 1, R12938 += 1, R504 += 1, R505 += 1 };
  s1 -> s1 [0, 65535] { R13052 += 1, R12937 += 1, R12938 += 1 };
  s1 -> s2 [0, 65535] { R13052 += 1, R12938 += 1, R505 += 1, R506 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R13052 += 1, R12938 += 1, R504 += 1, R505 += 1 };
  s2 -> s6 [0, 65535] { R13052 += 1, R12938 += 1 };
  s2 -> s4 [0, 65535] { R13052 += 1 };
  s2 -> s2 [0, 65535] { R13052 += 1, R12938 += 1, R505 += 1, R506 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R13052 += 1 };
  s3 -> s2 [0, 65535] { R13052 += 1, R12938 += 1, R505 += 1, R506 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13052 += 1, R12938 += 1, R504 += 1, R505 += 1 };
  s4 -> s4 [0, 65535] { R13052 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13052 += 1, R12938 += 1 };
  s6 -> s4 [0, 65535] { R13052 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_44 {
  init s0;
  s0 -> s1 [0, 81] { R13054 += 1, R12940 += 1, R8056 += 1 };
  s0 -> s1 [0, 65535] { R13054 += 1, R12940 += 1 };
  s0 -> s2 [0, 65535] { R13054 += 1, R12939 += 1, R12940 += 1 };
  s0 -> s0 [0, 65535] { R13053 += 1, R13054 += 1 };
  s0 -> s1 [91, 65535] { R13054 += 1, R12940 += 1, R8056 += 1 };
  s1 -> s1 [0, 81] { R13054 += 1, R12940 += 1, R8056 += 1 };
  s1 -> s1 [0, 65535] { R13054 += 1, R12940 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13054 += 1 };
  s1 -> s1 [91, 65535] { R13054 += 1, R12940 += 1, R8056 += 1 };
  s2 -> s1 [0, 81] { R13054 += 1, R12940 += 1, R8056 += 1 };
  s2 -> s1 [0, 65535] { R13054 += 1, R12940 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13054 += 1, R12939 += 1, R12940 += 1 };
  s2 -> s1 [91, 65535] { R13054 += 1, R12940 += 1, R8056 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13054 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_45 {
  init s0;
  s0 -> s1 [0, 65535] { R13056 += 1, R12942 += 1, R10575 += 1, R10576 += 1 };
  s0 -> s2 [0, 65535] { R13056 += 1, R12941 += 1, R12942 += 1 };
  s0 -> s0 [0, 65535] { R13055 += 1, R13056 += 1 };
  s0 -> s3 [0, 65535] { R13056 += 1, R12942 += 1 };
  s1 -> s4 [0, 65535] { R13056 += 1 };
  s1 -> s1 [0, 65535] { R13056 += 1, R12942 += 1, R10575 += 1, R10576 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R13056 += 1, R12942 += 1 };
  s2 -> s1 [0, 65535] { R13056 += 1, R12942 += 1, R10575 += 1, R10576 += 1 };
  s2 -> s2 [0, 65535] { R13056 += 1, R12941 += 1, R12942 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R13056 += 1, R12942 += 1 };
  s3 -> s4 [0, 65535] { R13056 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13056 += 1, R12942 += 1 };
  s4 -> s4 [0, 65535] { R13056 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_46 {
  init s0;
  s0 -> s1 [0, 65535] { R13058 += 1, R12943 += 1, R12944 += 1 };
  s0 -> s0 [0, 65535] { R13057 += 1, R13058 += 1 };
  s0 -> s2 [0, 65535] { R13058 += 1, R12944 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13058 += 1, R12943 += 1, R12944 += 1 };
  s1 -> s2 [0, 65535] { R13058 += 1, R12944 += 1 };
  s2 -> s3 [0, 65535] { R13058 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13058 += 1, R12944 += 1 };
  s3 -> s3 [0, 65535] { R13058 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_47 {
  init s0;
  s0 -> s0 [0, 65535] { R13059 += 1, R13060 += 1 };
  s0 -> s1 [0, 65535] { R13060 += 1, R12946 += 1 };
  s0 -> s2 [0, 65535] { R13060 += 1, R12945 += 1, R12946 += 1 };
  s1 -> s1 [0, 65535] { R13060 += 1, R12946 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13060 += 1 };
  s2 -> s1 [0, 65535] { R13060 += 1, R12946 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13060 += 1, R12945 += 1, R12946 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13060 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_48 {
  init s0;
  s0 -> s0 [0, 65535] { R13061 += 1, R13062 += 1 };
  s0 -> s1 [0, 65535] { R13062 += 1, R12947 += 1, R12948 += 1 };
  s0 -> s2 [0, 65535] { R13062 += 1, R12948 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13062 += 1, R12947 += 1, R12948 += 1 };
  s1 -> s2 [0, 65535] { R13062 += 1, R12948 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13062 += 1, R12948 += 1 };
  s2 -> s4 [0, 65535] { R13062 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13062 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_49 {
  init s0;
  s0 -> s0 [0, 65535] { R13063 += 1, R13064 += 1 };
  s0 -> s1 [0, 65535] { R13064 += 1, R12977 += 1, R12978 += 1 };
  s0 -> s2 [0, 65535] { R13064 += 1, R12978 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R13064 += 1, R12977 += 1, R12978 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R13064 += 1, R12978 += 1, R30 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R13064 += 1 };
  s2 -> s2 [0, 65535] { R13064 += 1, R12978 += 1, R30 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13064 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_50 {
  init s0;
  s0 -> s1 [0, 64] { R13066 += 1, R12980 += 1 };
  s0 -> s0 [0, 65535] { R13065 += 1, R13066 += 1 };
  s0 -> s2 [0, 65535] { R13066 += 1, R12979 += 1, R12980 += 1 };
  s0 -> s3 [65, 65] { R13066 += 1, R12980 += 1 };
  s0 -> s4 [65, 65] { R13066 += 1, R12980 += 1 };
  s0 -> s5 [81, 81] { R13066 += 1, R12980 += 1 };
  s0 -> s1 [82, 65535] { R13066 += 1, R12980 += 1 };
  s1 -> s1 [0, 64] { R13066 += 1, R12980 += 1 };
  s1 -> s3 [65, 65] { R13066 += 1, R12980 += 1 };
  s1 -> s4 [65, 65] { R13066 += 1, R12980 += 1 };
  s1 -> s5 [81, 81] { R13066 += 1, R12980 += 1 };
  s1 -> s1 [82, 65535] { R13066 += 1, R12980 += 1 };
  s2 -> s1 [0, 64] { R13066 += 1, R12980 += 1 };
  s2 -> s2 [0, 65535] { R13066 += 1, R12979 += 1, R12980 += 1 };
  s2 -> s3 [65, 65] { R13066 += 1, R12980 += 1 };
  s2 -> s4 [65, 65] { R13066 += 1, R12980 += 1 };
  s2 -> s5 [81, 81] { R13066 += 1, R12980 += 1 };
  s2 -> s1 [82, 65535] { R13066 += 1, R12980 += 1 };
  s4 -> s4 [0, 65] { R13066 += 1, R12980 += 1 };
  s4 -> s7 [81, 81] { R13066 += 1, R12980 += 1 };
  s4 -> s4 [82, 65535] { R13066 += 1, R12980 += 1 };
  s5 -> s5 [0, 64] { R13066 += 1, R12980 += 1 };
  s5 -> s5 [0, 65535] { R13066 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [65, 65] { R13066 += 1, R12980 += 1 };
  s5 -> s8 [65, 65] { R13066 += 1, R12980 += 1 };
  s5 -> s5 [81, 65535] { R13066 += 1, R12980 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65] { R13066 += 1, R12980 += 1 };
  s7 -> s7 [0, 65535] { R13066 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [81, 65535] { R13066 += 1, R12980 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13066 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_51 {
  init s0;
  s0 -> s1 [0, 64] { R13068 += 1, R12982 += 1, R493 += 1 };
  s0 -> s0 [0, 65535] { R13067 += 1, R13068 += 1 };
  s0 -> s2 [0, 65535] { R13068 += 1, R12981 += 1, R12982 += 1 };
  s0 -> s3 [65, 65] { R13068 += 1, R12982 += 1, R493 += 1 };
  s0 -> s4 [65, 65] { R13068 += 1, R12982 += 1, R493 += 1 };
  s0 -> s1 [66, 65535] { R13068 += 1, R12982 += 1, R493 += 1 };
  s1 -> s1 [0, 64] { R13068 += 1, R12982 += 1, R493 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R13068 += 1 };
  s1 -> s3 [65, 65] { R13068 += 1, R12982 += 1, R493 += 1 };
  s1 -> s4 [65, 65] { R13068 += 1, R12982 += 1, R493 += 1 };
  s1 -> s1 [66, 65535] { R13068 += 1, R12982 += 1, R493 += 1 };
  s2 -> s1 [0, 64] { R13068 += 1, R12982 += 1, R493 += 1 };
  s2 -> s2 [0, 65535] { R13068 += 1, R12981 += 1, R12982 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R13068 += 1, R12982 += 1, R493 += 1 };
  s2 -> s4 [65, 65] { R13068 += 1, R12982 += 1, R493 += 1 };
  s2 -> s1 [66, 65535] { R13068 += 1, R12982 += 1, R493 += 1 };
  s3 -> s3 [0, 65535] { R13068 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13068 += 1, R12982 += 1, R493 += 1 };
  s4 -> s5 [0, 65535] { R13068 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13068 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_52 {
  init s0;
  s0 -> s1 [0, 64] { R13070 += 1, R12984 += 1, R495 += 1 };
  s0 -> s2 [0, 65535] { R13070 += 1, R12983 += 1, R12984 += 1 };
  s0 -> s0 [0, 65535] { R13069 += 1, R13070 += 1 };
  s0 -> s3 [65, 65] { R13070 += 1, R12984 += 1, R495 += 1 };
  s0 -> s4 [65, 65] { R13070 += 1, R12984 += 1, R495 += 1 };
  s0 -> s1 [66, 65535] { R13070 += 1, R12984 += 1, R495 += 1 };
  s1 -> s1 [0, 64] { R13070 += 1, R12984 += 1, R495 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13070 += 1 };
  s1 -> s3 [65, 65] { R13070 += 1, R12984 += 1, R495 += 1 };
  s1 -> s4 [65, 65] { R13070 += 1, R12984 += 1, R495 += 1 };
  s1 -> s1 [66, 65535] { R13070 += 1, R12984 += 1, R495 += 1 };
  s2 -> s1 [0, 64] { R13070 += 1, R12984 += 1, R495 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13070 += 1, R12983 += 1, R12984 += 1 };
  s2 -> s3 [65, 65] { R13070 += 1, R12984 += 1, R495 += 1 };
  s2 -> s4 [65, 65] { R13070 += 1, R12984 += 1, R495 += 1 };
  s2 -> s1 [66, 65535] { R13070 += 1, R12984 += 1, R495 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13070 += 1, R12984 += 1, R495 += 1 };
  s3 -> s6 [0, 65535] { R13070 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13070 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13070 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_53 {
  init s0;
  s0 -> s1 [0, 64] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s0 -> s0 [0, 65535] { R13071 += 1, R13072 += 1 };
  s0 -> s2 [0, 65535] { R13072 += 1, R12985 += 1, R12986 += 1 };
  s0 -> s3 [65, 65] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s0 -> s4 [65, 65] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s0 -> s1 [66, 65535] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s1 -> s1 [0, 64] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s1 -> s1 [0, 65535] { R13072 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s1 -> s4 [65, 65] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s1 -> s1 [66, 65535] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s2 -> s1 [0, 64] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13072 += 1, R12985 += 1, R12986 += 1 };
  s2 -> s3 [65, 65] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s2 -> s4 [65, 65] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s2 -> s1 [66, 65535] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13072 += 1 };
  s4 -> s5 [0, 65535] { R13072 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13072 += 1, R12986 += 1, R497 += 1, R498 += 1 };
  s5 -> s5 [0, 65535] { R13072 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_54 {
  init s0;
  s0 -> s1 [0, 64] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s0 -> s2 [0, 65535] { R13074 += 1, R12987 += 1, R12988 += 1 };
  s0 -> s0 [0, 65535] { R13073 += 1, R13074 += 1 };
  s0 -> s3 [65, 65] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s0 -> s4 [65, 65] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s0 -> s1 [66, 65535] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s1 -> s1 [0, 64] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s1 -> s1 [0, 65535] { R13074 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s1 -> s4 [65, 65] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s1 -> s1 [66, 65535] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s2 -> s1 [0, 64] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s2 -> s2 [0, 65535] { R13074 += 1, R12987 += 1, R12988 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s2 -> s4 [65, 65] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s2 -> s1 [66, 65535] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s3 -> s3 [0, 65535] { R13074 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13074 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13074 += 1, R12988 += 1, R501 += 1, R502 += 1 };
  s5 -> s5 [0, 65535] { R13074 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_55 {
  init s0;
  s0 -> s1 [0, 64] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s0 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s0 -> s3 [0, 65535] { R13076 += 1, R12989 += 1, R12990 += 1 };
  s0 -> s0 [0, 65535] { R13075 += 1, R13076 += 1 };
  s0 -> s4 [65, 65] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s0 -> s5 [65, 65] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s0 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s0 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s0 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s0 -> s1 [66, 65535] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s0 -> s2 [91, 107] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s0 -> s8 [108, 108] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s0 -> s2 [109, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s1 -> s1 [0, 64] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s1 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s1 -> s4 [65, 65] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s1 -> s5 [65, 65] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s1 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s1 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s1 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s1 -> s1 [66, 65535] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s1 -> s2 [91, 107] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s1 -> s8 [108, 108] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s1 -> s2 [109, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s2 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s2 -> s34 [0, 65535];
  s2 -> s2 [0, 65535] { R13076 += 1 };
  s2 -> s6 [65, 65] { R13076 += 1, R12990 += 1 };
  s2 -> s7 [65, 65] { R13076 += 1, R12990 += 1 };
  s2 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s2 -> s2 [66, 65535] { R13076 += 1, R12990 += 1 };
  s2 -> s2 [91, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s3 -> s1 [0, 64] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s3 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s3 -> s3 [0, 65535] { R13076 += 1, R12989 += 1, R12990 += 1 };
  s3 -> s4 [65, 65] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s3 -> s5 [65, 65] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s3 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s3 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s3 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s3 -> s1 [66, 65535] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s3 -> s2 [91, 107] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s3 -> s8 [108, 108] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s3 -> s2 [109, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s4 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s4 -> s4 [0, 65535] { R13076 += 1, R12990 += 1, R8053 += 1, R8054 += 1 };
  s4 -> s6 [91, 107] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s4 -> s10 [108, 108] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s4 -> s6 [109, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s6 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s6 -> s6 [0, 65535] { R13076 += 1, R12990 += 1 };
  s6 -> s35 [0, 65535] { R13076 += 1 };
  s6 -> s34 [0, 65535];
  s6 -> s6 [91, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s7 -> s7 [0, 65535] { R13076 += 1 };
  s7 -> s34 [0, 65535];
  s8 -> s8 [0, 64] { R13076 += 1, R12990 += 1 };
  s8 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s8 -> s9 [65, 65] { R13076 += 1, R12990 += 1 };
  s8 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s8 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s8 -> s10 [65, 65] { R13076 += 1, R12990 += 1 };
  s8 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s8 -> s8 [66, 65535] { R13076 += 1, R12990 += 1 };
  s8 -> s2 [91, 110] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s8 -> s11 [111, 111] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s8 -> s2 [112, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s10 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s10 -> s10 [0, 65535] { R13076 += 1, R12990 += 1 };
  s10 -> s6 [91, 110] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s10 -> s12 [111, 111] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s10 -> s6 [112, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s11 -> s11 [0, 64] { R13076 += 1, R12990 += 1 };
  s11 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s11 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s11 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s11 -> s12 [65, 65] { R13076 += 1, R12990 += 1 };
  s11 -> s13 [65, 65] { R13076 += 1, R12990 += 1 };
  s11 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s11 -> s11 [66, 65535] { R13076 += 1, R12990 += 1 };
  s11 -> s2 [91, 98] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s11 -> s14 [99, 99] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s11 -> s2 [100, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s12 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s12 -> s12 [0, 65535] { R13076 += 1, R12990 += 1 };
  s12 -> s6 [91, 98] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s12 -> s16 [99, 99] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s12 -> s6 [100, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s14 -> s14 [0, 64] { R13076 += 1, R12990 += 1 };
  s14 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s14 -> s15 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s14 -> s16 [65, 65] { R13076 += 1, R12990 += 1 };
  s14 -> s17 [65, 65] { R13076 += 1, R12990 += 1 };
  s14 -> s18 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s14 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s14 -> s14 [66, 65535] { R13076 += 1, R12990 += 1 };
  s14 -> s2 [91, 96] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s14 -> s19 [97, 97] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s14 -> s2 [98, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s15 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s15 -> s15 [0, 65535] { R13076 += 1, R12990 += 1 };
  s15 -> s6 [91, 107] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s15 -> s22 [108, 108] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s15 -> s6 [109, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s16 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s16 -> s16 [0, 65535] { R13076 += 1, R12990 += 1 };
  s16 -> s6 [91, 96] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s16 -> s15 [97, 97] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s16 -> s6 [98, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s19 -> s19 [0, 64] { R13076 += 1, R12990 += 1 };
  s19 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s19 -> s15 [65, 65] { R13076 += 1, R12990 += 1 };
  s19 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s19 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s19 -> s18 [65, 65] { R13076 += 1, R12990 += 1 };
  s19 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s19 -> s19 [66, 65535] { R13076 += 1, R12990 += 1 };
  s19 -> s2 [91, 107] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s19 -> s20 [108, 108] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s19 -> s2 [109, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s20 -> s20 [0, 64] { R13076 += 1, R12990 += 1 };
  s20 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s20 -> s21 [65, 65] { R13076 += 1, R12990 += 1 };
  s20 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s20 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s20 -> s22 [65, 65] { R13076 += 1, R12990 += 1 };
  s20 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s20 -> s20 [66, 65535] { R13076 += 1, R12990 += 1 };
  s20 -> s2 [91, 103] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s20 -> s23 [104, 104] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s20 -> s2 [105, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s22 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s22 -> s22 [0, 65535] { R13076 += 1, R12990 += 1 };
  s22 -> s6 [91, 103] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s22 -> s24 [104, 104] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s22 -> s6 [105, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s23 -> s23 [0, 64] { R13076 += 1, R12990 += 1 };
  s23 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s23 -> s24 [65, 65] { R13076 += 1, R12990 += 1 };
  s23 -> s25 [65, 65] { R13076 += 1, R12990 += 1 };
  s23 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s23 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s23 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s23 -> s23 [66, 65535] { R13076 += 1, R12990 += 1 };
  s23 -> s2 [91, 110] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s23 -> s26 [111, 111] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s23 -> s2 [112, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s24 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s24 -> s24 [0, 65535] { R13076 += 1, R12990 += 1 };
  s24 -> s6 [91, 110] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s24 -> s27 [111, 111] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s24 -> s6 [112, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s26 -> s26 [0, 64] { R13076 += 1, R12990 += 1 };
  s26 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s26 -> s27 [65, 65] { R13076 += 1, R12990 += 1 };
  s26 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s26 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s26 -> s28 [65, 65] { R13076 += 1, R12990 += 1 };
  s26 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s26 -> s26 [66, 65535] { R13076 += 1, R12990 += 1 };
  s26 -> s2 [91, 114] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s26 -> s29 [115, 115] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s26 -> s2 [116, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s27 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s27 -> s27 [0, 65535] { R13076 += 1, R12990 += 1 };
  s27 -> s6 [91, 114] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s27 -> s30 [115, 115] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s27 -> s6 [116, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s29 -> s29 [0, 64] { R13076 += 1, R12990 += 1 };
  s29 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s29 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s29 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s29 -> s30 [65, 65] { R13076 += 1, R12990 += 1 };
  s29 -> s31 [65, 65] { R13076 += 1, R12990 += 1 };
  s29 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s29 -> s29 [66, 65535] { R13076 += 1, R12990 += 1 };
  s29 -> s2 [91, 115] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s29 -> s32 [116, 116] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s29 -> s2 [117, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s30 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s30 -> s30 [0, 65535] { R13076 += 1, R12990 += 1 };
  s30 -> s6 [91, 115] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s30 -> s33 [116, 116] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s30 -> s6 [117, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s32 -> s2 [0, 64] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s32 -> s6 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s32 -> s7 [65, 65] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s32 -> s2 [66, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s32 -> s2 [91, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s33 -> s6 [0, 81] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s33 -> s6 [91, 65535] { R13076 += 1, R12990 += 1, R8054 += 1 };
  s34 -> s34 [0, 65535];
  s35 -> s35 [0, 65535] { R13076 += 1 };
  s35 -> s34 [0, 65535];
  accepting s34, s2, s6, s7, s35;
};
automaton uri_56 {
  init s0;
  s0 -> s1 [0, 64] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s0 -> s2 [0, 64] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s0 -> s0 [0, 65535] { R13077 += 1, R13078 += 1 };
  s0 -> s3 [0, 65535] { R13078 += 1, R12991 += 1, R12992 += 1 };
  s0 -> s4 [65, 65] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s0 -> s5 [65, 65] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s0 -> s6 [65, 65] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s0 -> s7 [65, 65] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s0 -> s1 [66, 65535] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s0 -> s2 [66, 65535] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s1 -> s1 [0, 64] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R13078 += 1 };
  s1 -> s5 [65, 65] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s1 -> s7 [65, 65] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s1 -> s1 [66, 65535] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s2 -> s1 [0, 64] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s2 -> s2 [0, 64] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s2 -> s4 [65, 65] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s2 -> s5 [65, 65] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s2 -> s6 [65, 65] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s2 -> s7 [65, 65] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s2 -> s1 [66, 65535] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s2 -> s2 [66, 65535] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s3 -> s1 [0, 64] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s3 -> s2 [0, 64] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s3 -> s3 [0, 65535] { R13078 += 1, R12991 += 1, R12992 += 1 };
  s3 -> s4 [65, 65] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s3 -> s5 [65, 65] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s3 -> s6 [65, 65] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s3 -> s7 [65, 65] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s3 -> s1 [66, 65535] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s3 -> s2 [66, 65535] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R13078 += 1 };
  s6 -> s6 [0, 65535] { R13078 += 1, R12992 += 1, R10571 += 1, R10572 += 1 };
  s6 -> s7 [0, 65535] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R13078 += 1 };
  s7 -> s7 [0, 65535] { R13078 += 1, R12992 += 1, R10572 += 1, R10573 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13078 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton uri_57 {
  init s0;
  s0 -> s1 [0, 64] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s0 -> s2 [0, 64] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s0 -> s0 [0, 65535] { R13079 += 1, R13080 += 1 };
  s0 -> s3 [0, 65535] { R13080 += 1, R12993 += 1, R12994 += 1 };
  s0 -> s4 [65, 65] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s0 -> s5 [65, 65] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s0 -> s6 [65, 65] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s0 -> s7 [65, 65] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s0 -> s1 [66, 65535] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s0 -> s2 [66, 65535] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s1 -> s1 [0, 64] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s1 -> s2 [0, 64] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s1 -> s4 [65, 65] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s1 -> s5 [65, 65] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s1 -> s6 [65, 65] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s1 -> s7 [65, 65] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s1 -> s1 [66, 65535] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s1 -> s2 [66, 65535] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s2 -> s11 [0, 64] { R13080 += 1, R12994 += 1 };
  s2 -> s2 [0, 64] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s2 -> s8 [65, 65] { R13080 += 1, R12994 += 1 };
  s2 -> s6 [65, 65] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s2 -> s7 [65, 65] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s2 -> s12 [65, 65] { R13080 += 1, R12994 += 1 };
  s2 -> s11 [66, 65535] { R13080 += 1, R12994 += 1 };
  s2 -> s2 [66, 65535] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s3 -> s1 [0, 64] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s3 -> s2 [0, 64] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s3 -> s3 [0, 65535] { R13080 += 1, R12993 += 1, R12994 += 1 };
  s3 -> s4 [65, 65] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s3 -> s5 [65, 65] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s3 -> s6 [65, 65] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s3 -> s7 [65, 65] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s3 -> s1 [66, 65535] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s3 -> s2 [66, 65535] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s4 -> s4 [0, 65535] { R13080 += 1, R12994 += 1, R12249 += 1, R12250 += 1 };
  s4 -> s7 [0, 65535] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s7 -> s8 [0, 65535] { R13080 += 1, R12994 += 1 };
  s7 -> s7 [0, 65535] { R13080 += 1, R12994 += 1, R12250 += 1, R12251 += 1 };
  s8 -> s8 [0, 65535] { R13080 += 1, R12994 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R13080 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13080 += 1 };
  s11 -> s11 [0, 64] { R13080 += 1, R12994 += 1 };
  s11 -> s11 [0, 65535] { R13080 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s8 [65, 65] { R13080 += 1, R12994 += 1 };
  s11 -> s12 [65, 65] { R13080 += 1, R12994 += 1 };
  s11 -> s11 [66, 65535] { R13080 += 1, R12994 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R13080 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton uri_58 {
  init s0;
  s0 -> s1 [0, 64] { R13082 += 1, R12996 += 1 };
  s0 -> s2 [0, 65535] { R13082 += 1, R12995 += 1, R12996 += 1 };
  s0 -> s0 [0, 65535] { R13081 += 1, R13082 += 1 };
  s0 -> s3 [65, 65] { R13082 += 1, R12996 += 1 };
  s0 -> s4 [65, 65] { R13082 += 1, R12996 += 1 };
  s0 -> s1 [66, 65535] { R13082 += 1, R12996 += 1 };
  s1 -> s1 [0, 64] { R13082 += 1, R12996 += 1 };
  s1 -> s1 [0, 65535] { R13082 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R13082 += 1, R12996 += 1 };
  s1 -> s4 [65, 65] { R13082 += 1, R12996 += 1 };
  s1 -> s1 [66, 65535] { R13082 += 1, R12996 += 1 };
  s2 -> s1 [0, 64] { R13082 += 1, R12996 += 1 };
  s2 -> s2 [0, 65535] { R13082 += 1, R12995 += 1, R12996 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R13082 += 1, R12996 += 1 };
  s2 -> s4 [65, 65] { R13082 += 1, R12996 += 1 };
  s2 -> s1 [66, 65535] { R13082 += 1, R12996 += 1 };
  s3 -> s3 [0, 65535] { R13082 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13082 += 1, R12996 += 1 };
  s4 -> s5 [0, 65535] { R13082 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13082 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_59 {
  init s0;
  s0 -> s1 [0, 64] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s0 -> s2 [0, 64] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s0 -> s0 [0, 65535] { R13083 += 1, R13084 += 1 };
  s0 -> s3 [0, 65535] { R13084 += 1, R12997 += 1, R12998 += 1 };
  s0 -> s4 [65, 65] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s0 -> s5 [65, 65] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s0 -> s6 [65, 65] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s0 -> s7 [65, 65] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s0 -> s2 [66, 80] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s0 -> s1 [66, 65535] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s0 -> s8 [81, 81] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s0 -> s2 [82, 65535] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s1 -> s1 [0, 64] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s1 -> s2 [0, 64] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s1 -> s4 [65, 65] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s1 -> s5 [65, 65] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s1 -> s6 [65, 65] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s1 -> s7 [65, 65] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s1 -> s2 [66, 80] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s1 -> s1 [66, 65535] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s1 -> s8 [81, 81] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s1 -> s2 [82, 65535] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s2 -> s2 [0, 64] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s2 -> s5 [65, 65] { R13084 += 1, R12998 += 1 };
  s2 -> s6 [65, 65] { R13084 += 1, R12998 += 1 };
  s2 -> s2 [66, 80] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s2 -> s2 [66, 65535] { R13084 += 1, R12998 += 1 };
  s2 -> s8 [81, 81] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s2 -> s2 [82, 65535] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s3 -> s1 [0, 64] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s3 -> s2 [0, 64] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s3 -> s3 [0, 65535] { R13084 += 1, R12997 += 1, R12998 += 1 };
  s3 -> s4 [65, 65] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s3 -> s5 [65, 65] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s3 -> s6 [65, 65] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s3 -> s7 [65, 65] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s3 -> s2 [66, 80] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s3 -> s1 [66, 65535] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s3 -> s8 [81, 81] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s3 -> s2 [82, 65535] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s4 -> s5 [0, 80] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s4 -> s4 [0, 65535] { R13084 += 1, R12998 += 1, R12919 += 1, R12920 += 1 };
  s4 -> s13 [81, 81] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s4 -> s5 [82, 65535] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s5 -> s5 [0, 80] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s5 -> s5 [0, 65535] { R13084 += 1, R12998 += 1 };
  s5 -> s13 [81, 81] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s5 -> s5 [82, 65535] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s8 -> s8 [0, 64] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s8 -> s9 [0, 64] { R13084 += 1, R12998 += 1 };
  s8 -> s10 [65, 65] { R13084 += 1, R12998 += 1 };
  s8 -> s11 [65, 65] { R13084 += 1, R12998 += 1 };
  s8 -> s12 [65, 65] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s8 -> s13 [65, 65] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s8 -> s8 [66, 65535] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s8 -> s9 [66, 65535] { R13084 += 1, R12998 += 1 };
  s9 -> s9 [0, 64] { R13084 += 1, R12998 += 1 };
  s9 -> s9 [0, 65535] { R13084 += 1 };
  s9 -> s14 [0, 65535];
  s9 -> s10 [65, 65] { R13084 += 1, R12998 += 1 };
  s9 -> s11 [65, 65] { R13084 += 1, R12998 += 1 };
  s9 -> s9 [66, 65535] { R13084 += 1, R12998 += 1 };
  s10 -> s10 [0, 65535] { R13084 += 1, R12998 += 1 };
  s10 -> s14 [0, 65535];
  s10 -> s15 [0, 65535] { R13084 += 1 };
  s11 -> s14 [0, 65535];
  s11 -> s11 [0, 65535] { R13084 += 1 };
  s13 -> s10 [0, 65535] { R13084 += 1, R12998 += 1 };
  s13 -> s13 [0, 65535] { R13084 += 1, R12998 += 1, R12920 += 1, R12921 += 1 };
  s14 -> s14 [0, 65535];
  s15 -> s14 [0, 65535];
  s15 -> s15 [0, 65535] { R13084 += 1 };
  accepting s9, s14, s15, s10, s11;
};
};
synchronised {  // Automata constraining P89
automaton P89_0 {
  init s0;
  s0 -> s1 [121, 121];
  accepting s1;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining P61
automaton P61_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
constraint R4 = R12948 && R5 = R13084 && R33 = 0 && R34 = 1 && R35 = 0 && R36 = 1 && R68 + R67 = 0 && R12925 = 0 && R12926 = R12948 && R12927 = 0 && R12928 = R12948 && R12929 = 0 && R12930 = R12948 && R12931 = 0 && R12932 = R12948 && R12933 = 0 && R12934 = R12948 && R12935 = 0 && R12936 = R12948 && R12937 = 0 && R12938 = R12948 && R12939 = 0 && R12940 = R12948 && R12941 = 0 && R12942 = R12948 && R12943 = 0 && R12944 = R12948 && R12945 = 0 && R12946 = R12948 && R12947 = 0 && R12949 = 0 && R12950 = R13084 && R12951 = 0 && R12952 = R13084 && R12953 = 0 && R12954 = R13084 && R12955 = 0 && R12956 = R13084 && R12957 = 0 && R12958 = R13084 && R12959 = 0 && R12960 = R13084 && R12961 = 0 && R12962 = R13084 && R12963 = 0 && R12964 = R13084 && R12965 = 0 && R12966 = R13084 && R12967 = 0 && R12968 = R13084 && R12969 = 0 && R12970 = R13084 && R12971 = 0 && R12972 = R13084 && R12973 = 0 && R12974 = R13084 && R12975 = 0 && R12976 = R13084 && R12979 = 0 && R12980 = 0 && R12989 = 0 && R12990 = 0 && R12991 = 0 && R12992 = 0 && R12993 = 0 && R12994 = 0 && R12997 = 0 && R12998 = 0 && R13027 = 10 && R13028 = R13084 && R13029 = 10 && R13030 = R13084 && R13031 = 10 && R13032 = R13084 && R13033 = 10 && R13034 = R13084 && R13035 = 10 && R13036 = R13084 && R13037 = 10 && R13038 = R13084 && R13039 = 10 && R13040 = R13084 && R13041 = 10 && R13042 = R13084 && R13043 = 10 && R13044 = R13084 && R13045 = 10 && R13046 = R13084 && R13047 = 10 && R13048 = R13084 && R13049 = 10 && R13050 = R13084 && R13051 = 10 && R13052 = R13084 && R13053 = 10 && R13054 = R13084 && R13055 = 10 && R13056 = R13084 && R13057 = 10 && R13058 = R13084 && R13059 = 10 && R13060 = R13084 && R13061 = 10 && R13062 = R13084 && R13063 = 10 && R13064 = R13084 && R13065 = 10 && R13066 = R13084 && R13067 = 10 && R13068 = R13084 && R13069 = 10 && R13070 = R13084 && R13071 = 10 && R13072 = R13084 && R13073 = 10 && R13074 = R13084 && R13075 = 10 && R13076 = R13084 && R13077 = 10 && R13078 = R13084 && R13079 = 10 && R13080 = R13084 && R13081 = 10 && R13082 = R13084 && R13083 = 10 && R94 + R91 + R112 + R109 != 0 && R10576 + R10573 + R12924 + R12921 != 0 && R16 < 1 && R17 < 1 && R20 < 1 && R70 + R69 < 1 && R72 + R71 < 1 && -1*R494 + -1*R493 < 1 && R496 + R495 < 1 && 0 < R12948 && 9 < R13084 && (R494 + R493 != 0 || R506 + R503 = 0 || (R499 + R497 = 0 && R500 + R498 = 0)) && (R494 + R493 != 0 || R506 + R503 = 0 || (R504 + R501 = 0 && R505 + R502 = 0)) && (R494 + R493 != 0 || R506 + R503 = 0 || (R8055 + R8053 = 0 && R8056 + R8054 = 0)) && (R494 + R493 != 0 || R506 + R503 = 0 || (R10574 + R10571 = 0 && R10575 + R10572 = 0)) && (R499 + R497 != 0 || R494 + R493 + -1*R500 + -1*R498 = 0 || R494 + R493 < 1) && (R504 + R501 != 0 || R494 + R493 + -1*R505 + -1*R502 = 0 || R494 + R493 < 1) && (R8055 + R8053 != 0 || R494 + R493 + -1*R8056 + -1*R8054 = 0 || R494 + R493 < 1) && (R10574 + R10571 != 0 || R494 + R493 + -1*R10575 + -1*R10572 = 0 || R494 + R493 < 1) && (R30 = 0 || (R12977 = 0 && R12978 = 0)) && (R30 = 0 || (R12981 = 0 && R12982 = 0)) && (R30 = 0 || (R12983 = 0 && R12984 = 0)) && (R30 = 0 || (R12985 = 0 && R12986 = 0)) && (R30 = 0 || (R12987 = 0 && R12988 = 0)) && (R30 = 0 || (R12995 = 0 && R12996 = 0)) && (R32 = 0 || (R12999 = 0 && R13000 = 0)) && (R32 = 0 || (R13001 = 0 && R13002 = 0)) && (R32 = 0 || (R13003 = 0 && R13004 = 0)) && (R32 = 0 || (R13005 = 0 && R13006 = 0)) && (R32 = 0 || (R13007 = 0 && R13008 = 0)) && (R32 = 0 || (R13009 = 0 && R13010 = 0)) && (R32 = 0 || (R13011 = 0 && R13012 = 0)) && (R32 = 0 || (R13013 = 0 && R13014 = 0)) && (R32 = 0 || (R13015 = 0 && R13016 = 0)) && (R32 = 0 || (R13017 = 0 && R13018 = 0)) && (R32 = 0 || (R13019 = 0 && R13020 = 0)) && (R32 = 0 || (R13021 = 0 && R13022 = 0)) && (R32 = 0 || (R13023 = 0 && R13024 = 0)) && (R32 = 0 || (R13025 = 0 && R13026 = 0)) && (R78 + R75 = 0 || (R76 + R73 = 0 && R77 + R74 = 0)) && (R84 + R81 = 0 || (R82 + R79 = 0 && R83 + R80 = 0)) && (R84 + R81 = 0 || (R87 + R85 = 0 && R88 + R86 = 0)) && (R84 + R81 = 0 || (R92 + R89 = 0 && R93 + R90 = 0)) && (R100 + R97 = 0 || (R98 + R95 = 0 && R99 + R96 = 0)) && (R106 + R103 = 0 || (R104 + R101 = 0 && R105 + R102 = 0)) && (R106 + R103 = 0 || (R110 + R107 = 0 && R111 + R108 = 0)) && (R499 + R497 = 0 || R494 + R493 < 1) && (R504 + R501 = 0 || R494 + R493 < 1) && (R8055 + R8053 = 0 || R494 + R493 < 1) && (R10574 + R10571 = 0 || R494 + R493 < 1) && (R12254 + R12251 = 0 || (R12252 + R12249 = 0 && R12253 + R12250 = 0)) && (R12254 + R12251 = 0 || (R12922 + R12919 = 0 && R12923 + R12920 = 0));
// End of Parikh automata intersection problem
