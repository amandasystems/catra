// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R120, R121, R122, R123, R124, R125, R126, R127, R128, R129, R130, R131, R132, R133, R134, R18, R19, R22, R25, R2647, R2648, R2649, R2650, R2651, R2652, R28, R2853, R2854, R2855, R2856, R2857, R2858, R2859, R2860, R2861, R2862, R2863, R2864, R2865, R2866, R2867, R2868, R2869, R2870, R2871, R2872, R2873, R2874, R2875, R2876, R2877, R2878, R2879, R2880, R2881, R2882, R2883, R2884, R2885, R2886, R2887, R2888, R2889, R2890, R2891, R2892, R2893, R2894, R2895, R2896, R2897, R2898, R2899, R2900, R2901, R2902, R2903, R2904, R2905, R2906, R2907, R2908, R2909, R2910, R2911, R2912, R2913, R2914, R2915, R2916, R2917, R2918, R2919, R2920, R2921, R2922, R2923, R2924, R2925, R2926, R2927, R2928, R2929, R2930, R2931, R2932, R2933, R2934, R2935, R2936, R2937, R2938, R2939, R2940, R2941, R2942, R2943, R2944, R2945, R2946, R2947, R2948, R2949, R2950, R2951, R2952, R2953, R2954, R2955, R2956, R2957, R2958, R2959, R2960, R2961, R2962, R2963, R2964, R2965, R2966, R2967, R2968, R2969, R2970, R2971, R2972, R2973, R2974, R2975, R2976, R2977, R2978, R2979, R2980, R2981, R2982, R2983, R2984, R2985, R2986, R2987, R2988, R2989, R2990, R2991, R2992, R2993, R2994, R2995, R2996, R2997, R2998, R2999, R3000, R3001, R3002, R3003, R3004, R3005, R3006, R3007, R3008, R3009, R3010, R3011, R3012, R3013, R3014, R3015, R3016, R3017, R3018, R3019, R3020, R3021, R3022, R3023, R3024, R3025, R3026, R3027, R3028, R3029, R3030, R3031, R3032, R3033, R3034, R3035, R3036, R3037, R3038, R3039, R3040, R3041, R3042, R3043, R3044, R3045, R3046, R3047, R3048, R3049, R3050, R3051, R3052, R37, R38, R39, R40, R41, R42, R43, R44, R45, R46, R47, R48, R51, R52, R53, R54, R597, R598, R599, R6, R600, R601, R602, R603, R604, R605, R606, R607, R608, R609, R610, R611, R612, R613, R614, R615, R616, R617, R618, R619, R620, R621, R622, R623, R624, R625, R626, R627, R628, R629, R630, R631, R632, R633, R634, R7, R73, R74, R75, R76, R77, R78, R79, R8, R80, R81, R82, R83, R84, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining P104
automaton P104_0 {
  init s0;
  s0 -> s1 [114, 114];
  accepting s1;
};
};
synchronised {  // Automata constraining P63
automaton P63_0 {
  init s0;
  s0 -> s1 [112, 112];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R7 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 65];
  s0 -> s0 [0, 65535] { R25 += 1 };
  s0 -> s2 [66, 66];
  s0 -> s1 [67, 65535];
  s1 -> s1 [0, 65];
  s1 -> s2 [66, 66];
  s1 -> s1 [67, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 64];
  s0 -> s0 [0, 65535] { R28 += 1 };
  s0 -> s2 [65, 65];
  s0 -> s1 [66, 65535];
  s1 -> s1 [0, 64];
  s1 -> s2 [65, 65];
  s1 -> s1 [66, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_4 {
  init s0;
  s0 -> s0 [0, 65535] { R79 += 1, R80 += 1 };
  s0 -> s1 [0, 65535] { R80 += 1, R42 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R80 += 1, R42 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 107] { R82 += 1 };
  s0 -> s0 [0, 65535] { R81 += 1, R82 += 1 };
  s0 -> s2 [108, 108] { R82 += 1 };
  s0 -> s1 [109, 65535] { R82 += 1 };
  s1 -> s11 [0, 65535];
  s1 -> s1 [0, 65535] { R82 += 1 };
  s2 -> s1 [0, 110] { R82 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s3 [111, 111] { R82 += 1 };
  s2 -> s1 [112, 65535] { R82 += 1 };
  s3 -> s1 [0, 98] { R82 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [99, 99] { R82 += 1 };
  s3 -> s1 [100, 65535] { R82 += 1 };
  s4 -> s1 [0, 96] { R82 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s5 [97, 97] { R82 += 1 };
  s4 -> s1 [98, 65535] { R82 += 1 };
  s5 -> s1 [0, 107] { R82 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s6 [108, 108] { R82 += 1 };
  s5 -> s1 [109, 65535] { R82 += 1 };
  s6 -> s1 [0, 103] { R82 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s7 [104, 104] { R82 += 1 };
  s6 -> s1 [105, 65535] { R82 += 1 };
  s7 -> s1 [0, 110] { R82 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s8 [111, 111] { R82 += 1 };
  s7 -> s1 [112, 65535] { R82 += 1 };
  s8 -> s1 [0, 114] { R82 += 1 };
  s8 -> s8 [0, 65535];
  s8 -> s9 [115, 115] { R82 += 1 };
  s8 -> s1 [116, 65535] { R82 += 1 };
  s9 -> s1 [0, 115] { R82 += 1 };
  s9 -> s9 [0, 65535];
  s9 -> s10 [116, 116] { R82 += 1 };
  s9 -> s1 [117, 65535] { R82 += 1 };
  s10 -> s1 [0, 65535] { R82 += 1 };
  s11 -> s11 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s11;
};
automaton uri_6 {
  init s0;
  s0 -> s0 [0, 65535] { R83 += 1, R84 += 1 };
  s0 -> s1 [0, 65535] { R84 += 1, R54 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R84 += 1, R54 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_7 {
  init s0;
  s0 -> s0 [0, 65535] { R99 += 1, R100 += 1 };
  s0 -> s1 [0, 65535] { R100 += 1, R44 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R100 += 1, R44 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_8 {
  init s0;
  s0 -> s0 [0, 65535];
  accepting s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65] { R102 += 1, R53 += 1 };
  s0 -> s0 [0, 65535] { R101 += 1, R102 += 1 };
  s0 -> s2 [66, 66] { R102 += 1, R53 += 1 };
  s0 -> s3 [66, 66] { R102 += 1, R53 += 1 };
  s0 -> s1 [67, 65535] { R102 += 1, R53 += 1 };
  s1 -> s1 [0, 65] { R102 += 1, R53 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [66, 66] { R102 += 1, R53 += 1 };
  s1 -> s3 [66, 66] { R102 += 1, R53 += 1 };
  s1 -> s1 [67, 65535] { R102 += 1, R53 += 1 };
  s2 -> s2 [0, 65535] { R102 += 1, R53 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s0 [0, 65535] { R2893 += 1, R2894 += 1 };
  s0 -> s1 [0, 65535] { R2894 += 1, R41 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2894 += 1, R41 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_11 {
  init s0;
  s0 -> s0 [0, 65535] { R2895 += 1, R2896 += 1 };
  s0 -> s1 [0, 65535] { R2896 += 1, R104 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2896 += 1, R104 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 76] { R2898 += 1 };
  s0 -> s0 [0, 65535] { R2897 += 1, R2898 += 1 };
  s0 -> s2 [0, 65535] { R2898 += 1, R106 += 1 };
  s0 -> s1 [78, 65535] { R2898 += 1 };
  s1 -> s1 [0, 76] { R2898 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [78, 65535] { R2898 += 1 };
  s2 -> s1 [0, 76] { R2898 += 1 };
  s2 -> s2 [0, 65535] { R2898 += 1, R106 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [78, 65535] { R2898 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R2900 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R2899 += 1, R2900 += 1 };
  s0 -> s2 [0, 65535] { R2900 += 1, R110 += 1, R111 += 1 };
  s1 -> s1 [0, 65535] { R2900 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2900 += 1 };
  s2 -> s1 [0, 65535] { R2900 += 1, R111 += 1, R112 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2900 += 1, R110 += 1, R111 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2900 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 107] { R2902 += 1, R116 += 1 };
  s0 -> s2 [0, 65535] { R2902 += 1, R115 += 1, R116 += 1 };
  s0 -> s0 [0, 65535] { R2901 += 1, R2902 += 1 };
  s0 -> s3 [108, 108] { R2902 += 1, R116 += 1 };
  s0 -> s1 [109, 65535] { R2902 += 1, R116 += 1 };
  s1 -> s13 [0, 65535] { R2902 += 1 };
  s1 -> s1 [0, 65535] { R2902 += 1, R116 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 107] { R2902 += 1, R116 += 1 };
  s2 -> s2 [0, 65535] { R2902 += 1, R115 += 1, R116 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R2902 += 1, R116 += 1 };
  s2 -> s1 [109, 65535] { R2902 += 1, R116 += 1 };
  s3 -> s1 [0, 110] { R2902 += 1, R116 += 1 };
  s3 -> s3 [0, 65535] { R2902 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [111, 111] { R2902 += 1, R116 += 1 };
  s3 -> s1 [112, 65535] { R2902 += 1, R116 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R2902 += 1, R116 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2902 += 1 };
  s5 -> s6 [99, 99] { R2902 += 1, R116 += 1 };
  s5 -> s1 [100, 65535] { R2902 += 1, R116 += 1 };
  s6 -> s1 [0, 96] { R2902 += 1, R116 += 1 };
  s6 -> s6 [0, 65535] { R2902 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s7 [97, 97] { R2902 += 1, R116 += 1 };
  s6 -> s1 [98, 65535] { R2902 += 1, R116 += 1 };
  s7 -> s1 [0, 107] { R2902 += 1, R116 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s7 [0, 65535] { R2902 += 1 };
  s7 -> s8 [108, 108] { R2902 += 1, R116 += 1 };
  s7 -> s1 [109, 65535] { R2902 += 1, R116 += 1 };
  s8 -> s1 [0, 103] { R2902 += 1, R116 += 1 };
  s8 -> s8 [0, 65535] { R2902 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s9 [104, 104] { R2902 += 1, R116 += 1 };
  s8 -> s1 [105, 65535] { R2902 += 1, R116 += 1 };
  s9 -> s1 [0, 110] { R2902 += 1, R116 += 1 };
  s9 -> s9 [0, 65535] { R2902 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s10 [111, 111] { R2902 += 1, R116 += 1 };
  s9 -> s1 [112, 65535] { R2902 += 1, R116 += 1 };
  s10 -> s1 [0, 114] { R2902 += 1, R116 += 1 };
  s10 -> s10 [0, 65535] { R2902 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s11 [115, 115] { R2902 += 1, R116 += 1 };
  s10 -> s1 [116, 65535] { R2902 += 1, R116 += 1 };
  s11 -> s1 [0, 115] { R2902 += 1, R116 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s11 [0, 65535] { R2902 += 1 };
  s11 -> s12 [116, 116] { R2902 += 1, R116 += 1 };
  s11 -> s1 [117, 65535] { R2902 += 1, R116 += 1 };
  s12 -> s1 [0, 65535] { R2902 += 1, R116 += 1 };
  s13 -> s13 [0, 65535] { R2902 += 1 };
  s13 -> s4 [0, 65535];
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R2904 += 1, R121 += 1, R122 += 1 };
  s0 -> s0 [0, 65535] { R2903 += 1, R2904 += 1 };
  s0 -> s2 [0, 65535] { R2904 += 1, R120 += 1, R121 += 1 };
  s1 -> s1 [0, 65535] { R2904 += 1, R121 += 1, R122 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2904 += 1 };
  s2 -> s1 [0, 65535] { R2904 += 1, R121 += 1, R122 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2904 += 1, R120 += 1, R121 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2904 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s0 [0, 65535] { R2905 += 1, R2906 += 1 };
  s0 -> s1 [0, 65535] { R2906 += 1, R127 += 1, R128 += 1 };
  s0 -> s2 [0, 65535] { R2906 += 1, R126 += 1, R127 += 1 };
  s1 -> s4 [0, 65535] { R2906 += 1 };
  s1 -> s1 [0, 65535] { R2906 += 1, R127 += 1, R128 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2906 += 1, R127 += 1, R128 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2906 += 1, R126 += 1, R127 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2906 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s0 [0, 65535] { R2907 += 1, R2908 += 1 };
  s0 -> s1 [0, 65535] { R2908 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2908 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 76] { R2910 += 1, R133 += 1, R134 += 1 };
  s0 -> s0 [0, 65535] { R2909 += 1, R2910 += 1 };
  s0 -> s2 [0, 65535] { R2910 += 1, R132 += 1, R133 += 1 };
  s0 -> s3 [77, 77] { R2910 += 1, R133 += 1, R134 += 1 };
  s0 -> s4 [77, 77] { R2910 += 1, R133 += 1, R134 += 1 };
  s0 -> s1 [78, 65535] { R2910 += 1, R133 += 1, R134 += 1 };
  s1 -> s1 [0, 76] { R2910 += 1, R133 += 1, R134 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2910 += 1 };
  s1 -> s3 [77, 77] { R2910 += 1, R133 += 1, R134 += 1 };
  s1 -> s4 [77, 77] { R2910 += 1, R133 += 1, R134 += 1 };
  s1 -> s1 [78, 65535] { R2910 += 1, R133 += 1, R134 += 1 };
  s2 -> s1 [0, 76] { R2910 += 1, R133 += 1, R134 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2910 += 1, R132 += 1, R133 += 1 };
  s2 -> s3 [77, 77] { R2910 += 1, R133 += 1, R134 += 1 };
  s2 -> s4 [77, 77] { R2910 += 1, R133 += 1, R134 += 1 };
  s2 -> s1 [78, 65535] { R2910 += 1, R133 += 1, R134 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2910 += 1, R133 += 1, R134 += 1 };
  s3 -> s6 [0, 65535] { R2910 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2910 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2910 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R2944 += 1, R43 += 1 };
  s0 -> s0 [0, 65535] { R2943 += 1, R2944 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2944 += 1, R43 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 64] { R2946 += 1, R103 += 1 };
  s0 -> s0 [0, 65535] { R2945 += 1, R2946 += 1 };
  s0 -> s2 [65, 65] { R2946 += 1, R103 += 1 };
  s0 -> s3 [65, 65] { R2946 += 1, R103 += 1 };
  s0 -> s1 [66, 65535] { R2946 += 1, R103 += 1 };
  s1 -> s1 [0, 64] { R2946 += 1, R103 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2946 += 1, R103 += 1 };
  s1 -> s3 [65, 65] { R2946 += 1, R103 += 1 };
  s1 -> s1 [66, 65535] { R2946 += 1, R103 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2946 += 1, R103 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 64] { R2948 += 1, R105 += 1 };
  s0 -> s0 [0, 65535] { R2947 += 1, R2948 += 1 };
  s0 -> s2 [65, 65] { R2948 += 1, R105 += 1 };
  s0 -> s3 [65, 65] { R2948 += 1, R105 += 1 };
  s0 -> s1 [66, 65535] { R2948 += 1, R105 += 1 };
  s1 -> s1 [0, 64] { R2948 += 1, R105 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2948 += 1, R105 += 1 };
  s1 -> s3 [65, 65] { R2948 += 1, R105 += 1 };
  s1 -> s1 [66, 65535] { R2948 += 1, R105 += 1 };
  s2 -> s2 [0, 65535] { R2948 += 1, R105 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 64] { R2950 += 1, R107 += 1, R108 += 1 };
  s0 -> s0 [0, 65535] { R2949 += 1, R2950 += 1 };
  s0 -> s2 [65, 65] { R2950 += 1, R107 += 1, R108 += 1 };
  s0 -> s3 [65, 65] { R2950 += 1, R107 += 1, R108 += 1 };
  s0 -> s1 [66, 65535] { R2950 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 64] { R2950 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2950 += 1, R107 += 1, R108 += 1 };
  s1 -> s3 [65, 65] { R2950 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [66, 65535] { R2950 += 1, R107 += 1, R108 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2950 += 1, R107 += 1, R108 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 64] { R2952 += 1, R113 += 1, R114 += 1 };
  s0 -> s0 [0, 65535] { R2951 += 1, R2952 += 1 };
  s0 -> s2 [65, 65] { R2952 += 1, R113 += 1, R114 += 1 };
  s0 -> s3 [65, 65] { R2952 += 1, R113 += 1, R114 += 1 };
  s0 -> s1 [66, 65535] { R2952 += 1, R113 += 1, R114 += 1 };
  s1 -> s1 [0, 64] { R2952 += 1, R113 += 1, R114 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2952 += 1, R113 += 1, R114 += 1 };
  s1 -> s3 [65, 65] { R2952 += 1, R113 += 1, R114 += 1 };
  s1 -> s1 [66, 65535] { R2952 += 1, R113 += 1, R114 += 1 };
  s2 -> s2 [0, 65535] { R2952 += 1, R113 += 1, R114 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 64] { R2954 += 1, R117 += 1, R118 += 1 };
  s0 -> s0 [0, 65535] { R2953 += 1, R2954 += 1 };
  s0 -> s2 [65, 65] { R2954 += 1, R117 += 1, R118 += 1 };
  s0 -> s3 [65, 65] { R2954 += 1, R117 += 1, R118 += 1 };
  s0 -> s1 [66, 65535] { R2954 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [0, 64] { R2954 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2954 += 1, R117 += 1, R118 += 1 };
  s1 -> s3 [65, 65] { R2954 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [66, 65535] { R2954 += 1, R117 += 1, R118 += 1 };
  s2 -> s2 [0, 65535] { R2954 += 1, R117 += 1, R118 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 64] { R2956 += 1, R123 += 1, R124 += 1 };
  s0 -> s0 [0, 65535] { R2955 += 1, R2956 += 1 };
  s0 -> s2 [65, 65] { R2956 += 1, R123 += 1, R124 += 1 };
  s0 -> s3 [65, 65] { R2956 += 1, R123 += 1, R124 += 1 };
  s0 -> s1 [66, 65535] { R2956 += 1, R123 += 1, R124 += 1 };
  s1 -> s1 [0, 64] { R2956 += 1, R123 += 1, R124 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2956 += 1, R123 += 1, R124 += 1 };
  s1 -> s3 [65, 65] { R2956 += 1, R123 += 1, R124 += 1 };
  s1 -> s1 [66, 65535] { R2956 += 1, R123 += 1, R124 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R2956 += 1, R123 += 1, R124 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R2958 += 1 };
  s0 -> s0 [0, 65535] { R2957 += 1, R2958 += 1 };
  s0 -> s2 [65, 65] { R2958 += 1 };
  s0 -> s3 [65, 65] { R2958 += 1 };
  s0 -> s1 [66, 65535] { R2958 += 1 };
  s1 -> s1 [0, 64] { R2958 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2958 += 1 };
  s1 -> s3 [65, 65] { R2958 += 1 };
  s1 -> s1 [66, 65535] { R2958 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2958 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R2960 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R2959 += 1, R2960 += 1 };
  s0 -> s2 [65, 65] { R2960 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [65, 65] { R2960 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [66, 65535] { R2960 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 64] { R2960 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R2960 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [65, 65] { R2960 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [66, 65535] { R2960 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2960 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 43] { R2962 += 1 };
  s0 -> s0 [0, 65535] { R2961 += 1, R2962 += 1 };
  s0 -> s1 [45, 45] { R2962 += 1 };
  s0 -> s2 [46, 46] { R2962 += 1 };
  s0 -> s1 [48, 62] { R2962 += 1 };
  s0 -> s3 [65, 65] { R2962 += 1 };
  s0 -> s1 [66, 65535] { R2962 += 1 };
  s1 -> s1 [0, 43] { R2962 += 1 };
  s1 -> s1 [45, 45] { R2962 += 1 };
  s1 -> s2 [46, 46] { R2962 += 1 };
  s1 -> s1 [48, 62] { R2962 += 1 };
  s1 -> s3 [65, 65] { R2962 += 1 };
  s1 -> s1 [66, 65535] { R2962 += 1 };
  s2 -> s1 [0, 43] { R2962 += 1 };
  s2 -> s1 [45, 45] { R2962 += 1 };
  s2 -> s2 [46, 46] { R2962 += 1 };
  s2 -> s1 [48, 62] { R2962 += 1 };
  s2 -> s3 [65, 65] { R2962 += 1 };
  s2 -> s1 [66, 114] { R2962 += 1 };
  s2 -> s8 [115, 115] { R2962 += 1 };
  s2 -> s1 [116, 65535] { R2962 += 1 };
  s3 -> s3 [0, 43] { R2962 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R2962 += 1 };
  s3 -> s4 [46, 46] { R2962 += 1 };
  s3 -> s3 [48, 62] { R2962 += 1 };
  s3 -> s3 [65, 65535] { R2962 += 1 };
  s4 -> s3 [0, 43] { R2962 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R2962 += 1 };
  s4 -> s4 [46, 46] { R2962 += 1 };
  s4 -> s3 [48, 62] { R2962 += 1 };
  s4 -> s3 [65, 114] { R2962 += 1 };
  s4 -> s5 [115, 115] { R2962 += 1 };
  s4 -> s3 [116, 65535] { R2962 += 1 };
  s5 -> s3 [0, 43] { R2962 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R2962 += 1 };
  s5 -> s4 [46, 46] { R2962 += 1 };
  s5 -> s3 [48, 62] { R2962 += 1 };
  s5 -> s3 [65, 110] { R2962 += 1 };
  s5 -> s6 [111, 111] { R2962 += 1 };
  s5 -> s3 [112, 65535] { R2962 += 1 };
  s6 -> s3 [0, 43] { R2962 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R2962 += 1 };
  s6 -> s4 [46, 46] { R2962 += 1 };
  s6 -> s3 [48, 62] { R2962 += 1 };
  s6 -> s3 [65, 98] { R2962 += 1 };
  s6 -> s7 [99, 99] { R2962 += 1 };
  s6 -> s3 [100, 65535] { R2962 += 1 };
  s7 -> s3 [0, 43] { R2962 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R2962 += 1 };
  s7 -> s4 [46, 46] { R2962 += 1 };
  s7 -> s3 [48, 62] { R2962 += 1 };
  s7 -> s3 [65, 106] { R2962 += 1 };
  s7 -> s3 [108, 65535] { R2962 += 1 };
  s8 -> s1 [0, 43] { R2962 += 1 };
  s8 -> s1 [45, 45] { R2962 += 1 };
  s8 -> s2 [46, 46] { R2962 += 1 };
  s8 -> s1 [48, 62] { R2962 += 1 };
  s8 -> s3 [65, 65] { R2962 += 1 };
  s8 -> s1 [66, 110] { R2962 += 1 };
  s8 -> s9 [111, 111] { R2962 += 1 };
  s8 -> s1 [112, 65535] { R2962 += 1 };
  s9 -> s1 [0, 43] { R2962 += 1 };
  s9 -> s1 [45, 45] { R2962 += 1 };
  s9 -> s2 [46, 46] { R2962 += 1 };
  s9 -> s1 [48, 62] { R2962 += 1 };
  s9 -> s3 [65, 65] { R2962 += 1 };
  s9 -> s1 [66, 98] { R2962 += 1 };
  s9 -> s10 [99, 99] { R2962 += 1 };
  s9 -> s1 [100, 65535] { R2962 += 1 };
  s10 -> s1 [0, 43] { R2962 += 1 };
  s10 -> s1 [45, 45] { R2962 += 1 };
  s10 -> s2 [46, 46] { R2962 += 1 };
  s10 -> s1 [48, 62] { R2962 += 1 };
  s10 -> s3 [65, 65] { R2962 += 1 };
  s10 -> s1 [66, 106] { R2962 += 1 };
  s10 -> s1 [108, 65535] { R2962 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_29 {
  init s0;
  s0 -> s0 [0, 65535] { R2963 += 1, R2964 += 1 };
  s0 -> s1 [0, 65535] { R2964 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2964 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 57] { R2966 += 1 };
  s0 -> s2 [0, 65535] { R2966 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R2965 += 1, R2966 += 1 };
  s0 -> s3 [58, 58] { R2966 += 1 };
  s0 -> s1 [59, 65535] { R2966 += 1 };
  s1 -> s1 [0, 57] { R2966 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R2966 += 1 };
  s1 -> s1 [59, 65535] { R2966 += 1 };
  s2 -> s1 [0, 57] { R2966 += 1 };
  s2 -> s2 [0, 65535] { R2966 += 1, R18 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [58, 58] { R2966 += 1 };
  s2 -> s1 [59, 65535] { R2966 += 1 };
  s3 -> s3 [0, 65535] { R2966 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 42] { R2968 += 1 };
  s0 -> s0 [0, 65535] { R2967 += 1, R2968 += 1 };
  s0 -> s2 [0, 65535] { R2968 += 1, R19 += 1 };
  s0 -> s3 [43, 43] { R2968 += 1 };
  s0 -> s1 [44, 65535] { R2968 += 1 };
  s1 -> s1 [0, 42] { R2968 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [43, 43] { R2968 += 1 };
  s1 -> s1 [44, 65535] { R2968 += 1 };
  s2 -> s1 [0, 42] { R2968 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2968 += 1, R19 += 1 };
  s2 -> s3 [43, 43] { R2968 += 1 };
  s2 -> s1 [44, 65535] { R2968 += 1 };
  s3 -> s3 [0, 65535] { R2968 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R2970 += 1 };
  s0 -> s0 [0, 65535] { R2969 += 1, R2970 += 1 };
  s0 -> s2 [0, 65535] { R2970 += 1, R22 += 1 };
  s0 -> s3 [65, 65] { R2970 += 1 };
  s0 -> s1 [66, 65535] { R2970 += 1 };
  s1 -> s1 [0, 64] { R2970 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R2970 += 1 };
  s1 -> s1 [66, 65535] { R2970 += 1 };
  s2 -> s1 [0, 64] { R2970 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2970 += 1, R22 += 1 };
  s2 -> s3 [65, 65] { R2970 += 1 };
  s2 -> s1 [66, 65535] { R2970 += 1 };
  s3 -> s3 [0, 65535] { R2970 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 90] { R2972 += 1, R46 += 1 };
  s0 -> s2 [0, 65535] { R2972 += 1, R45 += 1, R46 += 1 };
  s0 -> s0 [0, 65535] { R2971 += 1, R2972 += 1 };
  s0 -> s3 [91, 91] { R2972 += 1, R46 += 1 };
  s0 -> s1 [92, 65535] { R2972 += 1, R46 += 1 };
  s1 -> s1 [0, 65535] { R2972 += 1, R46 += 1 };
  s1 -> s5 [0, 65535] { R2972 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 90] { R2972 += 1, R46 += 1 };
  s2 -> s2 [0, 65535] { R2972 += 1, R45 += 1, R46 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [91, 91] { R2972 += 1, R46 += 1 };
  s2 -> s1 [92, 65535] { R2972 += 1, R46 += 1 };
  s3 -> s1 [0, 65535] { R2972 += 1, R46 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2972 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 65535] { R2974 += 1, R48 += 1, R8 += 1 };
  s0 -> s2 [0, 65535] { R2974 += 1, R47 += 1, R48 += 1 };
  s0 -> s0 [0, 65535] { R2973 += 1, R2974 += 1 };
  s1 -> s1 [0, 65535] { R2974 += 1, R48 += 1, R8 += 1 };
  s1 -> s4 [0, 65535] { R2974 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2974 += 1, R48 += 1, R8 += 1 };
  s2 -> s2 [0, 65535] { R2974 += 1, R47 += 1, R48 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2974 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 65535] { R2976 += 1, R73 += 1, R74 += 1 };
  s0 -> s2 [0, 65535] { R2976 += 1, R74 += 1, R37 += 1 };
  s0 -> s0 [0, 65535] { R2975 += 1, R2976 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2976 += 1, R73 += 1, R74 += 1 };
  s1 -> s2 [0, 65535] { R2976 += 1, R74 += 1, R37 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2976 += 1 };
  s2 -> s2 [0, 65535] { R2976 += 1, R74 += 1, R37 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2976 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 107] { R2978 += 1, R76 += 1 };
  s0 -> s2 [0, 65535] { R2978 += 1, R75 += 1, R76 += 1 };
  s0 -> s0 [0, 65535] { R2977 += 1, R2978 += 1 };
  s0 -> s3 [108, 108] { R2978 += 1, R76 += 1 };
  s0 -> s1 [109, 65535] { R2978 += 1, R76 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2978 += 1, R76 += 1 };
  s1 -> s13 [0, 65535] { R2978 += 1 };
  s2 -> s1 [0, 107] { R2978 += 1, R76 += 1 };
  s2 -> s2 [0, 65535] { R2978 += 1, R75 += 1, R76 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R2978 += 1, R76 += 1 };
  s2 -> s1 [109, 65535] { R2978 += 1, R76 += 1 };
  s3 -> s1 [0, 110] { R2978 += 1, R76 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2978 += 1 };
  s3 -> s5 [111, 111] { R2978 += 1, R76 += 1 };
  s3 -> s1 [112, 65535] { R2978 += 1, R76 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R2978 += 1, R76 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2978 += 1 };
  s5 -> s6 [99, 99] { R2978 += 1, R76 += 1 };
  s5 -> s1 [100, 65535] { R2978 += 1, R76 += 1 };
  s6 -> s1 [0, 96] { R2978 += 1, R76 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2978 += 1 };
  s6 -> s7 [97, 97] { R2978 += 1, R76 += 1 };
  s6 -> s1 [98, 65535] { R2978 += 1, R76 += 1 };
  s7 -> s1 [0, 107] { R2978 += 1, R76 += 1 };
  s7 -> s7 [0, 65535] { R2978 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s8 [108, 108] { R2978 += 1, R76 += 1 };
  s7 -> s1 [109, 65535] { R2978 += 1, R76 += 1 };
  s8 -> s1 [0, 103] { R2978 += 1, R76 += 1 };
  s8 -> s8 [0, 65535] { R2978 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s9 [104, 104] { R2978 += 1, R76 += 1 };
  s8 -> s1 [105, 65535] { R2978 += 1, R76 += 1 };
  s9 -> s1 [0, 110] { R2978 += 1, R76 += 1 };
  s9 -> s9 [0, 65535] { R2978 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s10 [111, 111] { R2978 += 1, R76 += 1 };
  s9 -> s1 [112, 65535] { R2978 += 1, R76 += 1 };
  s10 -> s1 [0, 114] { R2978 += 1, R76 += 1 };
  s10 -> s10 [0, 65535] { R2978 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s11 [115, 115] { R2978 += 1, R76 += 1 };
  s10 -> s1 [116, 65535] { R2978 += 1, R76 += 1 };
  s11 -> s1 [0, 115] { R2978 += 1, R76 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s11 [0, 65535] { R2978 += 1 };
  s11 -> s12 [116, 116] { R2978 += 1, R76 += 1 };
  s11 -> s1 [117, 65535] { R2978 += 1, R76 += 1 };
  s12 -> s1 [0, 65535] { R2978 += 1, R76 += 1 };
  s13 -> s4 [0, 65535];
  s13 -> s13 [0, 65535] { R2978 += 1 };
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_37 {
  init s0;
  s0 -> s0 [0, 65535] { R2979 += 1, R2980 += 1 };
  s0 -> s1 [0, 65535] { R2980 += 1, R78 += 1, R52 += 1 };
  s0 -> s2 [0, 65535] { R2980 += 1, R77 += 1, R78 += 1 };
  s1 -> s4 [0, 65535] { R2980 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2980 += 1, R78 += 1, R52 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2980 += 1, R78 += 1, R52 += 1 };
  s2 -> s2 [0, 65535] { R2980 += 1, R77 += 1, R78 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2980 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 65535] { R2982 += 1, R96 += 1, R39 += 1 };
  s0 -> s0 [0, 65535] { R2981 += 1, R2982 += 1 };
  s0 -> s2 [0, 65535] { R2982 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535] { R2982 += 1, R96 += 1, R39 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2982 += 1 };
  s2 -> s1 [0, 65535] { R2982 += 1, R96 += 1, R39 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2982 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2982 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s0 [0, 65535] { R2983 += 1, R2984 += 1 };
  s0 -> s1 [0, 65535] { R2984 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R2984 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 42] { R2986 += 1, R98 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R2986 += 1, R97 += 1, R98 += 1 };
  s0 -> s0 [0, 65535] { R2985 += 1, R2986 += 1 };
  s0 -> s3 [43, 43] { R2986 += 1, R98 += 1, R51 += 1 };
  s0 -> s4 [43, 43] { R2986 += 1, R98 += 1, R51 += 1 };
  s0 -> s1 [44, 65535] { R2986 += 1, R98 += 1, R51 += 1 };
  s1 -> s1 [0, 42] { R2986 += 1, R98 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R2986 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [43, 43] { R2986 += 1, R98 += 1, R51 += 1 };
  s1 -> s4 [43, 43] { R2986 += 1, R98 += 1, R51 += 1 };
  s1 -> s1 [44, 65535] { R2986 += 1, R98 += 1, R51 += 1 };
  s2 -> s1 [0, 42] { R2986 += 1, R98 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R2986 += 1, R97 += 1, R98 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [43, 43] { R2986 += 1, R98 += 1, R51 += 1 };
  s2 -> s4 [43, 43] { R2986 += 1, R98 += 1, R51 += 1 };
  s2 -> s1 [44, 65535] { R2986 += 1, R98 += 1, R51 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2986 += 1, R98 += 1, R51 += 1 };
  s3 -> s6 [0, 65535] { R2986 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2986 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2986 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_41 {
  init s0;
  s0 -> s1 [0, 64] { R2988 += 1, R2860 += 1 };
  s0 -> s2 [0, 65535] { R2988 += 1, R2859 += 1, R2860 += 1 };
  s0 -> s0 [0, 65535] { R2987 += 1, R2988 += 1 };
  s0 -> s1 [66, 65535] { R2988 += 1, R2860 += 1 };
  s1 -> s1 [0, 64] { R2988 += 1, R2860 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2988 += 1 };
  s1 -> s1 [66, 65535] { R2988 += 1, R2860 += 1 };
  s2 -> s1 [0, 64] { R2988 += 1, R2860 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2988 += 1, R2859 += 1, R2860 += 1 };
  s2 -> s1 [66, 65535] { R2988 += 1, R2860 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_42 {
  init s0;
  s0 -> s1 [0, 65535] { R2990 += 1, R2861 += 1, R2862 += 1 };
  s0 -> s0 [0, 65535] { R2989 += 1, R2990 += 1 };
  s0 -> s2 [0, 65535] { R2990 += 1, R2862 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R2990 += 1, R2861 += 1, R2862 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R2990 += 1, R2862 += 1, R38 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2990 += 1, R2862 += 1, R38 += 1 };
  s2 -> s4 [0, 65535] { R2990 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2990 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_43 {
  init s0;
  s0 -> s1 [0, 65] { R2992 += 1, R2864 += 1 };
  s0 -> s0 [0, 65535] { R2991 += 1, R2992 += 1 };
  s0 -> s2 [0, 65535] { R2992 += 1, R2863 += 1, R2864 += 1 };
  s0 -> s1 [80, 65535] { R2992 += 1, R2864 += 1 };
  s1 -> s1 [0, 65] { R2992 += 1, R2864 += 1 };
  s1 -> s1 [0, 65535] { R2992 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [80, 65535] { R2992 += 1, R2864 += 1 };
  s2 -> s1 [0, 65] { R2992 += 1, R2864 += 1 };
  s2 -> s2 [0, 65535] { R2992 += 1, R2863 += 1, R2864 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [80, 65535] { R2992 += 1, R2864 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_44 {
  init s0;
  s0 -> s0 [0, 65535] { R2993 += 1, R2994 += 1 };
  s0 -> s1 [0, 65535] { R2994 += 1, R2866 += 1, R598 += 1 };
  s0 -> s2 [0, 65535] { R2994 += 1, R2865 += 1, R2866 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R2994 += 1 };
  s1 -> s1 [0, 65535] { R2994 += 1, R2866 += 1, R598 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2994 += 1, R2866 += 1, R598 += 1 };
  s2 -> s2 [0, 65535] { R2994 += 1, R2865 += 1, R2866 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2994 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_45 {
  init s0;
  s0 -> s1 [0, 81] { R2996 += 1, R2868 += 1 };
  s0 -> s2 [0, 65535] { R2996 += 1, R2867 += 1, R2868 += 1 };
  s0 -> s0 [0, 65535] { R2995 += 1, R2996 += 1 };
  s0 -> s3 [0, 65535] { R2996 += 1, R2868 += 1, R600 += 1 };
  s0 -> s1 [83, 65535] { R2996 += 1, R2868 += 1 };
  s1 -> s1 [0, 81] { R2996 += 1, R2868 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2996 += 1 };
  s1 -> s1 [83, 65535] { R2996 += 1, R2868 += 1 };
  s2 -> s1 [0, 81] { R2996 += 1, R2868 += 1 };
  s2 -> s2 [0, 65535] { R2996 += 1, R2867 += 1, R2868 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2996 += 1, R2868 += 1, R600 += 1 };
  s2 -> s1 [83, 65535] { R2996 += 1, R2868 += 1 };
  s3 -> s1 [0, 81] { R2996 += 1, R2868 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2996 += 1 };
  s3 -> s3 [0, 65535] { R2996 += 1, R2868 += 1, R600 += 1 };
  s3 -> s1 [83, 65535] { R2996 += 1, R2868 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2996 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_46 {
  init s0;
  s0 -> s1 [0, 79] { R2998 += 1, R2870 += 1 };
  s0 -> s2 [0, 65535] { R2998 += 1, R2870 += 1, R602 += 1 };
  s0 -> s0 [0, 65535] { R2997 += 1, R2998 += 1 };
  s0 -> s3 [0, 65535] { R2998 += 1, R2869 += 1, R2870 += 1 };
  s0 -> s1 [81, 65535] { R2998 += 1, R2870 += 1 };
  s1 -> s1 [0, 79] { R2998 += 1, R2870 += 1 };
  s1 -> s1 [0, 65535] { R2998 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [81, 65535] { R2998 += 1, R2870 += 1 };
  s2 -> s1 [0, 79] { R2998 += 1, R2870 += 1 };
  s2 -> s2 [0, 65535] { R2998 += 1, R2870 += 1, R602 += 1 };
  s2 -> s5 [0, 65535] { R2998 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [81, 65535] { R2998 += 1, R2870 += 1 };
  s3 -> s1 [0, 79] { R2998 += 1, R2870 += 1 };
  s3 -> s2 [0, 65535] { R2998 += 1, R2870 += 1, R602 += 1 };
  s3 -> s3 [0, 65535] { R2998 += 1, R2869 += 1, R2870 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [81, 65535] { R2998 += 1, R2870 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2998 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_47 {
  init s0;
  s0 -> s1 [0, 65535] { R3000 += 1, R2871 += 1, R2872 += 1 };
  s0 -> s2 [0, 65535] { R3000 += 1, R2872 += 1, R607 += 1, R608 += 1 };
  s0 -> s0 [0, 65535] { R2999 += 1, R3000 += 1 };
  s0 -> s3 [0, 65535] { R3000 += 1, R2872 += 1, R606 += 1, R607 += 1 };
  s1 -> s1 [0, 65535] { R3000 += 1, R2871 += 1, R2872 += 1 };
  s1 -> s2 [0, 65535] { R3000 += 1, R2872 += 1, R607 += 1, R608 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R3000 += 1, R2872 += 1, R606 += 1, R607 += 1 };
  s2 -> s2 [0, 65535] { R3000 += 1, R2872 += 1, R607 += 1, R608 += 1 };
  s2 -> s4 [0, 65535] { R3000 += 1 };
  s2 -> s6 [0, 65535] { R3000 += 1, R2872 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3000 += 1, R2872 += 1, R607 += 1, R608 += 1 };
  s3 -> s4 [0, 65535] { R3000 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3000 += 1, R2872 += 1, R606 += 1, R607 += 1 };
  s4 -> s4 [0, 65535] { R3000 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R3000 += 1 };
  s6 -> s6 [0, 65535] { R3000 += 1, R2872 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_48 {
  init s0;
  s0 -> s1 [0, 65535] { R3002 += 1, R2874 += 1 };
  s0 -> s2 [0, 65535] { R3002 += 1, R2873 += 1, R2874 += 1 };
  s0 -> s0 [0, 65535] { R3001 += 1, R3002 += 1 };
  s1 -> s1 [0, 65535] { R3002 += 1, R2874 += 1 };
  s1 -> s4 [0, 65535] { R3002 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3002 += 1, R2874 += 1 };
  s2 -> s2 [0, 65535] { R3002 += 1, R2873 += 1, R2874 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3002 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_49 {
  init s0;
  s0 -> s1 [0, 79] { R3004 += 1, R2876 += 1, R612 += 1 };
  s0 -> s2 [0, 65535] { R3004 += 1, R2875 += 1, R2876 += 1 };
  s0 -> s0 [0, 65535] { R3003 += 1, R3004 += 1 };
  s0 -> s3 [0, 65535] { R3004 += 1, R2876 += 1, R611 += 1, R612 += 1 };
  s0 -> s1 [81, 65535] { R3004 += 1, R2876 += 1, R612 += 1 };
  s1 -> s1 [0, 79] { R3004 += 1, R2876 += 1, R612 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3004 += 1 };
  s1 -> s1 [0, 65535] { R3004 += 1, R2876 += 1 };
  s1 -> s1 [81, 65535] { R3004 += 1, R2876 += 1, R612 += 1 };
  s2 -> s1 [0, 79] { R3004 += 1, R2876 += 1, R612 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3004 += 1, R2875 += 1, R2876 += 1 };
  s2 -> s3 [0, 65535] { R3004 += 1, R2876 += 1, R611 += 1, R612 += 1 };
  s2 -> s1 [81, 65535] { R3004 += 1, R2876 += 1, R612 += 1 };
  s3 -> s1 [0, 79] { R3004 += 1, R2876 += 1, R612 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3004 += 1 };
  s3 -> s3 [0, 65535] { R3004 += 1, R2876 += 1, R611 += 1, R612 += 1 };
  s3 -> s1 [81, 65535] { R3004 += 1, R2876 += 1, R612 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3004 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_50 {
  init s0;
  s0 -> s0 [0, 65535] { R3005 += 1, R3006 += 1 };
  s0 -> s1 [0, 65535] { R3006 += 1, R2878 += 1, R617 += 1, R618 += 1 };
  s0 -> s2 [0, 65535] { R3006 += 1, R2878 += 1, R616 += 1, R617 += 1 };
  s0 -> s3 [0, 65535] { R3006 += 1, R2877 += 1, R2878 += 1 };
  s1 -> s5 [0, 65535] { R3006 += 1 };
  s1 -> s6 [0, 65535] { R3006 += 1, R2878 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3006 += 1, R2878 += 1, R617 += 1, R618 += 1 };
  s2 -> s5 [0, 65535] { R3006 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3006 += 1, R2878 += 1, R617 += 1, R618 += 1 };
  s2 -> s2 [0, 65535] { R3006 += 1, R2878 += 1, R616 += 1, R617 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3006 += 1, R2878 += 1, R617 += 1, R618 += 1 };
  s3 -> s2 [0, 65535] { R3006 += 1, R2878 += 1, R616 += 1, R617 += 1 };
  s3 -> s3 [0, 65535] { R3006 += 1, R2877 += 1, R2878 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3006 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3006 += 1 };
  s6 -> s6 [0, 65535] { R3006 += 1, R2878 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_51 {
  init s0;
  s0 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s0 -> s2 [0, 65535] { R3008 += 1, R2879 += 1, R2880 += 1 };
  s0 -> s0 [0, 65535] { R3007 += 1, R3008 += 1 };
  s0 -> s3 [0, 65535] { R3008 += 1, R2880 += 1, R621 += 1, R622 += 1 };
  s0 -> s1 [91, 107] { R3008 += 1, R2880 += 1, R622 += 1 };
  s0 -> s4 [108, 108] { R3008 += 1, R2880 += 1, R622 += 1 };
  s0 -> s1 [109, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s1 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s1 -> s5 [0, 65535] { R3008 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3008 += 1, R2880 += 1 };
  s1 -> s1 [91, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s2 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s2 -> s2 [0, 65535] { R3008 += 1, R2879 += 1, R2880 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R3008 += 1, R2880 += 1, R621 += 1, R622 += 1 };
  s2 -> s1 [91, 107] { R3008 += 1, R2880 += 1, R622 += 1 };
  s2 -> s4 [108, 108] { R3008 += 1, R2880 += 1, R622 += 1 };
  s2 -> s1 [109, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s3 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s3 -> s5 [0, 65535] { R3008 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3008 += 1, R2880 += 1, R621 += 1, R622 += 1 };
  s3 -> s1 [91, 107] { R3008 += 1, R2880 += 1, R622 += 1 };
  s3 -> s4 [108, 108] { R3008 += 1, R2880 += 1, R622 += 1 };
  s3 -> s1 [109, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s4 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s4 -> s5 [0, 65535] { R3008 += 1 };
  s4 -> s4 [0, 65535] { R3008 += 1, R2880 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [91, 110] { R3008 += 1, R2880 += 1, R622 += 1 };
  s4 -> s7 [111, 111] { R3008 += 1, R2880 += 1, R622 += 1 };
  s4 -> s1 [112, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s5 -> s5 [0, 65535] { R3008 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s7 -> s5 [0, 65535] { R3008 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3008 += 1, R2880 += 1 };
  s7 -> s1 [91, 98] { R3008 += 1, R2880 += 1, R622 += 1 };
  s7 -> s8 [99, 99] { R3008 += 1, R2880 += 1, R622 += 1 };
  s7 -> s1 [100, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s8 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s8 -> s5 [0, 65535] { R3008 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3008 += 1, R2880 += 1 };
  s8 -> s1 [91, 96] { R3008 += 1, R2880 += 1, R622 += 1 };
  s8 -> s9 [97, 97] { R3008 += 1, R2880 += 1, R622 += 1 };
  s8 -> s1 [98, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s9 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s9 -> s9 [0, 65535] { R3008 += 1, R2880 += 1 };
  s9 -> s5 [0, 65535] { R3008 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s1 [91, 107] { R3008 += 1, R2880 += 1, R622 += 1 };
  s9 -> s10 [108, 108] { R3008 += 1, R2880 += 1, R622 += 1 };
  s9 -> s1 [109, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s10 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s10 -> s5 [0, 65535] { R3008 += 1 };
  s10 -> s10 [0, 65535] { R3008 += 1, R2880 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s1 [91, 103] { R3008 += 1, R2880 += 1, R622 += 1 };
  s10 -> s11 [104, 104] { R3008 += 1, R2880 += 1, R622 += 1 };
  s10 -> s1 [105, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s11 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s11 -> s5 [0, 65535] { R3008 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s11 [0, 65535] { R3008 += 1, R2880 += 1 };
  s11 -> s1 [91, 110] { R3008 += 1, R2880 += 1, R622 += 1 };
  s11 -> s12 [111, 111] { R3008 += 1, R2880 += 1, R622 += 1 };
  s11 -> s1 [112, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s12 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s12 -> s5 [0, 65535] { R3008 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s12 [0, 65535] { R3008 += 1, R2880 += 1 };
  s12 -> s1 [91, 114] { R3008 += 1, R2880 += 1, R622 += 1 };
  s12 -> s13 [115, 115] { R3008 += 1, R2880 += 1, R622 += 1 };
  s12 -> s1 [116, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s13 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s13 -> s5 [0, 65535] { R3008 += 1 };
  s13 -> s13 [0, 65535] { R3008 += 1, R2880 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s1 [91, 115] { R3008 += 1, R2880 += 1, R622 += 1 };
  s13 -> s14 [116, 116] { R3008 += 1, R2880 += 1, R622 += 1 };
  s13 -> s1 [117, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  s14 -> s1 [0, 80] { R3008 += 1, R2880 += 1, R622 += 1 };
  s14 -> s1 [91, 65535] { R3008 += 1, R2880 += 1, R622 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_52 {
  init s0;
  s0 -> s1 [0, 65535] { R3010 += 1, R2882 += 1, R627 += 1, R628 += 1 };
  s0 -> s2 [0, 65535] { R3010 += 1, R2882 += 1, R626 += 1, R627 += 1 };
  s0 -> s3 [0, 65535] { R3010 += 1, R2881 += 1, R2882 += 1 };
  s0 -> s0 [0, 65535] { R3009 += 1, R3010 += 1 };
  s1 -> s6 [0, 65535] { R3010 += 1, R2882 += 1 };
  s1 -> s1 [0, 65535] { R3010 += 1, R2882 += 1, R627 += 1, R628 += 1 };
  s1 -> s5 [0, 65535] { R3010 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3010 += 1, R2882 += 1, R627 += 1, R628 += 1 };
  s2 -> s2 [0, 65535] { R3010 += 1, R2882 += 1, R626 += 1, R627 += 1 };
  s2 -> s5 [0, 65535] { R3010 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3010 += 1, R2882 += 1, R627 += 1, R628 += 1 };
  s3 -> s2 [0, 65535] { R3010 += 1, R2882 += 1, R626 += 1, R627 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3010 += 1, R2881 += 1, R2882 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3010 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3010 += 1, R2882 += 1 };
  s6 -> s5 [0, 65535] { R3010 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_53 {
  init s0;
  s0 -> s0 [0, 65535] { R3011 += 1, R3012 += 1 };
  s0 -> s1 [0, 65535] { R3012 += 1, R2883 += 1, R2884 += 1 };
  s0 -> s2 [0, 65535] { R3012 += 1, R2884 += 1, R632 += 1, R633 += 1 };
  s0 -> s3 [0, 65535] { R3012 += 1, R2884 += 1, R633 += 1, R634 += 1 };
  s1 -> s1 [0, 65535] { R3012 += 1, R2883 += 1, R2884 += 1 };
  s1 -> s2 [0, 65535] { R3012 += 1, R2884 += 1, R632 += 1, R633 += 1 };
  s1 -> s3 [0, 65535] { R3012 += 1, R2884 += 1, R633 += 1, R634 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R3012 += 1 };
  s2 -> s2 [0, 65535] { R3012 += 1, R2884 += 1, R632 += 1, R633 += 1 };
  s2 -> s3 [0, 65535] { R3012 += 1, R2884 += 1, R633 += 1, R634 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R3012 += 1 };
  s3 -> s3 [0, 65535] { R3012 += 1, R2884 += 1, R633 += 1, R634 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3012 += 1, R2884 += 1 };
  s4 -> s4 [0, 65535] { R3012 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R3012 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3012 += 1, R2884 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_54 {
  init s0;
  s0 -> s1 [0, 65535] { R3014 += 1, R2886 += 1 };
  s0 -> s2 [0, 65535] { R3014 += 1, R2885 += 1, R2886 += 1 };
  s0 -> s0 [0, 65535] { R3013 += 1, R3014 += 1 };
  s1 -> s1 [0, 65535] { R3014 += 1, R2886 += 1 };
  s1 -> s4 [0, 65535] { R3014 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3014 += 1, R2886 += 1 };
  s2 -> s2 [0, 65535] { R3014 += 1, R2885 += 1, R2886 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3014 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_55 {
  init s0;
  s0 -> s1 [0, 65535] { R3016 += 1, R2888 += 1 };
  s0 -> s2 [0, 65535] { R3016 += 1, R2887 += 1, R2888 += 1 };
  s0 -> s0 [0, 65535] { R3015 += 1, R3016 += 1 };
  s1 -> s1 [0, 65535] { R3016 += 1, R2888 += 1 };
  s1 -> s4 [0, 65535] { R3016 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3016 += 1, R2888 += 1 };
  s2 -> s2 [0, 65535] { R3016 += 1, R2887 += 1, R2888 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3016 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_56 {
  init s0;
  s0 -> s1 [0, 65535] { R3018 += 1, R2889 += 1, R2890 += 1 };
  s0 -> s2 [0, 65535] { R3018 += 1, R2890 += 1 };
  s0 -> s0 [0, 65535] { R3017 += 1, R3018 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3018 += 1, R2889 += 1, R2890 += 1 };
  s1 -> s2 [0, 65535] { R3018 += 1, R2890 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3018 += 1, R2890 += 1 };
  s2 -> s4 [0, 65535] { R3018 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3018 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_57 {
  init s0;
  s0 -> s1 [0, 79] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s0 -> s2 [0, 65535] { R3020 += 1, R2891 += 1, R2892 += 1 };
  s0 -> s0 [0, 65535] { R3019 += 1, R3020 += 1 };
  s0 -> s1 [0, 65535] { R3020 += 1, R2892 += 1 };
  s0 -> s3 [80, 80] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s0 -> s4 [80, 80] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s0 -> s1 [81, 65535] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s1 -> s1 [0, 79] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s1 -> s5 [0, 65535] { R3020 += 1 };
  s1 -> s1 [0, 65535] { R3020 += 1, R2892 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s3 [80, 80] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s1 -> s4 [80, 80] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s1 -> s1 [81, 65535] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s2 -> s1 [0, 79] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s2 -> s2 [0, 65535] { R3020 += 1, R2891 += 1, R2892 += 1 };
  s2 -> s1 [0, 65535] { R3020 += 1, R2892 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [80, 80] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s2 -> s4 [80, 80] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s2 -> s1 [81, 65535] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s3 -> s3 [0, 65535] { R3020 += 1, R2892 += 1 };
  s3 -> s5 [0, 65535] { R3020 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s5 [0, 65535] { R3020 += 1 };
  s4 -> s6 [0, 65535] { R3020 += 1, R2892 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R3020 += 1, R2892 += 1, R2857 += 1, R2858 += 1 };
  s5 -> s5 [0, 65535] { R3020 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R3020 += 1 };
  s6 -> s6 [0, 65535] { R3020 += 1, R2892 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_58 {
  init s0;
  s0 -> s0 [0, 65535] { R3021 += 1, R3022 += 1 };
  s0 -> s1 [0, 65535] { R3022 += 1, R2911 += 1, R2912 += 1 };
  s0 -> s2 [0, 65535] { R3022 += 1, R2912 += 1, R40 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3022 += 1, R2911 += 1, R2912 += 1 };
  s1 -> s2 [0, 65535] { R3022 += 1, R2912 += 1, R40 += 1 };
  s2 -> s3 [0, 65535] { R3022 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3022 += 1, R2912 += 1, R40 += 1 };
  s3 -> s3 [0, 65535] { R3022 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_59 {
  init s0;
  s0 -> s1 [0, 64] { R3024 += 1, R2914 += 1 };
  s0 -> s0 [0, 65535] { R3023 += 1, R3024 += 1 };
  s0 -> s2 [0, 65535] { R3024 += 1, R2913 += 1, R2914 += 1 };
  s0 -> s3 [65, 65] { R3024 += 1, R2914 += 1 };
  s0 -> s4 [65, 65] { R3024 += 1, R2914 += 1 };
  s0 -> s5 [80, 80] { R3024 += 1, R2914 += 1 };
  s0 -> s1 [81, 65535] { R3024 += 1, R2914 += 1 };
  s1 -> s1 [0, 64] { R3024 += 1, R2914 += 1 };
  s1 -> s3 [65, 65] { R3024 += 1, R2914 += 1 };
  s1 -> s4 [65, 65] { R3024 += 1, R2914 += 1 };
  s1 -> s5 [80, 80] { R3024 += 1, R2914 += 1 };
  s1 -> s1 [81, 65535] { R3024 += 1, R2914 += 1 };
  s2 -> s1 [0, 64] { R3024 += 1, R2914 += 1 };
  s2 -> s2 [0, 65535] { R3024 += 1, R2913 += 1, R2914 += 1 };
  s2 -> s3 [65, 65] { R3024 += 1, R2914 += 1 };
  s2 -> s4 [65, 65] { R3024 += 1, R2914 += 1 };
  s2 -> s5 [80, 80] { R3024 += 1, R2914 += 1 };
  s2 -> s1 [81, 65535] { R3024 += 1, R2914 += 1 };
  s3 -> s3 [0, 65] { R3024 += 1, R2914 += 1 };
  s3 -> s8 [80, 80] { R3024 += 1, R2914 += 1 };
  s3 -> s3 [81, 65535] { R3024 += 1, R2914 += 1 };
  s5 -> s5 [0, 64] { R3024 += 1, R2914 += 1 };
  s5 -> s5 [0, 65535] { R3024 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [65, 65] { R3024 += 1, R2914 += 1 };
  s5 -> s8 [65, 65] { R3024 += 1, R2914 += 1 };
  s5 -> s5 [80, 65535] { R3024 += 1, R2914 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3024 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65] { R3024 += 1, R2914 += 1 };
  s8 -> s8 [0, 65535] { R3024 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [80, 65535] { R3024 += 1, R2914 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_60 {
  init s0;
  s0 -> s1 [0, 64] { R3026 += 1, R2916 += 1, R597 += 1 };
  s0 -> s0 [0, 65535] { R3025 += 1, R3026 += 1 };
  s0 -> s2 [0, 65535] { R3026 += 1, R2915 += 1, R2916 += 1 };
  s0 -> s3 [65, 65] { R3026 += 1, R2916 += 1, R597 += 1 };
  s0 -> s4 [65, 65] { R3026 += 1, R2916 += 1, R597 += 1 };
  s0 -> s1 [66, 65535] { R3026 += 1, R2916 += 1, R597 += 1 };
  s1 -> s1 [0, 64] { R3026 += 1, R2916 += 1, R597 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3026 += 1 };
  s1 -> s3 [65, 65] { R3026 += 1, R2916 += 1, R597 += 1 };
  s1 -> s4 [65, 65] { R3026 += 1, R2916 += 1, R597 += 1 };
  s1 -> s1 [66, 65535] { R3026 += 1, R2916 += 1, R597 += 1 };
  s2 -> s1 [0, 64] { R3026 += 1, R2916 += 1, R597 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3026 += 1, R2915 += 1, R2916 += 1 };
  s2 -> s3 [65, 65] { R3026 += 1, R2916 += 1, R597 += 1 };
  s2 -> s4 [65, 65] { R3026 += 1, R2916 += 1, R597 += 1 };
  s2 -> s1 [66, 65535] { R3026 += 1, R2916 += 1, R597 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3026 += 1 };
  s4 -> s5 [0, 65535] { R3026 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3026 += 1, R2916 += 1, R597 += 1 };
  s5 -> s5 [0, 65535] { R3026 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_61 {
  init s0;
  s0 -> s1 [0, 64] { R3028 += 1, R2918 += 1, R599 += 1 };
  s0 -> s0 [0, 65535] { R3027 += 1, R3028 += 1 };
  s0 -> s2 [0, 65535] { R3028 += 1, R2917 += 1, R2918 += 1 };
  s0 -> s3 [65, 65] { R3028 += 1, R2918 += 1, R599 += 1 };
  s0 -> s4 [65, 65] { R3028 += 1, R2918 += 1, R599 += 1 };
  s0 -> s1 [66, 65535] { R3028 += 1, R2918 += 1, R599 += 1 };
  s1 -> s1 [0, 64] { R3028 += 1, R2918 += 1, R599 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3028 += 1 };
  s1 -> s3 [65, 65] { R3028 += 1, R2918 += 1, R599 += 1 };
  s1 -> s4 [65, 65] { R3028 += 1, R2918 += 1, R599 += 1 };
  s1 -> s1 [66, 65535] { R3028 += 1, R2918 += 1, R599 += 1 };
  s2 -> s1 [0, 64] { R3028 += 1, R2918 += 1, R599 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3028 += 1, R2917 += 1, R2918 += 1 };
  s2 -> s3 [65, 65] { R3028 += 1, R2918 += 1, R599 += 1 };
  s2 -> s4 [65, 65] { R3028 += 1, R2918 += 1, R599 += 1 };
  s2 -> s1 [66, 65535] { R3028 += 1, R2918 += 1, R599 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3028 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3028 += 1, R2918 += 1, R599 += 1 };
  s4 -> s6 [0, 65535] { R3028 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3028 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_62 {
  init s0;
  s0 -> s1 [0, 64] { R3030 += 1, R2920 += 1, R601 += 1 };
  s0 -> s2 [0, 65535] { R3030 += 1, R2919 += 1, R2920 += 1 };
  s0 -> s0 [0, 65535] { R3029 += 1, R3030 += 1 };
  s0 -> s3 [65, 65] { R3030 += 1, R2920 += 1, R601 += 1 };
  s0 -> s4 [65, 65] { R3030 += 1, R2920 += 1, R601 += 1 };
  s0 -> s1 [66, 65535] { R3030 += 1, R2920 += 1, R601 += 1 };
  s1 -> s1 [0, 64] { R3030 += 1, R2920 += 1, R601 += 1 };
  s1 -> s1 [0, 65535] { R3030 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R3030 += 1, R2920 += 1, R601 += 1 };
  s1 -> s4 [65, 65] { R3030 += 1, R2920 += 1, R601 += 1 };
  s1 -> s1 [66, 65535] { R3030 += 1, R2920 += 1, R601 += 1 };
  s2 -> s1 [0, 64] { R3030 += 1, R2920 += 1, R601 += 1 };
  s2 -> s2 [0, 65535] { R3030 += 1, R2919 += 1, R2920 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R3030 += 1, R2920 += 1, R601 += 1 };
  s2 -> s4 [65, 65] { R3030 += 1, R2920 += 1, R601 += 1 };
  s2 -> s1 [66, 65535] { R3030 += 1, R2920 += 1, R601 += 1 };
  s3 -> s3 [0, 65535] { R3030 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3030 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3030 += 1, R2920 += 1, R601 += 1 };
  s5 -> s5 [0, 65535] { R3030 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_63 {
  init s0;
  s0 -> s1 [0, 64] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s0 -> s2 [0, 65535] { R3032 += 1, R2921 += 1, R2922 += 1 };
  s0 -> s0 [0, 65535] { R3031 += 1, R3032 += 1 };
  s0 -> s3 [65, 65] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s0 -> s4 [65, 65] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s0 -> s1 [66, 65535] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s1 -> s1 [0, 64] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s1 -> s1 [0, 65535] { R3032 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s1 -> s4 [65, 65] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s1 -> s1 [66, 65535] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s2 -> s1 [0, 64] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s2 -> s2 [0, 65535] { R3032 += 1, R2921 += 1, R2922 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s2 -> s4 [65, 65] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s2 -> s1 [66, 65535] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3032 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3032 += 1 };
  s4 -> s4 [0, 65535] { R3032 += 1, R2922 += 1, R603 += 1, R604 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3032 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_64 {
  init s0;
  s0 -> s1 [0, 64] { R3034 += 1, R2924 += 1 };
  s0 -> s0 [0, 65535] { R3033 += 1, R3034 += 1 };
  s0 -> s2 [0, 65535] { R3034 += 1, R2923 += 1, R2924 += 1 };
  s0 -> s3 [65, 65] { R3034 += 1, R2924 += 1 };
  s0 -> s4 [65, 65] { R3034 += 1, R2924 += 1 };
  s0 -> s1 [66, 65535] { R3034 += 1, R2924 += 1 };
  s1 -> s1 [0, 64] { R3034 += 1, R2924 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3034 += 1 };
  s1 -> s3 [65, 65] { R3034 += 1, R2924 += 1 };
  s1 -> s4 [65, 65] { R3034 += 1, R2924 += 1 };
  s1 -> s1 [66, 65535] { R3034 += 1, R2924 += 1 };
  s2 -> s1 [0, 64] { R3034 += 1, R2924 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3034 += 1, R2923 += 1, R2924 += 1 };
  s2 -> s3 [65, 65] { R3034 += 1, R2924 += 1 };
  s2 -> s4 [65, 65] { R3034 += 1, R2924 += 1 };
  s2 -> s1 [66, 65535] { R3034 += 1, R2924 += 1 };
  s3 -> s6 [0, 65535] { R3034 += 1 };
  s3 -> s3 [0, 65535] { R3034 += 1, R2924 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3034 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3034 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_65 {
  init s0;
  s0 -> s1 [0, 64] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s0 -> s2 [0, 65535] { R3036 += 1, R2925 += 1, R2926 += 1 };
  s0 -> s0 [0, 65535] { R3035 += 1, R3036 += 1 };
  s0 -> s3 [65, 65] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s0 -> s4 [65, 65] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s0 -> s1 [66, 65535] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s1 -> s1 [0, 64] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3036 += 1 };
  s1 -> s3 [65, 65] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s1 -> s4 [65, 65] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s1 -> s1 [66, 65535] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s2 -> s1 [0, 64] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s2 -> s2 [0, 65535] { R3036 += 1, R2925 += 1, R2926 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s2 -> s4 [65, 65] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s2 -> s1 [66, 65535] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s3 -> s6 [0, 65535] { R3036 += 1 };
  s3 -> s3 [0, 65535] { R3036 += 1, R2926 += 1, R609 += 1, R610 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3036 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3036 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_66 {
  init s0;
  s0 -> s1 [0, 64] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s0 -> s2 [0, 65535] { R3038 += 1, R2927 += 1, R2928 += 1 };
  s0 -> s0 [0, 65535] { R3037 += 1, R3038 += 1 };
  s0 -> s3 [65, 65] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s0 -> s4 [65, 65] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s0 -> s1 [66, 65535] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s1 -> s1 [0, 64] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s1 -> s1 [0, 65535] { R3038 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s1 -> s4 [65, 65] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s1 -> s1 [66, 65535] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s2 -> s1 [0, 64] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s2 -> s2 [0, 65535] { R3038 += 1, R2927 += 1, R2928 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s2 -> s4 [65, 65] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s2 -> s1 [66, 65535] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s3 -> s6 [0, 65535] { R3038 += 1 };
  s3 -> s3 [0, 65535] { R3038 += 1, R2928 += 1, R613 += 1, R614 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3038 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3038 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_67 {
  init s0;
  s0 -> s1 [0, 64] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s0 -> s2 [0, 65535] { R3040 += 1, R2929 += 1, R2930 += 1 };
  s0 -> s0 [0, 65535] { R3039 += 1, R3040 += 1 };
  s0 -> s3 [65, 65] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s0 -> s4 [65, 65] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s0 -> s1 [66, 65535] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s1 -> s1 [0, 64] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s1 -> s1 [0, 65535] { R3040 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s1 -> s4 [65, 65] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s1 -> s1 [66, 65535] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s2 -> s1 [0, 64] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s2 -> s2 [0, 65535] { R3040 += 1, R2929 += 1, R2930 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s2 -> s4 [65, 65] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s2 -> s1 [66, 65535] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s3 -> s3 [0, 65535] { R3040 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3040 += 1 };
  s4 -> s4 [0, 65535] { R3040 += 1, R2930 += 1, R619 += 1, R620 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3040 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_68 {
  init s0;
  s0 -> s1 [0, 64] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s0 -> s0 [0, 65535] { R3041 += 1, R3042 += 1 };
  s0 -> s2 [0, 65535] { R3042 += 1, R2931 += 1, R2932 += 1 };
  s0 -> s3 [65, 65] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s0 -> s4 [65, 65] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s0 -> s1 [66, 65535] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s1 -> s1 [0, 64] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s1 -> s1 [0, 65535] { R3042 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s1 -> s4 [65, 65] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s1 -> s1 [66, 65535] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s2 -> s1 [0, 64] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3042 += 1, R2931 += 1, R2932 += 1 };
  s2 -> s3 [65, 65] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s2 -> s4 [65, 65] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s2 -> s1 [66, 65535] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s3 -> s3 [0, 65535] { R3042 += 1, R2932 += 1, R623 += 1, R624 += 1 };
  s3 -> s6 [0, 65535] { R3042 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3042 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3042 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_69 {
  init s0;
  s0 -> s1 [0, 64] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s0 -> s2 [0, 65535] { R3044 += 1, R2933 += 1, R2934 += 1 };
  s0 -> s0 [0, 65535] { R3043 += 1, R3044 += 1 };
  s0 -> s3 [65, 65] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s0 -> s4 [65, 65] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s0 -> s1 [66, 65535] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s1 -> s1 [0, 64] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s1 -> s1 [0, 65535] { R3044 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s1 -> s4 [65, 65] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s1 -> s1 [66, 65535] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s2 -> s1 [0, 64] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s2 -> s2 [0, 65535] { R3044 += 1, R2933 += 1, R2934 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s2 -> s4 [65, 65] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s2 -> s1 [66, 65535] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s3 -> s3 [0, 65535] { R3044 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3044 += 1, R2934 += 1, R629 += 1, R630 += 1 };
  s4 -> s6 [0, 65535] { R3044 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3044 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_70 {
  init s0;
  s0 -> s1 [0, 64] { R3046 += 1, R2936 += 1 };
  s0 -> s0 [0, 65535] { R3045 += 1, R3046 += 1 };
  s0 -> s2 [0, 65535] { R3046 += 1, R2935 += 1, R2936 += 1 };
  s0 -> s3 [65, 65] { R3046 += 1, R2936 += 1 };
  s0 -> s4 [65, 65] { R3046 += 1, R2936 += 1 };
  s0 -> s1 [66, 65535] { R3046 += 1, R2936 += 1 };
  s1 -> s1 [0, 64] { R3046 += 1, R2936 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3046 += 1 };
  s1 -> s3 [65, 65] { R3046 += 1, R2936 += 1 };
  s1 -> s4 [65, 65] { R3046 += 1, R2936 += 1 };
  s1 -> s1 [66, 65535] { R3046 += 1, R2936 += 1 };
  s2 -> s1 [0, 64] { R3046 += 1, R2936 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3046 += 1, R2935 += 1, R2936 += 1 };
  s2 -> s3 [65, 65] { R3046 += 1, R2936 += 1 };
  s2 -> s4 [65, 65] { R3046 += 1, R2936 += 1 };
  s2 -> s1 [66, 65535] { R3046 += 1, R2936 += 1 };
  s3 -> s3 [0, 65535] { R3046 += 1, R2936 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3046 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3046 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3046 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_71 {
  init s0;
  s0 -> s1 [0, 64] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s0 -> s2 [0, 64] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s0 -> s3 [0, 65535] { R3048 += 1, R2937 += 1, R2938 += 1 };
  s0 -> s0 [0, 65535] { R3047 += 1, R3048 += 1 };
  s0 -> s4 [65, 65] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s0 -> s5 [65, 65] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s0 -> s6 [65, 65] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s0 -> s7 [65, 65] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s0 -> s1 [66, 65535] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s0 -> s2 [66, 65535] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s1 -> s11 [0, 64] { R3048 += 1, R2938 += 1 };
  s1 -> s1 [0, 64] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s1 -> s8 [65, 65] { R3048 += 1, R2938 += 1 };
  s1 -> s12 [65, 65] { R3048 += 1, R2938 += 1 };
  s1 -> s5 [65, 65] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s1 -> s7 [65, 65] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s1 -> s11 [66, 65535] { R3048 += 1, R2938 += 1 };
  s1 -> s1 [66, 65535] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s2 -> s1 [0, 64] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s2 -> s2 [0, 64] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s2 -> s4 [65, 65] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s2 -> s5 [65, 65] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s2 -> s6 [65, 65] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s2 -> s7 [65, 65] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s2 -> s1 [66, 65535] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s2 -> s2 [66, 65535] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s3 -> s1 [0, 64] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s3 -> s2 [0, 64] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s3 -> s3 [0, 65535] { R3048 += 1, R2937 += 1, R2938 += 1 };
  s3 -> s4 [65, 65] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s3 -> s5 [65, 65] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s3 -> s6 [65, 65] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s3 -> s7 [65, 65] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s3 -> s1 [66, 65535] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s3 -> s2 [66, 65535] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s4 -> s4 [0, 65535] { R3048 += 1, R2938 += 1, R2647 += 1, R2648 += 1 };
  s4 -> s7 [0, 65535] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s7 -> s8 [0, 65535] { R3048 += 1, R2938 += 1 };
  s7 -> s7 [0, 65535] { R3048 += 1, R2938 += 1, R2648 += 1, R2649 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3048 += 1, R2938 += 1 };
  s8 -> s10 [0, 65535] { R3048 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3048 += 1 };
  s11 -> s11 [0, 64] { R3048 += 1, R2938 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R3048 += 1 };
  s11 -> s8 [65, 65] { R3048 += 1, R2938 += 1 };
  s11 -> s12 [65, 65] { R3048 += 1, R2938 += 1 };
  s11 -> s11 [66, 65535] { R3048 += 1, R2938 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R3048 += 1 };
  accepting s12, s8, s9, s10, s11;
};
automaton uri_72 {
  init s0;
  s0 -> s1 [0, 64] { R3050 += 1, R2940 += 1 };
  s0 -> s2 [0, 65535] { R3050 += 1, R2939 += 1, R2940 += 1 };
  s0 -> s0 [0, 65535] { R3049 += 1, R3050 += 1 };
  s0 -> s3 [65, 65] { R3050 += 1, R2940 += 1 };
  s0 -> s4 [65, 65] { R3050 += 1, R2940 += 1 };
  s0 -> s1 [66, 65535] { R3050 += 1, R2940 += 1 };
  s1 -> s1 [0, 64] { R3050 += 1, R2940 += 1 };
  s1 -> s1 [0, 65535] { R3050 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R3050 += 1, R2940 += 1 };
  s1 -> s4 [65, 65] { R3050 += 1, R2940 += 1 };
  s1 -> s1 [66, 65535] { R3050 += 1, R2940 += 1 };
  s2 -> s1 [0, 64] { R3050 += 1, R2940 += 1 };
  s2 -> s2 [0, 65535] { R3050 += 1, R2939 += 1, R2940 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R3050 += 1, R2940 += 1 };
  s2 -> s4 [65, 65] { R3050 += 1, R2940 += 1 };
  s2 -> s1 [66, 65535] { R3050 += 1, R2940 += 1 };
  s3 -> s3 [0, 65535] { R3050 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3050 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3050 += 1, R2940 += 1 };
  s5 -> s5 [0, 65535] { R3050 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_73 {
  init s0;
  s0 -> s1 [0, 64] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s0 -> s2 [0, 64] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s0 -> s3 [0, 65535] { R3052 += 1, R2941 += 1, R2942 += 1 };
  s0 -> s0 [0, 65535] { R3051 += 1, R3052 += 1 };
  s0 -> s4 [65, 65] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s0 -> s5 [65, 65] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s0 -> s6 [65, 65] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s0 -> s7 [65, 65] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s0 -> s1 [66, 79] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s0 -> s2 [66, 65535] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s0 -> s1 [81, 65535] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s1 -> s1 [0, 64] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s1 -> s1 [0, 65535] { R3052 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [65, 65] { R3052 += 1, R2942 += 1 };
  s1 -> s5 [65, 65] { R3052 += 1, R2942 += 1 };
  s1 -> s1 [66, 79] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s1 -> s1 [66, 65535] { R3052 += 1, R2942 += 1 };
  s1 -> s1 [81, 65535] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s2 -> s1 [0, 64] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s2 -> s2 [0, 64] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s2 -> s4 [65, 65] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s2 -> s5 [65, 65] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s2 -> s6 [65, 65] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s2 -> s7 [65, 65] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s2 -> s1 [66, 79] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s2 -> s2 [66, 65535] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s2 -> s1 [81, 65535] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s3 -> s1 [0, 64] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s3 -> s2 [0, 64] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s3 -> s3 [0, 65535] { R3052 += 1, R2941 += 1, R2942 += 1 };
  s3 -> s4 [65, 65] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s3 -> s5 [65, 65] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s3 -> s6 [65, 65] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s3 -> s7 [65, 65] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s3 -> s1 [66, 79] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s3 -> s2 [66, 65535] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s3 -> s1 [81, 65535] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s4 -> s4 [0, 79] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s4 -> s9 [0, 65535] { R3052 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R3052 += 1, R2942 += 1 };
  s4 -> s4 [81, 65535] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R3052 += 1 };
  s6 -> s4 [0, 79] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s6 -> s6 [0, 65535] { R3052 += 1, R2942 += 1, R2853 += 1, R2854 += 1 };
  s6 -> s4 [81, 65535] { R3052 += 1, R2942 += 1, R2854 += 1, R2855 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3052 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
};
synchronised {  // Automata constraining c8
automaton c8_0 {
  init s0;
  s0 -> s1 [109, 109];
  accepting s1;
};
};
synchronised {  // Automata constraining P92
automaton P92_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining c2
automaton c2_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
constraint R6 = R2892 && R7 = R3052 && R45 = 0 && R46 = 1 && R47 = 0 && R48 = 1 && R73 = 0 && R74 = R2892 && R75 = 0 && R76 = R2892 && R77 = 0 && R78 = R2892 && R79 = 0 && R80 = R3052 && R81 = 0 && R82 = R3052 && R83 = 0 && R84 = R3052 && R598 + R597 = 0 && R2859 = 0 && R2860 = R2892 && R2861 = 0 && R2862 = R2892 && R2863 = 0 && R2864 = R2892 && R2865 = 0 && R2866 = R2892 && R2867 = 0 && R2868 = R2892 && R2869 = 0 && R2870 = R2892 && R2871 = 0 && R2872 = R2892 && R2873 = 0 && R2874 = R2892 && R2875 = 0 && R2876 = R2892 && R2877 = 0 && R2878 = R2892 && R2879 = 0 && R2880 = R2892 && R2881 = 0 && R2882 = R2892 && R2883 = 0 && R2884 = R2892 && R2885 = 0 && R2886 = R2892 && R2887 = 0 && R2888 = R2892 && R2889 = 0 && R2890 = R2892 && R2891 = 0 && R2893 = 0 && R2894 = R3052 && R2895 = 0 && R2896 = R3052 && R2897 = 0 && R2898 = R3052 && R2899 = 0 && R2900 = R3052 && R2901 = 0 && R2902 = R3052 && R2903 = 0 && R2904 = R3052 && R2905 = 0 && R2906 = R3052 && R2907 = 0 && R2908 = R3052 && R2909 = 0 && R2910 = R3052 && R2913 = 0 && R2914 = 0 && R2937 = 0 && R2938 = 0 && R2941 = 0 && R2942 = 0 && R2961 = 10 && R2962 = R3052 && R2963 = 10 && R2964 = R3052 && R2965 = 10 && R2966 = R3052 && R2967 = 10 && R2968 = R3052 && R2969 = 10 && R2970 = R3052 && R2971 = 10 && R2972 = R3052 && R2973 = 10 && R2974 = R3052 && R2975 = 10 && R2976 = R3052 && R2977 = 10 && R2978 = R3052 && R2979 = 10 && R2980 = R3052 && R2981 = 10 && R2982 = R3052 && R2983 = 10 && R2984 = R3052 && R2985 = 10 && R2986 = R3052 && R2987 = 10 && R2988 = R3052 && R2989 = 10 && R2990 = R3052 && R2991 = 10 && R2992 = R3052 && R2993 = 10 && R2994 = R3052 && R2995 = 10 && R2996 = R3052 && R2997 = 10 && R2998 = R3052 && R2999 = 10 && R3000 = R3052 && R3001 = 10 && R3002 = R3052 && R3003 = 10 && R3004 = R3052 && R3005 = 10 && R3006 = R3052 && R3007 = 10 && R3008 = R3052 && R3009 = 10 && R3010 = R3052 && R3011 = 10 && R3012 = R3052 && R3013 = 10 && R3014 = R3052 && R3015 = 10 && R3016 = R3052 && R3017 = 10 && R3018 = R3052 && R3019 = 10 && R3020 = R3052 && R3021 = 10 && R3022 = R3052 && R3023 = 10 && R3024 = R3052 && R3025 = 10 && R3026 = R3052 && R3027 = 10 && R3028 = R3052 && R3029 = 10 && R3030 = R3052 && R3031 = 10 && R3032 = R3052 && R3033 = 10 && R3034 = R3052 && R3035 = 10 && R3036 = R3052 && R3037 = 10 && R3038 = R3052 && R3039 = 10 && R3040 = R3052 && R3041 = 10 && R3042 = R3052 && R3043 = 10 && R3044 = R3052 && R3045 = 10 && R3046 = R3052 && R3047 = 10 && R3048 = R3052 && R3049 = 10 && R3050 = R3052 && R3051 = 10 && R52 + R51 != 0 && R54 + R53 != 0 && R122 + R119 + R134 + R131 != 0 && R628 + R625 + R2858 + R2855 != 0 && R18 < 1 && R19 < 1 && R22 < 1 && R25 < 1 && R28 < 1 && -1*R104 + -1*R103 < 1 && R106 + R105 < 1 && R600 + R599 < 1 && R602 + R601 < 1 && 0 < R2892 && 9 < R3052 && (R104 + R103 != 0 || R112 + R109 = 0 || (R110 + R107 = 0 && R111 + R108 = 0)) && (R104 + R103 != 0 || R112 + R109 = 0 || (R115 + R113 = 0 && R116 + R114 = 0)) && (R104 + R103 != 0 || R112 + R109 = 0 || (R120 + R117 = 0 && R121 + R118 = 0)) && (R110 + R107 != 0 || R104 + R103 + -1*R111 + -1*R108 = 0 || R104 + R103 < 1) && (R115 + R113 != 0 || R104 + R103 + -1*R116 + -1*R114 = 0 || R104 + R103 < 1) && (R120 + R117 != 0 || R104 + R103 + -1*R121 + -1*R118 = 0 || R104 + R103 < 1) && (R39 = 0 || (R95 = 0 && R96 = 0)) && (R39 = 0 || (R97 = 0 && R98 = 0)) && (R40 = 0 || (R2911 = 0 && R2912 = 0)) && (R40 = 0 || (R2915 = 0 && R2916 = 0)) && (R40 = 0 || (R2917 = 0 && R2918 = 0)) && (R40 = 0 || (R2919 = 0 && R2920 = 0)) && (R40 = 0 || (R2921 = 0 && R2922 = 0)) && (R40 = 0 || (R2923 = 0 && R2924 = 0)) && (R40 = 0 || (R2925 = 0 && R2926 = 0)) && (R40 = 0 || (R2927 = 0 && R2928 = 0)) && (R40 = 0 || (R2929 = 0 && R2930 = 0)) && (R40 = 0 || (R2931 = 0 && R2932 = 0)) && (R40 = 0 || (R2933 = 0 && R2934 = 0)) && (R40 = 0 || (R2935 = 0 && R2936 = 0)) && (R40 = 0 || (R2939 = 0 && R2940 = 0)) && (R43 = 0 || (R2943 = 0 && R2944 = 0)) && (R43 = 0 || (R2945 = 0 && R2946 = 0)) && (R43 = 0 || (R2947 = 0 && R2948 = 0)) && (R43 = 0 || (R2949 = 0 && R2950 = 0)) && (R43 = 0 || (R2951 = 0 && R2952 = 0)) && (R43 = 0 || (R2953 = 0 && R2954 = 0)) && (R43 = 0 || (R2955 = 0 && R2956 = 0)) && (R43 = 0 || (R2957 = 0 && R2958 = 0)) && (R43 = 0 || (R2959 = 0 && R2960 = 0)) && (R44 = 0 || (R99 = 0 && R100 = 0)) && (R44 = 0 || (R101 = 0 && R102 = 0)) && (R110 + R107 = 0 || R104 + R103 < 1) && (R115 + R113 = 0 || R104 + R103 < 1) && (R120 + R117 = 0 || R104 + R103 < 1) && (R128 + R125 = 0 || (R126 + R123 = 0 && R127 + R124 = 0)) && (R128 + R125 = 0 || (R132 + R129 = 0 && R133 + R130 = 0)) && (R608 + R605 = 0 || (R606 + R603 = 0 && R607 + R604 = 0)) && (R618 + R615 = 0 || (R611 + R609 = 0 && R612 + R610 = 0)) && (R618 + R615 = 0 || (R616 + R613 = 0 && R617 + R614 = 0)) && (R618 + R615 = 0 || (R621 + R619 = 0 && R622 + R620 = 0)) && (R618 + R615 = 0 || (R626 + R623 = 0 && R627 + R624 = 0)) && (R634 + R631 = 0 || (R632 + R629 = 0 && R633 + R630 = 0)) && (R2652 + R2649 = 0 || (R2650 + R2647 = 0 && R2651 + R2648 = 0)) && (R2652 + R2649 = 0 || (R2856 + R2853 = 0 && R2857 + R2854 = 0));
// End of Parikh automata intersection problem
