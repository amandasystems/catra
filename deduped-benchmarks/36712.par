// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R120, R121, R122, R123, R124, R125, R126, R127, R128, R129, R130, R131, R132, R133, R134, R135, R136, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R160, R1603, R1604, R1605, R1606, R1607, R1608, R161, R162, R163, R164, R165, R166, R1803, R1804, R1805, R1806, R1807, R1808, R1809, R1810, R1811, R1812, R1813, R1814, R1815, R1816, R1817, R1818, R1819, R1820, R1821, R1822, R1823, R1824, R1825, R1826, R1827, R1828, R1829, R1830, R1831, R1832, R1833, R1834, R1835, R1836, R1837, R1838, R1839, R1840, R1841, R1842, R1843, R1844, R1845, R1846, R1847, R1848, R1849, R1850, R1851, R1852, R1853, R1854, R1855, R1856, R1857, R1858, R1859, R1860, R1861, R1862, R1863, R1864, R1865, R1866, R1867, R1868, R1869, R1870, R1871, R1872, R1873, R1874, R1875, R1876, R1877, R1878, R1879, R1880, R1881, R1882, R1883, R1884, R1885, R1886, R1887, R1888, R1889, R1890, R1891, R1892, R1893, R1894, R1895, R1896, R1897, R1898, R1899, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R20, R21, R24, R35, R36, R37, R38, R39, R40, R41, R42, R5, R6, R603, R604, R605, R606, R607, R608, R609, R610, R611, R612, R613, R614, R615, R616, R617, R618, R619, R620, R621, R622, R623, R624, R625, R626, R7, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining P96
automaton P96_0 {
  init s0;
  s0 -> s1 [122, 122];
  accepting s1;
};
};
synchronised {  // Automata constraining P63
automaton P63_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 64];
  s0 -> s0 [0, 65535] { R24 += 1 };
  s0 -> s2 [65, 65];
  s0 -> s1 [66, 65535];
  s1 -> s1 [0, 64];
  s1 -> s2 [65, 65];
  s1 -> s1 [66, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R1833 += 1, R1834 += 1 };
  s0 -> s1 [0, 65535] { R1834 += 1, R37 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1834 += 1, R37 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 65535] { R1836 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R1835 += 1, R1836 += 1 };
  s1 -> s1 [0, 65535] { R1836 += 1, R88 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 89] { R1838 += 1 };
  s0 -> s0 [0, 65535] { R1837 += 1, R1838 += 1 };
  s0 -> s2 [0, 65535] { R1838 += 1, R90 += 1 };
  s0 -> s1 [91, 65535] { R1838 += 1 };
  s1 -> s1 [0, 89] { R1838 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [91, 65535] { R1838 += 1 };
  s2 -> s1 [0, 89] { R1838 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1838 += 1, R90 += 1 };
  s2 -> s1 [91, 65535] { R1838 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 88] { R1840 += 1 };
  s0 -> s2 [0, 65535] { R1840 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R1839 += 1, R1840 += 1 };
  s0 -> s1 [90, 65535] { R1840 += 1 };
  s1 -> s1 [0, 88] { R1840 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [90, 65535] { R1840 += 1 };
  s2 -> s1 [0, 88] { R1840 += 1 };
  s2 -> s2 [0, 65535] { R1840 += 1, R92 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [90, 65535] { R1840 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 72] { R1842 += 1 };
  s0 -> s0 [0, 65535] { R1841 += 1, R1842 += 1 };
  s0 -> s2 [0, 65535] { R1842 += 1, R94 += 1 };
  s0 -> s1 [74, 65535] { R1842 += 1 };
  s1 -> s1 [0, 72] { R1842 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [74, 65535] { R1842 += 1 };
  s2 -> s1 [0, 72] { R1842 += 1 };
  s2 -> s2 [0, 65535] { R1842 += 1, R94 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [74, 65535] { R1842 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 65535] { R1844 += 1, R99 += 1, R100 += 1 };
  s0 -> s2 [0, 65535] { R1844 += 1, R98 += 1, R99 += 1 };
  s0 -> s0 [0, 65535] { R1843 += 1, R1844 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1844 += 1, R99 += 1, R100 += 1 };
  s1 -> s4 [0, 65535] { R1844 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1844 += 1, R99 += 1, R100 += 1 };
  s2 -> s2 [0, 65535] { R1844 += 1, R98 += 1, R99 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1844 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s0 [0, 65535] { R1845 += 1, R1846 += 1 };
  s0 -> s1 [0, 65535] { R1846 += 1, R103 += 1, R104 += 1 };
  s0 -> s2 [108, 108] { R1846 += 1, R104 += 1 };
  s1 -> s1 [0, 65535] { R1846 += 1, R103 += 1, R104 += 1 };
  s1 -> s2 [108, 108] { R1846 += 1, R104 += 1 };
  s2 -> s3 [111, 111] { R1846 += 1, R104 += 1 };
  s3 -> s4 [99, 99] { R1846 += 1, R104 += 1 };
  s4 -> s5 [97, 97] { R1846 += 1, R104 += 1 };
  s5 -> s6 [108, 108] { R1846 += 1, R104 += 1 };
  s6 -> s7 [104, 104] { R1846 += 1, R104 += 1 };
  s7 -> s8 [111, 111] { R1846 += 1, R104 += 1 };
  s8 -> s9 [115, 115] { R1846 += 1, R104 += 1 };
  s9 -> s10 [116, 116] { R1846 += 1, R104 += 1 };
  s10 -> s10 [0, 65535] { R1846 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  accepting s10, s11;
};
automaton uri_10 {
  init s0;
  s0 -> s0 [0, 65535] { R1847 += 1, R1848 += 1 };
  s0 -> s1 [0, 65535] { R1848 += 1, R108 += 1, R109 += 1 };
  s0 -> s2 [0, 65535] { R1848 += 1, R109 += 1, R110 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1848 += 1, R108 += 1, R109 += 1 };
  s1 -> s2 [0, 65535] { R1848 += 1, R109 += 1, R110 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1848 += 1, R109 += 1, R110 += 1 };
  s2 -> s4 [0, 65535] { R1848 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1848 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 107] { R1850 += 1, R114 += 1 };
  s0 -> s2 [0, 65535] { R1850 += 1, R113 += 1, R114 += 1 };
  s0 -> s0 [0, 65535] { R1849 += 1, R1850 += 1 };
  s0 -> s3 [108, 108] { R1850 += 1, R114 += 1 };
  s0 -> s1 [109, 65535] { R1850 += 1, R114 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s13 [0, 65535] { R1850 += 1 };
  s1 -> s1 [0, 65535] { R1850 += 1, R114 += 1 };
  s2 -> s1 [0, 107] { R1850 += 1, R114 += 1 };
  s2 -> s2 [0, 65535] { R1850 += 1, R113 += 1, R114 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R1850 += 1, R114 += 1 };
  s2 -> s1 [109, 65535] { R1850 += 1, R114 += 1 };
  s3 -> s1 [0, 110] { R1850 += 1, R114 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1850 += 1 };
  s3 -> s5 [111, 111] { R1850 += 1, R114 += 1 };
  s3 -> s1 [112, 65535] { R1850 += 1, R114 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R1850 += 1, R114 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1850 += 1 };
  s5 -> s6 [99, 99] { R1850 += 1, R114 += 1 };
  s5 -> s1 [100, 65535] { R1850 += 1, R114 += 1 };
  s6 -> s1 [0, 96] { R1850 += 1, R114 += 1 };
  s6 -> s6 [0, 65535] { R1850 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s7 [97, 97] { R1850 += 1, R114 += 1 };
  s6 -> s1 [98, 65535] { R1850 += 1, R114 += 1 };
  s7 -> s1 [0, 107] { R1850 += 1, R114 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s7 [0, 65535] { R1850 += 1 };
  s7 -> s8 [108, 108] { R1850 += 1, R114 += 1 };
  s7 -> s1 [109, 65535] { R1850 += 1, R114 += 1 };
  s8 -> s1 [0, 103] { R1850 += 1, R114 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s8 [0, 65535] { R1850 += 1 };
  s8 -> s9 [104, 104] { R1850 += 1, R114 += 1 };
  s8 -> s1 [105, 65535] { R1850 += 1, R114 += 1 };
  s9 -> s1 [0, 110] { R1850 += 1, R114 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s9 [0, 65535] { R1850 += 1 };
  s9 -> s10 [111, 111] { R1850 += 1, R114 += 1 };
  s9 -> s1 [112, 65535] { R1850 += 1, R114 += 1 };
  s10 -> s1 [0, 114] { R1850 += 1, R114 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s10 [0, 65535] { R1850 += 1 };
  s10 -> s11 [115, 115] { R1850 += 1, R114 += 1 };
  s10 -> s1 [116, 65535] { R1850 += 1, R114 += 1 };
  s11 -> s1 [0, 115] { R1850 += 1, R114 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s11 [0, 65535] { R1850 += 1 };
  s11 -> s12 [116, 116] { R1850 += 1, R114 += 1 };
  s11 -> s1 [117, 65535] { R1850 += 1, R114 += 1 };
  s12 -> s1 [0, 65535] { R1850 += 1, R114 += 1 };
  s13 -> s4 [0, 65535];
  s13 -> s13 [0, 65535] { R1850 += 1 };
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 65535] { R1852 += 1, R118 += 1, R119 += 1 };
  s0 -> s0 [0, 65535] { R1851 += 1, R1852 += 1 };
  s0 -> s2 [0, 65535] { R1852 += 1, R119 += 1, R120 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1852 += 1, R118 += 1, R119 += 1 };
  s1 -> s2 [0, 65535] { R1852 += 1, R119 += 1, R120 += 1 };
  s2 -> s3 [0, 65535] { R1852 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1852 += 1, R119 += 1, R120 += 1 };
  s3 -> s3 [0, 65535] { R1852 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R1854 += 1, R125 += 1, R126 += 1 };
  s0 -> s0 [0, 65535] { R1853 += 1, R1854 += 1 };
  s0 -> s2 [0, 65535] { R1854 += 1, R124 += 1, R125 += 1 };
  s1 -> s4 [0, 65535] { R1854 += 1 };
  s1 -> s1 [0, 65535] { R1854 += 1, R125 += 1, R126 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1854 += 1, R125 += 1, R126 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1854 += 1, R124 += 1, R125 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1854 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 107] { R1856 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R1855 += 1, R1856 += 1 };
  s0 -> s2 [0, 65535] { R1856 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [108, 108] { R1856 += 1, R130 += 1 };
  s0 -> s1 [109, 65535] { R1856 += 1, R130 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s13 [0, 65535] { R1856 += 1 };
  s1 -> s1 [0, 65535] { R1856 += 1, R130 += 1 };
  s2 -> s1 [0, 107] { R1856 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1856 += 1, R129 += 1, R130 += 1 };
  s2 -> s3 [108, 108] { R1856 += 1, R130 += 1 };
  s2 -> s1 [109, 65535] { R1856 += 1, R130 += 1 };
  s3 -> s1 [0, 110] { R1856 += 1, R130 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1856 += 1 };
  s3 -> s5 [111, 111] { R1856 += 1, R130 += 1 };
  s3 -> s1 [112, 65535] { R1856 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R1856 += 1, R130 += 1 };
  s5 -> s5 [0, 65535] { R1856 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [99, 99] { R1856 += 1, R130 += 1 };
  s5 -> s1 [100, 65535] { R1856 += 1, R130 += 1 };
  s6 -> s1 [0, 96] { R1856 += 1, R130 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1856 += 1 };
  s6 -> s7 [97, 97] { R1856 += 1, R130 += 1 };
  s6 -> s1 [98, 65535] { R1856 += 1, R130 += 1 };
  s7 -> s1 [0, 107] { R1856 += 1, R130 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s7 [0, 65535] { R1856 += 1 };
  s7 -> s8 [108, 108] { R1856 += 1, R130 += 1 };
  s7 -> s1 [109, 65535] { R1856 += 1, R130 += 1 };
  s8 -> s1 [0, 103] { R1856 += 1, R130 += 1 };
  s8 -> s8 [0, 65535] { R1856 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s9 [104, 104] { R1856 += 1, R130 += 1 };
  s8 -> s1 [105, 65535] { R1856 += 1, R130 += 1 };
  s9 -> s1 [0, 110] { R1856 += 1, R130 += 1 };
  s9 -> s9 [0, 65535] { R1856 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s10 [111, 111] { R1856 += 1, R130 += 1 };
  s9 -> s1 [112, 65535] { R1856 += 1, R130 += 1 };
  s10 -> s1 [0, 114] { R1856 += 1, R130 += 1 };
  s10 -> s10 [0, 65535] { R1856 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s11 [115, 115] { R1856 += 1, R130 += 1 };
  s10 -> s1 [116, 65535] { R1856 += 1, R130 += 1 };
  s11 -> s1 [0, 115] { R1856 += 1, R130 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s11 [0, 65535] { R1856 += 1 };
  s11 -> s12 [116, 116] { R1856 += 1, R130 += 1 };
  s11 -> s1 [117, 65535] { R1856 += 1, R130 += 1 };
  s12 -> s1 [0, 65535] { R1856 += 1, R130 += 1 };
  s13 -> s4 [0, 65535];
  s13 -> s13 [0, 65535] { R1856 += 1 };
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R1858 += 1, R134 += 1, R135 += 1 };
  s0 -> s0 [0, 65535] { R1857 += 1, R1858 += 1 };
  s0 -> s2 [0, 65535] { R1858 += 1, R135 += 1, R136 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1858 += 1, R134 += 1, R135 += 1 };
  s1 -> s2 [0, 65535] { R1858 += 1, R135 += 1, R136 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1858 += 1, R135 += 1, R136 += 1 };
  s2 -> s4 [0, 65535] { R1858 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1858 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R1860 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R1859 += 1, R1860 += 1 };
  s0 -> s2 [0, 65535] { R1860 += 1, R140 += 1, R141 += 1 };
  s1 -> s1 [0, 65535] { R1860 += 1, R141 += 1, R142 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1860 += 1 };
  s2 -> s1 [0, 65535] { R1860 += 1, R141 += 1, R142 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1860 += 1, R140 += 1, R141 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1860 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s0 [0, 65535] { R1861 += 1, R1862 += 1 };
  s0 -> s1 [0, 65535] { R1862 += 1 };
  s1 -> s1 [0, 65535] { R1862 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R1864 += 1, R146 += 1, R147 += 1 };
  s0 -> s0 [0, 65535] { R1863 += 1, R1864 += 1 };
  s0 -> s2 [0, 65535] { R1864 += 1, R147 += 1, R148 += 1 };
  s1 -> s1 [0, 65535] { R1864 += 1, R146 += 1, R147 += 1 };
  s1 -> s2 [0, 65535] { R1864 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R1864 += 1 };
  s2 -> s2 [0, 65535] { R1864 += 1, R147 += 1, R148 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1864 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s0 [0, 65535] { R1865 += 1, R1866 += 1 };
  s0 -> s1 [0, 65535] { R1866 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1866 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 88] { R1868 += 1, R153 += 1, R154 += 1 };
  s0 -> s2 [0, 65535] { R1868 += 1, R152 += 1, R153 += 1 };
  s0 -> s0 [0, 65535] { R1867 += 1, R1868 += 1 };
  s0 -> s3 [89, 89] { R1868 += 1, R153 += 1, R154 += 1 };
  s0 -> s4 [89, 89] { R1868 += 1, R153 += 1, R154 += 1 };
  s0 -> s1 [90, 65535] { R1868 += 1, R153 += 1, R154 += 1 };
  s1 -> s1 [0, 88] { R1868 += 1, R153 += 1, R154 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1868 += 1 };
  s1 -> s3 [89, 89] { R1868 += 1, R153 += 1, R154 += 1 };
  s1 -> s4 [89, 89] { R1868 += 1, R153 += 1, R154 += 1 };
  s1 -> s1 [90, 65535] { R1868 += 1, R153 += 1, R154 += 1 };
  s2 -> s1 [0, 88] { R1868 += 1, R153 += 1, R154 += 1 };
  s2 -> s2 [0, 65535] { R1868 += 1, R152 += 1, R153 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [89, 89] { R1868 += 1, R153 += 1, R154 += 1 };
  s2 -> s4 [89, 89] { R1868 += 1, R153 += 1, R154 += 1 };
  s2 -> s1 [90, 65535] { R1868 += 1, R153 += 1, R154 += 1 };
  s3 -> s3 [0, 65535] { R1868 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1868 += 1, R153 += 1, R154 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1868 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1868 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s0 [0, 65535] { R1869 += 1, R1870 += 1 };
  s0 -> s1 [0, 65535] { R1870 += 1, R158 += 1, R159 += 1 };
  s0 -> s2 [0, 65535] { R1870 += 1, R159 += 1, R160 += 1 };
  s1 -> s1 [0, 65535] { R1870 += 1, R158 += 1, R159 += 1 };
  s1 -> s2 [0, 65535] { R1870 += 1, R159 += 1, R160 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1870 += 1, R159 += 1, R160 += 1 };
  s2 -> s3 [0, 65535] { R1870 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1870 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s0 [0, 65535] { R1871 += 1, R1872 += 1 };
  s0 -> s1 [0, 65535] { R1872 += 1 };
  s1 -> s1 [0, 65535] { R1872 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 72] { R1874 += 1, R165 += 1, R166 += 1 };
  s0 -> s2 [0, 65535] { R1874 += 1, R164 += 1, R165 += 1 };
  s0 -> s0 [0, 65535] { R1873 += 1, R1874 += 1 };
  s0 -> s3 [73, 73] { R1874 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [73, 73] { R1874 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [74, 65535] { R1874 += 1, R165 += 1, R166 += 1 };
  s1 -> s1 [0, 72] { R1874 += 1, R165 += 1, R166 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1874 += 1 };
  s1 -> s3 [73, 73] { R1874 += 1, R165 += 1, R166 += 1 };
  s1 -> s4 [73, 73] { R1874 += 1, R165 += 1, R166 += 1 };
  s1 -> s1 [74, 65535] { R1874 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [0, 72] { R1874 += 1, R165 += 1, R166 += 1 };
  s2 -> s2 [0, 65535] { R1874 += 1, R164 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R1874 += 1, R165 += 1, R166 += 1 };
  s2 -> s4 [73, 73] { R1874 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [74, 65535] { R1874 += 1, R165 += 1, R166 += 1 };
  s3 -> s6 [0, 65535] { R1874 += 1 };
  s3 -> s3 [0, 65535] { R1874 += 1, R165 += 1, R166 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1874 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1874 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s0 [0, 65535] { R1897 += 1, R1898 += 1 };
  s0 -> s1 [0, 65535] { R1898 += 1, R38 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1898 += 1, R38 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 64] { R1900 += 1, R87 += 1 };
  s0 -> s0 [0, 65535] { R1899 += 1, R1900 += 1 };
  s0 -> s2 [65, 65] { R1900 += 1, R87 += 1 };
  s0 -> s3 [65, 65] { R1900 += 1, R87 += 1 };
  s0 -> s1 [66, 65535] { R1900 += 1, R87 += 1 };
  s1 -> s1 [0, 64] { R1900 += 1, R87 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1900 += 1, R87 += 1 };
  s1 -> s3 [65, 65] { R1900 += 1, R87 += 1 };
  s1 -> s1 [66, 65535] { R1900 += 1, R87 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1900 += 1, R87 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R1902 += 1, R89 += 1 };
  s0 -> s0 [0, 65535] { R1901 += 1, R1902 += 1 };
  s0 -> s2 [65, 65] { R1902 += 1, R89 += 1 };
  s0 -> s3 [65, 65] { R1902 += 1, R89 += 1 };
  s0 -> s1 [66, 65535] { R1902 += 1, R89 += 1 };
  s1 -> s1 [0, 64] { R1902 += 1, R89 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1902 += 1, R89 += 1 };
  s1 -> s3 [65, 65] { R1902 += 1, R89 += 1 };
  s1 -> s1 [66, 65535] { R1902 += 1, R89 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1902 += 1, R89 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R1904 += 1, R91 += 1 };
  s0 -> s0 [0, 65535] { R1903 += 1, R1904 += 1 };
  s0 -> s2 [65, 65] { R1904 += 1, R91 += 1 };
  s0 -> s3 [65, 65] { R1904 += 1, R91 += 1 };
  s0 -> s1 [66, 65535] { R1904 += 1, R91 += 1 };
  s1 -> s1 [0, 64] { R1904 += 1, R91 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1904 += 1, R91 += 1 };
  s1 -> s3 [65, 65] { R1904 += 1, R91 += 1 };
  s1 -> s1 [66, 65535] { R1904 += 1, R91 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1904 += 1, R91 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R1906 += 1, R93 += 1 };
  s0 -> s0 [0, 65535] { R1905 += 1, R1906 += 1 };
  s0 -> s2 [65, 65] { R1906 += 1, R93 += 1 };
  s0 -> s3 [65, 65] { R1906 += 1, R93 += 1 };
  s0 -> s1 [66, 65535] { R1906 += 1, R93 += 1 };
  s1 -> s1 [0, 64] { R1906 += 1, R93 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1906 += 1, R93 += 1 };
  s1 -> s3 [65, 65] { R1906 += 1, R93 += 1 };
  s1 -> s1 [66, 65535] { R1906 += 1, R93 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1906 += 1, R93 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R1908 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R1907 += 1, R1908 += 1 };
  s0 -> s2 [65, 65] { R1908 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [65, 65] { R1908 += 1, R95 += 1, R96 += 1 };
  s0 -> s1 [66, 65535] { R1908 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 64] { R1908 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1908 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [65, 65] { R1908 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [66, 65535] { R1908 += 1, R95 += 1, R96 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1908 += 1, R95 += 1, R96 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R1910 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R1909 += 1, R1910 += 1 };
  s0 -> s2 [65, 65] { R1910 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [65, 65] { R1910 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [66, 65535] { R1910 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 64] { R1910 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1910 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [65, 65] { R1910 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [66, 65535] { R1910 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1910 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 64] { R1912 += 1, R105 += 1, R106 += 1 };
  s0 -> s0 [0, 65535] { R1911 += 1, R1912 += 1 };
  s0 -> s2 [65, 65] { R1912 += 1, R105 += 1, R106 += 1 };
  s0 -> s3 [65, 65] { R1912 += 1, R105 += 1, R106 += 1 };
  s0 -> s1 [66, 65535] { R1912 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [0, 64] { R1912 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1912 += 1, R105 += 1, R106 += 1 };
  s1 -> s3 [65, 65] { R1912 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [66, 65535] { R1912 += 1, R105 += 1, R106 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1912 += 1, R105 += 1, R106 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R1914 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R1913 += 1, R1914 += 1 };
  s0 -> s2 [65, 65] { R1914 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [65, 65] { R1914 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [66, 65535] { R1914 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 64] { R1914 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1914 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [65, 65] { R1914 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [66, 65535] { R1914 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1914 += 1, R111 += 1, R112 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 64] { R1916 += 1, R115 += 1, R116 += 1 };
  s0 -> s0 [0, 65535] { R1915 += 1, R1916 += 1 };
  s0 -> s2 [65, 65] { R1916 += 1, R115 += 1, R116 += 1 };
  s0 -> s3 [65, 65] { R1916 += 1, R115 += 1, R116 += 1 };
  s0 -> s1 [66, 65535] { R1916 += 1, R115 += 1, R116 += 1 };
  s1 -> s1 [0, 64] { R1916 += 1, R115 += 1, R116 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1916 += 1, R115 += 1, R116 += 1 };
  s1 -> s3 [65, 65] { R1916 += 1, R115 += 1, R116 += 1 };
  s1 -> s1 [66, 65535] { R1916 += 1, R115 += 1, R116 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1916 += 1, R115 += 1, R116 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R1918 += 1, R121 += 1, R122 += 1 };
  s0 -> s0 [0, 65535] { R1917 += 1, R1918 += 1 };
  s0 -> s2 [65, 65] { R1918 += 1, R121 += 1, R122 += 1 };
  s0 -> s3 [65, 65] { R1918 += 1, R121 += 1, R122 += 1 };
  s0 -> s1 [66, 65535] { R1918 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [0, 64] { R1918 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1918 += 1, R121 += 1, R122 += 1 };
  s1 -> s3 [65, 65] { R1918 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [66, 65535] { R1918 += 1, R121 += 1, R122 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1918 += 1, R121 += 1, R122 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 64] { R1920 += 1, R127 += 1, R128 += 1 };
  s0 -> s0 [0, 65535] { R1919 += 1, R1920 += 1 };
  s0 -> s2 [65, 65] { R1920 += 1, R127 += 1, R128 += 1 };
  s0 -> s3 [65, 65] { R1920 += 1, R127 += 1, R128 += 1 };
  s0 -> s1 [66, 65535] { R1920 += 1, R127 += 1, R128 += 1 };
  s1 -> s1 [0, 64] { R1920 += 1, R127 += 1, R128 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1920 += 1, R127 += 1, R128 += 1 };
  s1 -> s3 [65, 65] { R1920 += 1, R127 += 1, R128 += 1 };
  s1 -> s1 [66, 65535] { R1920 += 1, R127 += 1, R128 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1920 += 1, R127 += 1, R128 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 64] { R1922 += 1, R131 += 1, R132 += 1 };
  s0 -> s0 [0, 65535] { R1921 += 1, R1922 += 1 };
  s0 -> s2 [65, 65] { R1922 += 1, R131 += 1, R132 += 1 };
  s0 -> s3 [65, 65] { R1922 += 1, R131 += 1, R132 += 1 };
  s0 -> s1 [66, 65535] { R1922 += 1, R131 += 1, R132 += 1 };
  s1 -> s1 [0, 64] { R1922 += 1, R131 += 1, R132 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1922 += 1, R131 += 1, R132 += 1 };
  s1 -> s3 [65, 65] { R1922 += 1, R131 += 1, R132 += 1 };
  s1 -> s1 [66, 65535] { R1922 += 1, R131 += 1, R132 += 1 };
  s2 -> s2 [0, 65535] { R1922 += 1, R131 += 1, R132 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R1924 += 1, R137 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R1923 += 1, R1924 += 1 };
  s0 -> s2 [65, 65] { R1924 += 1, R137 += 1, R138 += 1 };
  s0 -> s3 [65, 65] { R1924 += 1, R137 += 1, R138 += 1 };
  s0 -> s1 [66, 65535] { R1924 += 1, R137 += 1, R138 += 1 };
  s1 -> s1 [0, 64] { R1924 += 1, R137 += 1, R138 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1924 += 1, R137 += 1, R138 += 1 };
  s1 -> s3 [65, 65] { R1924 += 1, R137 += 1, R138 += 1 };
  s1 -> s1 [66, 65535] { R1924 += 1, R137 += 1, R138 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1924 += 1, R137 += 1, R138 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 64] { R1926 += 1 };
  s0 -> s0 [0, 65535] { R1925 += 1, R1926 += 1 };
  s0 -> s2 [65, 65] { R1926 += 1 };
  s0 -> s3 [65, 65] { R1926 += 1 };
  s0 -> s1 [66, 65535] { R1926 += 1 };
  s1 -> s1 [0, 64] { R1926 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1926 += 1 };
  s1 -> s3 [65, 65] { R1926 += 1 };
  s1 -> s1 [66, 65535] { R1926 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1926 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 64] { R1928 += 1, R143 += 1, R144 += 1 };
  s0 -> s0 [0, 65535] { R1927 += 1, R1928 += 1 };
  s0 -> s2 [65, 65] { R1928 += 1, R143 += 1, R144 += 1 };
  s0 -> s3 [65, 65] { R1928 += 1, R143 += 1, R144 += 1 };
  s0 -> s1 [66, 65535] { R1928 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [0, 64] { R1928 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1928 += 1, R143 += 1, R144 += 1 };
  s1 -> s3 [65, 65] { R1928 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [66, 65535] { R1928 += 1, R143 += 1, R144 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1928 += 1, R143 += 1, R144 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 64] { R1930 += 1 };
  s0 -> s0 [0, 65535] { R1929 += 1, R1930 += 1 };
  s0 -> s2 [65, 65] { R1930 += 1 };
  s0 -> s3 [65, 65] { R1930 += 1 };
  s0 -> s1 [66, 65535] { R1930 += 1 };
  s1 -> s1 [0, 64] { R1930 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1930 += 1 };
  s1 -> s3 [65, 65] { R1930 += 1 };
  s1 -> s1 [66, 65535] { R1930 += 1 };
  s2 -> s2 [0, 65535] { R1930 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_41 {
  init s0;
  s0 -> s1 [0, 64] { R1932 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R1931 += 1, R1932 += 1 };
  s0 -> s2 [65, 65] { R1932 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [65, 65] { R1932 += 1, R149 += 1, R150 += 1 };
  s0 -> s1 [66, 65535] { R1932 += 1, R149 += 1, R150 += 1 };
  s1 -> s1 [0, 64] { R1932 += 1, R149 += 1, R150 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1932 += 1, R149 += 1, R150 += 1 };
  s1 -> s3 [65, 65] { R1932 += 1, R149 += 1, R150 += 1 };
  s1 -> s1 [66, 65535] { R1932 += 1, R149 += 1, R150 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1932 += 1, R149 += 1, R150 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_42 {
  init s0;
  s0 -> s1 [0, 64] { R1934 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R1933 += 1, R1934 += 1 };
  s0 -> s2 [65, 65] { R1934 += 1, R155 += 1, R156 += 1 };
  s0 -> s3 [65, 65] { R1934 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [66, 65535] { R1934 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 64] { R1934 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1934 += 1, R155 += 1, R156 += 1 };
  s1 -> s3 [65, 65] { R1934 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [66, 65535] { R1934 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R1934 += 1, R155 += 1, R156 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_43 {
  init s0;
  s0 -> s1 [0, 64] { R1936 += 1 };
  s0 -> s0 [0, 65535] { R1935 += 1, R1936 += 1 };
  s0 -> s2 [65, 65] { R1936 += 1 };
  s0 -> s3 [65, 65] { R1936 += 1 };
  s0 -> s1 [66, 65535] { R1936 += 1 };
  s1 -> s1 [0, 64] { R1936 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1936 += 1 };
  s1 -> s3 [65, 65] { R1936 += 1 };
  s1 -> s1 [66, 65535] { R1936 += 1 };
  s2 -> s2 [0, 65535] { R1936 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_44 {
  init s0;
  s0 -> s1 [0, 64] { R1938 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R1937 += 1, R1938 += 1 };
  s0 -> s2 [65, 65] { R1938 += 1, R161 += 1, R162 += 1 };
  s0 -> s3 [65, 65] { R1938 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [66, 65535] { R1938 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 64] { R1938 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R1938 += 1, R161 += 1, R162 += 1 };
  s1 -> s3 [65, 65] { R1938 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [66, 65535] { R1938 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1938 += 1, R161 += 1, R162 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_45 {
  init s0;
  s0 -> s1 [0, 43] { R1940 += 1 };
  s0 -> s0 [0, 65535] { R1939 += 1, R1940 += 1 };
  s0 -> s1 [45, 45] { R1940 += 1 };
  s0 -> s2 [46, 46] { R1940 += 1 };
  s0 -> s1 [48, 62] { R1940 += 1 };
  s0 -> s3 [65, 65] { R1940 += 1 };
  s0 -> s1 [66, 65535] { R1940 += 1 };
  s1 -> s1 [0, 43] { R1940 += 1 };
  s1 -> s1 [45, 45] { R1940 += 1 };
  s1 -> s2 [46, 46] { R1940 += 1 };
  s1 -> s1 [48, 62] { R1940 += 1 };
  s1 -> s3 [65, 65] { R1940 += 1 };
  s1 -> s1 [66, 65535] { R1940 += 1 };
  s2 -> s1 [0, 43] { R1940 += 1 };
  s2 -> s1 [45, 45] { R1940 += 1 };
  s2 -> s2 [46, 46] { R1940 += 1 };
  s2 -> s1 [48, 62] { R1940 += 1 };
  s2 -> s3 [65, 65] { R1940 += 1 };
  s2 -> s1 [66, 114] { R1940 += 1 };
  s2 -> s8 [115, 115] { R1940 += 1 };
  s2 -> s1 [116, 65535] { R1940 += 1 };
  s3 -> s3 [0, 43] { R1940 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R1940 += 1 };
  s3 -> s4 [46, 46] { R1940 += 1 };
  s3 -> s3 [48, 62] { R1940 += 1 };
  s3 -> s3 [65, 65535] { R1940 += 1 };
  s4 -> s3 [0, 43] { R1940 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R1940 += 1 };
  s4 -> s4 [46, 46] { R1940 += 1 };
  s4 -> s3 [48, 62] { R1940 += 1 };
  s4 -> s3 [65, 114] { R1940 += 1 };
  s4 -> s5 [115, 115] { R1940 += 1 };
  s4 -> s3 [116, 65535] { R1940 += 1 };
  s5 -> s3 [0, 43] { R1940 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R1940 += 1 };
  s5 -> s4 [46, 46] { R1940 += 1 };
  s5 -> s3 [48, 62] { R1940 += 1 };
  s5 -> s3 [65, 110] { R1940 += 1 };
  s5 -> s6 [111, 111] { R1940 += 1 };
  s5 -> s3 [112, 65535] { R1940 += 1 };
  s6 -> s3 [0, 43] { R1940 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R1940 += 1 };
  s6 -> s4 [46, 46] { R1940 += 1 };
  s6 -> s3 [48, 62] { R1940 += 1 };
  s6 -> s3 [65, 98] { R1940 += 1 };
  s6 -> s7 [99, 99] { R1940 += 1 };
  s6 -> s3 [100, 65535] { R1940 += 1 };
  s7 -> s3 [0, 43] { R1940 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R1940 += 1 };
  s7 -> s4 [46, 46] { R1940 += 1 };
  s7 -> s3 [48, 62] { R1940 += 1 };
  s7 -> s3 [65, 106] { R1940 += 1 };
  s7 -> s3 [108, 65535] { R1940 += 1 };
  s8 -> s1 [0, 43] { R1940 += 1 };
  s8 -> s1 [45, 45] { R1940 += 1 };
  s8 -> s2 [46, 46] { R1940 += 1 };
  s8 -> s1 [48, 62] { R1940 += 1 };
  s8 -> s3 [65, 65] { R1940 += 1 };
  s8 -> s1 [66, 110] { R1940 += 1 };
  s8 -> s9 [111, 111] { R1940 += 1 };
  s8 -> s1 [112, 65535] { R1940 += 1 };
  s9 -> s1 [0, 43] { R1940 += 1 };
  s9 -> s1 [45, 45] { R1940 += 1 };
  s9 -> s2 [46, 46] { R1940 += 1 };
  s9 -> s1 [48, 62] { R1940 += 1 };
  s9 -> s3 [65, 65] { R1940 += 1 };
  s9 -> s1 [66, 98] { R1940 += 1 };
  s9 -> s10 [99, 99] { R1940 += 1 };
  s9 -> s1 [100, 65535] { R1940 += 1 };
  s10 -> s1 [0, 43] { R1940 += 1 };
  s10 -> s1 [45, 45] { R1940 += 1 };
  s10 -> s2 [46, 46] { R1940 += 1 };
  s10 -> s1 [48, 62] { R1940 += 1 };
  s10 -> s3 [65, 65] { R1940 += 1 };
  s10 -> s1 [66, 106] { R1940 += 1 };
  s10 -> s1 [108, 65535] { R1940 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_46 {
  init s0;
  s0 -> s0 [0, 65535] { R1941 += 1, R1942 += 1 };
  s0 -> s1 [0, 65535] { R1942 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1942 += 1, R5 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_47 {
  init s0;
  s0 -> s1 [0, 57] { R1944 += 1 };
  s0 -> s2 [0, 65535] { R1944 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R1943 += 1, R1944 += 1 };
  s0 -> s3 [58, 58] { R1944 += 1 };
  s0 -> s1 [59, 65535] { R1944 += 1 };
  s1 -> s1 [0, 57] { R1944 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R1944 += 1 };
  s1 -> s1 [59, 65535] { R1944 += 1 };
  s2 -> s1 [0, 57] { R1944 += 1 };
  s2 -> s2 [0, 65535] { R1944 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [58, 58] { R1944 += 1 };
  s2 -> s1 [59, 65535] { R1944 += 1 };
  s3 -> s3 [0, 65535] { R1944 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_48 {
  init s0;
  s0 -> s1 [0, 64] { R1946 += 1 };
  s0 -> s0 [0, 65535] { R1945 += 1, R1946 += 1 };
  s0 -> s2 [0, 65535] { R1946 += 1, R21 += 1 };
  s0 -> s3 [65, 65] { R1946 += 1 };
  s0 -> s1 [66, 65535] { R1946 += 1 };
  s1 -> s1 [0, 64] { R1946 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R1946 += 1 };
  s1 -> s1 [66, 65535] { R1946 += 1 };
  s2 -> s1 [0, 64] { R1946 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1946 += 1, R21 += 1 };
  s2 -> s3 [65, 65] { R1946 += 1 };
  s2 -> s1 [66, 65535] { R1946 += 1 };
  s3 -> s3 [0, 65535] { R1946 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_49 {
  init s0;
  s0 -> s1 [0, 90] { R1948 += 1, R40 += 1 };
  s0 -> s2 [0, 65535] { R1948 += 1, R39 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R1947 += 1, R1948 += 1 };
  s0 -> s3 [91, 91] { R1948 += 1, R40 += 1 };
  s0 -> s1 [92, 65535] { R1948 += 1, R40 += 1 };
  s1 -> s1 [0, 65535] { R1948 += 1, R40 += 1 };
  s1 -> s5 [0, 65535] { R1948 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 90] { R1948 += 1, R40 += 1 };
  s2 -> s2 [0, 65535] { R1948 += 1, R39 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [91, 91] { R1948 += 1, R40 += 1 };
  s2 -> s1 [92, 65535] { R1948 += 1, R40 += 1 };
  s3 -> s1 [0, 65535] { R1948 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1948 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton uri_50 {
  init s0;
  s0 -> s1 [0, 65535] { R1950 += 1, R41 += 1, R42 += 1 };
  s0 -> s2 [0, 65535] { R1950 += 1, R42 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R1949 += 1, R1950 += 1 };
  s1 -> s1 [0, 65535] { R1950 += 1, R41 += 1, R42 += 1 };
  s1 -> s2 [0, 65535] { R1950 += 1, R42 += 1, R7 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R1950 += 1 };
  s2 -> s2 [0, 65535] { R1950 += 1, R42 += 1, R7 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1950 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_51 {
  init s0;
  s0 -> s1 [0, 64] { R1952 += 1, R1810 += 1 };
  s0 -> s2 [0, 65535] { R1952 += 1, R1809 += 1, R1810 += 1 };
  s0 -> s0 [0, 65535] { R1951 += 1, R1952 += 1 };
  s0 -> s1 [66, 65535] { R1952 += 1, R1810 += 1 };
  s1 -> s1 [0, 64] { R1952 += 1, R1810 += 1 };
  s1 -> s1 [0, 65535] { R1952 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [66, 65535] { R1952 += 1, R1810 += 1 };
  s2 -> s1 [0, 64] { R1952 += 1, R1810 += 1 };
  s2 -> s2 [0, 65535] { R1952 += 1, R1809 += 1, R1810 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [66, 65535] { R1952 += 1, R1810 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_52 {
  init s0;
  s0 -> s1 [0, 65535] { R1954 += 1, R1812 += 1, R35 += 1 };
  s0 -> s2 [0, 65535] { R1954 += 1, R1811 += 1, R1812 += 1 };
  s0 -> s0 [0, 65535] { R1953 += 1, R1954 += 1 };
  s1 -> s1 [0, 65535] { R1954 += 1, R1812 += 1, R35 += 1 };
  s1 -> s4 [0, 65535] { R1954 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1954 += 1, R1812 += 1, R35 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1954 += 1, R1811 += 1, R1812 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1954 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_53 {
  init s0;
  s0 -> s1 [0, 65] { R1956 += 1, R1814 += 1 };
  s0 -> s0 [0, 65535] { R1955 += 1, R1956 += 1 };
  s0 -> s2 [0, 65535] { R1956 += 1, R1813 += 1, R1814 += 1 };
  s0 -> s1 [81, 65535] { R1956 += 1, R1814 += 1 };
  s1 -> s1 [0, 65] { R1956 += 1, R1814 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1956 += 1 };
  s1 -> s1 [81, 65535] { R1956 += 1, R1814 += 1 };
  s2 -> s1 [0, 65] { R1956 += 1, R1814 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1956 += 1, R1813 += 1, R1814 += 1 };
  s2 -> s1 [81, 65535] { R1956 += 1, R1814 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_54 {
  init s0;
  s0 -> s1 [0, 65535] { R1958 += 1, R1816 += 1, R604 += 1 };
  s0 -> s0 [0, 65535] { R1957 += 1, R1958 += 1 };
  s0 -> s2 [0, 65535] { R1958 += 1, R1815 += 1, R1816 += 1 };
  s1 -> s1 [0, 65535] { R1958 += 1, R1816 += 1, R604 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1958 += 1 };
  s2 -> s1 [0, 65535] { R1958 += 1, R1816 += 1, R604 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1958 += 1, R1815 += 1, R1816 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1958 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_55 {
  init s0;
  s0 -> s1 [0, 80] { R1960 += 1, R1818 += 1 };
  s0 -> s0 [0, 65535] { R1959 += 1, R1960 += 1 };
  s0 -> s2 [0, 65535] { R1960 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s3 [0, 65535] { R1960 += 1, R1818 += 1, R606 += 1 };
  s0 -> s1 [82, 65535] { R1960 += 1, R1818 += 1 };
  s1 -> s1 [0, 80] { R1960 += 1, R1818 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1960 += 1 };
  s1 -> s1 [82, 65535] { R1960 += 1, R1818 += 1 };
  s2 -> s1 [0, 80] { R1960 += 1, R1818 += 1 };
  s2 -> s2 [0, 65535] { R1960 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R1960 += 1, R1818 += 1, R606 += 1 };
  s2 -> s1 [82, 65535] { R1960 += 1, R1818 += 1 };
  s3 -> s1 [0, 80] { R1960 += 1, R1818 += 1 };
  s3 -> s4 [0, 65535] { R1960 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1960 += 1, R1818 += 1, R606 += 1 };
  s3 -> s1 [82, 65535] { R1960 += 1, R1818 += 1 };
  s4 -> s4 [0, 65535] { R1960 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_56 {
  init s0;
  s0 -> s1 [0, 80] { R1962 += 1, R1820 += 1, R610 += 1 };
  s0 -> s2 [0, 65535] { R1962 += 1, R1819 += 1, R1820 += 1 };
  s0 -> s0 [0, 65535] { R1961 += 1, R1962 += 1 };
  s0 -> s3 [0, 65535] { R1962 += 1, R1820 += 1, R609 += 1, R610 += 1 };
  s0 -> s1 [82, 65535] { R1962 += 1, R1820 += 1, R610 += 1 };
  s1 -> s1 [0, 80] { R1962 += 1, R1820 += 1, R610 += 1 };
  s1 -> s4 [0, 65535] { R1962 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1962 += 1, R1820 += 1 };
  s1 -> s1 [82, 65535] { R1962 += 1, R1820 += 1, R610 += 1 };
  s2 -> s1 [0, 80] { R1962 += 1, R1820 += 1, R610 += 1 };
  s2 -> s2 [0, 65535] { R1962 += 1, R1819 += 1, R1820 += 1 };
  s2 -> s3 [0, 65535] { R1962 += 1, R1820 += 1, R609 += 1, R610 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [82, 65535] { R1962 += 1, R1820 += 1, R610 += 1 };
  s3 -> s1 [0, 80] { R1962 += 1, R1820 += 1, R610 += 1 };
  s3 -> s4 [0, 65535] { R1962 += 1 };
  s3 -> s3 [0, 65535] { R1962 += 1, R1820 += 1, R609 += 1, R610 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [82, 65535] { R1962 += 1, R1820 += 1, R610 += 1 };
  s4 -> s4 [0, 65535] { R1962 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_57 {
  init s0;
  s0 -> s1 [0, 65535] { R1964 += 1, R1822 += 1, R614 += 1, R615 += 1 };
  s0 -> s2 [0, 65535] { R1964 += 1, R1822 += 1, R615 += 1, R616 += 1 };
  s0 -> s0 [0, 65535] { R1963 += 1, R1964 += 1 };
  s0 -> s3 [0, 65535] { R1964 += 1, R1821 += 1, R1822 += 1 };
  s1 -> s1 [0, 65535] { R1964 += 1, R1822 += 1, R614 += 1, R615 += 1 };
  s1 -> s5 [0, 65535] { R1964 += 1 };
  s1 -> s2 [0, 65535] { R1964 += 1, R1822 += 1, R615 += 1, R616 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1964 += 1 };
  s2 -> s2 [0, 65535] { R1964 += 1, R1822 += 1, R615 += 1, R616 += 1 };
  s2 -> s6 [0, 65535] { R1964 += 1, R1822 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1964 += 1, R1822 += 1, R614 += 1, R615 += 1 };
  s3 -> s2 [0, 65535] { R1964 += 1, R1822 += 1, R615 += 1, R616 += 1 };
  s3 -> s3 [0, 65535] { R1964 += 1, R1821 += 1, R1822 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1964 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1964 += 1 };
  s6 -> s6 [0, 65535] { R1964 += 1, R1822 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_58 {
  init s0;
  s0 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s0 -> s2 [0, 65535] { R1966 += 1, R1824 += 1, R619 += 1, R620 += 1 };
  s0 -> s0 [0, 65535] { R1965 += 1, R1966 += 1 };
  s0 -> s3 [0, 65535] { R1966 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s1 [91, 107] { R1966 += 1, R1824 += 1, R620 += 1 };
  s0 -> s4 [108, 108] { R1966 += 1, R1824 += 1, R620 += 1 };
  s0 -> s1 [109, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s1 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1966 += 1, R1824 += 1 };
  s1 -> s6 [0, 65535] { R1966 += 1 };
  s1 -> s1 [91, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s2 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1966 += 1, R1824 += 1, R619 += 1, R620 += 1 };
  s2 -> s6 [0, 65535] { R1966 += 1 };
  s2 -> s1 [91, 107] { R1966 += 1, R1824 += 1, R620 += 1 };
  s2 -> s4 [108, 108] { R1966 += 1, R1824 += 1, R620 += 1 };
  s2 -> s1 [109, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s3 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R1966 += 1, R1824 += 1, R619 += 1, R620 += 1 };
  s3 -> s3 [0, 65535] { R1966 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s1 [91, 107] { R1966 += 1, R1824 += 1, R620 += 1 };
  s3 -> s4 [108, 108] { R1966 += 1, R1824 += 1, R620 += 1 };
  s3 -> s1 [109, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s4 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1966 += 1 };
  s4 -> s4 [0, 65535] { R1966 += 1, R1824 += 1 };
  s4 -> s1 [91, 110] { R1966 += 1, R1824 += 1, R620 += 1 };
  s4 -> s7 [111, 111] { R1966 += 1, R1824 += 1, R620 += 1 };
  s4 -> s1 [112, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1966 += 1 };
  s7 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s7 -> s7 [0, 65535] { R1966 += 1, R1824 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1966 += 1 };
  s7 -> s1 [91, 98] { R1966 += 1, R1824 += 1, R620 += 1 };
  s7 -> s8 [99, 99] { R1966 += 1, R1824 += 1, R620 += 1 };
  s7 -> s1 [100, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s8 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R1966 += 1, R1824 += 1 };
  s8 -> s6 [0, 65535] { R1966 += 1 };
  s8 -> s1 [91, 96] { R1966 += 1, R1824 += 1, R620 += 1 };
  s8 -> s9 [97, 97] { R1966 += 1, R1824 += 1, R620 += 1 };
  s8 -> s1 [98, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s9 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s9 [0, 65535] { R1966 += 1, R1824 += 1 };
  s9 -> s6 [0, 65535] { R1966 += 1 };
  s9 -> s1 [91, 107] { R1966 += 1, R1824 += 1, R620 += 1 };
  s9 -> s10 [108, 108] { R1966 += 1, R1824 += 1, R620 += 1 };
  s9 -> s1 [109, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s10 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s10 -> s5 [0, 65535];
  s10 -> s10 [0, 65535] { R1966 += 1, R1824 += 1 };
  s10 -> s6 [0, 65535] { R1966 += 1 };
  s10 -> s1 [91, 103] { R1966 += 1, R1824 += 1, R620 += 1 };
  s10 -> s11 [104, 104] { R1966 += 1, R1824 += 1, R620 += 1 };
  s10 -> s1 [105, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s11 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s11 -> s5 [0, 65535];
  s11 -> s6 [0, 65535] { R1966 += 1 };
  s11 -> s11 [0, 65535] { R1966 += 1, R1824 += 1 };
  s11 -> s1 [91, 110] { R1966 += 1, R1824 += 1, R620 += 1 };
  s11 -> s12 [111, 111] { R1966 += 1, R1824 += 1, R620 += 1 };
  s11 -> s1 [112, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s12 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s12 -> s5 [0, 65535];
  s12 -> s6 [0, 65535] { R1966 += 1 };
  s12 -> s12 [0, 65535] { R1966 += 1, R1824 += 1 };
  s12 -> s1 [91, 114] { R1966 += 1, R1824 += 1, R620 += 1 };
  s12 -> s13 [115, 115] { R1966 += 1, R1824 += 1, R620 += 1 };
  s12 -> s1 [116, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s13 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s13 -> s5 [0, 65535];
  s13 -> s13 [0, 65535] { R1966 += 1, R1824 += 1 };
  s13 -> s6 [0, 65535] { R1966 += 1 };
  s13 -> s1 [91, 115] { R1966 += 1, R1824 += 1, R620 += 1 };
  s13 -> s14 [116, 116] { R1966 += 1, R1824 += 1, R620 += 1 };
  s13 -> s1 [117, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  s14 -> s1 [0, 81] { R1966 += 1, R1824 += 1, R620 += 1 };
  s14 -> s1 [91, 65535] { R1966 += 1, R1824 += 1, R620 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_59 {
  init s0;
  s0 -> s1 [0, 65535] { R1968 += 1, R1826 += 1, R624 += 1, R625 += 1 };
  s0 -> s0 [0, 65535] { R1967 += 1, R1968 += 1 };
  s0 -> s2 [0, 65535] { R1968 += 1, R1826 += 1, R625 += 1, R626 += 1 };
  s0 -> s3 [0, 65535] { R1968 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [0, 65535] { R1968 += 1, R1826 += 1, R624 += 1, R625 += 1 };
  s1 -> s6 [0, 65535] { R1968 += 1 };
  s1 -> s2 [0, 65535] { R1968 += 1, R1826 += 1, R625 += 1, R626 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1968 += 1, R1826 += 1 };
  s2 -> s6 [0, 65535] { R1968 += 1 };
  s2 -> s2 [0, 65535] { R1968 += 1, R1826 += 1, R625 += 1, R626 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1968 += 1, R1826 += 1, R624 += 1, R625 += 1 };
  s3 -> s2 [0, 65535] { R1968 += 1, R1826 += 1, R625 += 1, R626 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1968 += 1, R1825 += 1, R1826 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1968 += 1, R1826 += 1 };
  s5 -> s6 [0, 65535] { R1968 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1968 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_60 {
  init s0;
  s0 -> s1 [0, 65535] { R1970 += 1, R1828 += 1, R1607 += 1, R1608 += 1 };
  s0 -> s2 [0, 65535] { R1970 += 1, R1828 += 1 };
  s0 -> s0 [0, 65535] { R1969 += 1, R1970 += 1 };
  s0 -> s3 [0, 65535] { R1970 += 1, R1827 += 1, R1828 += 1 };
  s1 -> s1 [0, 65535] { R1970 += 1, R1828 += 1, R1607 += 1, R1608 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1970 += 1, R1828 += 1 };
  s1 -> s5 [0, 65535] { R1970 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1970 += 1, R1828 += 1 };
  s2 -> s5 [0, 65535] { R1970 += 1 };
  s3 -> s1 [0, 65535] { R1970 += 1, R1828 += 1, R1607 += 1, R1608 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1970 += 1, R1828 += 1 };
  s3 -> s3 [0, 65535] { R1970 += 1, R1827 += 1, R1828 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1970 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_61 {
  init s0;
  s0 -> s1 [0, 65535] { R1972 += 1, R1830 += 1 };
  s0 -> s0 [0, 65535] { R1971 += 1, R1972 += 1 };
  s0 -> s2 [0, 65535] { R1972 += 1, R1829 += 1, R1830 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1972 += 1, R1830 += 1 };
  s1 -> s4 [0, 65535] { R1972 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1972 += 1, R1830 += 1 };
  s2 -> s2 [0, 65535] { R1972 += 1, R1829 += 1, R1830 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1972 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_62 {
  init s0;
  s0 -> s1 [0, 80] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s2 [0, 65535] { R1974 += 1, R1831 += 1, R1832 += 1 };
  s0 -> s1 [0, 65535] { R1974 += 1, R1832 += 1 };
  s0 -> s0 [0, 65535] { R1973 += 1, R1974 += 1 };
  s0 -> s3 [81, 81] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s4 [81, 81] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s1 [82, 65535] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [0, 80] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1974 += 1 };
  s1 -> s1 [0, 65535] { R1974 += 1, R1832 += 1 };
  s1 -> s3 [81, 81] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s4 [81, 81] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [82, 65535] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [0, 80] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s2 [0, 65535] { R1974 += 1, R1831 += 1, R1832 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R1974 += 1, R1832 += 1 };
  s2 -> s3 [81, 81] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s4 [81, 81] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [82, 65535] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s3 -> s7 [0, 65535] { R1974 += 1, R1832 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1974 += 1 };
  s3 -> s3 [0, 65535] { R1974 += 1, R1832 += 1, R1807 += 1, R1808 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1974 += 1 };
  s4 -> s4 [0, 65535] { R1974 += 1, R1832 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1974 += 1 };
  s7 -> s7 [0, 65535] { R1974 += 1, R1832 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1974 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_63 {
  init s0;
  s0 -> s1 [0, 65535] { R1976 += 1, R1875 += 1, R1876 += 1 };
  s0 -> s2 [0, 65535] { R1976 += 1, R1876 += 1, R36 += 1 };
  s0 -> s0 [0, 65535] { R1975 += 1, R1976 += 1 };
  s1 -> s1 [0, 65535] { R1976 += 1, R1875 += 1, R1876 += 1 };
  s1 -> s2 [0, 65535] { R1976 += 1, R1876 += 1, R36 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R1976 += 1 };
  s2 -> s2 [0, 65535] { R1976 += 1, R1876 += 1, R36 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1976 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_64 {
  init s0;
  s0 -> s1 [0, 64] { R1978 += 1, R1878 += 1 };
  s0 -> s0 [0, 65535] { R1977 += 1, R1978 += 1 };
  s0 -> s2 [0, 65535] { R1978 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s3 [65, 65] { R1978 += 1, R1878 += 1 };
  s0 -> s4 [65, 65] { R1978 += 1, R1878 += 1 };
  s0 -> s5 [81, 81] { R1978 += 1, R1878 += 1 };
  s0 -> s1 [82, 65535] { R1978 += 1, R1878 += 1 };
  s1 -> s1 [0, 64] { R1978 += 1, R1878 += 1 };
  s1 -> s3 [65, 65] { R1978 += 1, R1878 += 1 };
  s1 -> s4 [65, 65] { R1978 += 1, R1878 += 1 };
  s1 -> s5 [81, 81] { R1978 += 1, R1878 += 1 };
  s1 -> s1 [82, 65535] { R1978 += 1, R1878 += 1 };
  s2 -> s1 [0, 64] { R1978 += 1, R1878 += 1 };
  s2 -> s2 [0, 65535] { R1978 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s3 [65, 65] { R1978 += 1, R1878 += 1 };
  s2 -> s4 [65, 65] { R1978 += 1, R1878 += 1 };
  s2 -> s5 [81, 81] { R1978 += 1, R1878 += 1 };
  s2 -> s1 [82, 65535] { R1978 += 1, R1878 += 1 };
  s4 -> s4 [0, 65] { R1978 += 1, R1878 += 1 };
  s4 -> s8 [81, 81] { R1978 += 1, R1878 += 1 };
  s4 -> s4 [82, 65535] { R1978 += 1, R1878 += 1 };
  s5 -> s5 [0, 64] { R1978 += 1, R1878 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1978 += 1 };
  s5 -> s7 [65, 65] { R1978 += 1, R1878 += 1 };
  s5 -> s8 [65, 65] { R1978 += 1, R1878 += 1 };
  s5 -> s5 [81, 65535] { R1978 += 1, R1878 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1978 += 1 };
  s8 -> s8 [0, 65] { R1978 += 1, R1878 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1978 += 1 };
  s8 -> s8 [81, 65535] { R1978 += 1, R1878 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_65 {
  init s0;
  s0 -> s1 [0, 64] { R1980 += 1, R1880 += 1, R603 += 1 };
  s0 -> s2 [0, 65535] { R1980 += 1, R1879 += 1, R1880 += 1 };
  s0 -> s0 [0, 65535] { R1979 += 1, R1980 += 1 };
  s0 -> s3 [65, 65] { R1980 += 1, R1880 += 1, R603 += 1 };
  s0 -> s4 [65, 65] { R1980 += 1, R1880 += 1, R603 += 1 };
  s0 -> s1 [66, 65535] { R1980 += 1, R1880 += 1, R603 += 1 };
  s1 -> s1 [0, 64] { R1980 += 1, R1880 += 1, R603 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1980 += 1 };
  s1 -> s3 [65, 65] { R1980 += 1, R1880 += 1, R603 += 1 };
  s1 -> s4 [65, 65] { R1980 += 1, R1880 += 1, R603 += 1 };
  s1 -> s1 [66, 65535] { R1980 += 1, R1880 += 1, R603 += 1 };
  s2 -> s1 [0, 64] { R1980 += 1, R1880 += 1, R603 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R1980 += 1, R1879 += 1, R1880 += 1 };
  s2 -> s3 [65, 65] { R1980 += 1, R1880 += 1, R603 += 1 };
  s2 -> s4 [65, 65] { R1980 += 1, R1880 += 1, R603 += 1 };
  s2 -> s1 [66, 65535] { R1980 += 1, R1880 += 1, R603 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1980 += 1 };
  s4 -> s5 [0, 65535] { R1980 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1980 += 1, R1880 += 1, R603 += 1 };
  s5 -> s5 [0, 65535] { R1980 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_66 {
  init s0;
  s0 -> s1 [0, 64] { R1982 += 1, R1882 += 1, R605 += 1 };
  s0 -> s2 [0, 65535] { R1982 += 1, R1881 += 1, R1882 += 1 };
  s0 -> s0 [0, 65535] { R1981 += 1, R1982 += 1 };
  s0 -> s3 [65, 65] { R1982 += 1, R1882 += 1, R605 += 1 };
  s0 -> s4 [65, 65] { R1982 += 1, R1882 += 1, R605 += 1 };
  s0 -> s1 [66, 65535] { R1982 += 1, R1882 += 1, R605 += 1 };
  s1 -> s1 [0, 64] { R1982 += 1, R1882 += 1, R605 += 1 };
  s1 -> s1 [0, 65535] { R1982 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R1982 += 1, R1882 += 1, R605 += 1 };
  s1 -> s4 [65, 65] { R1982 += 1, R1882 += 1, R605 += 1 };
  s1 -> s1 [66, 65535] { R1982 += 1, R1882 += 1, R605 += 1 };
  s2 -> s1 [0, 64] { R1982 += 1, R1882 += 1, R605 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1982 += 1, R1881 += 1, R1882 += 1 };
  s2 -> s3 [65, 65] { R1982 += 1, R1882 += 1, R605 += 1 };
  s2 -> s4 [65, 65] { R1982 += 1, R1882 += 1, R605 += 1 };
  s2 -> s1 [66, 65535] { R1982 += 1, R1882 += 1, R605 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1982 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1982 += 1 };
  s4 -> s4 [0, 65535] { R1982 += 1, R1882 += 1, R605 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1982 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_67 {
  init s0;
  s0 -> s1 [0, 64] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s0 -> s0 [0, 65535] { R1983 += 1, R1984 += 1 };
  s0 -> s2 [0, 65535] { R1984 += 1, R1883 += 1, R1884 += 1 };
  s0 -> s3 [65, 65] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s0 -> s4 [65, 65] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s0 -> s1 [66, 65535] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s1 -> s1 [0, 64] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s1 -> s1 [0, 65535] { R1984 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s1 -> s4 [65, 65] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s1 -> s1 [66, 65535] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s2 -> s1 [0, 64] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s2 -> s2 [0, 65535] { R1984 += 1, R1883 += 1, R1884 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s2 -> s4 [65, 65] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s2 -> s1 [66, 65535] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s3 -> s6 [0, 65535] { R1984 += 1 };
  s3 -> s3 [0, 65535] { R1984 += 1, R1884 += 1, R607 += 1, R608 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1984 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1984 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_68 {
  init s0;
  s0 -> s1 [0, 64] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s0 -> s2 [0, 65535] { R1986 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s0 [0, 65535] { R1985 += 1, R1986 += 1 };
  s0 -> s3 [65, 65] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s0 -> s4 [65, 65] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s0 -> s1 [66, 65535] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s1 -> s1 [0, 64] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s1 -> s1 [0, 65535] { R1986 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s1 -> s4 [65, 65] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s1 -> s1 [66, 65535] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s2 -> s1 [0, 64] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s2 -> s2 [0, 65535] { R1986 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s2 -> s4 [65, 65] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s2 -> s1 [66, 65535] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s3 -> s3 [0, 65535] { R1986 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1986 += 1 };
  s4 -> s4 [0, 65535] { R1986 += 1, R1886 += 1, R611 += 1, R612 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1986 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_69 {
  init s0;
  s0 -> s1 [0, 64] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s0 -> s2 [0, 65535] { R1988 += 1, R1887 += 1, R1888 += 1 };
  s0 -> s0 [0, 65535] { R1987 += 1, R1988 += 1 };
  s0 -> s3 [65, 65] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s0 -> s4 [65, 65] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s0 -> s1 [66, 65535] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s1 -> s1 [0, 64] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s1 -> s1 [0, 65535] { R1988 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s1 -> s4 [65, 65] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s1 -> s1 [66, 65535] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s2 -> s1 [0, 64] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s2 -> s2 [0, 65535] { R1988 += 1, R1887 += 1, R1888 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s2 -> s4 [65, 65] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s2 -> s1 [66, 65535] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s3 -> s3 [0, 65535] { R1988 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1988 += 1 };
  s4 -> s4 [0, 65535] { R1988 += 1, R1888 += 1, R617 += 1, R618 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1988 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_70 {
  init s0;
  s0 -> s1 [0, 64] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s0 -> s2 [0, 65535] { R1990 += 1, R1889 += 1, R1890 += 1 };
  s0 -> s0 [0, 65535] { R1989 += 1, R1990 += 1 };
  s0 -> s3 [65, 65] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s0 -> s4 [65, 65] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s0 -> s1 [66, 65535] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s1 -> s1 [0, 64] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1990 += 1 };
  s1 -> s3 [65, 65] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s1 -> s4 [65, 65] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s1 -> s1 [66, 65535] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s2 -> s1 [0, 64] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s2 -> s2 [0, 65535] { R1990 += 1, R1889 += 1, R1890 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s2 -> s4 [65, 65] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s2 -> s1 [66, 65535] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s3 -> s3 [0, 65535] { R1990 += 1, R1890 += 1, R621 += 1, R622 += 1 };
  s3 -> s6 [0, 65535] { R1990 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1990 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1990 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_71 {
  init s0;
  s0 -> s1 [0, 64] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s0 -> s2 [0, 64] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s0 -> s3 [0, 65535] { R1992 += 1, R1891 += 1, R1892 += 1 };
  s0 -> s0 [0, 65535] { R1991 += 1, R1992 += 1 };
  s0 -> s4 [65, 65] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s0 -> s5 [65, 65] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s0 -> s6 [65, 65] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s0 -> s7 [65, 65] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s0 -> s1 [66, 65535] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s0 -> s2 [66, 65535] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s1 -> s1 [0, 64] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s1 -> s1 [0, 65535] { R1992 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s6 [65, 65] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s1 -> s7 [65, 65] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s1 -> s1 [66, 65535] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s2 -> s1 [0, 64] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s2 -> s2 [0, 64] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s2 -> s4 [65, 65] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s2 -> s5 [65, 65] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s2 -> s6 [65, 65] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s2 -> s7 [65, 65] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s2 -> s1 [66, 65535] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s2 -> s2 [66, 65535] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s3 -> s1 [0, 64] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s3 -> s2 [0, 64] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s3 -> s3 [0, 65535] { R1992 += 1, R1891 += 1, R1892 += 1 };
  s3 -> s4 [65, 65] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s3 -> s5 [65, 65] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s3 -> s6 [65, 65] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s3 -> s7 [65, 65] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s3 -> s1 [66, 65535] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s3 -> s2 [66, 65535] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s4 -> s4 [0, 65535] { R1992 += 1, R1892 += 1, R1603 += 1, R1604 += 1 };
  s4 -> s7 [0, 65535] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R1992 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R1992 += 1 };
  s7 -> s7 [0, 65535] { R1992 += 1, R1892 += 1, R1604 += 1, R1605 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1992 += 1 };
  accepting s8, s9, s6, s1, s7;
};
automaton uri_72 {
  init s0;
  s0 -> s1 [0, 64] { R1994 += 1, R1894 += 1 };
  s0 -> s0 [0, 65535] { R1993 += 1, R1994 += 1 };
  s0 -> s2 [0, 65535] { R1994 += 1, R1893 += 1, R1894 += 1 };
  s0 -> s3 [65, 65] { R1994 += 1, R1894 += 1 };
  s0 -> s4 [65, 65] { R1994 += 1, R1894 += 1 };
  s0 -> s1 [66, 65535] { R1994 += 1, R1894 += 1 };
  s1 -> s1 [0, 64] { R1994 += 1, R1894 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1994 += 1 };
  s1 -> s3 [65, 65] { R1994 += 1, R1894 += 1 };
  s1 -> s4 [65, 65] { R1994 += 1, R1894 += 1 };
  s1 -> s1 [66, 65535] { R1994 += 1, R1894 += 1 };
  s2 -> s1 [0, 64] { R1994 += 1, R1894 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1994 += 1, R1893 += 1, R1894 += 1 };
  s2 -> s3 [65, 65] { R1994 += 1, R1894 += 1 };
  s2 -> s4 [65, 65] { R1994 += 1, R1894 += 1 };
  s2 -> s1 [66, 65535] { R1994 += 1, R1894 += 1 };
  s3 -> s3 [0, 65535] { R1994 += 1, R1894 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1994 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1994 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1994 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_73 {
  init s0;
  s0 -> s1 [0, 64] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s0 -> s2 [0, 64] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s0 -> s0 [0, 65535] { R1995 += 1, R1996 += 1 };
  s0 -> s3 [0, 65535] { R1996 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s4 [65, 65] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s0 -> s5 [65, 65] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s0 -> s6 [65, 65] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s0 -> s7 [65, 65] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s0 -> s2 [66, 80] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s0 -> s1 [66, 65535] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s0 -> s2 [82, 65535] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s1 -> s1 [0, 64] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s1 -> s2 [0, 64] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s1 -> s4 [65, 65] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s1 -> s5 [65, 65] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s1 -> s6 [65, 65] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s1 -> s7 [65, 65] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s1 -> s2 [66, 80] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s1 -> s1 [66, 65535] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s1 -> s2 [82, 65535] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s2 -> s2 [0, 64] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s2 -> s2 [0, 65535] { R1996 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [65, 65] { R1996 += 1, R1896 += 1 };
  s2 -> s6 [65, 65] { R1996 += 1, R1896 += 1 };
  s2 -> s2 [66, 80] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s2 -> s2 [66, 65535] { R1996 += 1, R1896 += 1 };
  s2 -> s2 [82, 65535] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s3 -> s1 [0, 64] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s3 -> s2 [0, 64] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s3 -> s3 [0, 65535] { R1996 += 1, R1895 += 1, R1896 += 1 };
  s3 -> s4 [65, 65] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s3 -> s5 [65, 65] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s3 -> s6 [65, 65] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s3 -> s7 [65, 65] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s3 -> s2 [66, 80] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s3 -> s1 [66, 65535] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s3 -> s2 [82, 65535] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s4 -> s5 [0, 80] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s4 -> s4 [0, 65535] { R1996 += 1, R1896 += 1, R1803 += 1, R1804 += 1 };
  s4 -> s5 [82, 65535] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s5 -> s5 [0, 80] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R1996 += 1, R1896 += 1 };
  s5 -> s9 [0, 65535] { R1996 += 1 };
  s5 -> s5 [82, 65535] { R1996 += 1, R1896 += 1, R1804 += 1, R1805 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R1996 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1996 += 1 };
  accepting s8, s5, s2, s9, s6;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining P84
automaton P84_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P90
automaton P90_0 {
  init s0;
  s0 -> s1 [121, 121];
  accepting s1;
};
};
constraint R5 = R1832 && R6 = R1996 && R39 = 0 && R40 = 1 && R41 = 0 && R42 = 1 && R88 + R87 + -1*R104 + -1*R102 = 0 && R103 + R101 = 0 && R604 + R603 + -1*R625 + -1*R622 = 0 && R609 + R607 = 0 && R610 + R608 + -1*R625 + -1*R622 = 0 && R614 + R611 = 0 && R615 + R612 + -1*R625 + -1*R622 = 0 && R619 + R617 = 0 && R620 + R618 + -1*R625 + -1*R622 = 0 && R624 + R621 = 0 && R1809 = 0 && R1810 = R1832 && R1811 = 0 && R1812 = R1832 && R1813 = 0 && R1814 = R1832 && R1815 = 0 && R1816 = R1832 && R1817 = 0 && R1818 = R1832 && R1819 = 0 && R1820 = R1832 && R1821 = 0 && R1822 = R1832 && R1823 = 0 && R1824 = R1832 && R1825 = 0 && R1826 = R1832 && R1827 = 0 && R1828 = R1832 && R1829 = 0 && R1830 = R1832 && R1831 = 0 && R1833 = 0 && R1834 = R1996 && R1835 = 0 && R1836 = R1996 && R1837 = 0 && R1838 = R1996 && R1839 = 0 && R1840 = R1996 && R1841 = 0 && R1842 = R1996 && R1843 = 0 && R1844 = R1996 && R1845 = 0 && R1846 = R1996 && R1847 = 0 && R1848 = R1996 && R1849 = 0 && R1850 = R1996 && R1851 = 0 && R1852 = R1996 && R1853 = 0 && R1854 = R1996 && R1855 = 0 && R1856 = R1996 && R1857 = 0 && R1858 = R1996 && R1859 = 0 && R1860 = R1996 && R1861 = 0 && R1862 = R1996 && R1863 = 0 && R1864 = R1996 && R1865 = 0 && R1866 = R1996 && R1867 = 0 && R1868 = R1996 && R1869 = 0 && R1870 = R1996 && R1871 = 0 && R1872 = R1996 && R1873 = 0 && R1874 = R1996 && R1877 = 0 && R1878 = 0 && R1891 = 0 && R1892 = 0 && R1895 = 0 && R1896 = 0 && R1939 = 10 && R1940 = R1996 && R1941 = 10 && R1942 = R1996 && R1943 = 10 && R1944 = R1996 && R1945 = 10 && R1946 = R1996 && R1947 = 10 && R1948 = R1996 && R1949 = 10 && R1950 = R1996 && R1951 = 10 && R1952 = R1996 && R1953 = 10 && R1954 = R1996 && R1955 = 10 && R1956 = R1996 && R1957 = 10 && R1958 = R1996 && R1959 = 10 && R1960 = R1996 && R1961 = 10 && R1962 = R1996 && R1963 = 10 && R1964 = R1996 && R1965 = 10 && R1966 = R1996 && R1967 = 10 && R1968 = R1996 && R1969 = 10 && R1970 = R1996 && R1971 = 10 && R1972 = R1996 && R1973 = 10 && R1974 = R1996 && R1975 = 10 && R1976 = R1996 && R1977 = 10 && R1978 = R1996 && R1979 = 10 && R1980 = R1996 && R1981 = 10 && R1982 = R1996 && R1983 = 10 && R1984 = R1996 && R1985 = 10 && R1986 = R1996 && R1987 = 10 && R1988 = R1996 && R1989 = 10 && R1990 = R1996 && R1991 = 10 && R1992 = R1996 && R1993 = 10 && R1994 = R1996 && R1995 = 10 && R120 + R117 + R154 + R151 != 0 && R136 + R133 + R166 + R163 != 0 && R626 + R623 + R1808 + R1805 != 0 && R20 < 1 && R21 < 1 && R24 < 1 && R90 + R89 < 1 && R92 + R91 < 1 && R94 + R93 < 1 && -1*R104 + -1*R102 < 1 && R606 + R605 < 1 && -1*R625 < R622 && 0 < R1832 && 9 < R1996 && (R100 + R97 != 0 || ((R98 + R95 != 0 || R99 + R96 + -1*R104 + -1*R102 = 0 || R104 + R102 < 1) && (R98 + R95 = 0 || R104 + R102 < 1))) && (R104 + R102 != 0 || R110 + R107 = 0 || (R108 + R105 = 0 && R109 + R106 = 0)) && (R104 + R102 != 0 || R110 + R107 = 0 || (R113 + R111 = 0 && R114 + R112 = 0)) && (R104 + R102 != 0 || R110 + R107 = 0 || (R118 + R115 = 0 && R119 + R116 = 0)) && (R104 + R102 != 0 || R126 + R123 = 0 || (R124 + R121 = 0 && R125 + R122 = 0)) && (R104 + R102 != 0 || R126 + R123 = 0 || (R129 + R127 = 0 && R130 + R128 = 0)) && (R104 + R102 != 0 || R126 + R123 = 0 || (R134 + R131 = 0 && R135 + R132 = 0)) && (R108 + R105 != 0 || R104 + R102 + -1*R109 + -1*R106 = 0 || R104 + R102 < 1) && (R113 + R111 != 0 || R104 + R102 + -1*R114 + -1*R112 = 0 || R104 + R102 < 1) && (R118 + R115 != 0 || R104 + R102 + -1*R119 + -1*R116 = 0 || R104 + R102 < 1) && (R124 + R121 != 0 || R104 + R102 + -1*R125 + -1*R122 = 0 || R104 + R102 < 1) && (R129 + R127 != 0 || R104 + R102 + -1*R130 + -1*R128 = 0 || R104 + R102 < 1) && (R134 + R131 != 0 || R104 + R102 + -1*R135 + -1*R132 = 0 || R104 + R102 < 1) && (R36 = 0 || (R1875 = 0 && R1876 = 0)) && (R36 = 0 || (R1879 = 0 && R1880 = 0)) && (R36 = 0 || (R1881 = 0 && R1882 = 0)) && (R36 = 0 || (R1883 = 0 && R1884 = 0)) && (R36 = 0 || (R1885 = 0 && R1886 = 0)) && (R36 = 0 || (R1887 = 0 && R1888 = 0)) && (R36 = 0 || (R1889 = 0 && R1890 = 0)) && (R36 = 0 || (R1893 = 0 && R1894 = 0)) && (R38 = 0 || (R1897 = 0 && R1898 = 0)) && (R38 = 0 || (R1899 = 0 && R1900 = 0)) && (R38 = 0 || (R1901 = 0 && R1902 = 0)) && (R38 = 0 || (R1903 = 0 && R1904 = 0)) && (R38 = 0 || (R1905 = 0 && R1906 = 0)) && (R38 = 0 || (R1907 = 0 && R1908 = 0)) && (R38 = 0 || (R1909 = 0 && R1910 = 0)) && (R38 = 0 || (R1911 = 0 && R1912 = 0)) && (R38 = 0 || (R1913 = 0 && R1914 = 0)) && (R38 = 0 || (R1915 = 0 && R1916 = 0)) && (R38 = 0 || (R1917 = 0 && R1918 = 0)) && (R38 = 0 || (R1919 = 0 && R1920 = 0)) && (R38 = 0 || (R1921 = 0 && R1922 = 0)) && (R38 = 0 || (R1923 = 0 && R1924 = 0)) && (R38 = 0 || (R1925 = 0 && R1926 = 0)) && (R38 = 0 || (R1927 = 0 && R1928 = 0)) && (R38 = 0 || (R1929 = 0 && R1930 = 0)) && (R38 = 0 || (R1931 = 0 && R1932 = 0)) && (R38 = 0 || (R1933 = 0 && R1934 = 0)) && (R38 = 0 || (R1935 = 0 && R1936 = 0)) && (R38 = 0 || (R1937 = 0 && R1938 = 0)) && (R100 + R97 = 0 || (R98 + R95 = 0 && R99 + R96 + -1*R104 + -1*R102 = 0)) && (R108 + R105 = 0 || R104 + R102 < 1) && (R113 + R111 = 0 || R104 + R102 < 1) && (R118 + R115 = 0 || R104 + R102 < 1) && (R124 + R121 = 0 || R104 + R102 < 1) && (R129 + R127 = 0 || R104 + R102 < 1) && (R134 + R131 = 0 || R104 + R102 < 1) && (R142 + R139 = 0 || (R140 + R137 = 0 && R141 + R138 = 0)) && (R148 + R145 = 0 || (R146 + R143 = 0 && R147 + R144 = 0)) && (R148 + R145 = 0 || (R152 + R149 = 0 && R153 + R150 = 0)) && (R160 + R157 = 0 || (R158 + R155 = 0 && R159 + R156 = 0)) && (R160 + R157 = 0 || (R164 + R161 = 0 && R165 + R162 = 0)) && (R1608 + R1605 = 0 || (R1606 + R1603 = 0 && R1607 + R1604 = 0)) && (R1608 + R1605 = 0 || (R1806 + R1803 = 0 && R1807 + R1804 = 0));
// End of Parikh automata intersection problem
