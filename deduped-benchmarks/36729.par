// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R120, R121, R122, R123, R124, R125, R126, R127, R128, R129, R130, R131, R132, R133, R134, R135, R136, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R149, R150, R151, R152, R153, R154, R155, R156, R157, R158, R159, R160, R161, R162, R163, R164, R165, R166, R20, R21, R24, R35, R3555, R3556, R3557, R3558, R3559, R3560, R3561, R3562, R3563, R3564, R3565, R3566, R36, R37, R38, R39, R3955, R3956, R3957, R3958, R3959, R3960, R3961, R3962, R3963, R3964, R3965, R3966, R3967, R3968, R3969, R3970, R3971, R3972, R3973, R3974, R3975, R3976, R3977, R3978, R3979, R3980, R3981, R3982, R3983, R3984, R3985, R3986, R3987, R3988, R3989, R3990, R3991, R3992, R3993, R3994, R3995, R3996, R3997, R3998, R3999, R40, R4000, R4001, R4002, R4003, R4004, R4005, R4006, R4007, R4008, R4009, R4010, R4011, R4012, R4013, R4014, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4025, R4026, R4027, R4028, R4029, R4030, R4031, R4032, R4033, R4034, R4035, R4036, R4037, R4038, R4039, R4040, R4041, R4042, R4043, R4044, R4045, R4046, R4047, R4048, R4049, R4050, R4051, R4052, R4053, R4054, R4055, R4056, R4057, R4058, R4059, R4060, R4061, R4062, R4063, R4064, R4065, R4066, R4067, R4068, R4069, R4070, R4071, R4072, R4073, R4074, R4075, R4076, R4077, R4078, R4079, R4080, R4081, R4082, R4083, R4084, R4085, R4086, R4087, R4088, R4089, R4090, R4091, R4092, R4093, R4094, R4095, R4096, R4097, R4098, R4099, R41, R4100, R4101, R4102, R4103, R4104, R4105, R4106, R4107, R4108, R4109, R4110, R4111, R4112, R4113, R4114, R4115, R4116, R4117, R4118, R4119, R4120, R4121, R4122, R4123, R4124, R4125, R4126, R4127, R4128, R4129, R4130, R4131, R4132, R4133, R4134, R4135, R4136, R4137, R4138, R4139, R4140, R4141, R4142, R4143, R4144, R4145, R4146, R4147, R4148, R42, R5, R6, R603, R604, R605, R606, R607, R608, R609, R610, R611, R612, R613, R614, R615, R616, R617, R618, R619, R620, R7, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining P96
automaton P96_0 {
  init s0;
  s0 -> s1 [122, 122];
  accepting s1;
};
};
synchronised {  // Automata constraining P63
automaton P63_0 {
  init s0;
  s0 -> s1 [113, 113];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 64];
  s0 -> s0 [0, 65535] { R24 += 1 };
  s0 -> s2 [65, 65];
  s0 -> s1 [66, 65535];
  s1 -> s1 [0, 64];
  s1 -> s2 [65, 65];
  s1 -> s1 [66, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R3986 += 1, R37 += 1 };
  s0 -> s0 [0, 65535] { R3985 += 1, R3986 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3986 += 1, R37 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 65535] { R3988 += 1, R88 += 1 };
  s0 -> s0 [0, 65535] { R3987 += 1, R3988 += 1 };
  s1 -> s1 [0, 65535] { R3988 += 1, R88 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 89] { R3990 += 1 };
  s0 -> s2 [0, 65535] { R3990 += 1, R90 += 1 };
  s0 -> s0 [0, 65535] { R3989 += 1, R3990 += 1 };
  s0 -> s1 [91, 65535] { R3990 += 1 };
  s1 -> s1 [0, 89] { R3990 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [91, 65535] { R3990 += 1 };
  s2 -> s1 [0, 89] { R3990 += 1 };
  s2 -> s2 [0, 65535] { R3990 += 1, R90 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [91, 65535] { R3990 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 88] { R3992 += 1 };
  s0 -> s2 [0, 65535] { R3992 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R3991 += 1, R3992 += 1 };
  s0 -> s1 [90, 65535] { R3992 += 1 };
  s1 -> s1 [0, 88] { R3992 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [90, 65535] { R3992 += 1 };
  s2 -> s1 [0, 88] { R3992 += 1 };
  s2 -> s2 [0, 65535] { R3992 += 1, R92 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [90, 65535] { R3992 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 72] { R3994 += 1 };
  s0 -> s0 [0, 65535] { R3993 += 1, R3994 += 1 };
  s0 -> s2 [0, 65535] { R3994 += 1, R94 += 1 };
  s0 -> s1 [74, 65535] { R3994 += 1 };
  s1 -> s1 [0, 72] { R3994 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [74, 65535] { R3994 += 1 };
  s2 -> s1 [0, 72] { R3994 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3994 += 1, R94 += 1 };
  s2 -> s1 [74, 65535] { R3994 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3995 += 1, R3996 += 1 };
  s0 -> s1 [0, 65535] { R3996 += 1, R98 += 1, R99 += 1 };
  s0 -> s2 [0, 65535] { R3996 += 1, R99 += 1, R100 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3996 += 1, R98 += 1, R99 += 1 };
  s1 -> s2 [0, 65535] { R3996 += 1, R99 += 1, R100 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3996 += 1 };
  s2 -> s2 [0, 65535] { R3996 += 1, R99 += 1, R100 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3996 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R3998 += 1, R103 += 1, R104 += 1 };
  s0 -> s0 [0, 65535] { R3997 += 1, R3998 += 1 };
  s0 -> s2 [108, 108] { R3998 += 1, R104 += 1 };
  s1 -> s1 [0, 65535] { R3998 += 1, R103 += 1, R104 += 1 };
  s1 -> s2 [108, 108] { R3998 += 1, R104 += 1 };
  s2 -> s3 [111, 111] { R3998 += 1, R104 += 1 };
  s3 -> s4 [99, 99] { R3998 += 1, R104 += 1 };
  s4 -> s5 [97, 97] { R3998 += 1, R104 += 1 };
  s5 -> s6 [108, 108] { R3998 += 1, R104 += 1 };
  s6 -> s7 [104, 104] { R3998 += 1, R104 += 1 };
  s7 -> s8 [111, 111] { R3998 += 1, R104 += 1 };
  s8 -> s9 [115, 115] { R3998 += 1, R104 += 1 };
  s9 -> s10 [116, 116] { R3998 += 1, R104 += 1 };
  s10 -> s10 [0, 65535] { R3998 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  accepting s10, s11;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65535] { R4000 += 1, R109 += 1, R110 += 1 };
  s0 -> s0 [0, 65535] { R3999 += 1, R4000 += 1 };
  s0 -> s2 [0, 65535] { R4000 += 1, R108 += 1, R109 += 1 };
  s1 -> s1 [0, 65535] { R4000 += 1, R109 += 1, R110 += 1 };
  s1 -> s4 [0, 65535] { R4000 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4000 += 1, R109 += 1, R110 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4000 += 1, R108 += 1, R109 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4000 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 107] { R4002 += 1, R114 += 1 };
  s0 -> s2 [0, 65535] { R4002 += 1, R113 += 1, R114 += 1 };
  s0 -> s0 [0, 65535] { R4001 += 1, R4002 += 1 };
  s0 -> s3 [108, 108] { R4002 += 1, R114 += 1 };
  s0 -> s1 [109, 65535] { R4002 += 1, R114 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s13 [0, 65535] { R4002 += 1 };
  s1 -> s1 [0, 65535] { R4002 += 1, R114 += 1 };
  s2 -> s1 [0, 107] { R4002 += 1, R114 += 1 };
  s2 -> s2 [0, 65535] { R4002 += 1, R113 += 1, R114 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [108, 108] { R4002 += 1, R114 += 1 };
  s2 -> s1 [109, 65535] { R4002 += 1, R114 += 1 };
  s3 -> s1 [0, 110] { R4002 += 1, R114 += 1 };
  s3 -> s3 [0, 65535] { R4002 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [111, 111] { R4002 += 1, R114 += 1 };
  s3 -> s1 [112, 65535] { R4002 += 1, R114 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R4002 += 1, R114 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4002 += 1 };
  s5 -> s6 [99, 99] { R4002 += 1, R114 += 1 };
  s5 -> s1 [100, 65535] { R4002 += 1, R114 += 1 };
  s6 -> s1 [0, 96] { R4002 += 1, R114 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4002 += 1 };
  s6 -> s7 [97, 97] { R4002 += 1, R114 += 1 };
  s6 -> s1 [98, 65535] { R4002 += 1, R114 += 1 };
  s7 -> s1 [0, 107] { R4002 += 1, R114 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s7 [0, 65535] { R4002 += 1 };
  s7 -> s8 [108, 108] { R4002 += 1, R114 += 1 };
  s7 -> s1 [109, 65535] { R4002 += 1, R114 += 1 };
  s8 -> s1 [0, 103] { R4002 += 1, R114 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s8 [0, 65535] { R4002 += 1 };
  s8 -> s9 [104, 104] { R4002 += 1, R114 += 1 };
  s8 -> s1 [105, 65535] { R4002 += 1, R114 += 1 };
  s9 -> s1 [0, 110] { R4002 += 1, R114 += 1 };
  s9 -> s9 [0, 65535] { R4002 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s10 [111, 111] { R4002 += 1, R114 += 1 };
  s9 -> s1 [112, 65535] { R4002 += 1, R114 += 1 };
  s10 -> s1 [0, 114] { R4002 += 1, R114 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s10 [0, 65535] { R4002 += 1 };
  s10 -> s11 [115, 115] { R4002 += 1, R114 += 1 };
  s10 -> s1 [116, 65535] { R4002 += 1, R114 += 1 };
  s11 -> s1 [0, 115] { R4002 += 1, R114 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s11 [0, 65535] { R4002 += 1 };
  s11 -> s12 [116, 116] { R4002 += 1, R114 += 1 };
  s11 -> s1 [117, 65535] { R4002 += 1, R114 += 1 };
  s12 -> s1 [0, 65535] { R4002 += 1, R114 += 1 };
  s13 -> s4 [0, 65535];
  s13 -> s13 [0, 65535] { R4002 += 1 };
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 65535] { R4004 += 1, R119 += 1, R120 += 1 };
  s0 -> s2 [0, 65535] { R4004 += 1, R118 += 1, R119 += 1 };
  s0 -> s0 [0, 65535] { R4003 += 1, R4004 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4004 += 1 };
  s1 -> s1 [0, 65535] { R4004 += 1, R119 += 1, R120 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4004 += 1, R119 += 1, R120 += 1 };
  s2 -> s2 [0, 65535] { R4004 += 1, R118 += 1, R119 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4004 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s0 [0, 65535] { R4005 += 1, R4006 += 1 };
  s0 -> s1 [0, 65535] { R4006 += 1, R124 += 1, R125 += 1 };
  s0 -> s2 [0, 65535] { R4006 += 1, R125 += 1, R126 += 1 };
  s1 -> s1 [0, 65535] { R4006 += 1, R124 += 1, R125 += 1 };
  s1 -> s2 [0, 65535] { R4006 += 1, R125 += 1, R126 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4006 += 1, R125 += 1, R126 += 1 };
  s2 -> s3 [0, 65535] { R4006 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4006 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 107] { R4008 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R4007 += 1, R4008 += 1 };
  s0 -> s2 [0, 65535] { R4008 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [108, 108] { R4008 += 1, R130 += 1 };
  s0 -> s1 [109, 65535] { R4008 += 1, R130 += 1 };
  s1 -> s1 [0, 65535] { R4008 += 1, R130 += 1 };
  s1 -> s13 [0, 65535] { R4008 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 107] { R4008 += 1, R130 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4008 += 1, R129 += 1, R130 += 1 };
  s2 -> s3 [108, 108] { R4008 += 1, R130 += 1 };
  s2 -> s1 [109, 65535] { R4008 += 1, R130 += 1 };
  s3 -> s1 [0, 110] { R4008 += 1, R130 += 1 };
  s3 -> s3 [0, 65535] { R4008 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [111, 111] { R4008 += 1, R130 += 1 };
  s3 -> s1 [112, 65535] { R4008 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s1 [0, 98] { R4008 += 1, R130 += 1 };
  s5 -> s5 [0, 65535] { R4008 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [99, 99] { R4008 += 1, R130 += 1 };
  s5 -> s1 [100, 65535] { R4008 += 1, R130 += 1 };
  s6 -> s1 [0, 96] { R4008 += 1, R130 += 1 };
  s6 -> s6 [0, 65535] { R4008 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s7 [97, 97] { R4008 += 1, R130 += 1 };
  s6 -> s1 [98, 65535] { R4008 += 1, R130 += 1 };
  s7 -> s1 [0, 107] { R4008 += 1, R130 += 1 };
  s7 -> s7 [0, 65535] { R4008 += 1 };
  s7 -> s4 [0, 65535];
  s7 -> s8 [108, 108] { R4008 += 1, R130 += 1 };
  s7 -> s1 [109, 65535] { R4008 += 1, R130 += 1 };
  s8 -> s1 [0, 103] { R4008 += 1, R130 += 1 };
  s8 -> s8 [0, 65535] { R4008 += 1 };
  s8 -> s4 [0, 65535];
  s8 -> s9 [104, 104] { R4008 += 1, R130 += 1 };
  s8 -> s1 [105, 65535] { R4008 += 1, R130 += 1 };
  s9 -> s1 [0, 110] { R4008 += 1, R130 += 1 };
  s9 -> s9 [0, 65535] { R4008 += 1 };
  s9 -> s4 [0, 65535];
  s9 -> s10 [111, 111] { R4008 += 1, R130 += 1 };
  s9 -> s1 [112, 65535] { R4008 += 1, R130 += 1 };
  s10 -> s1 [0, 114] { R4008 += 1, R130 += 1 };
  s10 -> s10 [0, 65535] { R4008 += 1 };
  s10 -> s4 [0, 65535];
  s10 -> s11 [115, 115] { R4008 += 1, R130 += 1 };
  s10 -> s1 [116, 65535] { R4008 += 1, R130 += 1 };
  s11 -> s1 [0, 115] { R4008 += 1, R130 += 1 };
  s11 -> s11 [0, 65535] { R4008 += 1 };
  s11 -> s4 [0, 65535];
  s11 -> s12 [116, 116] { R4008 += 1, R130 += 1 };
  s11 -> s1 [117, 65535] { R4008 += 1, R130 += 1 };
  s12 -> s1 [0, 65535] { R4008 += 1, R130 += 1 };
  s13 -> s13 [0, 65535] { R4008 += 1 };
  s13 -> s4 [0, 65535];
  accepting s3, s4, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R4010 += 1, R134 += 1, R135 += 1 };
  s0 -> s0 [0, 65535] { R4009 += 1, R4010 += 1 };
  s0 -> s2 [0, 65535] { R4010 += 1, R135 += 1, R136 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4010 += 1, R134 += 1, R135 += 1 };
  s1 -> s2 [0, 65535] { R4010 += 1, R135 += 1, R136 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4010 += 1 };
  s2 -> s2 [0, 65535] { R4010 += 1, R135 += 1, R136 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4010 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R4012 += 1, R141 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R4011 += 1, R4012 += 1 };
  s0 -> s2 [0, 65535] { R4012 += 1, R140 += 1, R141 += 1 };
  s1 -> s1 [0, 65535] { R4012 += 1, R141 += 1, R142 += 1 };
  s1 -> s4 [0, 65535] { R4012 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4012 += 1, R141 += 1, R142 += 1 };
  s2 -> s2 [0, 65535] { R4012 += 1, R140 += 1, R141 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4012 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s0 [0, 65535] { R4013 += 1, R4014 += 1 };
  s0 -> s1 [0, 65535] { R4014 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4014 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 65535] { R4016 += 1, R147 += 1, R148 += 1 };
  s0 -> s0 [0, 65535] { R4015 += 1, R4016 += 1 };
  s0 -> s2 [0, 65535] { R4016 += 1, R146 += 1, R147 += 1 };
  s1 -> s1 [0, 65535] { R4016 += 1, R147 += 1, R148 += 1 };
  s1 -> s4 [0, 65535] { R4016 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4016 += 1, R147 += 1, R148 += 1 };
  s2 -> s2 [0, 65535] { R4016 += 1, R146 += 1, R147 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4016 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s0 [0, 65535] { R4017 += 1, R4018 += 1 };
  s0 -> s1 [0, 65535] { R4018 += 1 };
  s1 -> s1 [0, 65535] { R4018 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 88] { R4020 += 1, R153 += 1, R154 += 1 };
  s0 -> s0 [0, 65535] { R4019 += 1, R4020 += 1 };
  s0 -> s2 [0, 65535] { R4020 += 1, R152 += 1, R153 += 1 };
  s0 -> s3 [89, 89] { R4020 += 1, R153 += 1, R154 += 1 };
  s0 -> s4 [89, 89] { R4020 += 1, R153 += 1, R154 += 1 };
  s0 -> s1 [90, 65535] { R4020 += 1, R153 += 1, R154 += 1 };
  s1 -> s1 [0, 88] { R4020 += 1, R153 += 1, R154 += 1 };
  s1 -> s1 [0, 65535] { R4020 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [89, 89] { R4020 += 1, R153 += 1, R154 += 1 };
  s1 -> s4 [89, 89] { R4020 += 1, R153 += 1, R154 += 1 };
  s1 -> s1 [90, 65535] { R4020 += 1, R153 += 1, R154 += 1 };
  s2 -> s1 [0, 88] { R4020 += 1, R153 += 1, R154 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4020 += 1, R152 += 1, R153 += 1 };
  s2 -> s3 [89, 89] { R4020 += 1, R153 += 1, R154 += 1 };
  s2 -> s4 [89, 89] { R4020 += 1, R153 += 1, R154 += 1 };
  s2 -> s1 [90, 65535] { R4020 += 1, R153 += 1, R154 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4020 += 1 };
  s3 -> s3 [0, 65535] { R4020 += 1, R153 += 1, R154 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4020 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4020 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R4022 += 1, R158 += 1, R159 += 1 };
  s0 -> s0 [0, 65535] { R4021 += 1, R4022 += 1 };
  s0 -> s2 [0, 65535] { R4022 += 1, R159 += 1, R160 += 1 };
  s1 -> s1 [0, 65535] { R4022 += 1, R158 += 1, R159 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R4022 += 1, R159 += 1, R160 += 1 };
  s2 -> s3 [0, 65535] { R4022 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4022 += 1, R159 += 1, R160 += 1 };
  s3 -> s3 [0, 65535] { R4022 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s0 [0, 65535] { R4023 += 1, R4024 += 1 };
  s0 -> s1 [0, 65535] { R4024 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4024 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 72] { R4026 += 1, R165 += 1, R166 += 1 };
  s0 -> s0 [0, 65535] { R4025 += 1, R4026 += 1 };
  s0 -> s2 [0, 65535] { R4026 += 1, R164 += 1, R165 += 1 };
  s0 -> s3 [73, 73] { R4026 += 1, R165 += 1, R166 += 1 };
  s0 -> s4 [73, 73] { R4026 += 1, R165 += 1, R166 += 1 };
  s0 -> s1 [74, 65535] { R4026 += 1, R165 += 1, R166 += 1 };
  s1 -> s1 [0, 72] { R4026 += 1, R165 += 1, R166 += 1 };
  s1 -> s1 [0, 65535] { R4026 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [73, 73] { R4026 += 1, R165 += 1, R166 += 1 };
  s1 -> s4 [73, 73] { R4026 += 1, R165 += 1, R166 += 1 };
  s1 -> s1 [74, 65535] { R4026 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [0, 72] { R4026 += 1, R165 += 1, R166 += 1 };
  s2 -> s2 [0, 65535] { R4026 += 1, R164 += 1, R165 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [73, 73] { R4026 += 1, R165 += 1, R166 += 1 };
  s2 -> s4 [73, 73] { R4026 += 1, R165 += 1, R166 += 1 };
  s2 -> s1 [74, 65535] { R4026 += 1, R165 += 1, R166 += 1 };
  s3 -> s6 [0, 65535] { R4026 += 1 };
  s3 -> s3 [0, 65535] { R4026 += 1, R165 += 1, R166 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4026 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4026 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R4050 += 1, R38 += 1 };
  s0 -> s0 [0, 65535] { R4049 += 1, R4050 += 1 };
  s1 -> s1 [0, 65535] { R4050 += 1, R38 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 64] { R4052 += 1, R87 += 1 };
  s0 -> s0 [0, 65535] { R4051 += 1, R4052 += 1 };
  s0 -> s2 [65, 65] { R4052 += 1, R87 += 1 };
  s0 -> s3 [65, 65] { R4052 += 1, R87 += 1 };
  s0 -> s1 [66, 65535] { R4052 += 1, R87 += 1 };
  s1 -> s1 [0, 64] { R4052 += 1, R87 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4052 += 1, R87 += 1 };
  s1 -> s3 [65, 65] { R4052 += 1, R87 += 1 };
  s1 -> s1 [66, 65535] { R4052 += 1, R87 += 1 };
  s2 -> s2 [0, 65535] { R4052 += 1, R87 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R4054 += 1, R89 += 1 };
  s0 -> s0 [0, 65535] { R4053 += 1, R4054 += 1 };
  s0 -> s2 [65, 65] { R4054 += 1, R89 += 1 };
  s0 -> s3 [65, 65] { R4054 += 1, R89 += 1 };
  s0 -> s1 [66, 65535] { R4054 += 1, R89 += 1 };
  s1 -> s1 [0, 64] { R4054 += 1, R89 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4054 += 1, R89 += 1 };
  s1 -> s3 [65, 65] { R4054 += 1, R89 += 1 };
  s1 -> s1 [66, 65535] { R4054 += 1, R89 += 1 };
  s2 -> s2 [0, 65535] { R4054 += 1, R89 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R4056 += 1, R91 += 1 };
  s0 -> s0 [0, 65535] { R4055 += 1, R4056 += 1 };
  s0 -> s2 [65, 65] { R4056 += 1, R91 += 1 };
  s0 -> s3 [65, 65] { R4056 += 1, R91 += 1 };
  s0 -> s1 [66, 65535] { R4056 += 1, R91 += 1 };
  s1 -> s1 [0, 64] { R4056 += 1, R91 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4056 += 1, R91 += 1 };
  s1 -> s3 [65, 65] { R4056 += 1, R91 += 1 };
  s1 -> s1 [66, 65535] { R4056 += 1, R91 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4056 += 1, R91 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R4058 += 1, R93 += 1 };
  s0 -> s0 [0, 65535] { R4057 += 1, R4058 += 1 };
  s0 -> s2 [65, 65] { R4058 += 1, R93 += 1 };
  s0 -> s3 [65, 65] { R4058 += 1, R93 += 1 };
  s0 -> s1 [66, 65535] { R4058 += 1, R93 += 1 };
  s1 -> s1 [0, 64] { R4058 += 1, R93 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4058 += 1, R93 += 1 };
  s1 -> s3 [65, 65] { R4058 += 1, R93 += 1 };
  s1 -> s1 [66, 65535] { R4058 += 1, R93 += 1 };
  s2 -> s2 [0, 65535] { R4058 += 1, R93 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R4060 += 1, R95 += 1, R96 += 1 };
  s0 -> s0 [0, 65535] { R4059 += 1, R4060 += 1 };
  s0 -> s2 [65, 65] { R4060 += 1, R95 += 1, R96 += 1 };
  s0 -> s3 [65, 65] { R4060 += 1, R95 += 1, R96 += 1 };
  s0 -> s1 [66, 65535] { R4060 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 64] { R4060 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4060 += 1, R95 += 1, R96 += 1 };
  s1 -> s3 [65, 65] { R4060 += 1, R95 += 1, R96 += 1 };
  s1 -> s1 [66, 65535] { R4060 += 1, R95 += 1, R96 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4060 += 1, R95 += 1, R96 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R4062 += 1, R101 += 1, R102 += 1 };
  s0 -> s0 [0, 65535] { R4061 += 1, R4062 += 1 };
  s0 -> s2 [65, 65] { R4062 += 1, R101 += 1, R102 += 1 };
  s0 -> s3 [65, 65] { R4062 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [66, 65535] { R4062 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 64] { R4062 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4062 += 1, R101 += 1, R102 += 1 };
  s1 -> s3 [65, 65] { R4062 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [66, 65535] { R4062 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4062 += 1, R101 += 1, R102 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 64] { R4064 += 1, R105 += 1, R106 += 1 };
  s0 -> s0 [0, 65535] { R4063 += 1, R4064 += 1 };
  s0 -> s2 [65, 65] { R4064 += 1, R105 += 1, R106 += 1 };
  s0 -> s3 [65, 65] { R4064 += 1, R105 += 1, R106 += 1 };
  s0 -> s1 [66, 65535] { R4064 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [0, 64] { R4064 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4064 += 1, R105 += 1, R106 += 1 };
  s1 -> s3 [65, 65] { R4064 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [66, 65535] { R4064 += 1, R105 += 1, R106 += 1 };
  s2 -> s2 [0, 65535] { R4064 += 1, R105 += 1, R106 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R4066 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R4065 += 1, R4066 += 1 };
  s0 -> s2 [65, 65] { R4066 += 1, R111 += 1, R112 += 1 };
  s0 -> s3 [65, 65] { R4066 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [66, 65535] { R4066 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 64] { R4066 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4066 += 1, R111 += 1, R112 += 1 };
  s1 -> s3 [65, 65] { R4066 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [66, 65535] { R4066 += 1, R111 += 1, R112 += 1 };
  s2 -> s2 [0, 65535] { R4066 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 64] { R4068 += 1, R115 += 1, R116 += 1 };
  s0 -> s0 [0, 65535] { R4067 += 1, R4068 += 1 };
  s0 -> s2 [65, 65] { R4068 += 1, R115 += 1, R116 += 1 };
  s0 -> s3 [65, 65] { R4068 += 1, R115 += 1, R116 += 1 };
  s0 -> s1 [66, 65535] { R4068 += 1, R115 += 1, R116 += 1 };
  s1 -> s1 [0, 64] { R4068 += 1, R115 += 1, R116 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4068 += 1, R115 += 1, R116 += 1 };
  s1 -> s3 [65, 65] { R4068 += 1, R115 += 1, R116 += 1 };
  s1 -> s1 [66, 65535] { R4068 += 1, R115 += 1, R116 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4068 += 1, R115 += 1, R116 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R4070 += 1, R121 += 1, R122 += 1 };
  s0 -> s0 [0, 65535] { R4069 += 1, R4070 += 1 };
  s0 -> s2 [65, 65] { R4070 += 1, R121 += 1, R122 += 1 };
  s0 -> s3 [65, 65] { R4070 += 1, R121 += 1, R122 += 1 };
  s0 -> s1 [66, 65535] { R4070 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [0, 64] { R4070 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4070 += 1, R121 += 1, R122 += 1 };
  s1 -> s3 [65, 65] { R4070 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [66, 65535] { R4070 += 1, R121 += 1, R122 += 1 };
  s2 -> s2 [0, 65535] { R4070 += 1, R121 += 1, R122 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 64] { R4072 += 1, R127 += 1, R128 += 1 };
  s0 -> s0 [0, 65535] { R4071 += 1, R4072 += 1 };
  s0 -> s2 [65, 65] { R4072 += 1, R127 += 1, R128 += 1 };
  s0 -> s3 [65, 65] { R4072 += 1, R127 += 1, R128 += 1 };
  s0 -> s1 [66, 65535] { R4072 += 1, R127 += 1, R128 += 1 };
  s1 -> s1 [0, 64] { R4072 += 1, R127 += 1, R128 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4072 += 1, R127 += 1, R128 += 1 };
  s1 -> s3 [65, 65] { R4072 += 1, R127 += 1, R128 += 1 };
  s1 -> s1 [66, 65535] { R4072 += 1, R127 += 1, R128 += 1 };
  s2 -> s2 [0, 65535] { R4072 += 1, R127 += 1, R128 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 64] { R4074 += 1, R131 += 1, R132 += 1 };
  s0 -> s0 [0, 65535] { R4073 += 1, R4074 += 1 };
  s0 -> s2 [65, 65] { R4074 += 1, R131 += 1, R132 += 1 };
  s0 -> s3 [65, 65] { R4074 += 1, R131 += 1, R132 += 1 };
  s0 -> s1 [66, 65535] { R4074 += 1, R131 += 1, R132 += 1 };
  s1 -> s1 [0, 64] { R4074 += 1, R131 += 1, R132 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4074 += 1, R131 += 1, R132 += 1 };
  s1 -> s3 [65, 65] { R4074 += 1, R131 += 1, R132 += 1 };
  s1 -> s1 [66, 65535] { R4074 += 1, R131 += 1, R132 += 1 };
  s2 -> s2 [0, 65535] { R4074 += 1, R131 += 1, R132 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R4076 += 1, R137 += 1, R138 += 1 };
  s0 -> s0 [0, 65535] { R4075 += 1, R4076 += 1 };
  s0 -> s2 [65, 65] { R4076 += 1, R137 += 1, R138 += 1 };
  s0 -> s3 [65, 65] { R4076 += 1, R137 += 1, R138 += 1 };
  s0 -> s1 [66, 65535] { R4076 += 1, R137 += 1, R138 += 1 };
  s1 -> s1 [0, 64] { R4076 += 1, R137 += 1, R138 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4076 += 1, R137 += 1, R138 += 1 };
  s1 -> s3 [65, 65] { R4076 += 1, R137 += 1, R138 += 1 };
  s1 -> s1 [66, 65535] { R4076 += 1, R137 += 1, R138 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4076 += 1, R137 += 1, R138 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 64] { R4078 += 1 };
  s0 -> s0 [0, 65535] { R4077 += 1, R4078 += 1 };
  s0 -> s2 [65, 65] { R4078 += 1 };
  s0 -> s3 [65, 65] { R4078 += 1 };
  s0 -> s1 [66, 65535] { R4078 += 1 };
  s1 -> s1 [0, 64] { R4078 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4078 += 1 };
  s1 -> s3 [65, 65] { R4078 += 1 };
  s1 -> s1 [66, 65535] { R4078 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4078 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 64] { R4080 += 1, R143 += 1, R144 += 1 };
  s0 -> s0 [0, 65535] { R4079 += 1, R4080 += 1 };
  s0 -> s2 [65, 65] { R4080 += 1, R143 += 1, R144 += 1 };
  s0 -> s3 [65, 65] { R4080 += 1, R143 += 1, R144 += 1 };
  s0 -> s1 [66, 65535] { R4080 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [0, 64] { R4080 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4080 += 1, R143 += 1, R144 += 1 };
  s1 -> s3 [65, 65] { R4080 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [66, 65535] { R4080 += 1, R143 += 1, R144 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4080 += 1, R143 += 1, R144 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 64] { R4082 += 1 };
  s0 -> s0 [0, 65535] { R4081 += 1, R4082 += 1 };
  s0 -> s2 [65, 65] { R4082 += 1 };
  s0 -> s3 [65, 65] { R4082 += 1 };
  s0 -> s1 [66, 65535] { R4082 += 1 };
  s1 -> s1 [0, 64] { R4082 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4082 += 1 };
  s1 -> s3 [65, 65] { R4082 += 1 };
  s1 -> s1 [66, 65535] { R4082 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4082 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_41 {
  init s0;
  s0 -> s1 [0, 64] { R4084 += 1, R149 += 1, R150 += 1 };
  s0 -> s0 [0, 65535] { R4083 += 1, R4084 += 1 };
  s0 -> s2 [65, 65] { R4084 += 1, R149 += 1, R150 += 1 };
  s0 -> s3 [65, 65] { R4084 += 1, R149 += 1, R150 += 1 };
  s0 -> s1 [66, 65535] { R4084 += 1, R149 += 1, R150 += 1 };
  s1 -> s1 [0, 64] { R4084 += 1, R149 += 1, R150 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4084 += 1, R149 += 1, R150 += 1 };
  s1 -> s3 [65, 65] { R4084 += 1, R149 += 1, R150 += 1 };
  s1 -> s1 [66, 65535] { R4084 += 1, R149 += 1, R150 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R4084 += 1, R149 += 1, R150 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_42 {
  init s0;
  s0 -> s1 [0, 64] { R4086 += 1, R155 += 1, R156 += 1 };
  s0 -> s0 [0, 65535] { R4085 += 1, R4086 += 1 };
  s0 -> s2 [65, 65] { R4086 += 1, R155 += 1, R156 += 1 };
  s0 -> s3 [65, 65] { R4086 += 1, R155 += 1, R156 += 1 };
  s0 -> s1 [66, 65535] { R4086 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 64] { R4086 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4086 += 1, R155 += 1, R156 += 1 };
  s1 -> s3 [65, 65] { R4086 += 1, R155 += 1, R156 += 1 };
  s1 -> s1 [66, 65535] { R4086 += 1, R155 += 1, R156 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4086 += 1, R155 += 1, R156 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_43 {
  init s0;
  s0 -> s1 [0, 64] { R4088 += 1 };
  s0 -> s0 [0, 65535] { R4087 += 1, R4088 += 1 };
  s0 -> s2 [65, 65] { R4088 += 1 };
  s0 -> s3 [65, 65] { R4088 += 1 };
  s0 -> s1 [66, 65535] { R4088 += 1 };
  s1 -> s1 [0, 64] { R4088 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4088 += 1 };
  s1 -> s3 [65, 65] { R4088 += 1 };
  s1 -> s1 [66, 65535] { R4088 += 1 };
  s2 -> s2 [0, 65535] { R4088 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_44 {
  init s0;
  s0 -> s1 [0, 64] { R4090 += 1, R161 += 1, R162 += 1 };
  s0 -> s0 [0, 65535] { R4089 += 1, R4090 += 1 };
  s0 -> s2 [65, 65] { R4090 += 1, R161 += 1, R162 += 1 };
  s0 -> s3 [65, 65] { R4090 += 1, R161 += 1, R162 += 1 };
  s0 -> s1 [66, 65535] { R4090 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 64] { R4090 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [65, 65] { R4090 += 1, R161 += 1, R162 += 1 };
  s1 -> s3 [65, 65] { R4090 += 1, R161 += 1, R162 += 1 };
  s1 -> s1 [66, 65535] { R4090 += 1, R161 += 1, R162 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4090 += 1, R161 += 1, R162 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_45 {
  init s0;
  s0 -> s1 [0, 43] { R4092 += 1 };
  s0 -> s0 [0, 65535] { R4091 += 1, R4092 += 1 };
  s0 -> s1 [45, 45] { R4092 += 1 };
  s0 -> s2 [46, 46] { R4092 += 1 };
  s0 -> s1 [48, 62] { R4092 += 1 };
  s0 -> s3 [65, 65] { R4092 += 1 };
  s0 -> s1 [66, 65535] { R4092 += 1 };
  s1 -> s1 [0, 43] { R4092 += 1 };
  s1 -> s1 [45, 45] { R4092 += 1 };
  s1 -> s2 [46, 46] { R4092 += 1 };
  s1 -> s1 [48, 62] { R4092 += 1 };
  s1 -> s3 [65, 65] { R4092 += 1 };
  s1 -> s1 [66, 65535] { R4092 += 1 };
  s2 -> s1 [0, 43] { R4092 += 1 };
  s2 -> s1 [45, 45] { R4092 += 1 };
  s2 -> s2 [46, 46] { R4092 += 1 };
  s2 -> s1 [48, 62] { R4092 += 1 };
  s2 -> s3 [65, 65] { R4092 += 1 };
  s2 -> s1 [66, 114] { R4092 += 1 };
  s2 -> s8 [115, 115] { R4092 += 1 };
  s2 -> s1 [116, 65535] { R4092 += 1 };
  s3 -> s3 [0, 43] { R4092 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R4092 += 1 };
  s3 -> s4 [46, 46] { R4092 += 1 };
  s3 -> s3 [48, 62] { R4092 += 1 };
  s3 -> s3 [65, 65535] { R4092 += 1 };
  s4 -> s3 [0, 43] { R4092 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R4092 += 1 };
  s4 -> s4 [46, 46] { R4092 += 1 };
  s4 -> s3 [48, 62] { R4092 += 1 };
  s4 -> s3 [65, 114] { R4092 += 1 };
  s4 -> s5 [115, 115] { R4092 += 1 };
  s4 -> s3 [116, 65535] { R4092 += 1 };
  s5 -> s3 [0, 43] { R4092 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R4092 += 1 };
  s5 -> s4 [46, 46] { R4092 += 1 };
  s5 -> s3 [48, 62] { R4092 += 1 };
  s5 -> s3 [65, 110] { R4092 += 1 };
  s5 -> s6 [111, 111] { R4092 += 1 };
  s5 -> s3 [112, 65535] { R4092 += 1 };
  s6 -> s3 [0, 43] { R4092 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R4092 += 1 };
  s6 -> s4 [46, 46] { R4092 += 1 };
  s6 -> s3 [48, 62] { R4092 += 1 };
  s6 -> s3 [65, 98] { R4092 += 1 };
  s6 -> s7 [99, 99] { R4092 += 1 };
  s6 -> s3 [100, 65535] { R4092 += 1 };
  s7 -> s3 [0, 43] { R4092 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R4092 += 1 };
  s7 -> s4 [46, 46] { R4092 += 1 };
  s7 -> s3 [48, 62] { R4092 += 1 };
  s7 -> s3 [65, 106] { R4092 += 1 };
  s7 -> s3 [108, 65535] { R4092 += 1 };
  s8 -> s1 [0, 43] { R4092 += 1 };
  s8 -> s1 [45, 45] { R4092 += 1 };
  s8 -> s2 [46, 46] { R4092 += 1 };
  s8 -> s1 [48, 62] { R4092 += 1 };
  s8 -> s3 [65, 65] { R4092 += 1 };
  s8 -> s1 [66, 110] { R4092 += 1 };
  s8 -> s9 [111, 111] { R4092 += 1 };
  s8 -> s1 [112, 65535] { R4092 += 1 };
  s9 -> s1 [0, 43] { R4092 += 1 };
  s9 -> s1 [45, 45] { R4092 += 1 };
  s9 -> s2 [46, 46] { R4092 += 1 };
  s9 -> s1 [48, 62] { R4092 += 1 };
  s9 -> s3 [65, 65] { R4092 += 1 };
  s9 -> s1 [66, 98] { R4092 += 1 };
  s9 -> s10 [99, 99] { R4092 += 1 };
  s9 -> s1 [100, 65535] { R4092 += 1 };
  s10 -> s1 [0, 43] { R4092 += 1 };
  s10 -> s1 [45, 45] { R4092 += 1 };
  s10 -> s2 [46, 46] { R4092 += 1 };
  s10 -> s1 [48, 62] { R4092 += 1 };
  s10 -> s3 [65, 65] { R4092 += 1 };
  s10 -> s1 [66, 106] { R4092 += 1 };
  s10 -> s1 [108, 65535] { R4092 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_46 {
  init s0;
  s0 -> s1 [0, 65535] { R4094 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R4093 += 1, R4094 += 1 };
  s1 -> s1 [0, 65535] { R4094 += 1, R5 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_47 {
  init s0;
  s0 -> s1 [0, 57] { R4096 += 1 };
  s0 -> s0 [0, 65535] { R4095 += 1, R4096 += 1 };
  s0 -> s2 [0, 65535] { R4096 += 1, R20 += 1 };
  s0 -> s3 [58, 58] { R4096 += 1 };
  s0 -> s1 [59, 65535] { R4096 += 1 };
  s1 -> s1 [0, 57] { R4096 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R4096 += 1 };
  s1 -> s1 [59, 65535] { R4096 += 1 };
  s2 -> s1 [0, 57] { R4096 += 1 };
  s2 -> s2 [0, 65535] { R4096 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [58, 58] { R4096 += 1 };
  s2 -> s1 [59, 65535] { R4096 += 1 };
  s3 -> s3 [0, 65535] { R4096 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_48 {
  init s0;
  s0 -> s1 [0, 64] { R4098 += 1 };
  s0 -> s2 [0, 65535] { R4098 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R4097 += 1, R4098 += 1 };
  s0 -> s3 [65, 65] { R4098 += 1 };
  s0 -> s1 [66, 65535] { R4098 += 1 };
  s1 -> s1 [0, 64] { R4098 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R4098 += 1 };
  s1 -> s1 [66, 65535] { R4098 += 1 };
  s2 -> s1 [0, 64] { R4098 += 1 };
  s2 -> s2 [0, 65535] { R4098 += 1, R21 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [65, 65] { R4098 += 1 };
  s2 -> s1 [66, 65535] { R4098 += 1 };
  s3 -> s3 [0, 65535] { R4098 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_49 {
  init s0;
  s0 -> s1 [0, 90] { R4100 += 1, R40 += 1 };
  s0 -> s2 [0, 65535] { R4100 += 1, R39 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R4099 += 1, R4100 += 1 };
  s0 -> s3 [91, 91] { R4100 += 1, R40 += 1 };
  s0 -> s1 [92, 65535] { R4100 += 1, R40 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4100 += 1 };
  s1 -> s1 [0, 65535] { R4100 += 1, R40 += 1 };
  s2 -> s1 [0, 90] { R4100 += 1, R40 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4100 += 1, R39 += 1, R40 += 1 };
  s2 -> s3 [91, 91] { R4100 += 1, R40 += 1 };
  s2 -> s1 [92, 65535] { R4100 += 1, R40 += 1 };
  s3 -> s1 [0, 65535] { R4100 += 1, R40 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4100 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton uri_50 {
  init s0;
  s0 -> s0 [0, 65535] { R4101 += 1, R4102 += 1 };
  s0 -> s1 [0, 65535] { R4102 += 1, R42 += 1, R7 += 1 };
  s0 -> s2 [0, 65535] { R4102 += 1, R41 += 1, R42 += 1 };
  s1 -> s4 [0, 65535] { R4102 += 1 };
  s1 -> s1 [0, 65535] { R4102 += 1, R42 += 1, R7 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4102 += 1, R42 += 1, R7 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4102 += 1, R41 += 1, R42 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4102 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_51 {
  init s0;
  s0 -> s1 [0, 64] { R4104 += 1, R3962 += 1 };
  s0 -> s2 [0, 65535] { R4104 += 1, R3961 += 1, R3962 += 1 };
  s0 -> s0 [0, 65535] { R4103 += 1, R4104 += 1 };
  s0 -> s1 [66, 65535] { R4104 += 1, R3962 += 1 };
  s1 -> s1 [0, 64] { R4104 += 1, R3962 += 1 };
  s1 -> s1 [0, 65535] { R4104 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [66, 65535] { R4104 += 1, R3962 += 1 };
  s2 -> s1 [0, 64] { R4104 += 1, R3962 += 1 };
  s2 -> s2 [0, 65535] { R4104 += 1, R3961 += 1, R3962 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [66, 65535] { R4104 += 1, R3962 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_52 {
  init s0;
  s0 -> s1 [0, 65535] { R4106 += 1, R3964 += 1, R35 += 1 };
  s0 -> s0 [0, 65535] { R4105 += 1, R4106 += 1 };
  s0 -> s2 [0, 65535] { R4106 += 1, R3963 += 1, R3964 += 1 };
  s1 -> s1 [0, 65535] { R4106 += 1, R3964 += 1, R35 += 1 };
  s1 -> s4 [0, 65535] { R4106 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4106 += 1, R3964 += 1, R35 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4106 += 1, R3963 += 1, R3964 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4106 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_53 {
  init s0;
  s0 -> s1 [0, 65] { R4108 += 1, R3966 += 1 };
  s0 -> s0 [0, 65535] { R4107 += 1, R4108 += 1 };
  s0 -> s2 [0, 65535] { R4108 += 1, R3965 += 1, R3966 += 1 };
  s0 -> s1 [81, 65535] { R4108 += 1, R3966 += 1 };
  s1 -> s1 [0, 65] { R4108 += 1, R3966 += 1 };
  s1 -> s1 [0, 65535] { R4108 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [81, 65535] { R4108 += 1, R3966 += 1 };
  s2 -> s1 [0, 65] { R4108 += 1, R3966 += 1 };
  s2 -> s2 [0, 65535] { R4108 += 1, R3965 += 1, R3966 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [81, 65535] { R4108 += 1, R3966 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_54 {
  init s0;
  s0 -> s1 [0, 65535] { R4110 += 1, R3968 += 1, R604 += 1 };
  s0 -> s0 [0, 65535] { R4109 += 1, R4110 += 1 };
  s0 -> s2 [0, 65535] { R4110 += 1, R3967 += 1, R3968 += 1 };
  s1 -> s4 [0, 65535] { R4110 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4110 += 1, R3968 += 1, R604 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4110 += 1, R3968 += 1, R604 += 1 };
  s2 -> s2 [0, 65535] { R4110 += 1, R3967 += 1, R3968 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4110 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_55 {
  init s0;
  s0 -> s1 [0, 80] { R4112 += 1, R3970 += 1 };
  s0 -> s2 [0, 65535] { R4112 += 1, R3970 += 1, R606 += 1 };
  s0 -> s0 [0, 65535] { R4111 += 1, R4112 += 1 };
  s0 -> s3 [0, 65535] { R4112 += 1, R3969 += 1, R3970 += 1 };
  s0 -> s1 [82, 65535] { R4112 += 1, R3970 += 1 };
  s1 -> s1 [0, 80] { R4112 += 1, R3970 += 1 };
  s1 -> s1 [0, 65535] { R4112 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [82, 65535] { R4112 += 1, R3970 += 1 };
  s2 -> s1 [0, 80] { R4112 += 1, R3970 += 1 };
  s2 -> s2 [0, 65535] { R4112 += 1, R3970 += 1, R606 += 1 };
  s2 -> s5 [0, 65535] { R4112 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [82, 65535] { R4112 += 1, R3970 += 1 };
  s3 -> s1 [0, 80] { R4112 += 1, R3970 += 1 };
  s3 -> s2 [0, 65535] { R4112 += 1, R3970 += 1, R606 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4112 += 1, R3969 += 1, R3970 += 1 };
  s3 -> s1 [82, 65535] { R4112 += 1, R3970 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4112 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_56 {
  init s0;
  s0 -> s1 [0, 80] { R4114 += 1, R3972 += 1, R610 += 1 };
  s0 -> s2 [0, 65535] { R4114 += 1, R3971 += 1, R3972 += 1 };
  s0 -> s0 [0, 65535] { R4113 += 1, R4114 += 1 };
  s0 -> s3 [0, 65535] { R4114 += 1, R3972 += 1, R609 += 1, R610 += 1 };
  s0 -> s1 [82, 65535] { R4114 += 1, R3972 += 1, R610 += 1 };
  s1 -> s1 [0, 80] { R4114 += 1, R3972 += 1, R610 += 1 };
  s1 -> s1 [0, 65535] { R4114 += 1, R3972 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4114 += 1 };
  s1 -> s1 [82, 65535] { R4114 += 1, R3972 += 1, R610 += 1 };
  s2 -> s1 [0, 80] { R4114 += 1, R3972 += 1, R610 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4114 += 1, R3971 += 1, R3972 += 1 };
  s2 -> s3 [0, 65535] { R4114 += 1, R3972 += 1, R609 += 1, R610 += 1 };
  s2 -> s1 [82, 65535] { R4114 += 1, R3972 += 1, R610 += 1 };
  s3 -> s1 [0, 80] { R4114 += 1, R3972 += 1, R610 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4114 += 1 };
  s3 -> s3 [0, 65535] { R4114 += 1, R3972 += 1, R609 += 1, R610 += 1 };
  s3 -> s1 [82, 65535] { R4114 += 1, R3972 += 1, R610 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4114 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_57 {
  init s0;
  s0 -> s1 [0, 65535] { R4116 += 1, R3974 += 1, R614 += 1, R615 += 1 };
  s0 -> s0 [0, 65535] { R4115 += 1, R4116 += 1 };
  s0 -> s2 [0, 65535] { R4116 += 1, R3973 += 1, R3974 += 1 };
  s0 -> s3 [0, 65535] { R4116 += 1, R3974 += 1, R615 += 1, R616 += 1 };
  s1 -> s1 [0, 65535] { R4116 += 1, R3974 += 1, R614 += 1, R615 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R4116 += 1, R3974 += 1, R615 += 1, R616 += 1 };
  s1 -> s5 [0, 65535] { R4116 += 1 };
  s2 -> s1 [0, 65535] { R4116 += 1, R3974 += 1, R614 += 1, R615 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4116 += 1, R3973 += 1, R3974 += 1 };
  s2 -> s3 [0, 65535] { R4116 += 1, R3974 += 1, R615 += 1, R616 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4116 += 1, R3974 += 1, R615 += 1, R616 += 1 };
  s3 -> s5 [0, 65535] { R4116 += 1 };
  s3 -> s6 [0, 65535] { R4116 += 1, R3974 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4116 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4116 += 1 };
  s6 -> s6 [0, 65535] { R4116 += 1, R3974 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_58 {
  init s0;
  s0 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s0 -> s2 [0, 65535] { R4118 += 1, R3976 += 1, R619 += 1, R620 += 1 };
  s0 -> s3 [0, 65535] { R4118 += 1, R3975 += 1, R3976 += 1 };
  s0 -> s0 [0, 65535] { R4117 += 1, R4118 += 1 };
  s0 -> s1 [91, 107] { R4118 += 1, R3976 += 1, R620 += 1 };
  s0 -> s4 [108, 108] { R4118 += 1, R3976 += 1, R620 += 1 };
  s0 -> s1 [109, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s1 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s1 -> s5 [0, 65535] { R4118 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4118 += 1, R3976 += 1 };
  s1 -> s1 [91, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s2 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s2 -> s5 [0, 65535] { R4118 += 1 };
  s2 -> s2 [0, 65535] { R4118 += 1, R3976 += 1, R619 += 1, R620 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [91, 107] { R4118 += 1, R3976 += 1, R620 += 1 };
  s2 -> s4 [108, 108] { R4118 += 1, R3976 += 1, R620 += 1 };
  s2 -> s1 [109, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s3 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s3 -> s2 [0, 65535] { R4118 += 1, R3976 += 1, R619 += 1, R620 += 1 };
  s3 -> s3 [0, 65535] { R4118 += 1, R3975 += 1, R3976 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [91, 107] { R4118 += 1, R3976 += 1, R620 += 1 };
  s3 -> s4 [108, 108] { R4118 += 1, R3976 += 1, R620 += 1 };
  s3 -> s1 [109, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s4 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s4 -> s5 [0, 65535] { R4118 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4118 += 1, R3976 += 1 };
  s4 -> s1 [91, 110] { R4118 += 1, R3976 += 1, R620 += 1 };
  s4 -> s7 [111, 111] { R4118 += 1, R3976 += 1, R620 += 1 };
  s4 -> s1 [112, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s5 -> s5 [0, 65535] { R4118 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s7 -> s5 [0, 65535] { R4118 += 1 };
  s7 -> s7 [0, 65535] { R4118 += 1, R3976 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s1 [91, 98] { R4118 += 1, R3976 += 1, R620 += 1 };
  s7 -> s8 [99, 99] { R4118 += 1, R3976 += 1, R620 += 1 };
  s7 -> s1 [100, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s8 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s8 -> s8 [0, 65535] { R4118 += 1, R3976 += 1 };
  s8 -> s5 [0, 65535] { R4118 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s1 [91, 96] { R4118 += 1, R3976 += 1, R620 += 1 };
  s8 -> s9 [97, 97] { R4118 += 1, R3976 += 1, R620 += 1 };
  s8 -> s1 [98, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s9 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s9 -> s5 [0, 65535] { R4118 += 1 };
  s9 -> s9 [0, 65535] { R4118 += 1, R3976 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s1 [91, 107] { R4118 += 1, R3976 += 1, R620 += 1 };
  s9 -> s10 [108, 108] { R4118 += 1, R3976 += 1, R620 += 1 };
  s9 -> s1 [109, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s10 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s10 -> s5 [0, 65535] { R4118 += 1 };
  s10 -> s10 [0, 65535] { R4118 += 1, R3976 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s1 [91, 103] { R4118 += 1, R3976 += 1, R620 += 1 };
  s10 -> s11 [104, 104] { R4118 += 1, R3976 += 1, R620 += 1 };
  s10 -> s1 [105, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s11 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s11 -> s5 [0, 65535] { R4118 += 1 };
  s11 -> s11 [0, 65535] { R4118 += 1, R3976 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s1 [91, 110] { R4118 += 1, R3976 += 1, R620 += 1 };
  s11 -> s12 [111, 111] { R4118 += 1, R3976 += 1, R620 += 1 };
  s11 -> s1 [112, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s12 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s12 -> s5 [0, 65535] { R4118 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s12 [0, 65535] { R4118 += 1, R3976 += 1 };
  s12 -> s1 [91, 114] { R4118 += 1, R3976 += 1, R620 += 1 };
  s12 -> s13 [115, 115] { R4118 += 1, R3976 += 1, R620 += 1 };
  s12 -> s1 [116, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s13 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s13 -> s5 [0, 65535] { R4118 += 1 };
  s13 -> s13 [0, 65535] { R4118 += 1, R3976 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s1 [91, 115] { R4118 += 1, R3976 += 1, R620 += 1 };
  s13 -> s14 [116, 116] { R4118 += 1, R3976 += 1, R620 += 1 };
  s13 -> s1 [117, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  s14 -> s1 [0, 81] { R4118 += 1, R3976 += 1, R620 += 1 };
  s14 -> s1 [91, 65535] { R4118 += 1, R3976 += 1, R620 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_59 {
  init s0;
  s0 -> s1 [0, 65535] { R4120 += 1, R3978 += 1 };
  s0 -> s2 [0, 65535] { R4120 += 1, R3977 += 1, R3978 += 1 };
  s0 -> s3 [0, 65535] { R4120 += 1, R3978 += 1, R3559 += 1, R3560 += 1 };
  s0 -> s0 [0, 65535] { R4119 += 1, R4120 += 1 };
  s1 -> s4 [0, 65535] { R4120 += 1 };
  s1 -> s1 [0, 65535] { R4120 += 1, R3978 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R4120 += 1, R3978 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4120 += 1, R3977 += 1, R3978 += 1 };
  s2 -> s3 [0, 65535] { R4120 += 1, R3978 += 1, R3559 += 1, R3560 += 1 };
  s3 -> s4 [0, 65535] { R4120 += 1 };
  s3 -> s1 [0, 65535] { R4120 += 1, R3978 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4120 += 1, R3978 += 1, R3559 += 1, R3560 += 1 };
  s4 -> s4 [0, 65535] { R4120 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_60 {
  init s0;
  s0 -> s1 [0, 65535] { R4122 += 1, R3980 += 1, R3565 += 1, R3566 += 1 };
  s0 -> s0 [0, 65535] { R4121 += 1, R4122 += 1 };
  s0 -> s2 [0, 65535] { R4122 += 1, R3979 += 1, R3980 += 1 };
  s0 -> s3 [0, 65535] { R4122 += 1, R3980 += 1, R3564 += 1, R3565 += 1 };
  s1 -> s4 [0, 65535] { R4122 += 1 };
  s1 -> s1 [0, 65535] { R4122 += 1, R3980 += 1, R3565 += 1, R3566 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4122 += 1, R3980 += 1 };
  s2 -> s1 [0, 65535] { R4122 += 1, R3980 += 1, R3565 += 1, R3566 += 1 };
  s2 -> s2 [0, 65535] { R4122 += 1, R3979 += 1, R3980 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4122 += 1, R3980 += 1, R3564 += 1, R3565 += 1 };
  s3 -> s4 [0, 65535] { R4122 += 1 };
  s3 -> s1 [0, 65535] { R4122 += 1, R3980 += 1, R3565 += 1, R3566 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4122 += 1, R3980 += 1, R3564 += 1, R3565 += 1 };
  s4 -> s4 [0, 65535] { R4122 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R4122 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4122 += 1, R3980 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_61 {
  init s0;
  s0 -> s0 [0, 65535] { R4123 += 1, R4124 += 1 };
  s0 -> s1 [0, 65535] { R4124 += 1, R3981 += 1, R3982 += 1 };
  s0 -> s2 [0, 65535] { R4124 += 1, R3982 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4124 += 1, R3981 += 1, R3982 += 1 };
  s1 -> s2 [0, 65535] { R4124 += 1, R3982 += 1 };
  s2 -> s3 [0, 65535] { R4124 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4124 += 1, R3982 += 1 };
  s3 -> s3 [0, 65535] { R4124 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_62 {
  init s0;
  s0 -> s1 [0, 65535] { R4126 += 1, R3983 += 1, R3984 += 1 };
  s0 -> s2 [0, 65535] { R4126 += 1, R3984 += 1, R3959 += 1, R3960 += 1 };
  s0 -> s0 [0, 65535] { R4125 += 1, R4126 += 1 };
  s0 -> s3 [0, 65535] { R4126 += 1, R3984 += 1 };
  s1 -> s1 [0, 65535] { R4126 += 1, R3983 += 1, R3984 += 1 };
  s1 -> s2 [0, 65535] { R4126 += 1, R3984 += 1, R3959 += 1, R3960 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R4126 += 1, R3984 += 1 };
  s2 -> s4 [0, 65535] { R4126 += 1 };
  s2 -> s2 [0, 65535] { R4126 += 1, R3984 += 1, R3959 += 1, R3960 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4126 += 1, R3984 += 1 };
  s3 -> s4 [0, 65535] { R4126 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4126 += 1, R3984 += 1 };
  s4 -> s4 [0, 65535] { R4126 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_63 {
  init s0;
  s0 -> s1 [0, 65535] { R4128 += 1, R4028 += 1, R36 += 1 };
  s0 -> s2 [0, 65535] { R4128 += 1, R4027 += 1, R4028 += 1 };
  s0 -> s0 [0, 65535] { R4127 += 1, R4128 += 1 };
  s1 -> s4 [0, 65535] { R4128 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4128 += 1, R4028 += 1, R36 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4128 += 1, R4028 += 1, R36 += 1 };
  s2 -> s2 [0, 65535] { R4128 += 1, R4027 += 1, R4028 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4128 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_64 {
  init s0;
  s0 -> s1 [0, 64] { R4130 += 1, R4030 += 1 };
  s0 -> s2 [0, 65535] { R4130 += 1, R4029 += 1, R4030 += 1 };
  s0 -> s0 [0, 65535] { R4129 += 1, R4130 += 1 };
  s0 -> s3 [65, 65] { R4130 += 1, R4030 += 1 };
  s0 -> s4 [65, 65] { R4130 += 1, R4030 += 1 };
  s0 -> s5 [81, 81] { R4130 += 1, R4030 += 1 };
  s0 -> s1 [82, 65535] { R4130 += 1, R4030 += 1 };
  s1 -> s1 [0, 64] { R4130 += 1, R4030 += 1 };
  s1 -> s3 [65, 65] { R4130 += 1, R4030 += 1 };
  s1 -> s4 [65, 65] { R4130 += 1, R4030 += 1 };
  s1 -> s5 [81, 81] { R4130 += 1, R4030 += 1 };
  s1 -> s1 [82, 65535] { R4130 += 1, R4030 += 1 };
  s2 -> s1 [0, 64] { R4130 += 1, R4030 += 1 };
  s2 -> s2 [0, 65535] { R4130 += 1, R4029 += 1, R4030 += 1 };
  s2 -> s3 [65, 65] { R4130 += 1, R4030 += 1 };
  s2 -> s4 [65, 65] { R4130 += 1, R4030 += 1 };
  s2 -> s5 [81, 81] { R4130 += 1, R4030 += 1 };
  s2 -> s1 [82, 65535] { R4130 += 1, R4030 += 1 };
  s4 -> s4 [0, 65] { R4130 += 1, R4030 += 1 };
  s4 -> s8 [81, 81] { R4130 += 1, R4030 += 1 };
  s4 -> s4 [82, 65535] { R4130 += 1, R4030 += 1 };
  s5 -> s5 [0, 64] { R4130 += 1, R4030 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4130 += 1 };
  s5 -> s7 [65, 65] { R4130 += 1, R4030 += 1 };
  s5 -> s8 [65, 65] { R4130 += 1, R4030 += 1 };
  s5 -> s5 [81, 65535] { R4130 += 1, R4030 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4130 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65] { R4130 += 1, R4030 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4130 += 1 };
  s8 -> s8 [81, 65535] { R4130 += 1, R4030 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_65 {
  init s0;
  s0 -> s1 [0, 64] { R4132 += 1, R4032 += 1, R603 += 1 };
  s0 -> s0 [0, 65535] { R4131 += 1, R4132 += 1 };
  s0 -> s2 [0, 65535] { R4132 += 1, R4031 += 1, R4032 += 1 };
  s0 -> s3 [65, 65] { R4132 += 1, R4032 += 1, R603 += 1 };
  s0 -> s4 [65, 65] { R4132 += 1, R4032 += 1, R603 += 1 };
  s0 -> s1 [66, 65535] { R4132 += 1, R4032 += 1, R603 += 1 };
  s1 -> s1 [0, 64] { R4132 += 1, R4032 += 1, R603 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4132 += 1 };
  s1 -> s3 [65, 65] { R4132 += 1, R4032 += 1, R603 += 1 };
  s1 -> s4 [65, 65] { R4132 += 1, R4032 += 1, R603 += 1 };
  s1 -> s1 [66, 65535] { R4132 += 1, R4032 += 1, R603 += 1 };
  s2 -> s1 [0, 64] { R4132 += 1, R4032 += 1, R603 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4132 += 1, R4031 += 1, R4032 += 1 };
  s2 -> s3 [65, 65] { R4132 += 1, R4032 += 1, R603 += 1 };
  s2 -> s4 [65, 65] { R4132 += 1, R4032 += 1, R603 += 1 };
  s2 -> s1 [66, 65535] { R4132 += 1, R4032 += 1, R603 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4132 += 1, R4032 += 1, R603 += 1 };
  s3 -> s6 [0, 65535] { R4132 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4132 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4132 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_66 {
  init s0;
  s0 -> s1 [0, 64] { R4134 += 1, R4034 += 1, R605 += 1 };
  s0 -> s2 [0, 65535] { R4134 += 1, R4033 += 1, R4034 += 1 };
  s0 -> s0 [0, 65535] { R4133 += 1, R4134 += 1 };
  s0 -> s3 [65, 65] { R4134 += 1, R4034 += 1, R605 += 1 };
  s0 -> s4 [65, 65] { R4134 += 1, R4034 += 1, R605 += 1 };
  s0 -> s1 [66, 65535] { R4134 += 1, R4034 += 1, R605 += 1 };
  s1 -> s1 [0, 64] { R4134 += 1, R4034 += 1, R605 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4134 += 1 };
  s1 -> s3 [65, 65] { R4134 += 1, R4034 += 1, R605 += 1 };
  s1 -> s4 [65, 65] { R4134 += 1, R4034 += 1, R605 += 1 };
  s1 -> s1 [66, 65535] { R4134 += 1, R4034 += 1, R605 += 1 };
  s2 -> s1 [0, 64] { R4134 += 1, R4034 += 1, R605 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4134 += 1, R4033 += 1, R4034 += 1 };
  s2 -> s3 [65, 65] { R4134 += 1, R4034 += 1, R605 += 1 };
  s2 -> s4 [65, 65] { R4134 += 1, R4034 += 1, R605 += 1 };
  s2 -> s1 [66, 65535] { R4134 += 1, R4034 += 1, R605 += 1 };
  s3 -> s3 [0, 65535] { R4134 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4134 += 1 };
  s4 -> s4 [0, 65535] { R4134 += 1, R4034 += 1, R605 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4134 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_67 {
  init s0;
  s0 -> s1 [0, 64] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s0 -> s2 [0, 65535] { R4136 += 1, R4035 += 1, R4036 += 1 };
  s0 -> s0 [0, 65535] { R4135 += 1, R4136 += 1 };
  s0 -> s3 [65, 65] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s0 -> s4 [65, 65] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s0 -> s1 [66, 65535] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s1 -> s1 [0, 64] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s1 -> s1 [0, 65535] { R4136 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s1 -> s4 [65, 65] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s1 -> s1 [66, 65535] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s2 -> s1 [0, 64] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4136 += 1, R4035 += 1, R4036 += 1 };
  s2 -> s3 [65, 65] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s2 -> s4 [65, 65] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s2 -> s1 [66, 65535] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s3 -> s3 [0, 65535] { R4136 += 1, R4036 += 1, R607 += 1, R608 += 1 };
  s3 -> s6 [0, 65535] { R4136 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4136 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4136 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_68 {
  init s0;
  s0 -> s1 [0, 64] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s0 -> s0 [0, 65535] { R4137 += 1, R4138 += 1 };
  s0 -> s2 [0, 65535] { R4138 += 1, R4037 += 1, R4038 += 1 };
  s0 -> s3 [65, 65] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s0 -> s4 [65, 65] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s0 -> s1 [66, 65535] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s1 -> s1 [0, 64] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4138 += 1 };
  s1 -> s3 [65, 65] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s1 -> s4 [65, 65] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s1 -> s1 [66, 65535] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s2 -> s1 [0, 64] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4138 += 1, R4037 += 1, R4038 += 1 };
  s2 -> s3 [65, 65] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s2 -> s4 [65, 65] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s2 -> s1 [66, 65535] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4138 += 1, R4038 += 1, R611 += 1, R612 += 1 };
  s3 -> s6 [0, 65535] { R4138 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4138 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4138 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_69 {
  init s0;
  s0 -> s1 [0, 64] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s0 -> s2 [0, 65535] { R4140 += 1, R4039 += 1, R4040 += 1 };
  s0 -> s0 [0, 65535] { R4139 += 1, R4140 += 1 };
  s0 -> s3 [65, 65] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s0 -> s4 [65, 65] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s0 -> s1 [66, 65535] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s1 -> s1 [0, 64] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4140 += 1 };
  s1 -> s3 [65, 65] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s1 -> s4 [65, 65] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s1 -> s1 [66, 65535] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s2 -> s1 [0, 64] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s2 -> s2 [0, 65535] { R4140 += 1, R4039 += 1, R4040 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s2 -> s4 [65, 65] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s2 -> s1 [66, 65535] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s3 -> s3 [0, 65535] { R4140 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4140 += 1 };
  s4 -> s4 [0, 65535] { R4140 += 1, R4040 += 1, R617 += 1, R618 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4140 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_70 {
  init s0;
  s0 -> s1 [0, 64] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s0 -> s2 [0, 64] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s0 -> s0 [0, 65535] { R4141 += 1, R4142 += 1 };
  s0 -> s3 [0, 65535] { R4142 += 1, R4041 += 1, R4042 += 1 };
  s0 -> s4 [65, 65] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s0 -> s5 [65, 65] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s0 -> s6 [65, 65] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s0 -> s7 [65, 65] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s0 -> s1 [66, 65535] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s0 -> s2 [66, 65535] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s1 -> s1 [0, 64] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s1 -> s2 [0, 64] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s1 -> s4 [65, 65] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s1 -> s5 [65, 65] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s1 -> s6 [65, 65] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s1 -> s7 [65, 65] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s1 -> s1 [66, 65535] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s1 -> s2 [66, 65535] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s2 -> s2 [0, 64] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R4142 += 1 };
  s2 -> s4 [65, 65] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s2 -> s5 [65, 65] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s2 -> s2 [66, 65535] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s3 -> s1 [0, 64] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s3 -> s2 [0, 64] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s3 -> s3 [0, 65535] { R4142 += 1, R4041 += 1, R4042 += 1 };
  s3 -> s4 [65, 65] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s3 -> s5 [65, 65] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s3 -> s6 [65, 65] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s3 -> s7 [65, 65] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s3 -> s1 [66, 65535] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s3 -> s2 [66, 65535] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s4 -> s9 [0, 65535] { R4142 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R4142 += 1 };
  s6 -> s4 [0, 65535] { R4142 += 1, R4042 += 1, R3556 += 1, R3557 += 1 };
  s6 -> s6 [0, 65535] { R4142 += 1, R4042 += 1, R3555 += 1, R3556 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4142 += 1 };
  accepting s4, s8, s5, s2, s9;
};
automaton uri_71 {
  init s0;
  s0 -> s1 [0, 64] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s0 -> s2 [0, 65535] { R4144 += 1, R4043 += 1, R4044 += 1 };
  s0 -> s0 [0, 65535] { R4143 += 1, R4144 += 1 };
  s0 -> s3 [65, 65] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s0 -> s4 [65, 65] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s0 -> s1 [66, 65535] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s1 -> s1 [0, 64] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s1 -> s1 [0, 65535] { R4144 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s1 -> s4 [65, 65] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s1 -> s1 [66, 65535] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s2 -> s1 [0, 64] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s2 -> s2 [0, 65535] { R4144 += 1, R4043 += 1, R4044 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s2 -> s4 [65, 65] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s2 -> s1 [66, 65535] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s3 -> s3 [0, 65535] { R4144 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4144 += 1 };
  s4 -> s4 [0, 65535] { R4144 += 1, R4044 += 1, R3561 += 1, R3562 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4144 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_72 {
  init s0;
  s0 -> s1 [0, 64] { R4146 += 1, R4046 += 1 };
  s0 -> s0 [0, 65535] { R4145 += 1, R4146 += 1 };
  s0 -> s2 [0, 65535] { R4146 += 1, R4045 += 1, R4046 += 1 };
  s0 -> s3 [65, 65] { R4146 += 1, R4046 += 1 };
  s0 -> s4 [65, 65] { R4146 += 1, R4046 += 1 };
  s0 -> s1 [66, 65535] { R4146 += 1, R4046 += 1 };
  s1 -> s1 [0, 64] { R4146 += 1, R4046 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4146 += 1 };
  s1 -> s3 [65, 65] { R4146 += 1, R4046 += 1 };
  s1 -> s4 [65, 65] { R4146 += 1, R4046 += 1 };
  s1 -> s1 [66, 65535] { R4146 += 1, R4046 += 1 };
  s2 -> s1 [0, 64] { R4146 += 1, R4046 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4146 += 1, R4045 += 1, R4046 += 1 };
  s2 -> s3 [65, 65] { R4146 += 1, R4046 += 1 };
  s2 -> s4 [65, 65] { R4146 += 1, R4046 += 1 };
  s2 -> s1 [66, 65535] { R4146 += 1, R4046 += 1 };
  s3 -> s3 [0, 65535] { R4146 += 1, R4046 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4146 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4146 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4146 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_73 {
  init s0;
  s0 -> s1 [0, 64] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s0 -> s2 [0, 64] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s0 -> s3 [0, 65535] { R4148 += 1, R4047 += 1, R4048 += 1 };
  s0 -> s0 [0, 65535] { R4147 += 1, R4148 += 1 };
  s0 -> s4 [65, 65] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s0 -> s5 [65, 65] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s0 -> s6 [65, 65] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s0 -> s7 [65, 65] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s0 -> s2 [66, 80] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s0 -> s1 [66, 65535] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s0 -> s8 [81, 81] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s0 -> s2 [82, 65535] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s1 -> s1 [0, 64] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s1 -> s2 [0, 64] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s1 -> s4 [65, 65] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s1 -> s5 [65, 65] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s1 -> s6 [65, 65] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s1 -> s7 [65, 65] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s1 -> s2 [66, 80] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s1 -> s1 [66, 65535] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s1 -> s8 [81, 81] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s1 -> s2 [82, 65535] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s2 -> s2 [0, 64] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s2 -> s6 [65, 65] { R4148 += 1, R4048 += 1 };
  s2 -> s7 [65, 65] { R4148 += 1, R4048 += 1 };
  s2 -> s2 [66, 80] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s2 -> s2 [66, 65535] { R4148 += 1, R4048 += 1 };
  s2 -> s8 [81, 81] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s2 -> s2 [82, 65535] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s3 -> s1 [0, 64] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s3 -> s2 [0, 64] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s3 -> s3 [0, 65535] { R4148 += 1, R4047 += 1, R4048 += 1 };
  s3 -> s4 [65, 65] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s3 -> s5 [65, 65] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s3 -> s6 [65, 65] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s3 -> s7 [65, 65] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s3 -> s2 [66, 80] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s3 -> s1 [66, 65535] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s3 -> s8 [81, 81] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s3 -> s2 [82, 65535] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s5 -> s6 [0, 80] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s5 -> s5 [0, 65535] { R4148 += 1, R4048 += 1, R3955 += 1, R3956 += 1 };
  s5 -> s10 [81, 81] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s5 -> s6 [82, 65535] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s6 -> s6 [0, 80] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s6 -> s6 [0, 65535] { R4148 += 1, R4048 += 1 };
  s6 -> s10 [81, 81] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s6 -> s6 [82, 65535] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s8 -> s8 [0, 64] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s8 -> s8 [0, 65535] { R4148 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [65, 65] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s8 -> s11 [65, 65] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s8 -> s8 [66, 65535] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4148 += 1, R4048 += 1, R3956 += 1, R3957 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s12 [0, 65535] { R4148 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R4148 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4148 += 1 };
  accepting s12, s8, s9, s10, s11;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining P84
automaton P84_0 {
  init s0;
  s0 -> s1 [105, 105];
  accepting s1;
};
};
synchronised {  // Automata constraining P90
automaton P90_0 {
  init s0;
  s0 -> s1 [121, 121];
  accepting s1;
};
};
constraint R5 = R3984 && R6 = R4148 && R39 = 0 && R40 = 1 && R41 = 0 && R42 = 1 && R88 + R87 + -1*R104 + -1*R102 = 0 && R103 + R101 = 0 && R604 + R603 + -1*R3559 + -1*R3556 = 0 && R609 + R607 = 0 && R610 + R608 + -1*R3559 + -1*R3556 = 0 && R614 + R611 = 0 && R615 + R612 + -1*R3559 + -1*R3556 = 0 && R619 + R617 = 0 && R620 + R618 + -1*R3559 + -1*R3556 = 0 && R3558 + R3555 = 0 && R3961 = 0 && R3962 = R3984 && R3963 = 0 && R3964 = R3984 && R3965 = 0 && R3966 = R3984 && R3967 = 0 && R3968 = R3984 && R3969 = 0 && R3970 = R3984 && R3971 = 0 && R3972 = R3984 && R3973 = 0 && R3974 = R3984 && R3975 = 0 && R3976 = R3984 && R3977 = 0 && R3978 = R3984 && R3979 = 0 && R3980 = R3984 && R3981 = 0 && R3982 = R3984 && R3983 = 0 && R3985 = 0 && R3986 = R4148 && R3987 = 0 && R3988 = R4148 && R3989 = 0 && R3990 = R4148 && R3991 = 0 && R3992 = R4148 && R3993 = 0 && R3994 = R4148 && R3995 = 0 && R3996 = R4148 && R3997 = 0 && R3998 = R4148 && R3999 = 0 && R4000 = R4148 && R4001 = 0 && R4002 = R4148 && R4003 = 0 && R4004 = R4148 && R4005 = 0 && R4006 = R4148 && R4007 = 0 && R4008 = R4148 && R4009 = 0 && R4010 = R4148 && R4011 = 0 && R4012 = R4148 && R4013 = 0 && R4014 = R4148 && R4015 = 0 && R4016 = R4148 && R4017 = 0 && R4018 = R4148 && R4019 = 0 && R4020 = R4148 && R4021 = 0 && R4022 = R4148 && R4023 = 0 && R4024 = R4148 && R4025 = 0 && R4026 = R4148 && R4029 = 0 && R4030 = 0 && R4041 = 0 && R4042 = 0 && R4047 = 0 && R4048 = 0 && R4091 = 10 && R4092 = R4148 && R4093 = 10 && R4094 = R4148 && R4095 = 10 && R4096 = R4148 && R4097 = 10 && R4098 = R4148 && R4099 = 10 && R4100 = R4148 && R4101 = 10 && R4102 = R4148 && R4103 = 10 && R4104 = R4148 && R4105 = 10 && R4106 = R4148 && R4107 = 10 && R4108 = R4148 && R4109 = 10 && R4110 = R4148 && R4111 = 10 && R4112 = R4148 && R4113 = 10 && R4114 = R4148 && R4115 = 10 && R4116 = R4148 && R4117 = 10 && R4118 = R4148 && R4119 = 10 && R4120 = R4148 && R4121 = 10 && R4122 = R4148 && R4123 = 10 && R4124 = R4148 && R4125 = 10 && R4126 = R4148 && R4127 = 10 && R4128 = R4148 && R4129 = 10 && R4130 = R4148 && R4131 = 10 && R4132 = R4148 && R4133 = 10 && R4134 = R4148 && R4135 = 10 && R4136 = R4148 && R4137 = 10 && R4138 = R4148 && R4139 = 10 && R4140 = R4148 && R4141 = 10 && R4142 = R4148 && R4143 = 10 && R4144 = R4148 && R4145 = 10 && R4146 = R4148 && R4147 = 10 && R120 + R117 + R154 + R151 != 0 && R136 + R133 + R166 + R163 != 0 && R3560 + R3557 + R3960 + R3957 != 0 && R20 < 1 && R21 < 1 && R24 < 1 && R90 + R89 < 1 && R92 + R91 < 1 && R94 + R93 < 1 && -1*R104 + -1*R102 < 1 && R606 + R605 < 1 && -1*R3559 < R3556 && 0 < R3984 && 9 < R4148 && (R100 + R97 != 0 || ((R98 + R95 != 0 || R99 + R96 + -1*R104 + -1*R102 = 0 || R104 + R102 < 1) && (R98 + R95 = 0 || R104 + R102 < 1))) && (R104 + R102 != 0 || R110 + R107 = 0 || (R108 + R105 = 0 && R109 + R106 = 0)) && (R104 + R102 != 0 || R110 + R107 = 0 || (R113 + R111 = 0 && R114 + R112 = 0)) && (R104 + R102 != 0 || R110 + R107 = 0 || (R118 + R115 = 0 && R119 + R116 = 0)) && (R104 + R102 != 0 || R126 + R123 = 0 || (R124 + R121 = 0 && R125 + R122 = 0)) && (R104 + R102 != 0 || R126 + R123 = 0 || (R129 + R127 = 0 && R130 + R128 = 0)) && (R104 + R102 != 0 || R126 + R123 = 0 || (R134 + R131 = 0 && R135 + R132 = 0)) && (R108 + R105 != 0 || R104 + R102 + -1*R109 + -1*R106 = 0 || R104 + R102 < 1) && (R113 + R111 != 0 || R104 + R102 + -1*R114 + -1*R112 = 0 || R104 + R102 < 1) && (R118 + R115 != 0 || R104 + R102 + -1*R119 + -1*R116 = 0 || R104 + R102 < 1) && (R124 + R121 != 0 || R104 + R102 + -1*R125 + -1*R122 = 0 || R104 + R102 < 1) && (R129 + R127 != 0 || R104 + R102 + -1*R130 + -1*R128 = 0 || R104 + R102 < 1) && (R134 + R131 != 0 || R104 + R102 + -1*R135 + -1*R132 = 0 || R104 + R102 < 1) && (R36 = 0 || (R4027 = 0 && R4028 = 0)) && (R36 = 0 || (R4031 = 0 && R4032 = 0)) && (R36 = 0 || (R4033 = 0 && R4034 = 0)) && (R36 = 0 || (R4035 = 0 && R4036 = 0)) && (R36 = 0 || (R4037 = 0 && R4038 = 0)) && (R36 = 0 || (R4039 = 0 && R4040 = 0)) && (R36 = 0 || (R4043 = 0 && R4044 = 0)) && (R36 = 0 || (R4045 = 0 && R4046 = 0)) && (R38 = 0 || (R4049 = 0 && R4050 = 0)) && (R38 = 0 || (R4051 = 0 && R4052 = 0)) && (R38 = 0 || (R4053 = 0 && R4054 = 0)) && (R38 = 0 || (R4055 = 0 && R4056 = 0)) && (R38 = 0 || (R4057 = 0 && R4058 = 0)) && (R38 = 0 || (R4059 = 0 && R4060 = 0)) && (R38 = 0 || (R4061 = 0 && R4062 = 0)) && (R38 = 0 || (R4063 = 0 && R4064 = 0)) && (R38 = 0 || (R4065 = 0 && R4066 = 0)) && (R38 = 0 || (R4067 = 0 && R4068 = 0)) && (R38 = 0 || (R4069 = 0 && R4070 = 0)) && (R38 = 0 || (R4071 = 0 && R4072 = 0)) && (R38 = 0 || (R4073 = 0 && R4074 = 0)) && (R38 = 0 || (R4075 = 0 && R4076 = 0)) && (R38 = 0 || (R4077 = 0 && R4078 = 0)) && (R38 = 0 || (R4079 = 0 && R4080 = 0)) && (R38 = 0 || (R4081 = 0 && R4082 = 0)) && (R38 = 0 || (R4083 = 0 && R4084 = 0)) && (R38 = 0 || (R4085 = 0 && R4086 = 0)) && (R38 = 0 || (R4087 = 0 && R4088 = 0)) && (R38 = 0 || (R4089 = 0 && R4090 = 0)) && (R100 + R97 = 0 || (R98 + R95 = 0 && R99 + R96 + -1*R104 + -1*R102 = 0)) && (R108 + R105 = 0 || R104 + R102 < 1) && (R113 + R111 = 0 || R104 + R102 < 1) && (R118 + R115 = 0 || R104 + R102 < 1) && (R124 + R121 = 0 || R104 + R102 < 1) && (R129 + R127 = 0 || R104 + R102 < 1) && (R134 + R131 = 0 || R104 + R102 < 1) && (R142 + R139 = 0 || (R140 + R137 = 0 && R141 + R138 = 0)) && (R148 + R145 = 0 || (R146 + R143 = 0 && R147 + R144 = 0)) && (R148 + R145 = 0 || (R152 + R149 = 0 && R153 + R150 = 0)) && (R160 + R157 = 0 || (R158 + R155 = 0 && R159 + R156 = 0)) && (R160 + R157 = 0 || (R164 + R161 = 0 && R165 + R162 = 0)) && (R3566 + R3563 = 0 || (R3564 + R3561 = 0 && R3565 + R3562 = 0)) && (R3566 + R3563 = 0 || (R3958 + R3955 = 0 && R3959 + R3956 = 0));
// End of Parikh automata intersection problem
