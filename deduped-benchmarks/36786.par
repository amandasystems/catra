// Parikh automata intersection problem, generated by OSTRICH+
counter int R15, R16, R25, R26, R27, R28, R29, R3, R30, R3741, R3742, R3743, R3744, R3745, R3746, R4, R4783, R4784, R4785, R4786, R4787, R4788, R4789, R4790, R4791, R4792, R4793, R4794, R4795, R4796, R4797, R4798, R4799, R4800, R4801, R4802, R4803, R4804, R4805, R4806, R4807, R4808, R4809, R4810, R4811, R4812, R4813, R4814, R4815, R4816, R4817, R4818, R4819, R4820, R4821, R4822, R4823, R4824, R4825, R4826, R4827, R4828, R4829, R4830, R4831, R4832, R4833, R4834, R4835, R4836, R4837, R4838, R4839, R4840, R4841, R4842, R4843, R4844, R4845, R4846, R4847, R4848, R4849, R4850, R4851, R4852, R4853, R4854, R4855, R4856, R4857, R4858, R4859, R4860, R4861, R4862, R4863, R4864, R4865, R4866, R4867, R4868, R4869, R4870, R4871, R4872, R4873, R4874, R4875, R4876, R4877, R4878, R4879, R4880, R4881, R4882, R4883, R4884, R4885, R4886, R4887, R4888, R4889, R4890, R4891, R4892, R4893, R4894, R4895, R4896, R4897, R4898, R4899, R4900, R4901, R4902, R4903, R4904, R4905, R4906, R4907, R4908, R4909, R4910, R4911, R4912, R4913, R4914, R4915, R4916, R4917, R4918, R4919, R4920, R4921, R4922, R4923, R4924, R4925, R4926, R4927, R4928, R4929, R4930, R4931, R4932, R4933, R4934, R4935, R4936, R4937, R4938, R4939, R4940, R4941, R4942, R4943, R4944, R4945, R4946, R4947, R4948, R4949, R4950, R4951, R4952, R4953, R4954, R4955, R4956, R4957, R4958, R4959, R4960, R4961, R4962, R4963, R4964, R4965, R4966, R4967, R4968, R4969, R4970, R4971, R4972, R4973, R4974, R4975, R4976, R4977, R4978, R4979, R4980, R4981, R4982, R4983, R4984, R4985, R4986, R4987, R4988, R4989, R4990, R4991, R4992, R4993, R4994, R5, R565, R566, R567, R568, R569, R570, R571, R572, R573, R574, R575, R576, R577, R578, R579, R580, R581, R582, R583, R584, R585, R586, R587, R588, R589, R590, R591, R592, R593, R594, R595, R596, R597, R598, R599, R600, R601, R602, R603, R604, R605, R606, R607, R608, R609, R610, R611, R612, R613, R614, R615, R616, R617, R618, R619, R620, R621, R622, R623, R624, R625, R626;
synchronised {  // Automata constraining P83
automaton P83_0 {
  init s0;
  s0 -> s1 [117, 117];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 43] { R4890 += 1 };
  s0 -> s0 [0, 65535] { R4889 += 1, R4890 += 1 };
  s0 -> s1 [45, 45] { R4890 += 1 };
  s0 -> s2 [46, 46] { R4890 += 1 };
  s0 -> s1 [48, 62] { R4890 += 1 };
  s0 -> s3 [65, 65] { R4890 += 1 };
  s0 -> s1 [66, 65535] { R4890 += 1 };
  s1 -> s1 [0, 43] { R4890 += 1 };
  s1 -> s1 [45, 45] { R4890 += 1 };
  s1 -> s2 [46, 46] { R4890 += 1 };
  s1 -> s1 [48, 62] { R4890 += 1 };
  s1 -> s3 [65, 65] { R4890 += 1 };
  s1 -> s1 [66, 65535] { R4890 += 1 };
  s2 -> s1 [0, 43] { R4890 += 1 };
  s2 -> s1 [45, 45] { R4890 += 1 };
  s2 -> s2 [46, 46] { R4890 += 1 };
  s2 -> s1 [48, 62] { R4890 += 1 };
  s2 -> s3 [65, 65] { R4890 += 1 };
  s2 -> s1 [66, 114] { R4890 += 1 };
  s2 -> s8 [115, 115] { R4890 += 1 };
  s2 -> s1 [116, 65535] { R4890 += 1 };
  s3 -> s3 [0, 43] { R4890 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R4890 += 1 };
  s3 -> s4 [46, 46] { R4890 += 1 };
  s3 -> s3 [48, 62] { R4890 += 1 };
  s3 -> s3 [65, 65535] { R4890 += 1 };
  s4 -> s3 [0, 43] { R4890 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R4890 += 1 };
  s4 -> s4 [46, 46] { R4890 += 1 };
  s4 -> s3 [48, 62] { R4890 += 1 };
  s4 -> s3 [65, 114] { R4890 += 1 };
  s4 -> s5 [115, 115] { R4890 += 1 };
  s4 -> s3 [116, 65535] { R4890 += 1 };
  s5 -> s3 [0, 43] { R4890 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R4890 += 1 };
  s5 -> s4 [46, 46] { R4890 += 1 };
  s5 -> s3 [48, 62] { R4890 += 1 };
  s5 -> s3 [65, 110] { R4890 += 1 };
  s5 -> s6 [111, 111] { R4890 += 1 };
  s5 -> s3 [112, 65535] { R4890 += 1 };
  s6 -> s3 [0, 43] { R4890 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R4890 += 1 };
  s6 -> s4 [46, 46] { R4890 += 1 };
  s6 -> s3 [48, 62] { R4890 += 1 };
  s6 -> s3 [65, 98] { R4890 += 1 };
  s6 -> s7 [99, 99] { R4890 += 1 };
  s6 -> s3 [100, 65535] { R4890 += 1 };
  s7 -> s3 [0, 43] { R4890 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R4890 += 1 };
  s7 -> s4 [46, 46] { R4890 += 1 };
  s7 -> s3 [48, 62] { R4890 += 1 };
  s7 -> s3 [65, 106] { R4890 += 1 };
  s7 -> s3 [108, 65535] { R4890 += 1 };
  s8 -> s1 [0, 43] { R4890 += 1 };
  s8 -> s1 [45, 45] { R4890 += 1 };
  s8 -> s2 [46, 46] { R4890 += 1 };
  s8 -> s1 [48, 62] { R4890 += 1 };
  s8 -> s3 [65, 65] { R4890 += 1 };
  s8 -> s1 [66, 110] { R4890 += 1 };
  s8 -> s9 [111, 111] { R4890 += 1 };
  s8 -> s1 [112, 65535] { R4890 += 1 };
  s9 -> s1 [0, 43] { R4890 += 1 };
  s9 -> s1 [45, 45] { R4890 += 1 };
  s9 -> s2 [46, 46] { R4890 += 1 };
  s9 -> s1 [48, 62] { R4890 += 1 };
  s9 -> s3 [65, 65] { R4890 += 1 };
  s9 -> s1 [66, 98] { R4890 += 1 };
  s9 -> s10 [99, 99] { R4890 += 1 };
  s9 -> s1 [100, 65535] { R4890 += 1 };
  s10 -> s1 [0, 43] { R4890 += 1 };
  s10 -> s1 [45, 45] { R4890 += 1 };
  s10 -> s2 [46, 46] { R4890 += 1 };
  s10 -> s1 [48, 62] { R4890 += 1 };
  s10 -> s3 [65, 65] { R4890 += 1 };
  s10 -> s1 [66, 106] { R4890 += 1 };
  s10 -> s1 [108, 65535] { R4890 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R4892 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R4891 += 1, R4892 += 1 };
  s1 -> s1 [0, 65535] { R4892 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 57] { R4894 += 1 };
  s0 -> s2 [0, 65535] { R4894 += 1, R15 += 1 };
  s0 -> s0 [0, 65535] { R4893 += 1, R4894 += 1 };
  s0 -> s3 [58, 58] { R4894 += 1 };
  s0 -> s1 [59, 65535] { R4894 += 1 };
  s1 -> s1 [0, 57] { R4894 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R4894 += 1 };
  s1 -> s1 [59, 65535] { R4894 += 1 };
  s2 -> s1 [0, 57] { R4894 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4894 += 1, R15 += 1 };
  s2 -> s3 [58, 58] { R4894 += 1 };
  s2 -> s1 [59, 65535] { R4894 += 1 };
  s3 -> s3 [0, 65535] { R4894 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 64] { R4896 += 1 };
  s0 -> s2 [0, 65535] { R4896 += 1, R16 += 1 };
  s0 -> s0 [0, 65535] { R4895 += 1, R4896 += 1 };
  s0 -> s3 [65, 65] { R4896 += 1 };
  s0 -> s1 [66, 65535] { R4896 += 1 };
  s1 -> s1 [0, 64] { R4896 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R4896 += 1 };
  s1 -> s1 [66, 65535] { R4896 += 1 };
  s2 -> s1 [0, 64] { R4896 += 1 };
  s2 -> s2 [0, 65535] { R4896 += 1, R16 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [65, 65] { R4896 += 1 };
  s2 -> s1 [66, 65535] { R4896 += 1 };
  s3 -> s3 [0, 65535] { R4896 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 90] { R4898 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R4897 += 1, R4898 += 1 };
  s0 -> s2 [0, 65535] { R4898 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [91, 91] { R4898 += 1, R28 += 1 };
  s0 -> s1 [92, 65535] { R4898 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R4898 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4898 += 1 };
  s2 -> s1 [0, 90] { R4898 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R4898 += 1, R27 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [91, 91] { R4898 += 1, R28 += 1 };
  s2 -> s1 [92, 65535] { R4898 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R4898 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4898 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s0 [0, 65535] { R4899 += 1, R4900 += 1 };
  s0 -> s1 [0, 65535] { R4900 += 1, R29 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R4900 += 1, R30 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R4900 += 1, R29 += 1, R30 += 1 };
  s1 -> s2 [0, 65535] { R4900 += 1, R30 += 1, R5 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4900 += 1 };
  s2 -> s2 [0, 65535] { R4900 += 1, R30 += 1, R5 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4900 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 64] { R4902 += 1, R4796 += 1 };
  s0 -> s2 [0, 65535] { R4902 += 1, R4795 += 1, R4796 += 1 };
  s0 -> s0 [0, 65535] { R4901 += 1, R4902 += 1 };
  s0 -> s1 [66, 65535] { R4902 += 1, R4796 += 1 };
  s1 -> s1 [0, 64] { R4902 += 1, R4796 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4902 += 1 };
  s1 -> s1 [66, 65535] { R4902 += 1, R4796 += 1 };
  s2 -> s1 [0, 64] { R4902 += 1, R4796 += 1 };
  s2 -> s2 [0, 65535] { R4902 += 1, R4795 += 1, R4796 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [66, 65535] { R4902 += 1, R4796 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R4904 += 1, R4798 += 1, R25 += 1 };
  s0 -> s2 [0, 65535] { R4904 += 1, R4797 += 1, R4798 += 1 };
  s0 -> s0 [0, 65535] { R4903 += 1, R4904 += 1 };
  s1 -> s4 [0, 65535] { R4904 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4904 += 1, R4798 += 1, R25 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4904 += 1, R4798 += 1, R25 += 1 };
  s2 -> s2 [0, 65535] { R4904 += 1, R4797 += 1, R4798 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4904 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65] { R4906 += 1, R4800 += 1 };
  s0 -> s2 [0, 65535] { R4906 += 1, R4799 += 1, R4800 += 1 };
  s0 -> s0 [0, 65535] { R4905 += 1, R4906 += 1 };
  s0 -> s1 [80, 65535] { R4906 += 1, R4800 += 1 };
  s1 -> s1 [0, 65] { R4906 += 1, R4800 += 1 };
  s1 -> s1 [0, 65535] { R4906 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [80, 65535] { R4906 += 1, R4800 += 1 };
  s2 -> s1 [0, 65] { R4906 += 1, R4800 += 1 };
  s2 -> s2 [0, 65535] { R4906 += 1, R4799 += 1, R4800 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [80, 65535] { R4906 += 1, R4800 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R4908 += 1, R4802 += 1, R566 += 1 };
  s0 -> s0 [0, 65535] { R4907 += 1, R4908 += 1 };
  s0 -> s2 [0, 65535] { R4908 += 1, R4801 += 1, R4802 += 1 };
  s1 -> s4 [0, 65535] { R4908 += 1 };
  s1 -> s1 [0, 65535] { R4908 += 1, R4802 += 1, R566 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4908 += 1, R4802 += 1, R566 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4908 += 1, R4801 += 1, R4802 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4908 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 84] { R4910 += 1, R4804 += 1 };
  s0 -> s2 [0, 65535] { R4910 += 1, R4803 += 1, R4804 += 1 };
  s0 -> s3 [0, 65535] { R4910 += 1, R4804 += 1, R568 += 1 };
  s0 -> s0 [0, 65535] { R4909 += 1, R4910 += 1 };
  s0 -> s1 [86, 65535] { R4910 += 1, R4804 += 1 };
  s1 -> s1 [0, 84] { R4910 += 1, R4804 += 1 };
  s1 -> s1 [0, 65535] { R4910 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [86, 65535] { R4910 += 1, R4804 += 1 };
  s2 -> s1 [0, 84] { R4910 += 1, R4804 += 1 };
  s2 -> s2 [0, 65535] { R4910 += 1, R4803 += 1, R4804 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4910 += 1, R4804 += 1, R568 += 1 };
  s2 -> s1 [86, 65535] { R4910 += 1, R4804 += 1 };
  s3 -> s1 [0, 84] { R4910 += 1, R4804 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4910 += 1, R4804 += 1, R568 += 1 };
  s3 -> s5 [0, 65535] { R4910 += 1 };
  s3 -> s1 [86, 65535] { R4910 += 1, R4804 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4910 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 82] { R4912 += 1, R4806 += 1 };
  s0 -> s2 [0, 65535] { R4912 += 1, R4805 += 1, R4806 += 1 };
  s0 -> s3 [0, 65535] { R4912 += 1, R4806 += 1, R570 += 1 };
  s0 -> s0 [0, 65535] { R4911 += 1, R4912 += 1 };
  s0 -> s1 [84, 65535] { R4912 += 1, R4806 += 1 };
  s1 -> s1 [0, 82] { R4912 += 1, R4806 += 1 };
  s1 -> s1 [0, 65535] { R4912 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [84, 65535] { R4912 += 1, R4806 += 1 };
  s2 -> s1 [0, 82] { R4912 += 1, R4806 += 1 };
  s2 -> s2 [0, 65535] { R4912 += 1, R4805 += 1, R4806 += 1 };
  s2 -> s3 [0, 65535] { R4912 += 1, R4806 += 1, R570 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [84, 65535] { R4912 += 1, R4806 += 1 };
  s3 -> s1 [0, 82] { R4912 += 1, R4806 += 1 };
  s3 -> s4 [0, 65535] { R4912 += 1 };
  s3 -> s3 [0, 65535] { R4912 += 1, R4806 += 1, R570 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [84, 65535] { R4912 += 1, R4806 += 1 };
  s4 -> s4 [0, 65535] { R4912 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 79] { R4914 += 1, R4808 += 1 };
  s0 -> s0 [0, 65535] { R4913 += 1, R4914 += 1 };
  s0 -> s2 [0, 65535] { R4914 += 1, R4807 += 1, R4808 += 1 };
  s0 -> s3 [0, 65535] { R4914 += 1, R4808 += 1, R572 += 1 };
  s0 -> s1 [81, 65535] { R4914 += 1, R4808 += 1 };
  s1 -> s1 [0, 79] { R4914 += 1, R4808 += 1 };
  s1 -> s1 [0, 65535] { R4914 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [81, 65535] { R4914 += 1, R4808 += 1 };
  s2 -> s1 [0, 79] { R4914 += 1, R4808 += 1 };
  s2 -> s2 [0, 65535] { R4914 += 1, R4807 += 1, R4808 += 1 };
  s2 -> s3 [0, 65535] { R4914 += 1, R4808 += 1, R572 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [81, 65535] { R4914 += 1, R4808 += 1 };
  s3 -> s1 [0, 79] { R4914 += 1, R4808 += 1 };
  s3 -> s4 [0, 65535] { R4914 += 1 };
  s3 -> s3 [0, 65535] { R4914 += 1, R4808 += 1, R572 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [81, 65535] { R4914 += 1, R4808 += 1 };
  s4 -> s4 [0, 65535] { R4914 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s0 [0, 65535] { R4915 += 1, R4916 += 1 };
  s0 -> s1 [0, 65535] { R4916 += 1, R4809 += 1, R4810 += 1 };
  s0 -> s2 [0, 65535] { R4916 += 1, R4810 += 1, R576 += 1, R577 += 1 };
  s0 -> s3 [0, 65535] { R4916 += 1, R4810 += 1, R577 += 1, R578 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4916 += 1, R4809 += 1, R4810 += 1 };
  s1 -> s2 [0, 65535] { R4916 += 1, R4810 += 1, R576 += 1, R577 += 1 };
  s1 -> s3 [0, 65535] { R4916 += 1, R4810 += 1, R577 += 1, R578 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R4916 += 1 };
  s2 -> s2 [0, 65535] { R4916 += 1, R4810 += 1, R576 += 1, R577 += 1 };
  s2 -> s3 [0, 65535] { R4916 += 1, R4810 += 1, R577 += 1, R578 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4916 += 1, R4810 += 1 };
  s3 -> s6 [0, 65535] { R4916 += 1 };
  s3 -> s3 [0, 65535] { R4916 += 1, R4810 += 1, R577 += 1, R578 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4916 += 1, R4810 += 1 };
  s5 -> s6 [0, 65535] { R4916 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4916 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 65535] { R4918 += 1, R4812 += 1 };
  s0 -> s0 [0, 65535] { R4917 += 1, R4918 += 1 };
  s0 -> s2 [0, 65535] { R4918 += 1, R4811 += 1, R4812 += 1 };
  s1 -> s1 [0, 65535] { R4918 += 1, R4812 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4918 += 1 };
  s2 -> s1 [0, 65535] { R4918 += 1, R4812 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4918 += 1, R4811 += 1, R4812 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4918 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R4920 += 1, R4813 += 1, R4814 += 1 };
  s0 -> s2 [0, 65535] { R4920 += 1, R4814 += 1, R583 += 1, R584 += 1 };
  s0 -> s0 [0, 65535] { R4919 += 1, R4920 += 1 };
  s0 -> s3 [0, 65535] { R4920 += 1, R4814 += 1, R582 += 1, R583 += 1 };
  s1 -> s1 [0, 65535] { R4920 += 1, R4813 += 1, R4814 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R4920 += 1, R4814 += 1, R583 += 1, R584 += 1 };
  s1 -> s3 [0, 65535] { R4920 += 1, R4814 += 1, R582 += 1, R583 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4920 += 1, R4814 += 1, R583 += 1, R584 += 1 };
  s2 -> s6 [0, 65535] { R4920 += 1, R4814 += 1 };
  s2 -> s5 [0, 65535] { R4920 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4920 += 1, R4814 += 1, R583 += 1, R584 += 1 };
  s3 -> s3 [0, 65535] { R4920 += 1, R4814 += 1, R582 += 1, R583 += 1 };
  s3 -> s5 [0, 65535] { R4920 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4920 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4920 += 1, R4814 += 1 };
  s6 -> s5 [0, 65535] { R4920 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 107] { R4922 += 1, R4816 += 1, R588 += 1 };
  s0 -> s0 [0, 65535] { R4921 += 1, R4922 += 1 };
  s0 -> s2 [0, 65535] { R4922 += 1, R4816 += 1, R587 += 1, R588 += 1 };
  s0 -> s3 [0, 65535] { R4922 += 1, R4815 += 1, R4816 += 1 };
  s0 -> s4 [108, 108] { R4922 += 1, R4816 += 1, R588 += 1 };
  s0 -> s1 [109, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s15 [0, 65535] { R4922 += 1, R4816 += 1 };
  s1 -> s1 [0, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s1 -> s6 [0, 65535] { R4922 += 1 };
  s2 -> s1 [0, 107] { R4922 += 1, R4816 += 1, R588 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R4922 += 1 };
  s2 -> s2 [0, 65535] { R4922 += 1, R4816 += 1, R587 += 1, R588 += 1 };
  s2 -> s4 [108, 108] { R4922 += 1, R4816 += 1, R588 += 1 };
  s2 -> s1 [109, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s3 -> s1 [0, 107] { R4922 += 1, R4816 += 1, R588 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R4922 += 1, R4816 += 1, R587 += 1, R588 += 1 };
  s3 -> s3 [0, 65535] { R4922 += 1, R4815 += 1, R4816 += 1 };
  s3 -> s4 [108, 108] { R4922 += 1, R4816 += 1, R588 += 1 };
  s3 -> s1 [109, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s4 -> s1 [0, 110] { R4922 += 1, R4816 += 1, R588 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4922 += 1, R4816 += 1 };
  s4 -> s6 [0, 65535] { R4922 += 1 };
  s4 -> s7 [111, 111] { R4922 += 1, R4816 += 1, R588 += 1 };
  s4 -> s1 [112, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4922 += 1 };
  s7 -> s1 [0, 98] { R4922 += 1, R4816 += 1, R588 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4922 += 1 };
  s7 -> s7 [0, 65535] { R4922 += 1, R4816 += 1 };
  s7 -> s8 [99, 99] { R4922 += 1, R4816 += 1, R588 += 1 };
  s7 -> s1 [100, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s8 -> s1 [0, 96] { R4922 += 1, R4816 += 1, R588 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R4922 += 1 };
  s8 -> s8 [0, 65535] { R4922 += 1, R4816 += 1 };
  s8 -> s9 [97, 97] { R4922 += 1, R4816 += 1, R588 += 1 };
  s8 -> s1 [98, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s9 -> s1 [0, 107] { R4922 += 1, R4816 += 1, R588 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s9 [0, 65535] { R4922 += 1, R4816 += 1 };
  s9 -> s6 [0, 65535] { R4922 += 1 };
  s9 -> s10 [108, 108] { R4922 += 1, R4816 += 1, R588 += 1 };
  s9 -> s1 [109, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s10 -> s1 [0, 103] { R4922 += 1, R4816 += 1, R588 += 1 };
  s10 -> s5 [0, 65535];
  s10 -> s6 [0, 65535] { R4922 += 1 };
  s10 -> s10 [0, 65535] { R4922 += 1, R4816 += 1 };
  s10 -> s11 [104, 104] { R4922 += 1, R4816 += 1, R588 += 1 };
  s10 -> s1 [105, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s11 -> s1 [0, 110] { R4922 += 1, R4816 += 1, R588 += 1 };
  s11 -> s5 [0, 65535];
  s11 -> s11 [0, 65535] { R4922 += 1, R4816 += 1 };
  s11 -> s6 [0, 65535] { R4922 += 1 };
  s11 -> s12 [111, 111] { R4922 += 1, R4816 += 1, R588 += 1 };
  s11 -> s1 [112, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s12 -> s1 [0, 114] { R4922 += 1, R4816 += 1, R588 += 1 };
  s12 -> s12 [0, 65535] { R4922 += 1, R4816 += 1 };
  s12 -> s5 [0, 65535];
  s12 -> s6 [0, 65535] { R4922 += 1 };
  s12 -> s13 [115, 115] { R4922 += 1, R4816 += 1, R588 += 1 };
  s12 -> s1 [116, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s13 -> s1 [0, 115] { R4922 += 1, R4816 += 1, R588 += 1 };
  s13 -> s5 [0, 65535];
  s13 -> s13 [0, 65535] { R4922 += 1, R4816 += 1 };
  s13 -> s6 [0, 65535] { R4922 += 1 };
  s13 -> s14 [116, 116] { R4922 += 1, R4816 += 1, R588 += 1 };
  s13 -> s1 [117, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s14 -> s1 [0, 65535] { R4922 += 1, R4816 += 1, R588 += 1 };
  s15 -> s5 [0, 65535];
  s15 -> s15 [0, 65535] { R4922 += 1, R4816 += 1 };
  s15 -> s6 [0, 65535] { R4922 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s15, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R4924 += 1, R4817 += 1, R4818 += 1 };
  s0 -> s2 [0, 65535] { R4924 += 1, R4818 += 1, R593 += 1, R594 += 1 };
  s0 -> s0 [0, 65535] { R4923 += 1, R4924 += 1 };
  s0 -> s3 [0, 65535] { R4924 += 1, R4818 += 1, R592 += 1, R593 += 1 };
  s1 -> s1 [0, 65535] { R4924 += 1, R4817 += 1, R4818 += 1 };
  s1 -> s2 [0, 65535] { R4924 += 1, R4818 += 1, R593 += 1, R594 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R4924 += 1, R4818 += 1, R592 += 1, R593 += 1 };
  s2 -> s6 [0, 65535] { R4924 += 1, R4818 += 1 };
  s2 -> s4 [0, 65535] { R4924 += 1 };
  s2 -> s2 [0, 65535] { R4924 += 1, R4818 += 1, R593 += 1, R594 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4924 += 1 };
  s3 -> s2 [0, 65535] { R4924 += 1, R4818 += 1, R593 += 1, R594 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4924 += 1, R4818 += 1, R592 += 1, R593 += 1 };
  s4 -> s4 [0, 65535] { R4924 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4924 += 1, R4818 += 1 };
  s6 -> s4 [0, 65535] { R4924 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 79] { R4926 += 1, R4820 += 1, R598 += 1 };
  s0 -> s0 [0, 65535] { R4925 += 1, R4926 += 1 };
  s0 -> s2 [0, 65535] { R4926 += 1, R4819 += 1, R4820 += 1 };
  s0 -> s3 [0, 65535] { R4926 += 1, R4820 += 1, R597 += 1, R598 += 1 };
  s0 -> s1 [81, 65535] { R4926 += 1, R4820 += 1, R598 += 1 };
  s1 -> s1 [0, 79] { R4926 += 1, R4820 += 1, R598 += 1 };
  s1 -> s1 [0, 65535] { R4926 += 1, R4820 += 1 };
  s1 -> s4 [0, 65535] { R4926 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [81, 65535] { R4926 += 1, R4820 += 1, R598 += 1 };
  s2 -> s1 [0, 79] { R4926 += 1, R4820 += 1, R598 += 1 };
  s2 -> s2 [0, 65535] { R4926 += 1, R4819 += 1, R4820 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4926 += 1, R4820 += 1, R597 += 1, R598 += 1 };
  s2 -> s1 [81, 65535] { R4926 += 1, R4820 += 1, R598 += 1 };
  s3 -> s1 [0, 79] { R4926 += 1, R4820 += 1, R598 += 1 };
  s3 -> s4 [0, 65535] { R4926 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4926 += 1, R4820 += 1, R597 += 1, R598 += 1 };
  s3 -> s1 [81, 65535] { R4926 += 1, R4820 += 1, R598 += 1 };
  s4 -> s4 [0, 65535] { R4926 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R4928 += 1, R4822 += 1, R602 += 1, R603 += 1 };
  s0 -> s2 [0, 65535] { R4928 += 1, R4821 += 1, R4822 += 1 };
  s0 -> s0 [0, 65535] { R4927 += 1, R4928 += 1 };
  s0 -> s3 [0, 65535] { R4928 += 1, R4822 += 1, R603 += 1, R604 += 1 };
  s1 -> s1 [0, 65535] { R4928 += 1, R4822 += 1, R602 += 1, R603 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4928 += 1 };
  s1 -> s3 [0, 65535] { R4928 += 1, R4822 += 1, R603 += 1, R604 += 1 };
  s2 -> s1 [0, 65535] { R4928 += 1, R4822 += 1, R602 += 1, R603 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4928 += 1, R4821 += 1, R4822 += 1 };
  s2 -> s3 [0, 65535] { R4928 += 1, R4822 += 1, R603 += 1, R604 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4928 += 1 };
  s3 -> s6 [0, 65535] { R4928 += 1, R4822 += 1 };
  s3 -> s3 [0, 65535] { R4928 += 1, R4822 += 1, R603 += 1, R604 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4928 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4928 += 1 };
  s6 -> s6 [0, 65535] { R4928 += 1, R4822 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s0 -> s2 [0, 65535] { R4930 += 1, R4823 += 1, R4824 += 1 };
  s0 -> s3 [0, 65535] { R4930 += 1, R4824 += 1, R607 += 1, R608 += 1 };
  s0 -> s0 [0, 65535] { R4929 += 1, R4930 += 1 };
  s0 -> s1 [91, 107] { R4930 += 1, R4824 += 1, R608 += 1 };
  s0 -> s4 [108, 108] { R4930 += 1, R4824 += 1, R608 += 1 };
  s0 -> s1 [109, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s1 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s1 -> s5 [0, 65535] { R4930 += 1 };
  s1 -> s1 [0, 65535] { R4930 += 1, R4824 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [91, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s2 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s2 -> s2 [0, 65535] { R4930 += 1, R4823 += 1, R4824 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R4930 += 1, R4824 += 1, R607 += 1, R608 += 1 };
  s2 -> s1 [91, 107] { R4930 += 1, R4824 += 1, R608 += 1 };
  s2 -> s4 [108, 108] { R4930 += 1, R4824 += 1, R608 += 1 };
  s2 -> s1 [109, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s3 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s3 -> s5 [0, 65535] { R4930 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4930 += 1, R4824 += 1, R607 += 1, R608 += 1 };
  s3 -> s1 [91, 107] { R4930 += 1, R4824 += 1, R608 += 1 };
  s3 -> s4 [108, 108] { R4930 += 1, R4824 += 1, R608 += 1 };
  s3 -> s1 [109, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s4 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s4 -> s5 [0, 65535] { R4930 += 1 };
  s4 -> s4 [0, 65535] { R4930 += 1, R4824 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [91, 110] { R4930 += 1, R4824 += 1, R608 += 1 };
  s4 -> s7 [111, 111] { R4930 += 1, R4824 += 1, R608 += 1 };
  s4 -> s1 [112, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s5 -> s5 [0, 65535] { R4930 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s7 -> s5 [0, 65535] { R4930 += 1 };
  s7 -> s7 [0, 65535] { R4930 += 1, R4824 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s1 [91, 98] { R4930 += 1, R4824 += 1, R608 += 1 };
  s7 -> s8 [99, 99] { R4930 += 1, R4824 += 1, R608 += 1 };
  s7 -> s1 [100, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s8 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s8 -> s5 [0, 65535] { R4930 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4930 += 1, R4824 += 1 };
  s8 -> s1 [91, 96] { R4930 += 1, R4824 += 1, R608 += 1 };
  s8 -> s9 [97, 97] { R4930 += 1, R4824 += 1, R608 += 1 };
  s8 -> s1 [98, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s9 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s9 -> s5 [0, 65535] { R4930 += 1 };
  s9 -> s9 [0, 65535] { R4930 += 1, R4824 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s1 [91, 107] { R4930 += 1, R4824 += 1, R608 += 1 };
  s9 -> s10 [108, 108] { R4930 += 1, R4824 += 1, R608 += 1 };
  s9 -> s1 [109, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s10 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s10 -> s5 [0, 65535] { R4930 += 1 };
  s10 -> s10 [0, 65535] { R4930 += 1, R4824 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s1 [91, 103] { R4930 += 1, R4824 += 1, R608 += 1 };
  s10 -> s11 [104, 104] { R4930 += 1, R4824 += 1, R608 += 1 };
  s10 -> s1 [105, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s11 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s11 -> s5 [0, 65535] { R4930 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s11 [0, 65535] { R4930 += 1, R4824 += 1 };
  s11 -> s1 [91, 110] { R4930 += 1, R4824 += 1, R608 += 1 };
  s11 -> s12 [111, 111] { R4930 += 1, R4824 += 1, R608 += 1 };
  s11 -> s1 [112, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s12 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s12 -> s5 [0, 65535] { R4930 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s12 [0, 65535] { R4930 += 1, R4824 += 1 };
  s12 -> s1 [91, 114] { R4930 += 1, R4824 += 1, R608 += 1 };
  s12 -> s13 [115, 115] { R4930 += 1, R4824 += 1, R608 += 1 };
  s12 -> s1 [116, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s13 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s13 -> s5 [0, 65535] { R4930 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s13 [0, 65535] { R4930 += 1, R4824 += 1 };
  s13 -> s1 [91, 115] { R4930 += 1, R4824 += 1, R608 += 1 };
  s13 -> s14 [116, 116] { R4930 += 1, R4824 += 1, R608 += 1 };
  s13 -> s1 [117, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  s14 -> s1 [0, 80] { R4930 += 1, R4824 += 1, R608 += 1 };
  s14 -> s1 [91, 65535] { R4930 += 1, R4824 += 1, R608 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4932 += 1, R4826 += 1, R613 += 1, R614 += 1 };
  s0 -> s2 [0, 65535] { R4932 += 1, R4826 += 1, R612 += 1, R613 += 1 };
  s0 -> s3 [0, 65535] { R4932 += 1, R4825 += 1, R4826 += 1 };
  s0 -> s0 [0, 65535] { R4931 += 1, R4932 += 1 };
  s1 -> s1 [0, 65535] { R4932 += 1, R4826 += 1, R613 += 1, R614 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4932 += 1 };
  s1 -> s6 [0, 65535] { R4932 += 1, R4826 += 1 };
  s2 -> s1 [0, 65535] { R4932 += 1, R4826 += 1, R613 += 1, R614 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4932 += 1, R4826 += 1, R612 += 1, R613 += 1 };
  s2 -> s5 [0, 65535] { R4932 += 1 };
  s3 -> s1 [0, 65535] { R4932 += 1, R4826 += 1, R613 += 1, R614 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4932 += 1, R4826 += 1, R612 += 1, R613 += 1 };
  s3 -> s3 [0, 65535] { R4932 += 1, R4825 += 1, R4826 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4932 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4932 += 1 };
  s6 -> s6 [0, 65535] { R4932 += 1, R4826 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s0 [0, 65535] { R4933 += 1, R4934 += 1 };
  s0 -> s1 [0, 65535] { R4934 += 1, R4827 += 1, R4828 += 1 };
  s0 -> s2 [0, 65535] { R4934 += 1, R4828 += 1, R619 += 1, R620 += 1 };
  s0 -> s3 [0, 65535] { R4934 += 1, R4828 += 1, R618 += 1, R619 += 1 };
  s1 -> s1 [0, 65535] { R4934 += 1, R4827 += 1, R4828 += 1 };
  s1 -> s2 [0, 65535] { R4934 += 1, R4828 += 1, R619 += 1, R620 += 1 };
  s1 -> s3 [0, 65535] { R4934 += 1, R4828 += 1, R618 += 1, R619 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R4934 += 1 };
  s2 -> s2 [0, 65535] { R4934 += 1, R4828 += 1, R619 += 1, R620 += 1 };
  s2 -> s6 [0, 65535] { R4934 += 1, R4828 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4934 += 1 };
  s3 -> s2 [0, 65535] { R4934 += 1, R4828 += 1, R619 += 1, R620 += 1 };
  s3 -> s3 [0, 65535] { R4934 += 1, R4828 += 1, R618 += 1, R619 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4934 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R4934 += 1 };
  s6 -> s6 [0, 65535] { R4934 += 1, R4828 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 65535] { R4936 += 1, R4829 += 1, R4830 += 1 };
  s0 -> s0 [0, 65535] { R4935 += 1, R4936 += 1 };
  s0 -> s2 [0, 65535] { R4936 += 1, R4830 += 1 };
  s1 -> s1 [0, 65535] { R4936 += 1, R4829 += 1, R4830 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R4936 += 1, R4830 += 1 };
  s2 -> s3 [0, 65535] { R4936 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4936 += 1, R4830 += 1 };
  s3 -> s3 [0, 65535] { R4936 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 65535] { R4938 += 1, R4831 += 1, R4832 += 1 };
  s0 -> s0 [0, 65535] { R4937 += 1, R4938 += 1 };
  s0 -> s2 [0, 65535] { R4938 += 1, R4832 += 1, R624 += 1, R625 += 1 };
  s0 -> s3 [0, 65535] { R4938 += 1, R4832 += 1, R625 += 1, R626 += 1 };
  s1 -> s1 [0, 65535] { R4938 += 1, R4831 += 1, R4832 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R4938 += 1, R4832 += 1, R624 += 1, R625 += 1 };
  s1 -> s3 [0, 65535] { R4938 += 1, R4832 += 1, R625 += 1, R626 += 1 };
  s2 -> s4 [0, 65535] { R4938 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4938 += 1, R4832 += 1, R624 += 1, R625 += 1 };
  s2 -> s3 [0, 65535] { R4938 += 1, R4832 += 1, R625 += 1, R626 += 1 };
  s3 -> s4 [0, 65535] { R4938 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4938 += 1, R4832 += 1 };
  s3 -> s3 [0, 65535] { R4938 += 1, R4832 += 1, R625 += 1, R626 += 1 };
  s4 -> s4 [0, 65535] { R4938 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R4938 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4938 += 1, R4832 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 65535] { R4940 += 1, R4834 += 1 };
  s0 -> s2 [0, 65535] { R4940 += 1, R4833 += 1, R4834 += 1 };
  s0 -> s0 [0, 65535] { R4939 += 1, R4940 += 1 };
  s1 -> s1 [0, 65535] { R4940 += 1, R4834 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4940 += 1 };
  s2 -> s1 [0, 65535] { R4940 += 1, R4834 += 1 };
  s2 -> s2 [0, 65535] { R4940 += 1, R4833 += 1, R4834 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4940 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 82] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s0 -> s0 [0, 65535] { R4941 += 1, R4942 += 1 };
  s0 -> s2 [0, 65535] { R4942 += 1, R4835 += 1, R4836 += 1 };
  s0 -> s1 [0, 65535] { R4942 += 1, R4836 += 1 };
  s0 -> s3 [83, 83] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s0 -> s4 [83, 83] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s0 -> s1 [84, 65535] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s1 -> s1 [0, 82] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s1 -> s5 [0, 65535] { R4942 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4942 += 1, R4836 += 1 };
  s1 -> s3 [83, 83] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s1 -> s4 [83, 83] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s1 -> s1 [84, 65535] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s2 -> s1 [0, 82] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4942 += 1, R4835 += 1, R4836 += 1 };
  s2 -> s1 [0, 65535] { R4942 += 1, R4836 += 1 };
  s2 -> s3 [83, 83] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s2 -> s4 [83, 83] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s2 -> s1 [84, 65535] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s3 -> s7 [0, 65535] { R4942 += 1, R4836 += 1 };
  s3 -> s5 [0, 65535] { R4942 += 1 };
  s3 -> s3 [0, 65535] { R4942 += 1, R4836 += 1, R3745 += 1, R3746 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4942 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4942 += 1, R4836 += 1 };
  s5 -> s5 [0, 65535] { R4942 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4942 += 1, R4836 += 1 };
  s7 -> s5 [0, 65535] { R4942 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 65535] { R4944 += 1, R4837 += 1, R4838 += 1 };
  s0 -> s2 [0, 65535] { R4944 += 1, R4838 += 1 };
  s0 -> s0 [0, 65535] { R4943 += 1, R4944 += 1 };
  s0 -> s3 [0, 65535] { R4944 += 1, R4838 += 1, R4787 += 1, R4788 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4944 += 1, R4837 += 1, R4838 += 1 };
  s1 -> s2 [0, 65535] { R4944 += 1, R4838 += 1 };
  s1 -> s3 [0, 65535] { R4944 += 1, R4838 += 1, R4787 += 1, R4788 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4944 += 1, R4838 += 1 };
  s2 -> s5 [0, 65535] { R4944 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4944 += 1, R4838 += 1 };
  s3 -> s3 [0, 65535] { R4944 += 1, R4838 += 1, R4787 += 1, R4788 += 1 };
  s3 -> s5 [0, 65535] { R4944 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4944 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 65535] { R4946 += 1, R4840 += 1 };
  s0 -> s0 [0, 65535] { R4945 += 1, R4946 += 1 };
  s0 -> s2 [0, 65535] { R4946 += 1, R4839 += 1, R4840 += 1 };
  s1 -> s1 [0, 65535] { R4946 += 1, R4840 += 1 };
  s1 -> s4 [0, 65535] { R4946 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4946 += 1, R4840 += 1 };
  s2 -> s2 [0, 65535] { R4946 += 1, R4839 += 1, R4840 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4946 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 79] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s0 -> s2 [0, 65535] { R4948 += 1, R4842 += 1, R4792 += 1, R4793 += 1 };
  s0 -> s0 [0, 65535] { R4947 += 1, R4948 += 1 };
  s0 -> s3 [0, 65535] { R4948 += 1, R4841 += 1, R4842 += 1 };
  s0 -> s4 [80, 80] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s0 -> s5 [80, 80] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s0 -> s1 [81, 65535] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s1 -> s1 [0, 79] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s1 -> s6 [0, 65535] { R4948 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R4948 += 1, R4842 += 1 };
  s1 -> s4 [80, 80] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s1 -> s5 [80, 80] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s1 -> s1 [81, 65535] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s2 -> s1 [0, 79] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s2 -> s2 [0, 65535] { R4948 += 1, R4842 += 1, R4792 += 1, R4793 += 1 };
  s2 -> s6 [0, 65535] { R4948 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [80, 80] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s2 -> s5 [80, 80] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s2 -> s1 [81, 65535] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s3 -> s1 [0, 79] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s3 -> s2 [0, 65535] { R4948 += 1, R4842 += 1, R4792 += 1, R4793 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R4948 += 1, R4841 += 1, R4842 += 1 };
  s3 -> s4 [80, 80] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s3 -> s5 [80, 80] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s3 -> s1 [81, 65535] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s4 -> s4 [0, 65535] { R4948 += 1, R4842 += 1 };
  s4 -> s6 [0, 65535] { R4948 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R4948 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R4948 += 1, R4842 += 1 };
  s5 -> s5 [0, 65535] { R4948 += 1, R4842 += 1, R4793 += 1, R4794 += 1 };
  s6 -> s6 [0, 65535] { R4948 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R4948 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R4948 += 1, R4842 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s0 [0, 65535] { R4949 += 1, R4950 += 1 };
  s0 -> s1 [0, 65535] { R4950 += 1, R4844 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R4950 += 1, R4843 += 1, R4844 += 1 };
  s1 -> s4 [0, 65535] { R4950 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4950 += 1, R4844 += 1, R26 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4950 += 1, R4844 += 1, R26 += 1 };
  s2 -> s2 [0, 65535] { R4950 += 1, R4843 += 1, R4844 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4950 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 64] { R4952 += 1, R4846 += 1 };
  s0 -> s0 [0, 65535] { R4951 += 1, R4952 += 1 };
  s0 -> s2 [0, 65535] { R4952 += 1, R4845 += 1, R4846 += 1 };
  s0 -> s3 [65, 65] { R4952 += 1, R4846 += 1 };
  s0 -> s4 [65, 65] { R4952 += 1, R4846 += 1 };
  s0 -> s5 [80, 80] { R4952 += 1, R4846 += 1 };
  s0 -> s1 [81, 65535] { R4952 += 1, R4846 += 1 };
  s1 -> s1 [0, 64] { R4952 += 1, R4846 += 1 };
  s1 -> s3 [65, 65] { R4952 += 1, R4846 += 1 };
  s1 -> s4 [65, 65] { R4952 += 1, R4846 += 1 };
  s1 -> s5 [80, 80] { R4952 += 1, R4846 += 1 };
  s1 -> s1 [81, 65535] { R4952 += 1, R4846 += 1 };
  s2 -> s1 [0, 64] { R4952 += 1, R4846 += 1 };
  s2 -> s2 [0, 65535] { R4952 += 1, R4845 += 1, R4846 += 1 };
  s2 -> s3 [65, 65] { R4952 += 1, R4846 += 1 };
  s2 -> s4 [65, 65] { R4952 += 1, R4846 += 1 };
  s2 -> s5 [80, 80] { R4952 += 1, R4846 += 1 };
  s2 -> s1 [81, 65535] { R4952 += 1, R4846 += 1 };
  s3 -> s3 [0, 65] { R4952 += 1, R4846 += 1 };
  s3 -> s7 [80, 80] { R4952 += 1, R4846 += 1 };
  s3 -> s3 [81, 65535] { R4952 += 1, R4846 += 1 };
  s5 -> s5 [0, 64] { R4952 += 1, R4846 += 1 };
  s5 -> s5 [0, 65535] { R4952 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [65, 65] { R4952 += 1, R4846 += 1 };
  s5 -> s8 [65, 65] { R4952 += 1, R4846 += 1 };
  s5 -> s5 [80, 65535] { R4952 += 1, R4846 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65] { R4952 += 1, R4846 += 1 };
  s7 -> s7 [0, 65535] { R4952 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [80, 65535] { R4952 += 1, R4846 += 1 };
  s8 -> s8 [0, 65535] { R4952 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R4954 += 1, R4848 += 1, R565 += 1 };
  s0 -> s0 [0, 65535] { R4953 += 1, R4954 += 1 };
  s0 -> s2 [0, 65535] { R4954 += 1, R4847 += 1, R4848 += 1 };
  s0 -> s3 [65, 65] { R4954 += 1, R4848 += 1, R565 += 1 };
  s0 -> s4 [65, 65] { R4954 += 1, R4848 += 1, R565 += 1 };
  s0 -> s1 [66, 65535] { R4954 += 1, R4848 += 1, R565 += 1 };
  s1 -> s1 [0, 64] { R4954 += 1, R4848 += 1, R565 += 1 };
  s1 -> s1 [0, 65535] { R4954 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4954 += 1, R4848 += 1, R565 += 1 };
  s1 -> s4 [65, 65] { R4954 += 1, R4848 += 1, R565 += 1 };
  s1 -> s1 [66, 65535] { R4954 += 1, R4848 += 1, R565 += 1 };
  s2 -> s1 [0, 64] { R4954 += 1, R4848 += 1, R565 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4954 += 1, R4847 += 1, R4848 += 1 };
  s2 -> s3 [65, 65] { R4954 += 1, R4848 += 1, R565 += 1 };
  s2 -> s4 [65, 65] { R4954 += 1, R4848 += 1, R565 += 1 };
  s2 -> s1 [66, 65535] { R4954 += 1, R4848 += 1, R565 += 1 };
  s3 -> s3 [0, 65535] { R4954 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4954 += 1, R4848 += 1, R565 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4954 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4954 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 64] { R4956 += 1, R4850 += 1, R567 += 1 };
  s0 -> s2 [0, 65535] { R4956 += 1, R4849 += 1, R4850 += 1 };
  s0 -> s0 [0, 65535] { R4955 += 1, R4956 += 1 };
  s0 -> s3 [65, 65] { R4956 += 1, R4850 += 1, R567 += 1 };
  s0 -> s4 [65, 65] { R4956 += 1, R4850 += 1, R567 += 1 };
  s0 -> s1 [66, 65535] { R4956 += 1, R4850 += 1, R567 += 1 };
  s1 -> s1 [0, 64] { R4956 += 1, R4850 += 1, R567 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4956 += 1 };
  s1 -> s3 [65, 65] { R4956 += 1, R4850 += 1, R567 += 1 };
  s1 -> s4 [65, 65] { R4956 += 1, R4850 += 1, R567 += 1 };
  s1 -> s1 [66, 65535] { R4956 += 1, R4850 += 1, R567 += 1 };
  s2 -> s1 [0, 64] { R4956 += 1, R4850 += 1, R567 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4956 += 1, R4849 += 1, R4850 += 1 };
  s2 -> s3 [65, 65] { R4956 += 1, R4850 += 1, R567 += 1 };
  s2 -> s4 [65, 65] { R4956 += 1, R4850 += 1, R567 += 1 };
  s2 -> s1 [66, 65535] { R4956 += 1, R4850 += 1, R567 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4956 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4956 += 1 };
  s4 -> s4 [0, 65535] { R4956 += 1, R4850 += 1, R567 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4956 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 64] { R4958 += 1, R4852 += 1, R569 += 1 };
  s0 -> s0 [0, 65535] { R4957 += 1, R4958 += 1 };
  s0 -> s2 [0, 65535] { R4958 += 1, R4851 += 1, R4852 += 1 };
  s0 -> s3 [65, 65] { R4958 += 1, R4852 += 1, R569 += 1 };
  s0 -> s4 [65, 65] { R4958 += 1, R4852 += 1, R569 += 1 };
  s0 -> s1 [66, 65535] { R4958 += 1, R4852 += 1, R569 += 1 };
  s1 -> s1 [0, 64] { R4958 += 1, R4852 += 1, R569 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4958 += 1 };
  s1 -> s3 [65, 65] { R4958 += 1, R4852 += 1, R569 += 1 };
  s1 -> s4 [65, 65] { R4958 += 1, R4852 += 1, R569 += 1 };
  s1 -> s1 [66, 65535] { R4958 += 1, R4852 += 1, R569 += 1 };
  s2 -> s1 [0, 64] { R4958 += 1, R4852 += 1, R569 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4958 += 1, R4851 += 1, R4852 += 1 };
  s2 -> s3 [65, 65] { R4958 += 1, R4852 += 1, R569 += 1 };
  s2 -> s4 [65, 65] { R4958 += 1, R4852 += 1, R569 += 1 };
  s2 -> s1 [66, 65535] { R4958 += 1, R4852 += 1, R569 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4958 += 1 };
  s3 -> s3 [0, 65535] { R4958 += 1, R4852 += 1, R569 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4958 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4958 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R4960 += 1, R4854 += 1, R571 += 1 };
  s0 -> s0 [0, 65535] { R4959 += 1, R4960 += 1 };
  s0 -> s2 [0, 65535] { R4960 += 1, R4853 += 1, R4854 += 1 };
  s0 -> s3 [65, 65] { R4960 += 1, R4854 += 1, R571 += 1 };
  s0 -> s4 [65, 65] { R4960 += 1, R4854 += 1, R571 += 1 };
  s0 -> s1 [66, 65535] { R4960 += 1, R4854 += 1, R571 += 1 };
  s1 -> s1 [0, 64] { R4960 += 1, R4854 += 1, R571 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4960 += 1 };
  s1 -> s3 [65, 65] { R4960 += 1, R4854 += 1, R571 += 1 };
  s1 -> s4 [65, 65] { R4960 += 1, R4854 += 1, R571 += 1 };
  s1 -> s1 [66, 65535] { R4960 += 1, R4854 += 1, R571 += 1 };
  s2 -> s1 [0, 64] { R4960 += 1, R4854 += 1, R571 += 1 };
  s2 -> s2 [0, 65535] { R4960 += 1, R4853 += 1, R4854 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4960 += 1, R4854 += 1, R571 += 1 };
  s2 -> s4 [65, 65] { R4960 += 1, R4854 += 1, R571 += 1 };
  s2 -> s1 [66, 65535] { R4960 += 1, R4854 += 1, R571 += 1 };
  s3 -> s6 [0, 65535] { R4960 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4960 += 1, R4854 += 1, R571 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4960 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4960 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 64] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s0 -> s0 [0, 65535] { R4961 += 1, R4962 += 1 };
  s0 -> s2 [0, 65535] { R4962 += 1, R4855 += 1, R4856 += 1 };
  s0 -> s3 [65, 65] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s0 -> s4 [65, 65] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s0 -> s1 [66, 65535] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s1 -> s1 [0, 64] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s1 -> s1 [0, 65535] { R4962 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s1 -> s4 [65, 65] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s1 -> s1 [66, 65535] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s2 -> s1 [0, 64] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4962 += 1, R4855 += 1, R4856 += 1 };
  s2 -> s3 [65, 65] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s2 -> s4 [65, 65] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s2 -> s1 [66, 65535] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s3 -> s3 [0, 65535] { R4962 += 1, R4856 += 1, R573 += 1, R574 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4962 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4962 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4962 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 64] { R4964 += 1, R4858 += 1 };
  s0 -> s2 [0, 65535] { R4964 += 1, R4857 += 1, R4858 += 1 };
  s0 -> s0 [0, 65535] { R4963 += 1, R4964 += 1 };
  s0 -> s3 [65, 65] { R4964 += 1, R4858 += 1 };
  s0 -> s4 [65, 65] { R4964 += 1, R4858 += 1 };
  s0 -> s1 [66, 65535] { R4964 += 1, R4858 += 1 };
  s1 -> s1 [0, 64] { R4964 += 1, R4858 += 1 };
  s1 -> s1 [0, 65535] { R4964 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4964 += 1, R4858 += 1 };
  s1 -> s4 [65, 65] { R4964 += 1, R4858 += 1 };
  s1 -> s1 [66, 65535] { R4964 += 1, R4858 += 1 };
  s2 -> s1 [0, 64] { R4964 += 1, R4858 += 1 };
  s2 -> s2 [0, 65535] { R4964 += 1, R4857 += 1, R4858 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4964 += 1, R4858 += 1 };
  s2 -> s4 [65, 65] { R4964 += 1, R4858 += 1 };
  s2 -> s1 [66, 65535] { R4964 += 1, R4858 += 1 };
  s3 -> s3 [0, 65535] { R4964 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4964 += 1 };
  s4 -> s4 [0, 65535] { R4964 += 1, R4858 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4964 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 64] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s0 -> s0 [0, 65535] { R4965 += 1, R4966 += 1 };
  s0 -> s2 [0, 65535] { R4966 += 1, R4859 += 1, R4860 += 1 };
  s0 -> s3 [65, 65] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s0 -> s4 [65, 65] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s0 -> s1 [66, 65535] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s1 -> s1 [0, 64] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s1 -> s1 [0, 65535] { R4966 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s1 -> s4 [65, 65] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s1 -> s1 [66, 65535] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s2 -> s1 [0, 64] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4966 += 1, R4859 += 1, R4860 += 1 };
  s2 -> s3 [65, 65] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s2 -> s4 [65, 65] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s2 -> s1 [66, 65535] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s3 -> s3 [0, 65535] { R4966 += 1, R4860 += 1, R579 += 1, R580 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4966 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4966 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4966 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_41 {
  init s0;
  s0 -> s1 [0, 64] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s0 -> s0 [0, 65535] { R4967 += 1, R4968 += 1 };
  s0 -> s2 [0, 65535] { R4968 += 1, R4861 += 1, R4862 += 1 };
  s0 -> s3 [65, 65] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s0 -> s4 [65, 65] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s0 -> s1 [66, 65535] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s1 -> s1 [0, 64] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4968 += 1 };
  s1 -> s3 [65, 65] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s1 -> s4 [65, 65] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s1 -> s1 [66, 65535] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s2 -> s1 [0, 64] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4968 += 1, R4861 += 1, R4862 += 1 };
  s2 -> s3 [65, 65] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s2 -> s4 [65, 65] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s2 -> s1 [66, 65535] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s3 -> s3 [0, 65535] { R4968 += 1, R4862 += 1, R585 += 1, R586 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4968 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4968 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4968 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_42 {
  init s0;
  s0 -> s1 [0, 64] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s0 -> s0 [0, 65535] { R4969 += 1, R4970 += 1 };
  s0 -> s2 [0, 65535] { R4970 += 1, R4863 += 1, R4864 += 1 };
  s0 -> s3 [65, 65] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s0 -> s4 [65, 65] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s0 -> s1 [66, 65535] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s1 -> s1 [0, 64] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s1 -> s1 [0, 65535] { R4970 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s1 -> s4 [65, 65] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s1 -> s1 [66, 65535] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s2 -> s1 [0, 64] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s2 -> s2 [0, 65535] { R4970 += 1, R4863 += 1, R4864 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s2 -> s4 [65, 65] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s2 -> s1 [66, 65535] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s3 -> s6 [0, 65535] { R4970 += 1 };
  s3 -> s3 [0, 65535] { R4970 += 1, R4864 += 1, R589 += 1, R590 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4970 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4970 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_43 {
  init s0;
  s0 -> s1 [0, 64] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s0 -> s0 [0, 65535] { R4971 += 1, R4972 += 1 };
  s0 -> s2 [0, 65535] { R4972 += 1, R4865 += 1, R4866 += 1 };
  s0 -> s3 [65, 65] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s0 -> s4 [65, 65] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s0 -> s1 [66, 65535] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s1 -> s1 [0, 64] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s1 -> s1 [0, 65535] { R4972 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s1 -> s4 [65, 65] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s1 -> s1 [66, 65535] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s2 -> s1 [0, 64] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4972 += 1, R4865 += 1, R4866 += 1 };
  s2 -> s3 [65, 65] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s2 -> s4 [65, 65] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s2 -> s1 [66, 65535] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s3 -> s3 [0, 65535] { R4972 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4972 += 1 };
  s4 -> s4 [0, 65535] { R4972 += 1, R4866 += 1, R595 += 1, R596 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4972 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_44 {
  init s0;
  s0 -> s1 [0, 64] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s0 -> s2 [0, 65535] { R4974 += 1, R4867 += 1, R4868 += 1 };
  s0 -> s0 [0, 65535] { R4973 += 1, R4974 += 1 };
  s0 -> s3 [65, 65] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s0 -> s4 [65, 65] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s0 -> s1 [66, 65535] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s1 -> s1 [0, 64] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s1 -> s1 [0, 65535] { R4974 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s1 -> s4 [65, 65] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s1 -> s1 [66, 65535] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s2 -> s1 [0, 64] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s2 -> s2 [0, 65535] { R4974 += 1, R4867 += 1, R4868 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s2 -> s4 [65, 65] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s2 -> s1 [66, 65535] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s3 -> s3 [0, 65535] { R4974 += 1, R4868 += 1, R599 += 1, R600 += 1 };
  s3 -> s6 [0, 65535] { R4974 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4974 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4974 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_45 {
  init s0;
  s0 -> s1 [0, 64] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s0 -> s2 [0, 65535] { R4976 += 1, R4869 += 1, R4870 += 1 };
  s0 -> s0 [0, 65535] { R4975 += 1, R4976 += 1 };
  s0 -> s3 [65, 65] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s0 -> s4 [65, 65] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s0 -> s1 [66, 65535] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s1 -> s1 [0, 64] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s1 -> s1 [0, 65535] { R4976 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s1 -> s4 [65, 65] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s1 -> s1 [66, 65535] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s2 -> s1 [0, 64] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s2 -> s2 [0, 65535] { R4976 += 1, R4869 += 1, R4870 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s2 -> s4 [65, 65] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s2 -> s1 [66, 65535] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s3 -> s6 [0, 65535] { R4976 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4976 += 1, R4870 += 1, R605 += 1, R606 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4976 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4976 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_46 {
  init s0;
  s0 -> s1 [0, 64] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s0 -> s0 [0, 65535] { R4977 += 1, R4978 += 1 };
  s0 -> s2 [0, 65535] { R4978 += 1, R4871 += 1, R4872 += 1 };
  s0 -> s3 [65, 65] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s0 -> s4 [65, 65] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s0 -> s1 [66, 65535] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s1 -> s1 [0, 64] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4978 += 1 };
  s1 -> s3 [65, 65] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s1 -> s4 [65, 65] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s1 -> s1 [66, 65535] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s2 -> s1 [0, 64] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4978 += 1, R4871 += 1, R4872 += 1 };
  s2 -> s3 [65, 65] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s2 -> s4 [65, 65] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s2 -> s1 [66, 65535] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s3 -> s3 [0, 65535] { R4978 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4978 += 1 };
  s4 -> s4 [0, 65535] { R4978 += 1, R4872 += 1, R609 += 1, R610 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4978 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_47 {
  init s0;
  s0 -> s1 [0, 64] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s0 -> s0 [0, 65535] { R4979 += 1, R4980 += 1 };
  s0 -> s2 [0, 65535] { R4980 += 1, R4873 += 1, R4874 += 1 };
  s0 -> s3 [65, 65] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s0 -> s4 [65, 65] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s0 -> s1 [66, 65535] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s1 -> s1 [0, 64] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4980 += 1 };
  s1 -> s3 [65, 65] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s1 -> s4 [65, 65] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s1 -> s1 [66, 65535] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s2 -> s1 [0, 64] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4980 += 1, R4873 += 1, R4874 += 1 };
  s2 -> s3 [65, 65] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s2 -> s4 [65, 65] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s2 -> s1 [66, 65535] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s3 -> s3 [0, 65535] { R4980 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4980 += 1, R4874 += 1, R615 += 1, R616 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4980 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4980 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_48 {
  init s0;
  s0 -> s1 [0, 64] { R4982 += 1, R4876 += 1 };
  s0 -> s2 [0, 65535] { R4982 += 1, R4875 += 1, R4876 += 1 };
  s0 -> s0 [0, 65535] { R4981 += 1, R4982 += 1 };
  s0 -> s3 [65, 65] { R4982 += 1, R4876 += 1 };
  s0 -> s4 [65, 65] { R4982 += 1, R4876 += 1 };
  s0 -> s1 [66, 65535] { R4982 += 1, R4876 += 1 };
  s1 -> s1 [0, 64] { R4982 += 1, R4876 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4982 += 1 };
  s1 -> s3 [65, 65] { R4982 += 1, R4876 += 1 };
  s1 -> s4 [65, 65] { R4982 += 1, R4876 += 1 };
  s1 -> s1 [66, 65535] { R4982 += 1, R4876 += 1 };
  s2 -> s1 [0, 64] { R4982 += 1, R4876 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4982 += 1, R4875 += 1, R4876 += 1 };
  s2 -> s3 [65, 65] { R4982 += 1, R4876 += 1 };
  s2 -> s4 [65, 65] { R4982 += 1, R4876 += 1 };
  s2 -> s1 [66, 65535] { R4982 += 1, R4876 += 1 };
  s3 -> s3 [0, 65535] { R4982 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4982 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4982 += 1, R4876 += 1 };
  s5 -> s5 [0, 65535] { R4982 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_49 {
  init s0;
  s0 -> s1 [0, 64] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s0 -> s0 [0, 65535] { R4983 += 1, R4984 += 1 };
  s0 -> s2 [0, 65535] { R4984 += 1, R4877 += 1, R4878 += 1 };
  s0 -> s3 [65, 65] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s0 -> s4 [65, 65] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s0 -> s1 [66, 65535] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s1 -> s1 [0, 64] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4984 += 1 };
  s1 -> s3 [65, 65] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s1 -> s4 [65, 65] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s1 -> s1 [66, 65535] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s2 -> s1 [0, 64] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4984 += 1, R4877 += 1, R4878 += 1 };
  s2 -> s3 [65, 65] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s2 -> s4 [65, 65] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s2 -> s1 [66, 65535] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4984 += 1, R4878 += 1, R621 += 1, R622 += 1 };
  s3 -> s6 [0, 65535] { R4984 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4984 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4984 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_50 {
  init s0;
  s0 -> s1 [0, 64] { R4986 += 1, R4880 += 1 };
  s0 -> s2 [0, 65535] { R4986 += 1, R4879 += 1, R4880 += 1 };
  s0 -> s0 [0, 65535] { R4985 += 1, R4986 += 1 };
  s0 -> s3 [65, 65] { R4986 += 1, R4880 += 1 };
  s0 -> s4 [65, 65] { R4986 += 1, R4880 += 1 };
  s0 -> s1 [66, 65535] { R4986 += 1, R4880 += 1 };
  s1 -> s1 [0, 64] { R4986 += 1, R4880 += 1 };
  s1 -> s1 [0, 65535] { R4986 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4986 += 1, R4880 += 1 };
  s1 -> s4 [65, 65] { R4986 += 1, R4880 += 1 };
  s1 -> s1 [66, 65535] { R4986 += 1, R4880 += 1 };
  s2 -> s1 [0, 64] { R4986 += 1, R4880 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4986 += 1, R4879 += 1, R4880 += 1 };
  s2 -> s3 [65, 65] { R4986 += 1, R4880 += 1 };
  s2 -> s4 [65, 65] { R4986 += 1, R4880 += 1 };
  s2 -> s1 [66, 65535] { R4986 += 1, R4880 += 1 };
  s3 -> s3 [0, 65535] { R4986 += 1, R4880 += 1 };
  s3 -> s6 [0, 65535] { R4986 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4986 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4986 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_51 {
  init s0;
  s0 -> s1 [0, 64] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s0 -> s2 [0, 64] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s0 -> s0 [0, 65535] { R4987 += 1, R4988 += 1 };
  s0 -> s3 [0, 65535] { R4988 += 1, R4881 += 1, R4882 += 1 };
  s0 -> s4 [65, 65] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s0 -> s5 [65, 65] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s0 -> s6 [65, 65] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s0 -> s7 [65, 65] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s0 -> s1 [66, 82] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s0 -> s2 [66, 65535] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s0 -> s1 [84, 65535] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s1 -> s1 [0, 64] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R4988 += 1 };
  s1 -> s4 [65, 65] { R4988 += 1, R4882 += 1 };
  s1 -> s6 [65, 65] { R4988 += 1, R4882 += 1 };
  s1 -> s1 [66, 82] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s1 -> s1 [66, 65535] { R4988 += 1, R4882 += 1 };
  s1 -> s1 [84, 65535] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s2 -> s1 [0, 64] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s2 -> s2 [0, 64] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s2 -> s4 [65, 65] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s2 -> s5 [65, 65] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s2 -> s6 [65, 65] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s2 -> s7 [65, 65] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s2 -> s1 [66, 82] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s2 -> s2 [66, 65535] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s2 -> s1 [84, 65535] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s3 -> s1 [0, 64] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s3 -> s2 [0, 64] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s3 -> s3 [0, 65535] { R4988 += 1, R4881 += 1, R4882 += 1 };
  s3 -> s4 [65, 65] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s3 -> s5 [65, 65] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s3 -> s6 [65, 65] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s3 -> s7 [65, 65] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s3 -> s1 [66, 82] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s3 -> s2 [66, 65535] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s3 -> s1 [84, 65535] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s4 -> s4 [0, 82] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s4 -> s4 [0, 65535] { R4988 += 1, R4882 += 1 };
  s4 -> s9 [0, 65535] { R4988 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [84, 65535] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s5 -> s4 [0, 82] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s5 -> s5 [0, 65535] { R4988 += 1, R4882 += 1, R3741 += 1, R3742 += 1 };
  s5 -> s4 [84, 65535] { R4988 += 1, R4882 += 1, R3742 += 1, R3743 += 1 };
  s6 -> s6 [0, 65535] { R4988 += 1 };
  s6 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4988 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s9, s6, s1;
};
automaton uri_52 {
  init s0;
  s0 -> s1 [0, 64] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s0 -> s2 [0, 64] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s0 -> s0 [0, 65535] { R4989 += 1, R4990 += 1 };
  s0 -> s3 [0, 65535] { R4990 += 1, R4883 += 1, R4884 += 1 };
  s0 -> s4 [65, 65] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s0 -> s5 [65, 65] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s0 -> s6 [65, 65] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s0 -> s7 [65, 65] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s0 -> s1 [66, 65535] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s0 -> s2 [66, 65535] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s1 -> s1 [0, 64] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R4990 += 1 };
  s1 -> s5 [65, 65] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s1 -> s7 [65, 65] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s1 -> s1 [66, 65535] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s2 -> s1 [0, 64] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s2 -> s2 [0, 64] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s2 -> s4 [65, 65] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s2 -> s5 [65, 65] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s2 -> s6 [65, 65] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s2 -> s7 [65, 65] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s2 -> s1 [66, 65535] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s2 -> s2 [66, 65535] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s3 -> s1 [0, 64] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s3 -> s2 [0, 64] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s3 -> s3 [0, 65535] { R4990 += 1, R4883 += 1, R4884 += 1 };
  s3 -> s4 [65, 65] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s3 -> s5 [65, 65] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s3 -> s6 [65, 65] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s3 -> s7 [65, 65] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s3 -> s1 [66, 65535] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s3 -> s2 [66, 65535] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s4 -> s4 [0, 65535] { R4990 += 1, R4884 += 1, R4783 += 1, R4784 += 1 };
  s4 -> s7 [0, 65535] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R4990 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R4990 += 1 };
  s7 -> s7 [0, 65535] { R4990 += 1, R4884 += 1, R4784 += 1, R4785 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4990 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton uri_53 {
  init s0;
  s0 -> s1 [0, 64] { R4992 += 1, R4886 += 1 };
  s0 -> s2 [0, 65535] { R4992 += 1, R4885 += 1, R4886 += 1 };
  s0 -> s0 [0, 65535] { R4991 += 1, R4992 += 1 };
  s0 -> s3 [65, 65] { R4992 += 1, R4886 += 1 };
  s0 -> s4 [65, 65] { R4992 += 1, R4886 += 1 };
  s0 -> s1 [66, 65535] { R4992 += 1, R4886 += 1 };
  s1 -> s1 [0, 64] { R4992 += 1, R4886 += 1 };
  s1 -> s1 [0, 65535] { R4992 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4992 += 1, R4886 += 1 };
  s1 -> s4 [65, 65] { R4992 += 1, R4886 += 1 };
  s1 -> s1 [66, 65535] { R4992 += 1, R4886 += 1 };
  s2 -> s1 [0, 64] { R4992 += 1, R4886 += 1 };
  s2 -> s2 [0, 65535] { R4992 += 1, R4885 += 1, R4886 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4992 += 1, R4886 += 1 };
  s2 -> s4 [65, 65] { R4992 += 1, R4886 += 1 };
  s2 -> s1 [66, 65535] { R4992 += 1, R4886 += 1 };
  s3 -> s3 [0, 65535] { R4992 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4992 += 1, R4886 += 1 };
  s4 -> s6 [0, 65535] { R4992 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4992 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_54 {
  init s0;
  s0 -> s1 [0, 64] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s0 -> s2 [0, 65535] { R4994 += 1, R4887 += 1, R4888 += 1 };
  s0 -> s0 [0, 65535] { R4993 += 1, R4994 += 1 };
  s0 -> s3 [65, 65] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s0 -> s4 [65, 65] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s0 -> s1 [66, 65535] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s1 -> s1 [0, 64] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4994 += 1 };
  s1 -> s3 [65, 65] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s1 -> s4 [65, 65] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s1 -> s1 [66, 65535] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s2 -> s1 [0, 64] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s2 -> s2 [0, 65535] { R4994 += 1, R4887 += 1, R4888 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s2 -> s4 [65, 65] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s2 -> s1 [66, 65535] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4994 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4994 += 1 };
  s4 -> s4 [0, 65535] { R4994 += 1, R4888 += 1, R4789 += 1, R4790 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4994 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining c11
automaton c11_0 {
  init s0;
  s0 -> s1 [115, 115];
  accepting s1;
};
};
synchronised {  // Automata constraining P55
automaton P55_0 {
  init s0;
  s0 -> s1 [112, 112];
  accepting s1;
};
};
constraint R3 = R4842 && R4 = R4994 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R566 + R565 = 0 && R4795 = 0 && R4796 = R4842 && R4797 = 0 && R4798 = R4842 && R4799 = 0 && R4800 = R4842 && R4801 = 0 && R4802 = R4842 && R4803 = 0 && R4804 = R4842 && R4805 = 0 && R4806 = R4842 && R4807 = 0 && R4808 = R4842 && R4809 = 0 && R4810 = R4842 && R4811 = 0 && R4812 = R4842 && R4813 = 0 && R4814 = R4842 && R4815 = 0 && R4816 = R4842 && R4817 = 0 && R4818 = R4842 && R4819 = 0 && R4820 = R4842 && R4821 = 0 && R4822 = R4842 && R4823 = 0 && R4824 = R4842 && R4825 = 0 && R4826 = R4842 && R4827 = 0 && R4828 = R4842 && R4829 = 0 && R4830 = R4842 && R4831 = 0 && R4832 = R4842 && R4833 = 0 && R4834 = R4842 && R4835 = 0 && R4836 = R4842 && R4837 = 0 && R4838 = R4842 && R4839 = 0 && R4840 = R4842 && R4841 = 0 && R4845 = 0 && R4846 = 0 && R4881 = 0 && R4882 = 0 && R4883 = 0 && R4884 = 0 && R4889 = 10 && R4890 = R4994 && R4891 = 10 && R4892 = R4994 && R4893 = 10 && R4894 = R4994 && R4895 = 10 && R4896 = R4994 && R4897 = 10 && R4898 = R4994 && R4899 = 10 && R4900 = R4994 && R4901 = 10 && R4902 = R4994 && R4903 = 10 && R4904 = R4994 && R4905 = 10 && R4906 = R4994 && R4907 = 10 && R4908 = R4994 && R4909 = 10 && R4910 = R4994 && R4911 = 10 && R4912 = R4994 && R4913 = 10 && R4914 = R4994 && R4915 = 10 && R4916 = R4994 && R4917 = 10 && R4918 = R4994 && R4919 = 10 && R4920 = R4994 && R4921 = 10 && R4922 = R4994 && R4923 = 10 && R4924 = R4994 && R4925 = 10 && R4926 = R4994 && R4927 = 10 && R4928 = R4994 && R4929 = 10 && R4930 = R4994 && R4931 = 10 && R4932 = R4994 && R4933 = 10 && R4934 = R4994 && R4935 = 10 && R4936 = R4994 && R4937 = 10 && R4938 = R4994 && R4939 = 10 && R4940 = R4994 && R4941 = 10 && R4942 = R4994 && R4943 = 10 && R4944 = R4994 && R4945 = 10 && R4946 = R4994 && R4947 = 10 && R4948 = R4994 && R4949 = 10 && R4950 = R4994 && R4951 = 10 && R4952 = R4994 && R4953 = 10 && R4954 = R4994 && R4955 = 10 && R4956 = R4994 && R4957 = 10 && R4958 = R4994 && R4959 = 10 && R4960 = R4994 && R4961 = 10 && R4962 = R4994 && R4963 = 10 && R4964 = R4994 && R4965 = 10 && R4966 = R4994 && R4967 = 10 && R4968 = R4994 && R4969 = 10 && R4970 = R4994 && R4971 = 10 && R4972 = R4994 && R4973 = 10 && R4974 = R4994 && R4975 = 10 && R4976 = R4994 && R4977 = 10 && R4978 = R4994 && R4979 = 10 && R4980 = R4994 && R4981 = 10 && R4982 = R4994 && R4983 = 10 && R4984 = R4994 && R4985 = 10 && R4986 = R4994 && R4987 = 10 && R4988 = R4994 && R4989 = 10 && R4990 = R4994 && R4991 = 10 && R4992 = R4994 && R4993 = 10 && R594 + R591 + R3746 + R3743 != 0 && R614 + R611 + R4794 + R4791 != 0 && R15 < 1 && R16 < 1 && R568 + R567 < 1 && R570 + R569 < 1 && R572 + R571 < 1 && 0 < R4842 && 9 < R4994 && (R26 = 0 || (R4843 = 0 && R4844 = 0)) && (R26 = 0 || (R4847 = 0 && R4848 = 0)) && (R26 = 0 || (R4849 = 0 && R4850 = 0)) && (R26 = 0 || (R4851 = 0 && R4852 = 0)) && (R26 = 0 || (R4853 = 0 && R4854 = 0)) && (R26 = 0 || (R4855 = 0 && R4856 = 0)) && (R26 = 0 || (R4857 = 0 && R4858 = 0)) && (R26 = 0 || (R4859 = 0 && R4860 = 0)) && (R26 = 0 || (R4861 = 0 && R4862 = 0)) && (R26 = 0 || (R4863 = 0 && R4864 = 0)) && (R26 = 0 || (R4865 = 0 && R4866 = 0)) && (R26 = 0 || (R4867 = 0 && R4868 = 0)) && (R26 = 0 || (R4869 = 0 && R4870 = 0)) && (R26 = 0 || (R4871 = 0 && R4872 = 0)) && (R26 = 0 || (R4873 = 0 && R4874 = 0)) && (R26 = 0 || (R4875 = 0 && R4876 = 0)) && (R26 = 0 || (R4877 = 0 && R4878 = 0)) && (R26 = 0 || (R4879 = 0 && R4880 = 0)) && (R26 = 0 || (R4885 = 0 && R4886 = 0)) && (R26 = 0 || (R4887 = 0 && R4888 = 0)) && (R578 + R575 = 0 || (R576 + R573 = 0 && R577 + R574 = 0)) && (R584 + R581 = 0 || (R582 + R579 = 0 && R583 + R580 = 0)) && (R584 + R581 = 0 || (R587 + R585 = 0 && R588 + R586 = 0)) && (R584 + R581 = 0 || (R592 + R589 = 0 && R593 + R590 = 0)) && (R604 + R601 = 0 || (R597 + R595 = 0 && R598 + R596 = 0)) && (R604 + R601 = 0 || (R602 + R599 = 0 && R603 + R600 = 0)) && (R604 + R601 = 0 || (R607 + R605 = 0 && R608 + R606 = 0)) && (R604 + R601 = 0 || (R612 + R609 = 0 && R613 + R610 = 0)) && (R620 + R617 = 0 || (R618 + R615 = 0 && R619 + R616 = 0)) && (R626 + R623 = 0 || (R624 + R621 = 0 && R625 + R622 = 0)) && (R626 + R623 = 0 || (R3744 + R3741 = 0 && R3745 + R3742 = 0)) && (R4788 + R4785 = 0 || (R4786 + R4783 = 0 && R4787 + R4784 = 0)) && (R4788 + R4785 = 0 || (R4792 + R4789 = 0 && R4793 + R4790 = 0));
// End of Parikh automata intersection problem
