// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R1, R10, R1024, R1025, R11, R1191, R1192, R1193, R1194, R1195, R1196, R1197, R1198, R1199, R12, R1200, R1201, R1202, R1203, R1204, R1205, R1206, R1207, R1208, R1209, R1210, R1211, R1212, R1213, R1214, R1215, R1216, R1217, R1218, R1219, R1220, R1221, R1222, R1223, R1224, R1225, R1226, R1227, R1228, R1229, R1230, R1231, R1232, R1233, R1234, R1235, R1236, R1237, R1238, R1239, R1240, R1241, R1242, R1243, R1244, R1245, R1246, R1247, R1248, R1249, R1250, R1251, R1252, R1253, R1254, R1255, R1256, R1257, R1258, R1259, R1260, R1261, R1262, R1263, R1264, R1265, R1266, R1267, R1268, R1269, R1270, R1271, R1272, R1273, R1274, R1275, R1276, R1277, R1278, R1279, R1280, R1281, R1282, R1283, R1284, R1285, R1286, R1287, R1288, R1289, R1290, R1291, R1292, R1293, R1294, R1295, R1296, R1297, R1298, R1299, R1300, R1301, R1302, R1303, R1304, R1305, R1306, R1307, R1308, R1309, R1310, R1311, R1312, R1313, R1314, R1315, R1316, R1317, R1318, R1319, R1320, R1321, R1322, R1323, R1324, R1325, R1326, R1327, R1328, R1329, R1330, R1331, R1332, R1333, R1334, R1335, R1336, R1337, R1338, R1339, R1340, R1341, R1342, R1343, R1344, R1345, R1346, R1347, R1348, R1349, R1350, R1351, R1352, R1353, R1354, R1355, R16, R17, R2, R3, R4, R5, R6, R688, R689, R7, R8, R9;
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R9 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 45] { R1303 += 1 };
  s0 -> s0 [0, 65535] { R1302 += 1, R1303 += 1 };
  s0 -> s2 [46, 46] { R1303 += 1 };
  s0 -> s3 [47, 47] { R1303 += 1 };
  s0 -> s1 [48, 65535] { R1303 += 1 };
  s1 -> s1 [0, 45] { R1303 += 1 };
  s1 -> s2 [46, 46] { R1303 += 1 };
  s1 -> s3 [47, 47] { R1303 += 1 };
  s1 -> s1 [48, 65535] { R1303 += 1 };
  s2 -> s1 [0, 45] { R1303 += 1 };
  s2 -> s2 [46, 46] { R1303 += 1 };
  s2 -> s3 [47, 47] { R1303 += 1 };
  s2 -> s1 [48, 114] { R1303 += 1 };
  s2 -> s8 [115, 115] { R1303 += 1 };
  s2 -> s1 [116, 65535] { R1303 += 1 };
  s3 -> s3 [0, 45] { R1303 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s4 [46, 46] { R1303 += 1 };
  s3 -> s3 [47, 65535] { R1303 += 1 };
  s4 -> s3 [0, 45] { R1303 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s4 [46, 46] { R1303 += 1 };
  s4 -> s3 [47, 114] { R1303 += 1 };
  s4 -> s5 [115, 115] { R1303 += 1 };
  s4 -> s3 [116, 65535] { R1303 += 1 };
  s5 -> s3 [0, 45] { R1303 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s4 [46, 46] { R1303 += 1 };
  s5 -> s3 [47, 110] { R1303 += 1 };
  s5 -> s6 [111, 111] { R1303 += 1 };
  s5 -> s3 [112, 65535] { R1303 += 1 };
  s6 -> s3 [0, 45] { R1303 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s4 [46, 46] { R1303 += 1 };
  s6 -> s3 [47, 98] { R1303 += 1 };
  s6 -> s7 [99, 99] { R1303 += 1 };
  s6 -> s3 [100, 65535] { R1303 += 1 };
  s7 -> s3 [0, 45] { R1303 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s4 [46, 46] { R1303 += 1 };
  s7 -> s3 [47, 106] { R1303 += 1 };
  s7 -> s3 [108, 65535] { R1303 += 1 };
  s8 -> s1 [0, 45] { R1303 += 1 };
  s8 -> s2 [46, 46] { R1303 += 1 };
  s8 -> s3 [47, 47] { R1303 += 1 };
  s8 -> s1 [48, 110] { R1303 += 1 };
  s8 -> s9 [111, 111] { R1303 += 1 };
  s8 -> s1 [112, 65535] { R1303 += 1 };
  s9 -> s1 [0, 45] { R1303 += 1 };
  s9 -> s2 [46, 46] { R1303 += 1 };
  s9 -> s3 [47, 47] { R1303 += 1 };
  s9 -> s1 [48, 98] { R1303 += 1 };
  s9 -> s10 [99, 99] { R1303 += 1 };
  s9 -> s1 [100, 65535] { R1303 += 1 };
  s10 -> s1 [0, 45] { R1303 += 1 };
  s10 -> s2 [46, 46] { R1303 += 1 };
  s10 -> s3 [47, 47] { R1303 += 1 };
  s10 -> s1 [48, 106] { R1303 += 1 };
  s10 -> s1 [108, 65535] { R1303 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R1304 += 1, R1305 += 1 };
  s0 -> s1 [0, 65535] { R1305 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1305 += 1, R8 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 46] { R1307 += 1, R1025 += 1 };
  s0 -> s0 [0, 65535] { R1306 += 1, R1307 += 1 };
  s0 -> s2 [0, 65535] { R1307 += 1, R1024 += 1, R1025 += 1 };
  s0 -> s3 [47, 47] { R1307 += 1 };
  s0 -> s1 [48, 65535] { R1307 += 1, R1025 += 1 };
  s1 -> s1 [0, 46] { R1307 += 1, R1025 += 1 };
  s1 -> s3 [47, 47] { R1307 += 1 };
  s1 -> s1 [48, 65535] { R1307 += 1, R1025 += 1 };
  s2 -> s1 [0, 46] { R1307 += 1, R1025 += 1 };
  s2 -> s2 [0, 65535] { R1307 += 1, R1024 += 1, R1025 += 1 };
  s2 -> s3 [47, 47] { R1307 += 1 };
  s2 -> s1 [48, 65535] { R1307 += 1, R1025 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1307 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 65535] { R1309 += 1, R1254 += 1, R1255 += 1 };
  s0 -> s0 [0, 65535] { R1308 += 1, R1309 += 1 };
  s0 -> s2 [0, 65535] { R1309 += 1, R1255 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R1309 += 1, R1254 += 1, R1255 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R1309 += 1, R1255 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1309 += 1, R1255 += 1, R5 += 1 };
  s2 -> s4 [0, 65535] { R1309 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1309 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 65535] { R1311 += 1, R1256 += 1, R1257 += 1 };
  s0 -> s0 [0, 65535] { R1310 += 1, R1311 += 1 };
  s0 -> s2 [0, 65535] { R1311 += 1, R1257 += 1, R1192 += 1, R1193 += 1 };
  s0 -> s3 [63, 63] { R1311 += 1, R1257 += 1, R1193 += 1 };
  s1 -> s1 [0, 65535] { R1311 += 1, R1256 += 1, R1257 += 1 };
  s1 -> s2 [0, 65535] { R1311 += 1, R1257 += 1, R1192 += 1, R1193 += 1 };
  s1 -> s3 [63, 63] { R1311 += 1, R1257 += 1, R1193 += 1 };
  s2 -> s2 [0, 65535] { R1311 += 1, R1257 += 1, R1192 += 1, R1193 += 1 };
  s2 -> s3 [63, 63] { R1311 += 1, R1257 += 1, R1193 += 1 };
  s3 -> s3 [0, 65535] { R1311 += 1, R1257 += 1 };
  s3 -> s4 [0, 65535] { R1311 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1311 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R1313 += 1, R1258 += 1, R1259 += 1 };
  s0 -> s0 [0, 65535] { R1312 += 1, R1313 += 1 };
  s0 -> s2 [0, 65535] { R1313 += 1, R1259 += 1, R1194 += 1, R1195 += 1 };
  s0 -> s3 [0, 65535] { R1313 += 1, R1259 += 1, R1195 += 1, R10 += 1 };
  s1 -> s1 [0, 65535] { R1313 += 1, R1258 += 1, R1259 += 1 };
  s1 -> s2 [0, 65535] { R1313 += 1, R1259 += 1, R1194 += 1, R1195 += 1 };
  s1 -> s3 [0, 65535] { R1313 += 1, R1259 += 1, R1195 += 1, R10 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s5 [0, 65535] { R1313 += 1 };
  s2 -> s2 [0, 65535] { R1313 += 1, R1259 += 1, R1194 += 1, R1195 += 1 };
  s2 -> s3 [0, 65535] { R1313 += 1, R1259 += 1, R1195 += 1, R10 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R1313 += 1, R1259 += 1 };
  s3 -> s5 [0, 65535] { R1313 += 1 };
  s3 -> s3 [0, 65535] { R1313 += 1, R1259 += 1, R1195 += 1, R10 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1313 += 1, R1259 += 1 };
  s4 -> s5 [0, 65535] { R1313 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1313 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 58] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s0 -> s2 [0, 65535] { R1315 += 1, R1261 += 1, R1220 += 1, R1221 += 1 };
  s0 -> s0 [0, 65535] { R1314 += 1, R1315 += 1 };
  s0 -> s3 [0, 65535] { R1315 += 1, R1260 += 1, R1261 += 1 };
  s0 -> s4 [59, 59] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s0 -> s1 [60, 65535] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s1 -> s1 [0, 58] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s1 -> s4 [59, 59] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s1 -> s1 [60, 65535] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s2 -> s1 [0, 58] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s2 -> s2 [0, 65535] { R1315 += 1, R1261 += 1, R1220 += 1, R1221 += 1 };
  s2 -> s4 [59, 59] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s2 -> s1 [60, 65535] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s3 -> s1 [0, 58] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s3 -> s2 [0, 65535] { R1315 += 1, R1261 += 1, R1220 += 1, R1221 += 1 };
  s3 -> s3 [0, 65535] { R1315 += 1, R1260 += 1, R1261 += 1 };
  s3 -> s4 [59, 59] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s3 -> s1 [60, 65535] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s4 -> s5 [0, 65535] { R1315 += 1 };
  s4 -> s4 [0, 65535] { R1315 += 1, R1261 += 1, R1221 += 1 };
  s4 -> s6 [0, 65535] { R1315 += 1, R1261 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R1315 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R1315 += 1 };
  s6 -> s6 [0, 65535] { R1315 += 1, R1261 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R1317 += 1, R1263 += 1, R1222 += 1, R1223 += 1 };
  s0 -> s2 [0, 65535] { R1317 += 1, R1263 += 1, R1223 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R1316 += 1, R1317 += 1 };
  s0 -> s3 [0, 65535] { R1317 += 1, R1262 += 1, R1263 += 1 };
  s1 -> s1 [0, 65535] { R1317 += 1, R1263 += 1, R1222 += 1, R1223 += 1 };
  s1 -> s2 [0, 65535] { R1317 += 1, R1263 += 1, R1223 += 1, R4 += 1 };
  s1 -> s6 [0, 65535] { R1317 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1317 += 1, R1263 += 1, R1223 += 1, R4 += 1 };
  s2 -> s5 [0, 65535] { R1317 += 1, R1263 += 1 };
  s2 -> s6 [0, 65535] { R1317 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1317 += 1, R1263 += 1, R1222 += 1, R1223 += 1 };
  s3 -> s2 [0, 65535] { R1317 += 1, R1263 += 1, R1223 += 1, R4 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1317 += 1, R1262 += 1, R1263 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1317 += 1, R1263 += 1 };
  s5 -> s6 [0, 65535] { R1317 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1317 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 37] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s0 -> s2 [0, 65535] { R1319 += 1, R1265 += 1, R1225 += 1, R12 += 1 };
  s0 -> s3 [0, 65535] { R1319 += 1, R1265 += 1, R1224 += 1, R1225 += 1 };
  s0 -> s0 [0, 65535] { R1318 += 1, R1319 += 1 };
  s0 -> s4 [0, 65535] { R1319 += 1, R1264 += 1, R1265 += 1 };
  s0 -> s5 [38, 38] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s0 -> s1 [39, 65535] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s1 -> s1 [0, 37] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1319 += 1, R1265 += 1 };
  s1 -> s7 [0, 65535] { R1319 += 1 };
  s1 -> s5 [38, 38] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s1 -> s1 [39, 65535] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s2 -> s1 [0, 37] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s8 [0, 65535] { R1319 += 1, R1265 += 1 };
  s2 -> s2 [0, 65535] { R1319 += 1, R1265 += 1, R1225 += 1, R12 += 1 };
  s2 -> s7 [0, 65535] { R1319 += 1 };
  s2 -> s5 [38, 38] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s2 -> s1 [39, 65535] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s3 -> s1 [0, 37] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R1319 += 1, R1265 += 1, R1225 += 1, R12 += 1 };
  s3 -> s7 [0, 65535] { R1319 += 1 };
  s3 -> s3 [0, 65535] { R1319 += 1, R1265 += 1, R1224 += 1, R1225 += 1 };
  s3 -> s5 [38, 38] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s3 -> s1 [39, 65535] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s4 -> s1 [0, 37] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s2 [0, 65535] { R1319 += 1, R1265 += 1, R1225 += 1, R12 += 1 };
  s4 -> s3 [0, 65535] { R1319 += 1, R1265 += 1, R1224 += 1, R1225 += 1 };
  s4 -> s4 [0, 65535] { R1319 += 1, R1264 += 1, R1265 += 1 };
  s4 -> s5 [38, 38] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s4 -> s1 [39, 65535] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s5 -> s5 [0, 65535] { R1319 += 1, R1265 += 1, R1225 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1319 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1319 += 1, R1265 += 1 };
  s8 -> s7 [0, 65535] { R1319 += 1 };
  accepting s3, s4, s8, s2, s6, s1, s7, s0;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 58] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s0 -> s2 [0, 65535] { R1321 += 1, R1266 += 1, R1267 += 1 };
  s0 -> s3 [0, 65535] { R1321 += 1, R1267 += 1, R1226 += 1, R1227 += 1 };
  s0 -> s0 [0, 65535] { R1320 += 1, R1321 += 1 };
  s0 -> s4 [0, 65535] { R1321 += 1, R1267 += 1, R1227 += 1, R16 += 1, R17 += 1 };
  s0 -> s5 [59, 59] { R1321 += 1, R1267 += 1, R1227 += 1 };
  s0 -> s1 [60, 65535] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s1 -> s1 [0, 58] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s1 -> s5 [59, 59] { R1321 += 1, R1267 += 1, R1227 += 1 };
  s1 -> s1 [60, 65535] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s2 -> s1 [0, 58] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s2 -> s2 [0, 65535] { R1321 += 1, R1266 += 1, R1267 += 1 };
  s2 -> s3 [0, 65535] { R1321 += 1, R1267 += 1, R1226 += 1, R1227 += 1 };
  s2 -> s4 [0, 65535] { R1321 += 1, R1267 += 1, R1227 += 1, R16 += 1, R17 += 1 };
  s2 -> s5 [59, 59] { R1321 += 1, R1267 += 1, R1227 += 1 };
  s2 -> s1 [60, 65535] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s3 -> s1 [0, 58] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s3 -> s3 [0, 65535] { R1321 += 1, R1267 += 1, R1226 += 1, R1227 += 1 };
  s3 -> s4 [0, 65535] { R1321 += 1, R1267 += 1, R1227 += 1, R16 += 1, R17 += 1 };
  s3 -> s5 [59, 59] { R1321 += 1, R1267 += 1, R1227 += 1 };
  s3 -> s1 [60, 65535] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s4 -> s1 [0, 58] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s4 -> s4 [0, 65535] { R1321 += 1, R1267 += 1, R1227 += 1, R16 += 1, R17 += 1 };
  s4 -> s5 [59, 59] { R1321 += 1, R1267 += 1, R1227 += 1 };
  s4 -> s1 [60, 65535] { R1321 += 1, R1267 += 1, R1227 += 1, R17 += 1 };
  s5 -> s5 [0, 65535] { R1321 += 1, R1267 += 1, R1227 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1321 += 1, R1267 += 1 };
  s5 -> s8 [0, 65535] { R1321 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1321 += 1, R1267 += 1 };
  s7 -> s8 [0, 65535] { R1321 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1321 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 58] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s0 -> s2 [0, 65535] { R1323 += 1, R1269 += 1, R1229 += 1, R1200 += 1, R1201 += 1 };
  s0 -> s3 [0, 65535] { R1323 += 1, R1268 += 1, R1269 += 1 };
  s0 -> s4 [0, 65535] { R1323 += 1, R1269 += 1, R1228 += 1, R1229 += 1 };
  s0 -> s0 [0, 65535] { R1322 += 1, R1323 += 1 };
  s0 -> s1 [60, 65535] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s1 -> s1 [0, 58] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s1 -> s7 [0, 65535] { R1323 += 1, R1269 += 1 };
  s1 -> s5 [0, 65535] { R1323 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1323 += 1, R1269 += 1, R1229 += 1 };
  s1 -> s1 [60, 65535] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s2 -> s1 [0, 58] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s2 -> s7 [0, 65535] { R1323 += 1, R1269 += 1 };
  s2 -> s2 [0, 65535] { R1323 += 1, R1269 += 1, R1229 += 1, R1200 += 1, R1201 += 1 };
  s2 -> s5 [0, 65535] { R1323 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [60, 65535] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s3 -> s1 [0, 58] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s3 -> s2 [0, 65535] { R1323 += 1, R1269 += 1, R1229 += 1, R1200 += 1, R1201 += 1 };
  s3 -> s3 [0, 65535] { R1323 += 1, R1268 += 1, R1269 += 1 };
  s3 -> s4 [0, 65535] { R1323 += 1, R1269 += 1, R1228 += 1, R1229 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [60, 65535] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s4 -> s1 [0, 58] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s4 -> s2 [0, 65535] { R1323 += 1, R1269 += 1, R1229 += 1, R1200 += 1, R1201 += 1 };
  s4 -> s5 [0, 65535] { R1323 += 1 };
  s4 -> s4 [0, 65535] { R1323 += 1, R1269 += 1, R1228 += 1, R1229 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [60, 65535] { R1323 += 1, R1269 += 1, R1229 += 1, R1201 += 1 };
  s5 -> s5 [0, 65535] { R1323 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1323 += 1, R1269 += 1 };
  s7 -> s5 [0, 65535] { R1323 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1, R1203 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1, R1202 += 1, R1203 += 1 };
  s0 -> s3 [0, 65535] { R1325 += 1, R1270 += 1, R1271 += 1 };
  s0 -> s0 [0, 65535] { R1324 += 1, R1325 += 1 };
  s0 -> s4 [0, 65535] { R1325 += 1, R1271 += 1, R1230 += 1, R1231 += 1 };
  s1 -> s1 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1, R1203 += 1, R1 += 1 };
  s1 -> s8 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1 };
  s1 -> s5 [0, 65535] { R1325 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R1325 += 1, R1271 += 1 };
  s2 -> s1 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1, R1203 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1, R1202 += 1, R1203 += 1 };
  s2 -> s5 [0, 65535] { R1325 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R1325 += 1, R1271 += 1 };
  s3 -> s1 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1, R1203 += 1, R1 += 1 };
  s3 -> s2 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1, R1202 += 1, R1203 += 1 };
  s3 -> s3 [0, 65535] { R1325 += 1, R1270 += 1, R1271 += 1 };
  s3 -> s4 [0, 65535] { R1325 += 1, R1271 += 1, R1230 += 1, R1231 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1, R1203 += 1, R1 += 1 };
  s4 -> s2 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1, R1202 += 1, R1203 += 1 };
  s4 -> s5 [0, 65535] { R1325 += 1 };
  s4 -> s4 [0, 65535] { R1325 += 1, R1271 += 1, R1230 += 1, R1231 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1325 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R1325 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1325 += 1, R1271 += 1 };
  s8 -> s8 [0, 65535] { R1325 += 1, R1271 += 1, R1231 += 1 };
  s8 -> s5 [0, 65535] { R1325 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R1325 += 1, R1271 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 60] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s0 -> s2 [0, 65535] { R1327 += 1, R1272 += 1, R1273 += 1 };
  s0 -> s3 [0, 65535] { R1327 += 1, R1273 += 1, R1232 += 1, R1233 += 1 };
  s0 -> s4 [0, 65535] { R1327 += 1, R1273 += 1, R1233 += 1, R1204 += 1, R1205 += 1 };
  s0 -> s0 [0, 65535] { R1326 += 1, R1327 += 1 };
  s0 -> s1 [62, 65535] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s1 -> s1 [0, 60] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1327 += 1, R1273 += 1 };
  s1 -> s7 [0, 65535] { R1327 += 1 };
  s1 -> s1 [0, 65535] { R1327 += 1, R1273 += 1, R1233 += 1 };
  s1 -> s1 [62, 65535] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s2 -> s1 [0, 60] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1327 += 1, R1272 += 1, R1273 += 1 };
  s2 -> s3 [0, 65535] { R1327 += 1, R1273 += 1, R1232 += 1, R1233 += 1 };
  s2 -> s4 [0, 65535] { R1327 += 1, R1273 += 1, R1233 += 1, R1204 += 1, R1205 += 1 };
  s2 -> s1 [62, 65535] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s3 -> s1 [0, 60] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R1327 += 1 };
  s3 -> s3 [0, 65535] { R1327 += 1, R1273 += 1, R1232 += 1, R1233 += 1 };
  s3 -> s4 [0, 65535] { R1327 += 1, R1273 += 1, R1233 += 1, R1204 += 1, R1205 += 1 };
  s3 -> s1 [62, 65535] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s4 -> s1 [0, 60] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1327 += 1, R1273 += 1 };
  s4 -> s7 [0, 65535] { R1327 += 1 };
  s4 -> s4 [0, 65535] { R1327 += 1, R1273 += 1, R1233 += 1, R1204 += 1, R1205 += 1 };
  s4 -> s1 [62, 65535] { R1327 += 1, R1273 += 1, R1233 += 1, R1205 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1327 += 1, R1273 += 1 };
  s6 -> s7 [0, 65535] { R1327 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1327 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1, R1207 += 1, R0 += 1 };
  s0 -> s0 [0, 65535] { R1328 += 1, R1329 += 1 };
  s0 -> s2 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1, R1206 += 1, R1207 += 1 };
  s0 -> s3 [0, 65535] { R1329 += 1, R1274 += 1, R1275 += 1 };
  s0 -> s4 [0, 65535] { R1329 += 1, R1275 += 1, R1234 += 1, R1235 += 1 };
  s1 -> s1 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1, R1207 += 1, R0 += 1 };
  s1 -> s8 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R1329 += 1, R1275 += 1 };
  s1 -> s6 [0, 65535] { R1329 += 1 };
  s2 -> s1 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1, R1207 += 1, R0 += 1 };
  s2 -> s2 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1, R1206 += 1, R1207 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R1329 += 1, R1275 += 1 };
  s2 -> s6 [0, 65535] { R1329 += 1 };
  s3 -> s1 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1, R1207 += 1, R0 += 1 };
  s3 -> s2 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1, R1206 += 1, R1207 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1329 += 1, R1274 += 1, R1275 += 1 };
  s3 -> s4 [0, 65535] { R1329 += 1, R1275 += 1, R1234 += 1, R1235 += 1 };
  s4 -> s1 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1, R1207 += 1, R0 += 1 };
  s4 -> s2 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1, R1206 += 1, R1207 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1329 += 1 };
  s4 -> s4 [0, 65535] { R1329 += 1, R1275 += 1, R1234 += 1, R1235 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1329 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1329 += 1, R1275 += 1 };
  s7 -> s6 [0, 65535] { R1329 += 1 };
  s8 -> s8 [0, 65535] { R1329 += 1, R1275 += 1, R1235 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R1329 += 1, R1275 += 1 };
  s8 -> s6 [0, 65535] { R1329 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 63] { R1331 += 1, R1277 += 1 };
  s0 -> s2 [0, 65535] { R1331 += 1, R1276 += 1, R1277 += 1 };
  s0 -> s0 [0, 65535] { R1330 += 1, R1331 += 1 };
  s0 -> s3 [64, 64] { R1331 += 1, R1277 += 1 };
  s0 -> s1 [65, 65535] { R1331 += 1, R1277 += 1 };
  s1 -> s1 [0, 63] { R1331 += 1, R1277 += 1 };
  s1 -> s3 [64, 64] { R1331 += 1, R1277 += 1 };
  s1 -> s1 [65, 65535] { R1331 += 1, R1277 += 1 };
  s2 -> s1 [0, 63] { R1331 += 1, R1277 += 1 };
  s2 -> s2 [0, 65535] { R1331 += 1, R1276 += 1, R1277 += 1 };
  s2 -> s3 [64, 64] { R1331 += 1, R1277 += 1 };
  s2 -> s1 [65, 65535] { R1331 += 1, R1277 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1331 += 1 };
  s3 -> s3 [0, 65535] { R1331 += 1, R1277 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1331 += 1 };
  accepting s3, s4, s5;
};
automaton uri_17 {
  init s0;
  s0 -> s0 [0, 65535] { R1332 += 1, R1333 += 1 };
  s0 -> s1 [0, 65535] { R1333 += 1, R1279 += 1, R7 += 1 };
  s0 -> s2 [0, 65535] { R1333 += 1, R1278 += 1, R1279 += 1 };
  s1 -> s1 [0, 65535] { R1333 += 1, R1279 += 1, R7 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1333 += 1 };
  s2 -> s1 [0, 65535] { R1333 += 1, R1279 += 1, R7 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1333 += 1, R1278 += 1, R1279 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1333 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 36] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s0 -> s2 [0, 65535] { R1335 += 1, R1280 += 1, R1281 += 1 };
  s0 -> s3 [0, 65535] { R1335 += 1, R1281 += 1, R1216 += 1, R1217 += 1 };
  s0 -> s0 [0, 65535] { R1334 += 1, R1335 += 1 };
  s0 -> s1 [38, 42] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s0 -> s1 [44, 57] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s0 -> s1 [59, 63] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s0 -> s1 [65, 65535] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s1 -> s1 [0, 36] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1335 += 1, R1281 += 1 };
  s1 -> s5 [0, 65535] { R1335 += 1 };
  s1 -> s1 [38, 42] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s1 -> s1 [44, 57] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s1 -> s1 [59, 63] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s1 -> s1 [65, 65535] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s2 -> s1 [0, 36] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s2 -> s2 [0, 65535] { R1335 += 1, R1280 += 1, R1281 += 1 };
  s2 -> s3 [0, 65535] { R1335 += 1, R1281 += 1, R1216 += 1, R1217 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [38, 42] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s2 -> s1 [44, 57] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s2 -> s1 [59, 63] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s2 -> s1 [65, 65535] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s3 -> s1 [0, 36] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s3 -> s3 [0, 65535] { R1335 += 1, R1281 += 1, R1216 += 1, R1217 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1335 += 1 };
  s3 -> s1 [38, 42] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s3 -> s1 [44, 57] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s3 -> s1 [59, 63] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s3 -> s1 [65, 65535] { R1335 += 1, R1281 += 1, R1217 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1335 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R1337 += 1, R1283 += 1, R1218 += 1, R1219 += 1 };
  s0 -> s0 [0, 65535] { R1336 += 1, R1337 += 1 };
  s0 -> s2 [0, 65535] { R1337 += 1, R1283 += 1, R1219 += 1, R3 += 1 };
  s0 -> s3 [0, 65535] { R1337 += 1, R1282 += 1, R1283 += 1 };
  s1 -> s1 [0, 65535] { R1337 += 1, R1283 += 1, R1218 += 1, R1219 += 1 };
  s1 -> s2 [0, 65535] { R1337 += 1, R1283 += 1, R1219 += 1, R3 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1337 += 1 };
  s2 -> s2 [0, 65535] { R1337 += 1, R1283 += 1, R1219 += 1, R3 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1337 += 1 };
  s2 -> s6 [0, 65535] { R1337 += 1, R1283 += 1 };
  s3 -> s1 [0, 65535] { R1337 += 1, R1283 += 1, R1218 += 1, R1219 += 1 };
  s3 -> s2 [0, 65535] { R1337 += 1, R1283 += 1, R1219 += 1, R3 += 1 };
  s3 -> s3 [0, 65535] { R1337 += 1, R1282 += 1, R1283 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1337 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1337 += 1 };
  s6 -> s6 [0, 65535] { R1337 += 1, R1283 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 43] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s0 -> s2 [0, 65535] { R1339 += 1, R1284 += 1, R1285 += 1 };
  s0 -> s0 [0, 65535] { R1338 += 1, R1339 += 1 };
  s0 -> s3 [0, 65535] { R1339 += 1, R1285 += 1, R1236 += 1, R1237 += 1 };
  s0 -> s1 [45, 57] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s0 -> s4 [58, 58] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s0 -> s1 [59, 65535] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s1 -> s1 [0, 43] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s1 -> s1 [45, 57] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s1 -> s4 [58, 58] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s1 -> s1 [59, 65535] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s2 -> s1 [0, 43] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s2 -> s2 [0, 65535] { R1339 += 1, R1284 += 1, R1285 += 1 };
  s2 -> s3 [0, 65535] { R1339 += 1, R1285 += 1, R1236 += 1, R1237 += 1 };
  s2 -> s1 [45, 57] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s2 -> s4 [58, 58] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s2 -> s1 [59, 65535] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s3 -> s1 [0, 43] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s3 -> s3 [0, 65535] { R1339 += 1, R1285 += 1, R1236 += 1, R1237 += 1 };
  s3 -> s1 [45, 57] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s3 -> s4 [58, 58] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s3 -> s1 [59, 65535] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s4 -> s4 [0, 43] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s4 -> s4 [0, 65535] { R1339 += 1, R1285 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1339 += 1 };
  s4 -> s4 [45, 65535] { R1339 += 1, R1285 += 1, R1237 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1339 += 1 };
  accepting s4, s5, s6;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R1341 += 1, R1287 += 1, R1238 += 1, R1239 += 1 };
  s0 -> s2 [0, 65535] { R1341 += 1, R1286 += 1, R1287 += 1 };
  s0 -> s3 [0, 65535] { R1341 += 1, R1287 += 1, R1239 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R1340 += 1, R1341 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1341 += 1, R1287 += 1, R1238 += 1, R1239 += 1 };
  s1 -> s3 [0, 65535] { R1341 += 1, R1287 += 1, R1239 += 1, R6 += 1 };
  s1 -> s6 [0, 65535] { R1341 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1341 += 1, R1287 += 1, R1238 += 1, R1239 += 1 };
  s2 -> s2 [0, 65535] { R1341 += 1, R1286 += 1, R1287 += 1 };
  s2 -> s3 [0, 65535] { R1341 += 1, R1287 += 1, R1239 += 1, R6 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1341 += 1, R1287 += 1 };
  s3 -> s3 [0, 65535] { R1341 += 1, R1287 += 1, R1239 += 1, R6 += 1 };
  s3 -> s6 [0, 65535] { R1341 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1341 += 1, R1287 += 1 };
  s5 -> s6 [0, 65535] { R1341 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1341 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 57] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s0 -> s0 [0, 65535] { R1342 += 1, R1343 += 1 };
  s0 -> s2 [0, 65535] { R1343 += 1, R1288 += 1, R1289 += 1 };
  s0 -> s3 [0, 65535] { R1343 += 1, R1289 += 1, R1241 += 1, R688 += 1, R689 += 1 };
  s0 -> s4 [0, 65535] { R1343 += 1, R1289 += 1, R1240 += 1, R1241 += 1 };
  s0 -> s5 [58, 58] { R1343 += 1, R1289 += 1, R1241 += 1 };
  s0 -> s1 [59, 65535] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s1 -> s1 [0, 57] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s1 -> s5 [58, 58] { R1343 += 1, R1289 += 1, R1241 += 1 };
  s1 -> s1 [59, 65535] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s2 -> s1 [0, 57] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s2 -> s2 [0, 65535] { R1343 += 1, R1288 += 1, R1289 += 1 };
  s2 -> s3 [0, 65535] { R1343 += 1, R1289 += 1, R1241 += 1, R688 += 1, R689 += 1 };
  s2 -> s4 [0, 65535] { R1343 += 1, R1289 += 1, R1240 += 1, R1241 += 1 };
  s2 -> s5 [58, 58] { R1343 += 1, R1289 += 1, R1241 += 1 };
  s2 -> s1 [59, 65535] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s3 -> s1 [0, 57] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s3 -> s3 [0, 65535] { R1343 += 1, R1289 += 1, R1241 += 1, R688 += 1, R689 += 1 };
  s3 -> s5 [58, 58] { R1343 += 1, R1289 += 1, R1241 += 1 };
  s3 -> s1 [59, 65535] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s4 -> s1 [0, 57] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s4 -> s3 [0, 65535] { R1343 += 1, R1289 += 1, R1241 += 1, R688 += 1, R689 += 1 };
  s4 -> s4 [0, 65535] { R1343 += 1, R1289 += 1, R1240 += 1, R1241 += 1 };
  s4 -> s5 [58, 58] { R1343 += 1, R1289 += 1, R1241 += 1 };
  s4 -> s1 [59, 65535] { R1343 += 1, R1289 += 1, R1241 += 1, R689 += 1 };
  s5 -> s6 [0, 65535] { R1343 += 1, R1289 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R1343 += 1 };
  s5 -> s5 [0, 65535] { R1343 += 1, R1289 += 1, R1241 += 1 };
  s6 -> s6 [0, 65535] { R1343 += 1, R1289 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R1343 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1343 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 90] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s0 -> s2 [0, 65535] { R1345 += 1, R1291 += 1, R1242 += 1, R1243 += 1 };
  s0 -> s0 [0, 65535] { R1344 += 1, R1345 += 1 };
  s0 -> s3 [0, 65535] { R1345 += 1, R1290 += 1, R1291 += 1 };
  s0 -> s4 [0, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1196 += 1, R1197 += 1 };
  s0 -> s5 [91, 91] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s0 -> s1 [92, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s6 [0, 65535] { R1345 += 1 };
  s1 -> s7 [0, 65535] { R1345 += 1, R1291 += 1 };
  s1 -> s1 [0, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s1 -> s9 [0, 65535] { R1345 += 1, R1291 += 1, R1243 += 1 };
  s2 -> s1 [0, 90] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s2 -> s2 [0, 65535] { R1345 += 1, R1291 += 1, R1242 += 1, R1243 += 1 };
  s2 -> s6 [0, 65535] { R1345 += 1 };
  s2 -> s4 [0, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1196 += 1, R1197 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [91, 91] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s2 -> s1 [92, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s3 -> s1 [0, 90] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s3 -> s2 [0, 65535] { R1345 += 1, R1291 += 1, R1242 += 1, R1243 += 1 };
  s3 -> s3 [0, 65535] { R1345 += 1, R1290 += 1, R1291 += 1 };
  s3 -> s4 [0, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1196 += 1, R1197 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s5 [91, 91] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s3 -> s1 [92, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s4 -> s1 [0, 90] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s4 -> s6 [0, 65535] { R1345 += 1 };
  s4 -> s4 [0, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1196 += 1, R1197 += 1 };
  s4 -> s7 [0, 65535] { R1345 += 1, R1291 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s5 [91, 91] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s4 -> s1 [92, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s5 -> s1 [0, 65535] { R1345 += 1, R1291 += 1, R1243 += 1, R1197 += 1 };
  s6 -> s6 [0, 65535] { R1345 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R1345 += 1 };
  s7 -> s7 [0, 65535] { R1345 += 1, R1291 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s6 [0, 65535] { R1345 += 1 };
  s9 -> s7 [0, 65535] { R1345 += 1, R1291 += 1 };
  s9 -> s9 [0, 65535] { R1345 += 1, R1291 += 1, R1243 += 1 };
  accepting s3, s4, s8, s2, s9, s6, s1, s7, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s0 [0, 65535] { R1346 += 1, R1347 += 1 };
  s0 -> s1 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1, R1198 += 1, R1199 += 1 };
  s0 -> s2 [0, 65535] { R1347 += 1, R1293 += 1, R1244 += 1, R1245 += 1 };
  s0 -> s3 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1, R1199 += 1, R11 += 1 };
  s0 -> s4 [0, 65535] { R1347 += 1, R1292 += 1, R1293 += 1 };
  s1 -> s1 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1, R1198 += 1, R1199 += 1 };
  s1 -> s6 [0, 65535] { R1347 += 1, R1293 += 1 };
  s1 -> s7 [0, 65535] { R1347 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1, R1199 += 1, R11 += 1 };
  s2 -> s1 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1, R1198 += 1, R1199 += 1 };
  s2 -> s2 [0, 65535] { R1347 += 1, R1293 += 1, R1244 += 1, R1245 += 1 };
  s2 -> s7 [0, 65535] { R1347 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1, R1199 += 1, R11 += 1 };
  s3 -> s6 [0, 65535] { R1347 += 1, R1293 += 1 };
  s3 -> s7 [0, 65535] { R1347 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1, R1199 += 1, R11 += 1 };
  s3 -> s8 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1 };
  s4 -> s1 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1, R1198 += 1, R1199 += 1 };
  s4 -> s2 [0, 65535] { R1347 += 1, R1293 += 1, R1244 += 1, R1245 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1, R1199 += 1, R11 += 1 };
  s4 -> s4 [0, 65535] { R1347 += 1, R1292 += 1, R1293 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1347 += 1, R1293 += 1 };
  s6 -> s7 [0, 65535] { R1347 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1347 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R1347 += 1, R1293 += 1 };
  s8 -> s7 [0, 65535] { R1347 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R1347 += 1, R1293 += 1, R1245 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 57] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s0 -> s2 [0, 65535] { R1349 += 1, R1294 += 1, R1295 += 1 };
  s0 -> s3 [0, 65535] { R1349 += 1, R1295 += 1, R1246 += 1, R1247 += 1 };
  s0 -> s0 [0, 65535] { R1348 += 1, R1349 += 1 };
  s0 -> s4 [0, 65535] { R1349 += 1, R1295 += 1, R1247 += 1, R1208 += 1, R1209 += 1 };
  s0 -> s1 [59, 65535] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s1 -> s1 [0, 57] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s1 -> s5 [0, 65535] { R1349 += 1, R1295 += 1 };
  s1 -> s1 [0, 65535] { R1349 += 1, R1295 += 1, R1247 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R1349 += 1 };
  s1 -> s1 [59, 65535] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s2 -> s1 [0, 57] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s2 -> s2 [0, 65535] { R1349 += 1, R1294 += 1, R1295 += 1 };
  s2 -> s3 [0, 65535] { R1349 += 1, R1295 += 1, R1246 += 1, R1247 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R1349 += 1, R1295 += 1, R1247 += 1, R1208 += 1, R1209 += 1 };
  s2 -> s1 [59, 65535] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s3 -> s1 [0, 57] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s3 -> s3 [0, 65535] { R1349 += 1, R1295 += 1, R1246 += 1, R1247 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R1349 += 1, R1295 += 1, R1247 += 1, R1208 += 1, R1209 += 1 };
  s3 -> s7 [0, 65535] { R1349 += 1 };
  s3 -> s1 [59, 65535] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s4 -> s1 [0, 57] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s4 -> s5 [0, 65535] { R1349 += 1, R1295 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1349 += 1, R1295 += 1, R1247 += 1, R1208 += 1, R1209 += 1 };
  s4 -> s7 [0, 65535] { R1349 += 1 };
  s4 -> s1 [59, 65535] { R1349 += 1, R1295 += 1, R1247 += 1, R1209 += 1 };
  s5 -> s5 [0, 65535] { R1349 += 1, R1295 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1349 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1349 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s0 [0, 65535] { R1350 += 1, R1351 += 1 };
  s0 -> s1 [0, 65535] { R1351 += 1, R1297 += 1, R1248 += 1, R1249 += 1 };
  s0 -> s2 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1, R1210 += 1, R1211 += 1 };
  s0 -> s3 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1, R1211 += 1, R2 += 1 };
  s0 -> s4 [0, 65535] { R1351 += 1, R1296 += 1, R1297 += 1 };
  s1 -> s1 [0, 65535] { R1351 += 1, R1297 += 1, R1248 += 1, R1249 += 1 };
  s1 -> s2 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1, R1210 += 1, R1211 += 1 };
  s1 -> s3 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1, R1211 += 1, R2 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R1351 += 1 };
  s2 -> s6 [0, 65535] { R1351 += 1, R1297 += 1 };
  s2 -> s2 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1, R1210 += 1, R1211 += 1 };
  s2 -> s3 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1, R1211 += 1, R2 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R1351 += 1 };
  s3 -> s6 [0, 65535] { R1351 += 1, R1297 += 1 };
  s3 -> s3 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1, R1211 += 1, R2 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R1351 += 1 };
  s3 -> s8 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1 };
  s4 -> s1 [0, 65535] { R1351 += 1, R1297 += 1, R1248 += 1, R1249 += 1 };
  s4 -> s2 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1, R1210 += 1, R1211 += 1 };
  s4 -> s3 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1, R1211 += 1, R2 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1351 += 1, R1296 += 1, R1297 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1351 += 1, R1297 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R1351 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1351 += 1 };
  s8 -> s6 [0, 65535] { R1351 += 1, R1297 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R1351 += 1 };
  s8 -> s8 [0, 65535] { R1351 += 1, R1297 += 1, R1249 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s0 -> s2 [0, 65535] { R1353 += 1, R1299 += 1, R1250 += 1, R1251 += 1 };
  s0 -> s3 [0, 65535] { R1353 += 1, R1298 += 1, R1299 += 1 };
  s0 -> s0 [0, 65535] { R1352 += 1, R1353 += 1 };
  s0 -> s4 [0, 65535] { R1353 += 1, R1299 += 1, R1251 += 1, R1212 += 1, R1213 += 1 };
  s0 -> s1 [91, 65535] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s1 -> s1 [0, 64] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s1 -> s5 [0, 65535] { R1353 += 1, R1299 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1353 += 1, R1299 += 1, R1251 += 1 };
  s1 -> s7 [0, 65535] { R1353 += 1 };
  s1 -> s1 [91, 65535] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s2 -> s1 [0, 64] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s2 -> s2 [0, 65535] { R1353 += 1, R1299 += 1, R1250 += 1, R1251 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R1353 += 1 };
  s2 -> s4 [0, 65535] { R1353 += 1, R1299 += 1, R1251 += 1, R1212 += 1, R1213 += 1 };
  s2 -> s1 [91, 65535] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s3 -> s1 [0, 64] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s3 -> s2 [0, 65535] { R1353 += 1, R1299 += 1, R1250 += 1, R1251 += 1 };
  s3 -> s3 [0, 65535] { R1353 += 1, R1298 += 1, R1299 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R1353 += 1, R1299 += 1, R1251 += 1, R1212 += 1, R1213 += 1 };
  s3 -> s1 [91, 65535] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s4 -> s1 [0, 64] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s4 -> s5 [0, 65535] { R1353 += 1, R1299 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R1353 += 1 };
  s4 -> s4 [0, 65535] { R1353 += 1, R1299 += 1, R1251 += 1, R1212 += 1, R1213 += 1 };
  s4 -> s1 [91, 65535] { R1353 += 1, R1299 += 1, R1251 += 1, R1213 += 1 };
  s5 -> s5 [0, 65535] { R1353 += 1, R1299 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1353 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1353 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1, R1214 += 1, R1215 += 1 };
  s0 -> s0 [0, 65535] { R1354 += 1, R1355 += 1 };
  s0 -> s2 [0, 65535] { R1355 += 1, R1300 += 1, R1301 += 1 };
  s0 -> s3 [0, 65535] { R1355 += 1, R1301 += 1, R1252 += 1, R1253 += 1 };
  s0 -> s4 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1, R1215 += 1, R1191 += 1 };
  s1 -> s1 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1, R1214 += 1, R1215 += 1 };
  s1 -> s5 [0, 65535] { R1355 += 1, R1301 += 1 };
  s1 -> s6 [0, 65535] { R1355 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1, R1215 += 1, R1191 += 1 };
  s2 -> s1 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1, R1214 += 1, R1215 += 1 };
  s2 -> s2 [0, 65535] { R1355 += 1, R1300 += 1, R1301 += 1 };
  s2 -> s3 [0, 65535] { R1355 += 1, R1301 += 1, R1252 += 1, R1253 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1, R1215 += 1, R1191 += 1 };
  s3 -> s1 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1, R1214 += 1, R1215 += 1 };
  s3 -> s6 [0, 65535] { R1355 += 1 };
  s3 -> s3 [0, 65535] { R1355 += 1, R1301 += 1, R1252 += 1, R1253 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1, R1215 += 1, R1191 += 1 };
  s4 -> s5 [0, 65535] { R1355 += 1, R1301 += 1 };
  s4 -> s6 [0, 65535] { R1355 += 1 };
  s4 -> s7 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1, R1215 += 1, R1191 += 1 };
  s5 -> s5 [0, 65535] { R1355 += 1, R1301 += 1 };
  s5 -> s6 [0, 65535] { R1355 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R1355 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s5 [0, 65535] { R1355 += 1, R1301 += 1 };
  s7 -> s6 [0, 65535] { R1355 += 1 };
  s7 -> s7 [0, 65535] { R1355 += 1, R1301 += 1, R1253 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
constraint R4 = R1203 && R5 = R1235 && R6 = R1211 && R7 = R1253 && R8 = R1275 && R9 = R1355 && R16 = 0 && R17 = R1207 && R688 = 0 && R689 - R1210 = -1 && R1024 = 0 && R1025 = R1301 && R1192 = 0 && R1193 = 1 && R1194 = 0 && R1195 = 1 && R1196 = 0 && R1197 = 1 && R1198 = 0 && R1199 = 1 && R1200 - R1207 = 1 && R1201 = R1203 && R1202 - R1207 = 1 && R1204 = 0 && R1205 = R1207 && R1206 = 0 && R1208 = R1210 && R1209 = R1211 && R1216 = 0 && R1217 = 4 && R1218 = 0 && R1219 = 4 && R1220 = 1 && R1221 = R1235 && R1222 = 1 && R1223 = R1235 && R1224 = 1 && R1225 = R1235 && R1226 = 1 && R1227 = R1235 && R1228 = 1 && R1229 = R1235 && R1230 = 1 && R1231 = R1235 && R1232 = 1 && R1233 = R1235 && R1234 = 1 && R1236 = 5 && R1237 = R1253 && R1238 = 5 && R1239 = R1253 && R1240 = 5 && R1241 = R1253 && R1242 = 5 && R1243 = R1253 && R1244 = 5 && R1245 = R1253 && R1246 = 5 && R1247 = R1253 && R1248 = 5 && R1249 = R1253 && R1250 = 5 && R1251 = R1253 && R1252 = 5 && R1254 - R1301 = 1 && R1255 = R1275 && R1256 - R1301 = 1 && R1257 = R1275 && R1258 - R1301 = 1 && R1259 = R1275 && R1260 - R1301 = 1 && R1261 = R1275 && R1262 - R1301 = 1 && R1263 = R1275 && R1264 - R1301 = 1 && R1265 = R1275 && R1266 - R1301 = 1 && R1267 = R1275 && R1268 - R1301 = 1 && R1269 = R1275 && R1270 - R1301 = 1 && R1271 = R1275 && R1272 - R1301 = 1 && R1273 = R1275 && R1274 - R1301 = 1 && R1276 = 0 && R1277 = R1301 && R1278 = 0 && R1279 = R1301 && R1280 = 0 && R1281 = R1301 && R1282 = 0 && R1283 = R1301 && R1284 = 0 && R1285 = R1301 && R1286 = 0 && R1287 = R1301 && R1288 = 0 && R1289 = R1301 && R1290 = 0 && R1291 = R1301 && R1292 = 0 && R1293 = R1301 && R1294 = 0 && R1295 = R1301 && R1296 = 0 && R1297 = R1301 && R1298 = 0 && R1299 = R1301 && R1300 = 0 && R1302 = 10 && R1303 = R1355 && R1304 = 10 && R1305 = R1355 && R1306 = 10 && R1307 = R1355 && R1308 = 10 && R1309 = R1355 && R1310 = 10 && R1311 = R1355 && R1312 = 10 && R1313 = R1355 && R1314 = 10 && R1315 = R1355 && R1316 = 10 && R1317 = R1355 && R1318 = 10 && R1319 = R1355 && R1320 = 10 && R1321 = R1355 && R1322 = 10 && R1323 = R1355 && R1324 = 10 && R1325 = R1355 && R1326 = 10 && R1327 = R1355 && R1328 = 10 && R1329 = R1355 && R1330 = 10 && R1331 = R1355 && R1332 = 10 && R1333 = R1355 && R1334 = 10 && R1335 = R1355 && R1336 = 10 && R1337 = R1355 && R1338 = 10 && R1339 = R1355 && R1340 = 10 && R1341 = R1355 && R1342 = 10 && R1343 = R1355 && R1344 = 10 && R1345 = R1355 && R1346 = 10 && R1347 = R1355 && R1348 = 10 && R1349 = R1355 && R1350 = 10 && R1351 = R1355 && R1352 = 10 && R1353 = R1355 && R1354 = 10 && R0 != 0 && R1 != 0 && R2 != 0 && R3 != 0 && R12 < 1 && R1207 < R1203 && -1 < R1207 && R1210 - R1211 < 1 && 0 < R1210 && 0 < R1235 && 4 < R1253 && R1301 < R1275 && -1 < R1301 && 9 < R1355 && (R1212 != 0 || R1210 - R1213 = 1 || (R1191 = 0 && R1210 = 1)) && (R1214 != 0 || R1210 - R1215 = 1 || (R1191 = 0 && R1210 = 1)) && (R1212 = 0 || (R1191 = 0 && R1210 = 1)) && (R1214 = 0 || (R1191 = 0 && R1210 = 1));
// End of Parikh automata intersection problem
