// Parikh automata intersection problem, generated by OSTRICH+
counter int R11, R12, R19, R2, R20, R21, R22, R23, R24, R2711, R2712, R2713, R2714, R2715, R2716, R2717, R2718, R2719, R2720, R2721, R2722, R2873, R2874, R2875, R2876, R2877, R2878, R2879, R2880, R2881, R2882, R2883, R2884, R2885, R2886, R2887, R2888, R2889, R2890, R2891, R2892, R2893, R2894, R2895, R2896, R2897, R2898, R2899, R2900, R2901, R2902, R2903, R2904, R2905, R2906, R2907, R2908, R2909, R2910, R2911, R2912, R2913, R2914, R2915, R2916, R2917, R2918, R2919, R2920, R2921, R2922, R2923, R2924, R2925, R2926, R2927, R2928, R2929, R2930, R2931, R2932, R2933, R2934, R2935, R2936, R2937, R2938, R2939, R2940, R2941, R2942, R2943, R2944, R2945, R2946, R2947, R2948, R2949, R2950, R2951, R2952, R2953, R2954, R2955, R2956, R2957, R2958, R2959, R2960, R2961, R2962, R2963, R2964, R2965, R2966, R2967, R2968, R2969, R2970, R2971, R2972, R2973, R2974, R2975, R2976, R2977, R2978, R2979, R2980, R2981, R2982, R2983, R2984, R2985, R2986, R2987, R2988, R2989, R2990, R2991, R2992, R2993, R2994, R2995, R2996, R2997, R2998, R2999, R3, R3000, R3001, R3002, R3003, R3004, R3005, R3006, R3007, R3008, R3009, R3010, R3011, R3012, R3013, R3014, R3015, R3016, R3017, R3018, R3019, R3020, R3021, R3022, R4, R405, R406, R407, R408, R409, R410, R411, R412, R413, R414, R415, R416, R417, R418, R419, R420, R421, R422, R423, R424, R425, R426, R427, R428, R429, R430, R431, R432, R433, R434, R435, R436;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining c11
automaton c11_0 {
  init s0;
  s0 -> s1 [115, 115];
  accepting s1;
};
};
synchronised {  // Automata constraining P53
automaton P53_0 {
  init s0;
  s0 -> s1 [112, 112];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 43] { R2946 += 1 };
  s0 -> s0 [0, 65535] { R2945 += 1, R2946 += 1 };
  s0 -> s1 [45, 45] { R2946 += 1 };
  s0 -> s2 [46, 46] { R2946 += 1 };
  s0 -> s1 [48, 62] { R2946 += 1 };
  s0 -> s3 [65, 65] { R2946 += 1 };
  s0 -> s1 [66, 65535] { R2946 += 1 };
  s1 -> s1 [0, 43] { R2946 += 1 };
  s1 -> s1 [45, 45] { R2946 += 1 };
  s1 -> s2 [46, 46] { R2946 += 1 };
  s1 -> s1 [48, 62] { R2946 += 1 };
  s1 -> s3 [65, 65] { R2946 += 1 };
  s1 -> s1 [66, 65535] { R2946 += 1 };
  s2 -> s1 [0, 43] { R2946 += 1 };
  s2 -> s1 [45, 45] { R2946 += 1 };
  s2 -> s2 [46, 46] { R2946 += 1 };
  s2 -> s1 [48, 62] { R2946 += 1 };
  s2 -> s3 [65, 65] { R2946 += 1 };
  s2 -> s1 [66, 114] { R2946 += 1 };
  s2 -> s8 [115, 115] { R2946 += 1 };
  s2 -> s1 [116, 65535] { R2946 += 1 };
  s3 -> s3 [0, 43] { R2946 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R2946 += 1 };
  s3 -> s4 [46, 46] { R2946 += 1 };
  s3 -> s3 [48, 62] { R2946 += 1 };
  s3 -> s3 [65, 65535] { R2946 += 1 };
  s4 -> s3 [0, 43] { R2946 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R2946 += 1 };
  s4 -> s4 [46, 46] { R2946 += 1 };
  s4 -> s3 [48, 62] { R2946 += 1 };
  s4 -> s3 [65, 114] { R2946 += 1 };
  s4 -> s5 [115, 115] { R2946 += 1 };
  s4 -> s3 [116, 65535] { R2946 += 1 };
  s5 -> s3 [0, 43] { R2946 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R2946 += 1 };
  s5 -> s4 [46, 46] { R2946 += 1 };
  s5 -> s3 [48, 62] { R2946 += 1 };
  s5 -> s3 [65, 110] { R2946 += 1 };
  s5 -> s6 [111, 111] { R2946 += 1 };
  s5 -> s3 [112, 65535] { R2946 += 1 };
  s6 -> s3 [0, 43] { R2946 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R2946 += 1 };
  s6 -> s4 [46, 46] { R2946 += 1 };
  s6 -> s3 [48, 62] { R2946 += 1 };
  s6 -> s3 [65, 98] { R2946 += 1 };
  s6 -> s7 [99, 99] { R2946 += 1 };
  s6 -> s3 [100, 65535] { R2946 += 1 };
  s7 -> s3 [0, 43] { R2946 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R2946 += 1 };
  s7 -> s4 [46, 46] { R2946 += 1 };
  s7 -> s3 [48, 62] { R2946 += 1 };
  s7 -> s3 [65, 106] { R2946 += 1 };
  s7 -> s3 [108, 65535] { R2946 += 1 };
  s8 -> s1 [0, 43] { R2946 += 1 };
  s8 -> s1 [45, 45] { R2946 += 1 };
  s8 -> s2 [46, 46] { R2946 += 1 };
  s8 -> s1 [48, 62] { R2946 += 1 };
  s8 -> s3 [65, 65] { R2946 += 1 };
  s8 -> s1 [66, 110] { R2946 += 1 };
  s8 -> s9 [111, 111] { R2946 += 1 };
  s8 -> s1 [112, 65535] { R2946 += 1 };
  s9 -> s1 [0, 43] { R2946 += 1 };
  s9 -> s1 [45, 45] { R2946 += 1 };
  s9 -> s2 [46, 46] { R2946 += 1 };
  s9 -> s1 [48, 62] { R2946 += 1 };
  s9 -> s3 [65, 65] { R2946 += 1 };
  s9 -> s1 [66, 98] { R2946 += 1 };
  s9 -> s10 [99, 99] { R2946 += 1 };
  s9 -> s1 [100, 65535] { R2946 += 1 };
  s10 -> s1 [0, 43] { R2946 += 1 };
  s10 -> s1 [45, 45] { R2946 += 1 };
  s10 -> s2 [46, 46] { R2946 += 1 };
  s10 -> s1 [48, 62] { R2946 += 1 };
  s10 -> s3 [65, 65] { R2946 += 1 };
  s10 -> s1 [66, 106] { R2946 += 1 };
  s10 -> s1 [108, 65535] { R2946 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R2948 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R2947 += 1, R2948 += 1 };
  s1 -> s1 [0, 65535] { R2948 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 57] { R2950 += 1 };
  s0 -> s2 [0, 65535] { R2950 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R2949 += 1, R2950 += 1 };
  s0 -> s3 [58, 58] { R2950 += 1 };
  s0 -> s1 [59, 65535] { R2950 += 1 };
  s1 -> s1 [0, 57] { R2950 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R2950 += 1 };
  s1 -> s1 [59, 65535] { R2950 += 1 };
  s2 -> s1 [0, 57] { R2950 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2950 += 1, R11 += 1 };
  s2 -> s3 [58, 58] { R2950 += 1 };
  s2 -> s1 [59, 65535] { R2950 += 1 };
  s3 -> s3 [0, 65535] { R2950 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 64] { R2952 += 1 };
  s0 -> s0 [0, 65535] { R2951 += 1, R2952 += 1 };
  s0 -> s2 [0, 65535] { R2952 += 1, R12 += 1 };
  s0 -> s3 [65, 65] { R2952 += 1 };
  s0 -> s1 [66, 65535] { R2952 += 1 };
  s1 -> s1 [0, 64] { R2952 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R2952 += 1 };
  s1 -> s1 [66, 65535] { R2952 += 1 };
  s2 -> s1 [0, 64] { R2952 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2952 += 1, R12 += 1 };
  s2 -> s3 [65, 65] { R2952 += 1 };
  s2 -> s1 [66, 65535] { R2952 += 1 };
  s3 -> s3 [0, 65535] { R2952 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 90] { R2954 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R2953 += 1, R2954 += 1 };
  s0 -> s2 [0, 65535] { R2954 += 1, R21 += 1, R22 += 1 };
  s0 -> s3 [91, 91] { R2954 += 1, R22 += 1 };
  s0 -> s1 [92, 65535] { R2954 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R2954 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2954 += 1 };
  s2 -> s1 [0, 90] { R2954 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R2954 += 1, R21 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [91, 91] { R2954 += 1, R22 += 1 };
  s2 -> s1 [92, 65535] { R2954 += 1, R22 += 1 };
  s3 -> s1 [0, 65535] { R2954 += 1, R22 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2954 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R2956 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R2955 += 1, R2956 += 1 };
  s0 -> s2 [0, 65535] { R2956 += 1, R24 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R2956 += 1, R23 += 1, R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R2956 += 1, R24 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2956 += 1 };
  s2 -> s2 [0, 65535] { R2956 += 1, R24 += 1, R4 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2956 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 64] { R2958 += 1, R2880 += 1 };
  s0 -> s0 [0, 65535] { R2957 += 1, R2958 += 1 };
  s0 -> s2 [0, 65535] { R2958 += 1, R2879 += 1, R2880 += 1 };
  s0 -> s1 [66, 65535] { R2958 += 1, R2880 += 1 };
  s1 -> s1 [0, 64] { R2958 += 1, R2880 += 1 };
  s1 -> s1 [0, 65535] { R2958 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [66, 65535] { R2958 += 1, R2880 += 1 };
  s2 -> s1 [0, 64] { R2958 += 1, R2880 += 1 };
  s2 -> s2 [0, 65535] { R2958 += 1, R2879 += 1, R2880 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [66, 65535] { R2958 += 1, R2880 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_9 {
  init s0;
  s0 -> s0 [0, 65535] { R2959 += 1, R2960 += 1 };
  s0 -> s1 [0, 65535] { R2960 += 1, R2881 += 1, R2882 += 1 };
  s0 -> s2 [0, 65535] { R2960 += 1, R2882 += 1, R19 += 1 };
  s1 -> s1 [0, 65535] { R2960 += 1, R2881 += 1, R2882 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2960 += 1, R2882 += 1, R19 += 1 };
  s2 -> s3 [0, 65535] { R2960 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2960 += 1, R2882 += 1, R19 += 1 };
  s3 -> s3 [0, 65535] { R2960 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65] { R2962 += 1, R2884 += 1 };
  s0 -> s2 [0, 65535] { R2962 += 1, R2883 += 1, R2884 += 1 };
  s0 -> s0 [0, 65535] { R2961 += 1, R2962 += 1 };
  s0 -> s1 [80, 65535] { R2962 += 1, R2884 += 1 };
  s1 -> s1 [0, 65] { R2962 += 1, R2884 += 1 };
  s1 -> s1 [0, 65535] { R2962 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [80, 65535] { R2962 += 1, R2884 += 1 };
  s2 -> s1 [0, 65] { R2962 += 1, R2884 += 1 };
  s2 -> s2 [0, 65535] { R2962 += 1, R2883 += 1, R2884 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [80, 65535] { R2962 += 1, R2884 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_11 {
  init s0;
  s0 -> s0 [0, 65535] { R2963 += 1, R2964 += 1 };
  s0 -> s1 [0, 65535] { R2964 += 1, R2885 += 1, R2886 += 1 };
  s0 -> s2 [0, 65535] { R2964 += 1, R2886 += 1, R406 += 1 };
  s1 -> s1 [0, 65535] { R2964 += 1, R2885 += 1, R2886 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R2964 += 1, R2886 += 1, R406 += 1 };
  s2 -> s3 [0, 65535] { R2964 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2964 += 1, R2886 += 1, R406 += 1 };
  s3 -> s3 [0, 65535] { R2964 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 82] { R2966 += 1, R2888 += 1 };
  s0 -> s2 [0, 65535] { R2966 += 1, R2887 += 1, R2888 += 1 };
  s0 -> s0 [0, 65535] { R2965 += 1, R2966 += 1 };
  s0 -> s3 [0, 65535] { R2966 += 1, R2888 += 1, R408 += 1 };
  s0 -> s1 [84, 65535] { R2966 += 1, R2888 += 1 };
  s1 -> s1 [0, 82] { R2966 += 1, R2888 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2966 += 1 };
  s1 -> s1 [84, 65535] { R2966 += 1, R2888 += 1 };
  s2 -> s1 [0, 82] { R2966 += 1, R2888 += 1 };
  s2 -> s2 [0, 65535] { R2966 += 1, R2887 += 1, R2888 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R2966 += 1, R2888 += 1, R408 += 1 };
  s2 -> s1 [84, 65535] { R2966 += 1, R2888 += 1 };
  s3 -> s1 [0, 82] { R2966 += 1, R2888 += 1 };
  s3 -> s4 [0, 65535] { R2966 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2966 += 1, R2888 += 1, R408 += 1 };
  s3 -> s1 [84, 65535] { R2966 += 1, R2888 += 1 };
  s4 -> s4 [0, 65535] { R2966 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 79] { R2968 += 1, R2890 += 1 };
  s0 -> s2 [0, 65535] { R2968 += 1, R2890 += 1, R410 += 1 };
  s0 -> s0 [0, 65535] { R2967 += 1, R2968 += 1 };
  s0 -> s3 [0, 65535] { R2968 += 1, R2889 += 1, R2890 += 1 };
  s0 -> s1 [81, 65535] { R2968 += 1, R2890 += 1 };
  s1 -> s1 [0, 79] { R2968 += 1, R2890 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2968 += 1 };
  s1 -> s1 [81, 65535] { R2968 += 1, R2890 += 1 };
  s2 -> s1 [0, 79] { R2968 += 1, R2890 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2968 += 1, R2890 += 1, R410 += 1 };
  s2 -> s5 [0, 65535] { R2968 += 1 };
  s2 -> s1 [81, 65535] { R2968 += 1, R2890 += 1 };
  s3 -> s1 [0, 79] { R2968 += 1, R2890 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R2968 += 1, R2890 += 1, R410 += 1 };
  s3 -> s3 [0, 65535] { R2968 += 1, R2889 += 1, R2890 += 1 };
  s3 -> s1 [81, 65535] { R2968 += 1, R2890 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2968 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s0 [0, 65535] { R2969 += 1, R2970 += 1 };
  s0 -> s1 [0, 65535] { R2970 += 1, R2891 += 1, R2892 += 1 };
  s0 -> s2 [0, 65535] { R2970 += 1, R2892 += 1, R414 += 1, R415 += 1 };
  s0 -> s3 [0, 65535] { R2970 += 1, R2892 += 1, R415 += 1, R416 += 1 };
  s1 -> s1 [0, 65535] { R2970 += 1, R2891 += 1, R2892 += 1 };
  s1 -> s2 [0, 65535] { R2970 += 1, R2892 += 1, R414 += 1, R415 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R2970 += 1, R2892 += 1, R415 += 1, R416 += 1 };
  s2 -> s5 [0, 65535] { R2970 += 1 };
  s2 -> s2 [0, 65535] { R2970 += 1, R2892 += 1, R414 += 1, R415 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R2970 += 1, R2892 += 1, R415 += 1, R416 += 1 };
  s3 -> s4 [0, 65535] { R2970 += 1, R2892 += 1 };
  s3 -> s5 [0, 65535] { R2970 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2970 += 1, R2892 += 1, R415 += 1, R416 += 1 };
  s4 -> s4 [0, 65535] { R2970 += 1, R2892 += 1 };
  s4 -> s5 [0, 65535] { R2970 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R2970 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R2972 += 1, R2894 += 1 };
  s0 -> s0 [0, 65535] { R2971 += 1, R2972 += 1 };
  s0 -> s2 [0, 65535] { R2972 += 1, R2893 += 1, R2894 += 1 };
  s1 -> s1 [0, 65535] { R2972 += 1, R2894 += 1 };
  s1 -> s4 [0, 65535] { R2972 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2972 += 1, R2894 += 1 };
  s2 -> s2 [0, 65535] { R2972 += 1, R2893 += 1, R2894 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2972 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 79] { R2974 += 1, R2896 += 1, R420 += 1 };
  s0 -> s2 [0, 65535] { R2974 += 1, R2895 += 1, R2896 += 1 };
  s0 -> s3 [0, 65535] { R2974 += 1, R2896 += 1, R419 += 1, R420 += 1 };
  s0 -> s0 [0, 65535] { R2973 += 1, R2974 += 1 };
  s0 -> s1 [81, 65535] { R2974 += 1, R2896 += 1, R420 += 1 };
  s1 -> s1 [0, 79] { R2974 += 1, R2896 += 1, R420 += 1 };
  s1 -> s4 [0, 65535] { R2974 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2974 += 1, R2896 += 1 };
  s1 -> s1 [81, 65535] { R2974 += 1, R2896 += 1, R420 += 1 };
  s2 -> s1 [0, 79] { R2974 += 1, R2896 += 1, R420 += 1 };
  s2 -> s2 [0, 65535] { R2974 += 1, R2895 += 1, R2896 += 1 };
  s2 -> s3 [0, 65535] { R2974 += 1, R2896 += 1, R419 += 1, R420 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [81, 65535] { R2974 += 1, R2896 += 1, R420 += 1 };
  s3 -> s1 [0, 79] { R2974 += 1, R2896 += 1, R420 += 1 };
  s3 -> s4 [0, 65535] { R2974 += 1 };
  s3 -> s3 [0, 65535] { R2974 += 1, R2896 += 1, R419 += 1, R420 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [81, 65535] { R2974 += 1, R2896 += 1, R420 += 1 };
  s4 -> s4 [0, 65535] { R2974 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R2976 += 1, R2898 += 1, R425 += 1, R426 += 1 };
  s0 -> s2 [0, 65535] { R2976 += 1, R2898 += 1, R424 += 1, R425 += 1 };
  s0 -> s3 [0, 65535] { R2976 += 1, R2897 += 1, R2898 += 1 };
  s0 -> s0 [0, 65535] { R2975 += 1, R2976 += 1 };
  s1 -> s6 [0, 65535] { R2976 += 1, R2898 += 1 };
  s1 -> s1 [0, 65535] { R2976 += 1, R2898 += 1, R425 += 1, R426 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2976 += 1 };
  s2 -> s1 [0, 65535] { R2976 += 1, R2898 += 1, R425 += 1, R426 += 1 };
  s2 -> s2 [0, 65535] { R2976 += 1, R2898 += 1, R424 += 1, R425 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2976 += 1 };
  s3 -> s1 [0, 65535] { R2976 += 1, R2898 += 1, R425 += 1, R426 += 1 };
  s3 -> s2 [0, 65535] { R2976 += 1, R2898 += 1, R424 += 1, R425 += 1 };
  s3 -> s3 [0, 65535] { R2976 += 1, R2897 += 1, R2898 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2976 += 1 };
  s6 -> s6 [0, 65535] { R2976 += 1, R2898 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2976 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s0 -> s0 [0, 65535] { R2977 += 1, R2978 += 1 };
  s0 -> s2 [0, 65535] { R2978 += 1, R2900 += 1, R429 += 1, R430 += 1 };
  s0 -> s3 [0, 65535] { R2978 += 1, R2899 += 1, R2900 += 1 };
  s0 -> s1 [91, 107] { R2978 += 1, R2900 += 1, R430 += 1 };
  s0 -> s4 [108, 108] { R2978 += 1, R2900 += 1, R430 += 1 };
  s0 -> s1 [109, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s1 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s1 -> s1 [0, 65535] { R2978 += 1, R2900 += 1 };
  s1 -> s5 [0, 65535] { R2978 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [91, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s2 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s2 -> s5 [0, 65535] { R2978 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2978 += 1, R2900 += 1, R429 += 1, R430 += 1 };
  s2 -> s1 [91, 107] { R2978 += 1, R2900 += 1, R430 += 1 };
  s2 -> s4 [108, 108] { R2978 += 1, R2900 += 1, R430 += 1 };
  s2 -> s1 [109, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s3 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R2978 += 1, R2900 += 1, R429 += 1, R430 += 1 };
  s3 -> s3 [0, 65535] { R2978 += 1, R2899 += 1, R2900 += 1 };
  s3 -> s1 [91, 107] { R2978 += 1, R2900 += 1, R430 += 1 };
  s3 -> s4 [108, 108] { R2978 += 1, R2900 += 1, R430 += 1 };
  s3 -> s1 [109, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s4 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s4 -> s4 [0, 65535] { R2978 += 1, R2900 += 1 };
  s4 -> s5 [0, 65535] { R2978 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [91, 110] { R2978 += 1, R2900 += 1, R430 += 1 };
  s4 -> s7 [111, 111] { R2978 += 1, R2900 += 1, R430 += 1 };
  s4 -> s1 [112, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s5 -> s5 [0, 65535] { R2978 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s7 -> s7 [0, 65535] { R2978 += 1, R2900 += 1 };
  s7 -> s5 [0, 65535] { R2978 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s1 [91, 98] { R2978 += 1, R2900 += 1, R430 += 1 };
  s7 -> s8 [99, 99] { R2978 += 1, R2900 += 1, R430 += 1 };
  s7 -> s1 [100, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s8 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s8 -> s5 [0, 65535] { R2978 += 1 };
  s8 -> s8 [0, 65535] { R2978 += 1, R2900 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s1 [91, 96] { R2978 += 1, R2900 += 1, R430 += 1 };
  s8 -> s9 [97, 97] { R2978 += 1, R2900 += 1, R430 += 1 };
  s8 -> s1 [98, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s9 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s9 -> s5 [0, 65535] { R2978 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R2978 += 1, R2900 += 1 };
  s9 -> s1 [91, 107] { R2978 += 1, R2900 += 1, R430 += 1 };
  s9 -> s10 [108, 108] { R2978 += 1, R2900 += 1, R430 += 1 };
  s9 -> s1 [109, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s10 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s10 -> s5 [0, 65535] { R2978 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s10 [0, 65535] { R2978 += 1, R2900 += 1 };
  s10 -> s1 [91, 103] { R2978 += 1, R2900 += 1, R430 += 1 };
  s10 -> s11 [104, 104] { R2978 += 1, R2900 += 1, R430 += 1 };
  s10 -> s1 [105, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s11 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s11 -> s5 [0, 65535] { R2978 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s11 [0, 65535] { R2978 += 1, R2900 += 1 };
  s11 -> s1 [91, 110] { R2978 += 1, R2900 += 1, R430 += 1 };
  s11 -> s12 [111, 111] { R2978 += 1, R2900 += 1, R430 += 1 };
  s11 -> s1 [112, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s12 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s12 -> s5 [0, 65535] { R2978 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s12 [0, 65535] { R2978 += 1, R2900 += 1 };
  s12 -> s1 [91, 114] { R2978 += 1, R2900 += 1, R430 += 1 };
  s12 -> s13 [115, 115] { R2978 += 1, R2900 += 1, R430 += 1 };
  s12 -> s1 [116, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s13 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s13 -> s5 [0, 65535] { R2978 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s13 [0, 65535] { R2978 += 1, R2900 += 1 };
  s13 -> s1 [91, 115] { R2978 += 1, R2900 += 1, R430 += 1 };
  s13 -> s14 [116, 116] { R2978 += 1, R2900 += 1, R430 += 1 };
  s13 -> s1 [117, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  s14 -> s1 [0, 80] { R2978 += 1, R2900 += 1, R430 += 1 };
  s14 -> s1 [91, 65535] { R2978 += 1, R2900 += 1, R430 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R2980 += 1, R2902 += 1, R435 += 1, R436 += 1 };
  s0 -> s0 [0, 65535] { R2979 += 1, R2980 += 1 };
  s0 -> s2 [0, 65535] { R2980 += 1, R2901 += 1, R2902 += 1 };
  s0 -> s3 [0, 65535] { R2980 += 1, R2902 += 1, R434 += 1, R435 += 1 };
  s1 -> s1 [0, 65535] { R2980 += 1, R2902 += 1, R435 += 1, R436 += 1 };
  s1 -> s4 [0, 65535] { R2980 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R2980 += 1, R2902 += 1 };
  s2 -> s1 [0, 65535] { R2980 += 1, R2902 += 1, R435 += 1, R436 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2980 += 1, R2901 += 1, R2902 += 1 };
  s2 -> s3 [0, 65535] { R2980 += 1, R2902 += 1, R434 += 1, R435 += 1 };
  s3 -> s1 [0, 65535] { R2980 += 1, R2902 += 1, R435 += 1, R436 += 1 };
  s3 -> s4 [0, 65535] { R2980 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2980 += 1, R2902 += 1, R434 += 1, R435 += 1 };
  s4 -> s4 [0, 65535] { R2980 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2980 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2980 += 1, R2902 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R2982 += 1, R2904 += 1 };
  s0 -> s2 [0, 65535] { R2982 += 1, R2904 += 1, R2715 += 1, R2716 += 1 };
  s0 -> s0 [0, 65535] { R2981 += 1, R2982 += 1 };
  s0 -> s3 [0, 65535] { R2982 += 1, R2903 += 1, R2904 += 1 };
  s1 -> s5 [0, 65535] { R2982 += 1 };
  s1 -> s1 [0, 65535] { R2982 += 1, R2904 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2982 += 1 };
  s2 -> s1 [0, 65535] { R2982 += 1, R2904 += 1 };
  s2 -> s2 [0, 65535] { R2982 += 1, R2904 += 1, R2715 += 1, R2716 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2982 += 1, R2904 += 1 };
  s3 -> s2 [0, 65535] { R2982 += 1, R2904 += 1, R2715 += 1, R2716 += 1 };
  s3 -> s3 [0, 65535] { R2982 += 1, R2903 += 1, R2904 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2982 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R2984 += 1, R2905 += 1, R2906 += 1 };
  s0 -> s2 [0, 65535] { R2984 += 1, R2906 += 1 };
  s0 -> s0 [0, 65535] { R2983 += 1, R2984 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2984 += 1, R2905 += 1, R2906 += 1 };
  s1 -> s2 [0, 65535] { R2984 += 1, R2906 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2984 += 1, R2906 += 1 };
  s2 -> s4 [0, 65535] { R2984 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2984 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R2986 += 1, R2908 += 1, R2720 += 1, R2721 += 1 };
  s0 -> s0 [0, 65535] { R2985 += 1, R2986 += 1 };
  s0 -> s2 [0, 65535] { R2986 += 1, R2908 += 1, R2721 += 1, R2722 += 1 };
  s0 -> s3 [0, 65535] { R2986 += 1, R2907 += 1, R2908 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2986 += 1, R2908 += 1, R2720 += 1, R2721 += 1 };
  s1 -> s6 [0, 65535] { R2986 += 1 };
  s1 -> s2 [0, 65535] { R2986 += 1, R2908 += 1, R2721 += 1, R2722 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2986 += 1, R2908 += 1 };
  s2 -> s6 [0, 65535] { R2986 += 1 };
  s2 -> s2 [0, 65535] { R2986 += 1, R2908 += 1, R2721 += 1, R2722 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2986 += 1, R2908 += 1, R2720 += 1, R2721 += 1 };
  s3 -> s2 [0, 65535] { R2986 += 1, R2908 += 1, R2721 += 1, R2722 += 1 };
  s3 -> s3 [0, 65535] { R2986 += 1, R2907 += 1, R2908 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2986 += 1, R2908 += 1 };
  s5 -> s6 [0, 65535] { R2986 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2986 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s0 [0, 65535] { R2987 += 1, R2988 += 1 };
  s0 -> s1 [0, 65535] { R2988 += 1, R2909 += 1, R2910 += 1 };
  s0 -> s2 [0, 65535] { R2988 += 1, R2910 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2988 += 1, R2909 += 1, R2910 += 1 };
  s1 -> s2 [0, 65535] { R2988 += 1, R2910 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2988 += 1 };
  s2 -> s2 [0, 65535] { R2988 += 1, R2910 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2988 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 79] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s0 -> s1 [0, 65535] { R2990 += 1, R2912 += 1 };
  s0 -> s0 [0, 65535] { R2989 += 1, R2990 += 1 };
  s0 -> s2 [0, 65535] { R2990 += 1, R2911 += 1, R2912 += 1 };
  s0 -> s3 [80, 80] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s0 -> s4 [80, 80] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s0 -> s1 [81, 65535] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s1 -> s1 [0, 79] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s1 -> s1 [0, 65535] { R2990 += 1, R2912 += 1 };
  s1 -> s5 [0, 65535] { R2990 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [80, 80] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s1 -> s4 [80, 80] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s1 -> s1 [81, 65535] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s2 -> s1 [0, 79] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s2 -> s1 [0, 65535] { R2990 += 1, R2912 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2990 += 1, R2911 += 1, R2912 += 1 };
  s2 -> s3 [80, 80] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s2 -> s4 [80, 80] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s2 -> s1 [81, 65535] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s3 -> s7 [0, 65535] { R2990 += 1, R2912 += 1 };
  s3 -> s5 [0, 65535] { R2990 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2990 += 1, R2912 += 1, R2877 += 1, R2878 += 1 };
  s4 -> s5 [0, 65535] { R2990 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2990 += 1, R2912 += 1 };
  s5 -> s5 [0, 65535] { R2990 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2990 += 1, R2912 += 1 };
  s7 -> s5 [0, 65535] { R2990 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 65535] { R2992 += 1, R2914 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R2991 += 1, R2992 += 1 };
  s0 -> s2 [0, 65535] { R2992 += 1, R2913 += 1, R2914 += 1 };
  s1 -> s1 [0, 65535] { R2992 += 1, R2914 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R2992 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2992 += 1, R2914 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2992 += 1, R2913 += 1, R2914 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2992 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R2994 += 1, R2916 += 1 };
  s0 -> s0 [0, 65535] { R2993 += 1, R2994 += 1 };
  s0 -> s2 [0, 65535] { R2994 += 1, R2915 += 1, R2916 += 1 };
  s0 -> s3 [65, 65] { R2994 += 1, R2916 += 1 };
  s0 -> s4 [65, 65] { R2994 += 1, R2916 += 1 };
  s0 -> s5 [80, 80] { R2994 += 1, R2916 += 1 };
  s0 -> s1 [81, 65535] { R2994 += 1, R2916 += 1 };
  s1 -> s1 [0, 64] { R2994 += 1, R2916 += 1 };
  s1 -> s3 [65, 65] { R2994 += 1, R2916 += 1 };
  s1 -> s4 [65, 65] { R2994 += 1, R2916 += 1 };
  s1 -> s5 [80, 80] { R2994 += 1, R2916 += 1 };
  s1 -> s1 [81, 65535] { R2994 += 1, R2916 += 1 };
  s2 -> s1 [0, 64] { R2994 += 1, R2916 += 1 };
  s2 -> s2 [0, 65535] { R2994 += 1, R2915 += 1, R2916 += 1 };
  s2 -> s3 [65, 65] { R2994 += 1, R2916 += 1 };
  s2 -> s4 [65, 65] { R2994 += 1, R2916 += 1 };
  s2 -> s5 [80, 80] { R2994 += 1, R2916 += 1 };
  s2 -> s1 [81, 65535] { R2994 += 1, R2916 += 1 };
  s3 -> s3 [0, 65] { R2994 += 1, R2916 += 1 };
  s3 -> s7 [80, 80] { R2994 += 1, R2916 += 1 };
  s3 -> s3 [81, 65535] { R2994 += 1, R2916 += 1 };
  s5 -> s5 [0, 64] { R2994 += 1, R2916 += 1 };
  s5 -> s5 [0, 65535] { R2994 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [65, 65] { R2994 += 1, R2916 += 1 };
  s5 -> s8 [65, 65] { R2994 += 1, R2916 += 1 };
  s5 -> s5 [80, 65535] { R2994 += 1, R2916 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65] { R2994 += 1, R2916 += 1 };
  s7 -> s7 [0, 65535] { R2994 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [80, 65535] { R2994 += 1, R2916 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R2994 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R2996 += 1, R2918 += 1, R405 += 1 };
  s0 -> s2 [0, 65535] { R2996 += 1, R2917 += 1, R2918 += 1 };
  s0 -> s0 [0, 65535] { R2995 += 1, R2996 += 1 };
  s0 -> s3 [65, 65] { R2996 += 1, R2918 += 1, R405 += 1 };
  s0 -> s4 [65, 65] { R2996 += 1, R2918 += 1, R405 += 1 };
  s0 -> s1 [66, 65535] { R2996 += 1, R2918 += 1, R405 += 1 };
  s1 -> s1 [0, 64] { R2996 += 1, R2918 += 1, R405 += 1 };
  s1 -> s1 [0, 65535] { R2996 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R2996 += 1, R2918 += 1, R405 += 1 };
  s1 -> s4 [65, 65] { R2996 += 1, R2918 += 1, R405 += 1 };
  s1 -> s1 [66, 65535] { R2996 += 1, R2918 += 1, R405 += 1 };
  s2 -> s1 [0, 64] { R2996 += 1, R2918 += 1, R405 += 1 };
  s2 -> s2 [0, 65535] { R2996 += 1, R2917 += 1, R2918 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R2996 += 1, R2918 += 1, R405 += 1 };
  s2 -> s4 [65, 65] { R2996 += 1, R2918 += 1, R405 += 1 };
  s2 -> s1 [66, 65535] { R2996 += 1, R2918 += 1, R405 += 1 };
  s3 -> s3 [0, 65535] { R2996 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2996 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2996 += 1, R2918 += 1, R405 += 1 };
  s5 -> s5 [0, 65535] { R2996 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R2998 += 1, R2920 += 1, R407 += 1 };
  s0 -> s0 [0, 65535] { R2997 += 1, R2998 += 1 };
  s0 -> s2 [0, 65535] { R2998 += 1, R2919 += 1, R2920 += 1 };
  s0 -> s3 [65, 65] { R2998 += 1, R2920 += 1, R407 += 1 };
  s0 -> s4 [65, 65] { R2998 += 1, R2920 += 1, R407 += 1 };
  s0 -> s1 [66, 65535] { R2998 += 1, R2920 += 1, R407 += 1 };
  s1 -> s1 [0, 64] { R2998 += 1, R2920 += 1, R407 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R2998 += 1 };
  s1 -> s3 [65, 65] { R2998 += 1, R2920 += 1, R407 += 1 };
  s1 -> s4 [65, 65] { R2998 += 1, R2920 += 1, R407 += 1 };
  s1 -> s1 [66, 65535] { R2998 += 1, R2920 += 1, R407 += 1 };
  s2 -> s1 [0, 64] { R2998 += 1, R2920 += 1, R407 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2998 += 1, R2919 += 1, R2920 += 1 };
  s2 -> s3 [65, 65] { R2998 += 1, R2920 += 1, R407 += 1 };
  s2 -> s4 [65, 65] { R2998 += 1, R2920 += 1, R407 += 1 };
  s2 -> s1 [66, 65535] { R2998 += 1, R2920 += 1, R407 += 1 };
  s3 -> s3 [0, 65535] { R2998 += 1, R2920 += 1, R407 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2998 += 1 };
  s4 -> s4 [0, 65535] { R2998 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2998 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R3000 += 1, R2922 += 1, R409 += 1 };
  s0 -> s2 [0, 65535] { R3000 += 1, R2921 += 1, R2922 += 1 };
  s0 -> s0 [0, 65535] { R2999 += 1, R3000 += 1 };
  s0 -> s3 [65, 65] { R3000 += 1, R2922 += 1, R409 += 1 };
  s0 -> s4 [65, 65] { R3000 += 1, R2922 += 1, R409 += 1 };
  s0 -> s1 [66, 65535] { R3000 += 1, R2922 += 1, R409 += 1 };
  s1 -> s1 [0, 64] { R3000 += 1, R2922 += 1, R409 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3000 += 1 };
  s1 -> s3 [65, 65] { R3000 += 1, R2922 += 1, R409 += 1 };
  s1 -> s4 [65, 65] { R3000 += 1, R2922 += 1, R409 += 1 };
  s1 -> s1 [66, 65535] { R3000 += 1, R2922 += 1, R409 += 1 };
  s2 -> s1 [0, 64] { R3000 += 1, R2922 += 1, R409 += 1 };
  s2 -> s2 [0, 65535] { R3000 += 1, R2921 += 1, R2922 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R3000 += 1, R2922 += 1, R409 += 1 };
  s2 -> s4 [65, 65] { R3000 += 1, R2922 += 1, R409 += 1 };
  s2 -> s1 [66, 65535] { R3000 += 1, R2922 += 1, R409 += 1 };
  s3 -> s3 [0, 65535] { R3000 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3000 += 1 };
  s4 -> s4 [0, 65535] { R3000 += 1, R2922 += 1, R409 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3000 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s0 -> s0 [0, 65535] { R3001 += 1, R3002 += 1 };
  s0 -> s2 [0, 65535] { R3002 += 1, R2923 += 1, R2924 += 1 };
  s0 -> s3 [65, 65] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s0 -> s4 [65, 65] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s0 -> s1 [66, 65535] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [0, 64] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [0, 65535] { R3002 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s1 -> s4 [65, 65] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [66, 65535] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [0, 64] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s2 -> s2 [0, 65535] { R3002 += 1, R2923 += 1, R2924 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s2 -> s4 [65, 65] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [66, 65535] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s3 -> s3 [0, 65535] { R3002 += 1, R2924 += 1, R411 += 1, R412 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3002 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3002 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3002 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 64] { R3004 += 1, R2926 += 1 };
  s0 -> s0 [0, 65535] { R3003 += 1, R3004 += 1 };
  s0 -> s2 [0, 65535] { R3004 += 1, R2925 += 1, R2926 += 1 };
  s0 -> s3 [65, 65] { R3004 += 1, R2926 += 1 };
  s0 -> s4 [65, 65] { R3004 += 1, R2926 += 1 };
  s0 -> s1 [66, 65535] { R3004 += 1, R2926 += 1 };
  s1 -> s1 [0, 64] { R3004 += 1, R2926 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3004 += 1 };
  s1 -> s3 [65, 65] { R3004 += 1, R2926 += 1 };
  s1 -> s4 [65, 65] { R3004 += 1, R2926 += 1 };
  s1 -> s1 [66, 65535] { R3004 += 1, R2926 += 1 };
  s2 -> s1 [0, 64] { R3004 += 1, R2926 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3004 += 1, R2925 += 1, R2926 += 1 };
  s2 -> s3 [65, 65] { R3004 += 1, R2926 += 1 };
  s2 -> s4 [65, 65] { R3004 += 1, R2926 += 1 };
  s2 -> s1 [66, 65535] { R3004 += 1, R2926 += 1 };
  s3 -> s3 [0, 65535] { R3004 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3004 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3004 += 1, R2926 += 1 };
  s5 -> s5 [0, 65535] { R3004 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s0 -> s2 [0, 65535] { R3006 += 1, R2927 += 1, R2928 += 1 };
  s0 -> s0 [0, 65535] { R3005 += 1, R3006 += 1 };
  s0 -> s3 [65, 65] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s0 -> s4 [65, 65] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s0 -> s1 [66, 65535] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [0, 64] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [0, 65535] { R3006 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s1 -> s4 [65, 65] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [66, 65535] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [0, 64] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s2 -> s2 [0, 65535] { R3006 += 1, R2927 += 1, R2928 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s2 -> s4 [65, 65] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [66, 65535] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s3 -> s3 [0, 65535] { R3006 += 1, R2928 += 1, R417 += 1, R418 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3006 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3006 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3006 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 64] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s0 -> s2 [0, 65535] { R3008 += 1, R2929 += 1, R2930 += 1 };
  s0 -> s0 [0, 65535] { R3007 += 1, R3008 += 1 };
  s0 -> s3 [65, 65] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s0 -> s4 [65, 65] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s0 -> s1 [66, 65535] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [0, 64] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3008 += 1 };
  s1 -> s3 [65, 65] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s1 -> s4 [65, 65] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [66, 65535] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [0, 64] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s2 -> s2 [0, 65535] { R3008 += 1, R2929 += 1, R2930 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s2 -> s4 [65, 65] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [66, 65535] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3008 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3008 += 1 };
  s4 -> s4 [0, 65535] { R3008 += 1, R2930 += 1, R421 += 1, R422 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3008 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s0 -> s0 [0, 65535] { R3009 += 1, R3010 += 1 };
  s0 -> s2 [0, 65535] { R3010 += 1, R2931 += 1, R2932 += 1 };
  s0 -> s3 [65, 65] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s0 -> s4 [65, 65] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s0 -> s1 [66, 65535] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [0, 64] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3010 += 1 };
  s1 -> s3 [65, 65] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s1 -> s4 [65, 65] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [66, 65535] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [0, 64] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3010 += 1, R2931 += 1, R2932 += 1 };
  s2 -> s3 [65, 65] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s2 -> s4 [65, 65] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [66, 65535] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3010 += 1, R2932 += 1, R427 += 1, R428 += 1 };
  s3 -> s6 [0, 65535] { R3010 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3010 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3010 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 64] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s0 -> s0 [0, 65535] { R3011 += 1, R3012 += 1 };
  s0 -> s2 [0, 65535] { R3012 += 1, R2933 += 1, R2934 += 1 };
  s0 -> s3 [65, 65] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s0 -> s4 [65, 65] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s0 -> s1 [66, 65535] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [0, 64] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [0, 65535] { R3012 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s1 -> s4 [65, 65] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [66, 65535] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [0, 64] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s2 -> s2 [0, 65535] { R3012 += 1, R2933 += 1, R2934 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s2 -> s4 [65, 65] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [66, 65535] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s3 -> s3 [0, 65535] { R3012 += 1, R2934 += 1, R431 += 1, R432 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3012 += 1 };
  s4 -> s4 [0, 65535] { R3012 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3012 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 64] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s2 [0, 64] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s0 [0, 65535] { R3013 += 1, R3014 += 1 };
  s0 -> s3 [0, 65535] { R3014 += 1, R2935 += 1, R2936 += 1 };
  s0 -> s4 [65, 65] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s5 [65, 65] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s6 [65, 65] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s7 [65, 65] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s1 [66, 65535] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s2 [66, 65535] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s1 -> s1 [0, 64] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s1 [0, 65535] { R3014 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [65, 65] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s7 [65, 65] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s1 [66, 65535] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s1 [0, 64] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s2 [0, 64] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s2 -> s4 [65, 65] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s2 -> s5 [65, 65] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s6 [65, 65] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s2 -> s7 [65, 65] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s1 [66, 65535] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s2 [66, 65535] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s1 [0, 64] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s2 [0, 64] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s3 [0, 65535] { R3014 += 1, R2935 += 1, R2936 += 1 };
  s3 -> s4 [65, 65] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s5 [65, 65] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s6 [65, 65] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s7 [65, 65] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s1 [66, 65535] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s2 [66, 65535] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s4 -> s4 [0, 65535] { R3014 += 1, R2936 += 1, R2711 += 1, R2712 += 1 };
  s4 -> s5 [0, 65535] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s5 -> s9 [0, 65535] { R3014 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R3014 += 1, R2936 += 1, R2712 += 1, R2713 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3014 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3014 += 1 };
  s9 -> s8 [0, 65535];
  accepting s8, s5, s9, s1, s7;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R3016 += 1, R2938 += 1 };
  s0 -> s0 [0, 65535] { R3015 += 1, R3016 += 1 };
  s0 -> s2 [0, 65535] { R3016 += 1, R2937 += 1, R2938 += 1 };
  s0 -> s3 [65, 65] { R3016 += 1, R2938 += 1 };
  s0 -> s4 [65, 65] { R3016 += 1, R2938 += 1 };
  s0 -> s1 [66, 65535] { R3016 += 1, R2938 += 1 };
  s1 -> s1 [0, 64] { R3016 += 1, R2938 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3016 += 1 };
  s1 -> s3 [65, 65] { R3016 += 1, R2938 += 1 };
  s1 -> s4 [65, 65] { R3016 += 1, R2938 += 1 };
  s1 -> s1 [66, 65535] { R3016 += 1, R2938 += 1 };
  s2 -> s1 [0, 64] { R3016 += 1, R2938 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3016 += 1, R2937 += 1, R2938 += 1 };
  s2 -> s3 [65, 65] { R3016 += 1, R2938 += 1 };
  s2 -> s4 [65, 65] { R3016 += 1, R2938 += 1 };
  s2 -> s1 [66, 65535] { R3016 += 1, R2938 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3016 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3016 += 1, R2938 += 1 };
  s4 -> s6 [0, 65535] { R3016 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3016 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 64] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s0 -> s0 [0, 65535] { R3017 += 1, R3018 += 1 };
  s0 -> s2 [0, 65535] { R3018 += 1, R2939 += 1, R2940 += 1 };
  s0 -> s3 [65, 65] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s0 -> s4 [65, 65] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s0 -> s1 [66, 65535] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s1 -> s1 [0, 64] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s1 -> s1 [0, 65535] { R3018 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s1 -> s4 [65, 65] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s1 -> s1 [66, 65535] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s2 -> s1 [0, 64] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3018 += 1, R2939 += 1, R2940 += 1 };
  s2 -> s3 [65, 65] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s2 -> s4 [65, 65] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s2 -> s1 [66, 65535] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s3 -> s3 [0, 65535] { R3018 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3018 += 1 };
  s4 -> s4 [0, 65535] { R3018 += 1, R2940 += 1, R2717 += 1, R2718 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3018 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 64] { R3020 += 1, R2942 += 1 };
  s0 -> s0 [0, 65535] { R3019 += 1, R3020 += 1 };
  s0 -> s2 [0, 65535] { R3020 += 1, R2941 += 1, R2942 += 1 };
  s0 -> s3 [65, 65] { R3020 += 1, R2942 += 1 };
  s0 -> s4 [65, 65] { R3020 += 1, R2942 += 1 };
  s0 -> s1 [66, 65535] { R3020 += 1, R2942 += 1 };
  s1 -> s1 [0, 64] { R3020 += 1, R2942 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3020 += 1 };
  s1 -> s3 [65, 65] { R3020 += 1, R2942 += 1 };
  s1 -> s4 [65, 65] { R3020 += 1, R2942 += 1 };
  s1 -> s1 [66, 65535] { R3020 += 1, R2942 += 1 };
  s2 -> s1 [0, 64] { R3020 += 1, R2942 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3020 += 1, R2941 += 1, R2942 += 1 };
  s2 -> s3 [65, 65] { R3020 += 1, R2942 += 1 };
  s2 -> s4 [65, 65] { R3020 += 1, R2942 += 1 };
  s2 -> s1 [66, 65535] { R3020 += 1, R2942 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3020 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3020 += 1 };
  s4 -> s4 [0, 65535] { R3020 += 1, R2942 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3020 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 64] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s0 -> s2 [0, 64] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s0 -> s0 [0, 65535] { R3021 += 1, R3022 += 1 };
  s0 -> s3 [0, 65535] { R3022 += 1, R2943 += 1, R2944 += 1 };
  s0 -> s4 [65, 65] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s0 -> s5 [65, 65] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s0 -> s6 [65, 65] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s0 -> s7 [65, 65] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s0 -> s2 [66, 79] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s0 -> s1 [66, 65535] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s0 -> s2 [81, 65535] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s1 -> s1 [0, 64] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s1 -> s2 [0, 64] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s1 -> s4 [65, 65] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s1 -> s5 [65, 65] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s1 -> s6 [65, 65] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s1 -> s7 [65, 65] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s1 -> s2 [66, 79] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s1 -> s1 [66, 65535] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s1 -> s2 [81, 65535] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s2 -> s2 [0, 64] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s2 -> s2 [0, 65535] { R3022 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [65, 65] { R3022 += 1, R2944 += 1 };
  s2 -> s5 [65, 65] { R3022 += 1, R2944 += 1 };
  s2 -> s2 [66, 79] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s2 -> s2 [66, 65535] { R3022 += 1, R2944 += 1 };
  s2 -> s2 [81, 65535] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s3 -> s1 [0, 64] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s3 -> s2 [0, 64] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s3 -> s3 [0, 65535] { R3022 += 1, R2943 += 1, R2944 += 1 };
  s3 -> s4 [65, 65] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s3 -> s5 [65, 65] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s3 -> s6 [65, 65] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s3 -> s7 [65, 65] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s3 -> s2 [66, 79] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s3 -> s1 [66, 65535] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s3 -> s2 [81, 65535] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s4 -> s4 [0, 79] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s4 -> s4 [0, 65535] { R3022 += 1, R2944 += 1 };
  s4 -> s9 [0, 65535] { R3022 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [81, 65535] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s5 -> s5 [0, 65535] { R3022 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s4 [0, 79] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s7 -> s7 [0, 65535] { R3022 += 1, R2944 += 1, R2873 += 1, R2874 += 1 };
  s7 -> s4 [81, 65535] { R3022 += 1, R2944 += 1, R2874 += 1, R2875 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3022 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s2, s9;
};
};
constraint R2 = R2912 && R3 = R3022 && R21 = 0 && R22 = 1 && R23 = 0 && R24 = 1 && R406 + R405 = 0 && R2879 = 0 && R2880 = R2912 && R2881 = 0 && R2882 = R2912 && R2883 = 0 && R2884 = R2912 && R2885 = 0 && R2886 = R2912 && R2887 = 0 && R2888 = R2912 && R2889 = 0 && R2890 = R2912 && R2891 = 0 && R2892 = R2912 && R2893 = 0 && R2894 = R2912 && R2895 = 0 && R2896 = R2912 && R2897 = 0 && R2898 = R2912 && R2899 = 0 && R2900 = R2912 && R2901 = 0 && R2902 = R2912 && R2903 = 0 && R2904 = R2912 && R2905 = 0 && R2906 = R2912 && R2907 = 0 && R2908 = R2912 && R2909 = 0 && R2910 = R2912 && R2911 = 0 && R2915 = 0 && R2916 = 0 && R2935 = 0 && R2936 = 0 && R2943 = 0 && R2944 = 0 && R2945 = 10 && R2946 = R3022 && R2947 = 10 && R2948 = R3022 && R2949 = 10 && R2950 = R3022 && R2951 = 10 && R2952 = R3022 && R2953 = 10 && R2954 = R3022 && R2955 = 10 && R2956 = R3022 && R2957 = 10 && R2958 = R3022 && R2959 = 10 && R2960 = R3022 && R2961 = 10 && R2962 = R3022 && R2963 = 10 && R2964 = R3022 && R2965 = 10 && R2966 = R3022 && R2967 = 10 && R2968 = R3022 && R2969 = 10 && R2970 = R3022 && R2971 = 10 && R2972 = R3022 && R2973 = 10 && R2974 = R3022 && R2975 = 10 && R2976 = R3022 && R2977 = 10 && R2978 = R3022 && R2979 = 10 && R2980 = R3022 && R2981 = 10 && R2982 = R3022 && R2983 = 10 && R2984 = R3022 && R2985 = 10 && R2986 = R3022 && R2987 = 10 && R2988 = R3022 && R2989 = 10 && R2990 = R3022 && R2991 = 10 && R2992 = R3022 && R2993 = 10 && R2994 = R3022 && R2995 = 10 && R2996 = R3022 && R2997 = 10 && R2998 = R3022 && R2999 = 10 && R3000 = R3022 && R3001 = 10 && R3002 = R3022 && R3003 = 10 && R3004 = R3022 && R3005 = 10 && R3006 = R3022 && R3007 = 10 && R3008 = R3022 && R3009 = 10 && R3010 = R3022 && R3011 = 10 && R3012 = R3022 && R3013 = 10 && R3014 = R3022 && R3015 = 10 && R3016 = R3022 && R3017 = 10 && R3018 = R3022 && R3019 = 10 && R3020 = R3022 && R3021 = 10 && R436 + R433 + R2878 + R2875 != 0 && R11 < 1 && R12 < 1 && R408 + R407 < 1 && R410 + R409 < 1 && 0 < R2912 && 9 < R3022 && (R20 = 0 || (R2913 = 0 && R2914 = 0)) && (R20 = 0 || (R2917 = 0 && R2918 = 0)) && (R20 = 0 || (R2919 = 0 && R2920 = 0)) && (R20 = 0 || (R2921 = 0 && R2922 = 0)) && (R20 = 0 || (R2923 = 0 && R2924 = 0)) && (R20 = 0 || (R2925 = 0 && R2926 = 0)) && (R20 = 0 || (R2927 = 0 && R2928 = 0)) && (R20 = 0 || (R2929 = 0 && R2930 = 0)) && (R20 = 0 || (R2931 = 0 && R2932 = 0)) && (R20 = 0 || (R2933 = 0 && R2934 = 0)) && (R20 = 0 || (R2937 = 0 && R2938 = 0)) && (R20 = 0 || (R2939 = 0 && R2940 = 0)) && (R20 = 0 || (R2941 = 0 && R2942 = 0)) && (R416 + R413 = 0 || (R414 + R411 = 0 && R415 + R412 = 0)) && (R426 + R423 = 0 || (R419 + R417 = 0 && R420 + R418 = 0)) && (R426 + R423 = 0 || (R424 + R421 = 0 && R425 + R422 = 0)) && (R426 + R423 = 0 || (R429 + R427 = 0 && R430 + R428 = 0)) && (R426 + R423 = 0 || (R434 + R431 = 0 && R435 + R432 = 0)) && (R2716 + R2713 = 0 || (R2714 + R2711 = 0 && R2715 + R2712 = 0)) && (R2722 + R2719 = 0 || (R2720 + R2717 = 0 && R2721 + R2718 = 0)) && (R2722 + R2719 = 0 || (R2876 + R2873 = 0 && R2877 + R2874 = 0));
// End of Parikh automata intersection problem
