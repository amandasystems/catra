// Parikh automata intersection problem, generated by OSTRICH+
counter int R11, R12, R19, R2, R20, R21, R22, R23, R24, R2711, R2712, R2713, R2714, R2715, R2716, R3, R3473, R3474, R3475, R3476, R3477, R3478, R3929, R3930, R3931, R3932, R3933, R3934, R3935, R3936, R3937, R3938, R3939, R3940, R3941, R3942, R3943, R3944, R3945, R3946, R3947, R3948, R3949, R3950, R3951, R3952, R3953, R3954, R3955, R3956, R3957, R3958, R3959, R3960, R3961, R3962, R3963, R3964, R3965, R3966, R3967, R3968, R3969, R3970, R3971, R3972, R3973, R3974, R3975, R3976, R3977, R3978, R3979, R3980, R3981, R3982, R3983, R3984, R3985, R3986, R3987, R3988, R3989, R3990, R3991, R3992, R3993, R3994, R3995, R3996, R3997, R3998, R3999, R4, R4000, R4001, R4002, R4003, R4004, R4005, R4006, R4007, R4008, R4009, R4010, R4011, R4012, R4013, R4014, R4015, R4016, R4017, R4018, R4019, R4020, R4021, R4022, R4023, R4024, R4025, R4026, R4027, R4028, R4029, R4030, R4031, R4032, R4033, R4034, R4035, R4036, R4037, R4038, R4039, R4040, R4041, R4042, R4043, R4044, R4045, R4046, R4047, R4048, R4049, R405, R4050, R4051, R4052, R4053, R4054, R4055, R4056, R4057, R4058, R4059, R406, R4060, R4061, R4062, R4063, R4064, R4065, R4066, R4067, R4068, R4069, R407, R4070, R4071, R4072, R4073, R4074, R4075, R4076, R4077, R4078, R408, R409, R410, R411, R412, R413, R414, R415, R416, R417, R418, R419, R420, R421, R422, R423, R424, R425, R426, R427, R428, R429, R430, R431, R432, R433, R434, R435, R436;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining c11
automaton c11_0 {
  init s0;
  s0 -> s1 [115, 115];
  accepting s1;
};
};
synchronised {  // Automata constraining P53
automaton P53_0 {
  init s0;
  s0 -> s1 [112, 112];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 43] { R4002 += 1 };
  s0 -> s0 [0, 65535] { R4001 += 1, R4002 += 1 };
  s0 -> s1 [45, 45] { R4002 += 1 };
  s0 -> s2 [46, 46] { R4002 += 1 };
  s0 -> s1 [48, 62] { R4002 += 1 };
  s0 -> s3 [65, 65] { R4002 += 1 };
  s0 -> s1 [66, 65535] { R4002 += 1 };
  s1 -> s1 [0, 43] { R4002 += 1 };
  s1 -> s1 [45, 45] { R4002 += 1 };
  s1 -> s2 [46, 46] { R4002 += 1 };
  s1 -> s1 [48, 62] { R4002 += 1 };
  s1 -> s3 [65, 65] { R4002 += 1 };
  s1 -> s1 [66, 65535] { R4002 += 1 };
  s2 -> s1 [0, 43] { R4002 += 1 };
  s2 -> s1 [45, 45] { R4002 += 1 };
  s2 -> s2 [46, 46] { R4002 += 1 };
  s2 -> s1 [48, 62] { R4002 += 1 };
  s2 -> s3 [65, 65] { R4002 += 1 };
  s2 -> s1 [66, 114] { R4002 += 1 };
  s2 -> s8 [115, 115] { R4002 += 1 };
  s2 -> s1 [116, 65535] { R4002 += 1 };
  s3 -> s3 [0, 43] { R4002 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R4002 += 1 };
  s3 -> s4 [46, 46] { R4002 += 1 };
  s3 -> s3 [48, 62] { R4002 += 1 };
  s3 -> s3 [65, 65535] { R4002 += 1 };
  s4 -> s3 [0, 43] { R4002 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R4002 += 1 };
  s4 -> s4 [46, 46] { R4002 += 1 };
  s4 -> s3 [48, 62] { R4002 += 1 };
  s4 -> s3 [65, 114] { R4002 += 1 };
  s4 -> s5 [115, 115] { R4002 += 1 };
  s4 -> s3 [116, 65535] { R4002 += 1 };
  s5 -> s3 [0, 43] { R4002 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R4002 += 1 };
  s5 -> s4 [46, 46] { R4002 += 1 };
  s5 -> s3 [48, 62] { R4002 += 1 };
  s5 -> s3 [65, 110] { R4002 += 1 };
  s5 -> s6 [111, 111] { R4002 += 1 };
  s5 -> s3 [112, 65535] { R4002 += 1 };
  s6 -> s3 [0, 43] { R4002 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R4002 += 1 };
  s6 -> s4 [46, 46] { R4002 += 1 };
  s6 -> s3 [48, 62] { R4002 += 1 };
  s6 -> s3 [65, 98] { R4002 += 1 };
  s6 -> s7 [99, 99] { R4002 += 1 };
  s6 -> s3 [100, 65535] { R4002 += 1 };
  s7 -> s3 [0, 43] { R4002 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R4002 += 1 };
  s7 -> s4 [46, 46] { R4002 += 1 };
  s7 -> s3 [48, 62] { R4002 += 1 };
  s7 -> s3 [65, 106] { R4002 += 1 };
  s7 -> s3 [108, 65535] { R4002 += 1 };
  s8 -> s1 [0, 43] { R4002 += 1 };
  s8 -> s1 [45, 45] { R4002 += 1 };
  s8 -> s2 [46, 46] { R4002 += 1 };
  s8 -> s1 [48, 62] { R4002 += 1 };
  s8 -> s3 [65, 65] { R4002 += 1 };
  s8 -> s1 [66, 110] { R4002 += 1 };
  s8 -> s9 [111, 111] { R4002 += 1 };
  s8 -> s1 [112, 65535] { R4002 += 1 };
  s9 -> s1 [0, 43] { R4002 += 1 };
  s9 -> s1 [45, 45] { R4002 += 1 };
  s9 -> s2 [46, 46] { R4002 += 1 };
  s9 -> s1 [48, 62] { R4002 += 1 };
  s9 -> s3 [65, 65] { R4002 += 1 };
  s9 -> s1 [66, 98] { R4002 += 1 };
  s9 -> s10 [99, 99] { R4002 += 1 };
  s9 -> s1 [100, 65535] { R4002 += 1 };
  s10 -> s1 [0, 43] { R4002 += 1 };
  s10 -> s1 [45, 45] { R4002 += 1 };
  s10 -> s2 [46, 46] { R4002 += 1 };
  s10 -> s1 [48, 62] { R4002 += 1 };
  s10 -> s3 [65, 65] { R4002 += 1 };
  s10 -> s1 [66, 106] { R4002 += 1 };
  s10 -> s1 [108, 65535] { R4002 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R4004 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4003 += 1, R4004 += 1 };
  s1 -> s1 [0, 65535] { R4004 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 57] { R4006 += 1 };
  s0 -> s0 [0, 65535] { R4005 += 1, R4006 += 1 };
  s0 -> s2 [0, 65535] { R4006 += 1, R11 += 1 };
  s0 -> s3 [58, 58] { R4006 += 1 };
  s0 -> s1 [59, 65535] { R4006 += 1 };
  s1 -> s1 [0, 57] { R4006 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R4006 += 1 };
  s1 -> s1 [59, 65535] { R4006 += 1 };
  s2 -> s1 [0, 57] { R4006 += 1 };
  s2 -> s2 [0, 65535] { R4006 += 1, R11 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [58, 58] { R4006 += 1 };
  s2 -> s1 [59, 65535] { R4006 += 1 };
  s3 -> s3 [0, 65535] { R4006 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 64] { R4008 += 1 };
  s0 -> s0 [0, 65535] { R4007 += 1, R4008 += 1 };
  s0 -> s2 [0, 65535] { R4008 += 1, R12 += 1 };
  s0 -> s3 [65, 65] { R4008 += 1 };
  s0 -> s1 [66, 65535] { R4008 += 1 };
  s1 -> s1 [0, 64] { R4008 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R4008 += 1 };
  s1 -> s1 [66, 65535] { R4008 += 1 };
  s2 -> s1 [0, 64] { R4008 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4008 += 1, R12 += 1 };
  s2 -> s3 [65, 65] { R4008 += 1 };
  s2 -> s1 [66, 65535] { R4008 += 1 };
  s3 -> s3 [0, 65535] { R4008 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 90] { R4010 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R4009 += 1, R4010 += 1 };
  s0 -> s2 [0, 65535] { R4010 += 1, R21 += 1, R22 += 1 };
  s0 -> s3 [91, 91] { R4010 += 1, R22 += 1 };
  s0 -> s1 [92, 65535] { R4010 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4010 += 1 };
  s1 -> s1 [0, 65535] { R4010 += 1, R22 += 1 };
  s2 -> s1 [0, 90] { R4010 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4010 += 1, R21 += 1, R22 += 1 };
  s2 -> s3 [91, 91] { R4010 += 1, R22 += 1 };
  s2 -> s1 [92, 65535] { R4010 += 1, R22 += 1 };
  s3 -> s1 [0, 65535] { R4010 += 1, R22 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4010 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s0 [0, 65535] { R4011 += 1, R4012 += 1 };
  s0 -> s1 [0, 65535] { R4012 += 1, R23 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R4012 += 1, R24 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R4012 += 1, R23 += 1, R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4012 += 1, R24 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4012 += 1 };
  s2 -> s2 [0, 65535] { R4012 += 1, R24 += 1, R4 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4012 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 64] { R4014 += 1, R3936 += 1 };
  s0 -> s0 [0, 65535] { R4013 += 1, R4014 += 1 };
  s0 -> s2 [0, 65535] { R4014 += 1, R3935 += 1, R3936 += 1 };
  s0 -> s1 [66, 65535] { R4014 += 1, R3936 += 1 };
  s1 -> s1 [0, 64] { R4014 += 1, R3936 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4014 += 1 };
  s1 -> s1 [66, 65535] { R4014 += 1, R3936 += 1 };
  s2 -> s1 [0, 64] { R4014 += 1, R3936 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4014 += 1, R3935 += 1, R3936 += 1 };
  s2 -> s1 [66, 65535] { R4014 += 1, R3936 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R4016 += 1, R3938 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R4015 += 1, R4016 += 1 };
  s0 -> s2 [0, 65535] { R4016 += 1, R3937 += 1, R3938 += 1 };
  s1 -> s1 [0, 65535] { R4016 += 1, R3938 += 1, R19 += 1 };
  s1 -> s4 [0, 65535] { R4016 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4016 += 1, R3938 += 1, R19 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4016 += 1, R3937 += 1, R3938 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4016 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65] { R4018 += 1, R3940 += 1 };
  s0 -> s0 [0, 65535] { R4017 += 1, R4018 += 1 };
  s0 -> s2 [0, 65535] { R4018 += 1, R3939 += 1, R3940 += 1 };
  s0 -> s1 [80, 65535] { R4018 += 1, R3940 += 1 };
  s1 -> s1 [0, 65] { R4018 += 1, R3940 += 1 };
  s1 -> s1 [0, 65535] { R4018 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [80, 65535] { R4018 += 1, R3940 += 1 };
  s2 -> s1 [0, 65] { R4018 += 1, R3940 += 1 };
  s2 -> s2 [0, 65535] { R4018 += 1, R3939 += 1, R3940 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [80, 65535] { R4018 += 1, R3940 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R4020 += 1, R3941 += 1, R3942 += 1 };
  s0 -> s2 [0, 65535] { R4020 += 1, R3942 += 1, R406 += 1 };
  s0 -> s0 [0, 65535] { R4019 += 1, R4020 += 1 };
  s1 -> s1 [0, 65535] { R4020 += 1, R3941 += 1, R3942 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4020 += 1, R3942 += 1, R406 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4020 += 1 };
  s2 -> s2 [0, 65535] { R4020 += 1, R3942 += 1, R406 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4020 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 82] { R4022 += 1, R3944 += 1 };
  s0 -> s0 [0, 65535] { R4021 += 1, R4022 += 1 };
  s0 -> s2 [0, 65535] { R4022 += 1, R3944 += 1, R408 += 1 };
  s0 -> s3 [0, 65535] { R4022 += 1, R3943 += 1, R3944 += 1 };
  s0 -> s1 [84, 65535] { R4022 += 1, R3944 += 1 };
  s1 -> s1 [0, 82] { R4022 += 1, R3944 += 1 };
  s1 -> s1 [0, 65535] { R4022 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [84, 65535] { R4022 += 1, R3944 += 1 };
  s2 -> s1 [0, 82] { R4022 += 1, R3944 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4022 += 1, R3944 += 1, R408 += 1 };
  s2 -> s5 [0, 65535] { R4022 += 1 };
  s2 -> s1 [84, 65535] { R4022 += 1, R3944 += 1 };
  s3 -> s1 [0, 82] { R4022 += 1, R3944 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4022 += 1, R3944 += 1, R408 += 1 };
  s3 -> s3 [0, 65535] { R4022 += 1, R3943 += 1, R3944 += 1 };
  s3 -> s1 [84, 65535] { R4022 += 1, R3944 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4022 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 79] { R4024 += 1, R3946 += 1 };
  s0 -> s2 [0, 65535] { R4024 += 1, R3946 += 1, R410 += 1 };
  s0 -> s3 [0, 65535] { R4024 += 1, R3945 += 1, R3946 += 1 };
  s0 -> s0 [0, 65535] { R4023 += 1, R4024 += 1 };
  s0 -> s1 [81, 65535] { R4024 += 1, R3946 += 1 };
  s1 -> s1 [0, 79] { R4024 += 1, R3946 += 1 };
  s1 -> s1 [0, 65535] { R4024 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [81, 65535] { R4024 += 1, R3946 += 1 };
  s2 -> s1 [0, 79] { R4024 += 1, R3946 += 1 };
  s2 -> s2 [0, 65535] { R4024 += 1, R3946 += 1, R410 += 1 };
  s2 -> s5 [0, 65535] { R4024 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [81, 65535] { R4024 += 1, R3946 += 1 };
  s3 -> s1 [0, 79] { R4024 += 1, R3946 += 1 };
  s3 -> s2 [0, 65535] { R4024 += 1, R3946 += 1, R410 += 1 };
  s3 -> s3 [0, 65535] { R4024 += 1, R3945 += 1, R3946 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [81, 65535] { R4024 += 1, R3946 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4024 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R4026 += 1, R3947 += 1, R3948 += 1 };
  s0 -> s2 [0, 65535] { R4026 += 1, R3948 += 1, R414 += 1, R415 += 1 };
  s0 -> s3 [0, 65535] { R4026 += 1, R3948 += 1, R415 += 1, R416 += 1 };
  s0 -> s0 [0, 65535] { R4025 += 1, R4026 += 1 };
  s1 -> s1 [0, 65535] { R4026 += 1, R3947 += 1, R3948 += 1 };
  s1 -> s2 [0, 65535] { R4026 += 1, R3948 += 1, R414 += 1, R415 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R4026 += 1, R3948 += 1, R415 += 1, R416 += 1 };
  s2 -> s2 [0, 65535] { R4026 += 1, R3948 += 1, R414 += 1, R415 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4026 += 1, R3948 += 1, R415 += 1, R416 += 1 };
  s2 -> s6 [0, 65535] { R4026 += 1 };
  s3 -> s4 [0, 65535] { R4026 += 1, R3948 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4026 += 1, R3948 += 1, R415 += 1, R416 += 1 };
  s3 -> s6 [0, 65535] { R4026 += 1 };
  s4 -> s4 [0, 65535] { R4026 += 1, R3948 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4026 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4026 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s0 [0, 65535] { R4027 += 1, R4028 += 1 };
  s0 -> s1 [0, 65535] { R4028 += 1, R3950 += 1 };
  s0 -> s2 [0, 65535] { R4028 += 1, R3949 += 1, R3950 += 1 };
  s1 -> s4 [0, 65535] { R4028 += 1 };
  s1 -> s1 [0, 65535] { R4028 += 1, R3950 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4028 += 1, R3950 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4028 += 1, R3949 += 1, R3950 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4028 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 79] { R4030 += 1, R3952 += 1, R420 += 1 };
  s0 -> s2 [0, 65535] { R4030 += 1, R3951 += 1, R3952 += 1 };
  s0 -> s3 [0, 65535] { R4030 += 1, R3952 += 1, R419 += 1, R420 += 1 };
  s0 -> s0 [0, 65535] { R4029 += 1, R4030 += 1 };
  s0 -> s1 [81, 65535] { R4030 += 1, R3952 += 1, R420 += 1 };
  s1 -> s1 [0, 79] { R4030 += 1, R3952 += 1, R420 += 1 };
  s1 -> s1 [0, 65535] { R4030 += 1, R3952 += 1 };
  s1 -> s4 [0, 65535] { R4030 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [81, 65535] { R4030 += 1, R3952 += 1, R420 += 1 };
  s2 -> s1 [0, 79] { R4030 += 1, R3952 += 1, R420 += 1 };
  s2 -> s2 [0, 65535] { R4030 += 1, R3951 += 1, R3952 += 1 };
  s2 -> s3 [0, 65535] { R4030 += 1, R3952 += 1, R419 += 1, R420 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [81, 65535] { R4030 += 1, R3952 += 1, R420 += 1 };
  s3 -> s1 [0, 79] { R4030 += 1, R3952 += 1, R420 += 1 };
  s3 -> s3 [0, 65535] { R4030 += 1, R3952 += 1, R419 += 1, R420 += 1 };
  s3 -> s4 [0, 65535] { R4030 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [81, 65535] { R4030 += 1, R3952 += 1, R420 += 1 };
  s4 -> s4 [0, 65535] { R4030 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R4032 += 1, R3954 += 1, R424 += 1, R425 += 1 };
  s0 -> s2 [0, 65535] { R4032 += 1, R3953 += 1, R3954 += 1 };
  s0 -> s0 [0, 65535] { R4031 += 1, R4032 += 1 };
  s0 -> s3 [0, 65535] { R4032 += 1, R3954 += 1, R425 += 1, R426 += 1 };
  s1 -> s1 [0, 65535] { R4032 += 1, R3954 += 1, R424 += 1, R425 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R4032 += 1, R3954 += 1, R425 += 1, R426 += 1 };
  s1 -> s6 [0, 65535] { R4032 += 1 };
  s2 -> s1 [0, 65535] { R4032 += 1, R3954 += 1, R424 += 1, R425 += 1 };
  s2 -> s2 [0, 65535] { R4032 += 1, R3953 += 1, R3954 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4032 += 1, R3954 += 1, R425 += 1, R426 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4032 += 1, R3954 += 1 };
  s3 -> s3 [0, 65535] { R4032 += 1, R3954 += 1, R425 += 1, R426 += 1 };
  s3 -> s6 [0, 65535] { R4032 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4032 += 1, R3954 += 1 };
  s5 -> s6 [0, 65535] { R4032 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4032 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s0 -> s2 [0, 65535] { R4034 += 1, R3956 += 1, R429 += 1, R430 += 1 };
  s0 -> s0 [0, 65535] { R4033 += 1, R4034 += 1 };
  s0 -> s3 [0, 65535] { R4034 += 1, R3955 += 1, R3956 += 1 };
  s0 -> s1 [91, 107] { R4034 += 1, R3956 += 1, R430 += 1 };
  s0 -> s4 [108, 108] { R4034 += 1, R3956 += 1, R430 += 1 };
  s0 -> s1 [109, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s1 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s1 -> s1 [0, 65535] { R4034 += 1, R3956 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4034 += 1 };
  s1 -> s1 [91, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s2 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s2 -> s2 [0, 65535] { R4034 += 1, R3956 += 1, R429 += 1, R430 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R4034 += 1 };
  s2 -> s1 [91, 107] { R4034 += 1, R3956 += 1, R430 += 1 };
  s2 -> s4 [108, 108] { R4034 += 1, R3956 += 1, R430 += 1 };
  s2 -> s1 [109, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s3 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s3 -> s2 [0, 65535] { R4034 += 1, R3956 += 1, R429 += 1, R430 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4034 += 1, R3955 += 1, R3956 += 1 };
  s3 -> s1 [91, 107] { R4034 += 1, R3956 += 1, R430 += 1 };
  s3 -> s4 [108, 108] { R4034 += 1, R3956 += 1, R430 += 1 };
  s3 -> s1 [109, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s4 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4034 += 1, R3956 += 1 };
  s4 -> s6 [0, 65535] { R4034 += 1 };
  s4 -> s1 [91, 110] { R4034 += 1, R3956 += 1, R430 += 1 };
  s4 -> s7 [111, 111] { R4034 += 1, R3956 += 1, R430 += 1 };
  s4 -> s1 [112, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4034 += 1 };
  s7 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4034 += 1, R3956 += 1 };
  s7 -> s6 [0, 65535] { R4034 += 1 };
  s7 -> s1 [91, 98] { R4034 += 1, R3956 += 1, R430 += 1 };
  s7 -> s8 [99, 99] { R4034 += 1, R3956 += 1, R430 += 1 };
  s7 -> s1 [100, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s8 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R4034 += 1, R3956 += 1 };
  s8 -> s6 [0, 65535] { R4034 += 1 };
  s8 -> s1 [91, 96] { R4034 += 1, R3956 += 1, R430 += 1 };
  s8 -> s9 [97, 97] { R4034 += 1, R3956 += 1, R430 += 1 };
  s8 -> s1 [98, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s9 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s9 -> s9 [0, 65535] { R4034 += 1, R3956 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s6 [0, 65535] { R4034 += 1 };
  s9 -> s1 [91, 107] { R4034 += 1, R3956 += 1, R430 += 1 };
  s9 -> s10 [108, 108] { R4034 += 1, R3956 += 1, R430 += 1 };
  s9 -> s1 [109, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s10 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s10 -> s5 [0, 65535];
  s10 -> s6 [0, 65535] { R4034 += 1 };
  s10 -> s10 [0, 65535] { R4034 += 1, R3956 += 1 };
  s10 -> s1 [91, 103] { R4034 += 1, R3956 += 1, R430 += 1 };
  s10 -> s11 [104, 104] { R4034 += 1, R3956 += 1, R430 += 1 };
  s10 -> s1 [105, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s11 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s11 -> s11 [0, 65535] { R4034 += 1, R3956 += 1 };
  s11 -> s5 [0, 65535];
  s11 -> s6 [0, 65535] { R4034 += 1 };
  s11 -> s1 [91, 110] { R4034 += 1, R3956 += 1, R430 += 1 };
  s11 -> s12 [111, 111] { R4034 += 1, R3956 += 1, R430 += 1 };
  s11 -> s1 [112, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s12 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s12 -> s12 [0, 65535] { R4034 += 1, R3956 += 1 };
  s12 -> s5 [0, 65535];
  s12 -> s6 [0, 65535] { R4034 += 1 };
  s12 -> s1 [91, 114] { R4034 += 1, R3956 += 1, R430 += 1 };
  s12 -> s13 [115, 115] { R4034 += 1, R3956 += 1, R430 += 1 };
  s12 -> s1 [116, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s13 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s13 -> s5 [0, 65535];
  s13 -> s6 [0, 65535] { R4034 += 1 };
  s13 -> s13 [0, 65535] { R4034 += 1, R3956 += 1 };
  s13 -> s1 [91, 115] { R4034 += 1, R3956 += 1, R430 += 1 };
  s13 -> s14 [116, 116] { R4034 += 1, R3956 += 1, R430 += 1 };
  s13 -> s1 [117, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  s14 -> s1 [0, 80] { R4034 += 1, R3956 += 1, R430 += 1 };
  s14 -> s1 [91, 65535] { R4034 += 1, R3956 += 1, R430 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s1 [0, 65535] { R4036 += 1, R3958 += 1, R435 += 1, R436 += 1 };
  s0 -> s2 [0, 65535] { R4036 += 1, R3958 += 1, R434 += 1, R435 += 1 };
  s0 -> s3 [0, 65535] { R4036 += 1, R3957 += 1, R3958 += 1 };
  s0 -> s0 [0, 65535] { R4035 += 1, R4036 += 1 };
  s1 -> s6 [0, 65535] { R4036 += 1, R3958 += 1 };
  s1 -> s1 [0, 65535] { R4036 += 1, R3958 += 1, R435 += 1, R436 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4036 += 1 };
  s2 -> s1 [0, 65535] { R4036 += 1, R3958 += 1, R435 += 1, R436 += 1 };
  s2 -> s2 [0, 65535] { R4036 += 1, R3958 += 1, R434 += 1, R435 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4036 += 1 };
  s3 -> s1 [0, 65535] { R4036 += 1, R3958 += 1, R435 += 1, R436 += 1 };
  s3 -> s2 [0, 65535] { R4036 += 1, R3958 += 1, R434 += 1, R435 += 1 };
  s3 -> s3 [0, 65535] { R4036 += 1, R3957 += 1, R3958 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4036 += 1 };
  s6 -> s6 [0, 65535] { R4036 += 1, R3958 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4036 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R4038 += 1, R3960 += 1, R2715 += 1, R2716 += 1 };
  s0 -> s2 [0, 65535] { R4038 += 1, R3960 += 1 };
  s0 -> s3 [0, 65535] { R4038 += 1, R3959 += 1, R3960 += 1 };
  s0 -> s0 [0, 65535] { R4037 += 1, R4038 += 1 };
  s1 -> s1 [0, 65535] { R4038 += 1, R3960 += 1, R2715 += 1, R2716 += 1 };
  s1 -> s2 [0, 65535] { R4038 += 1, R3960 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4038 += 1 };
  s2 -> s2 [0, 65535] { R4038 += 1, R3960 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4038 += 1 };
  s3 -> s1 [0, 65535] { R4038 += 1, R3960 += 1, R2715 += 1, R2716 += 1 };
  s3 -> s2 [0, 65535] { R4038 += 1, R3960 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4038 += 1, R3959 += 1, R3960 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4038 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s0 [0, 65535] { R4039 += 1, R4040 += 1 };
  s0 -> s1 [0, 65535] { R4040 += 1, R3961 += 1, R3962 += 1 };
  s0 -> s2 [0, 65535] { R4040 += 1, R3962 += 1 };
  s1 -> s1 [0, 65535] { R4040 += 1, R3961 += 1, R3962 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4040 += 1, R3962 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4040 += 1, R3962 += 1 };
  s2 -> s4 [0, 65535] { R4040 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4040 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R4042 += 1, R3964 += 1 };
  s0 -> s2 [0, 65535] { R4042 += 1, R3963 += 1, R3964 += 1 };
  s0 -> s0 [0, 65535] { R4041 += 1, R4042 += 1 };
  s0 -> s3 [0, 65535] { R4042 += 1, R3964 += 1, R3477 += 1, R3478 += 1 };
  s1 -> s1 [0, 65535] { R4042 += 1, R3964 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4042 += 1 };
  s2 -> s1 [0, 65535] { R4042 += 1, R3964 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4042 += 1, R3963 += 1, R3964 += 1 };
  s2 -> s3 [0, 65535] { R4042 += 1, R3964 += 1, R3477 += 1, R3478 += 1 };
  s3 -> s1 [0, 65535] { R4042 += 1, R3964 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4042 += 1 };
  s3 -> s3 [0, 65535] { R4042 += 1, R3964 += 1, R3477 += 1, R3478 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4042 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4044 += 1, R3965 += 1, R3966 += 1 };
  s0 -> s2 [0, 65535] { R4044 += 1, R3966 += 1 };
  s0 -> s0 [0, 65535] { R4043 += 1, R4044 += 1 };
  s1 -> s1 [0, 65535] { R4044 += 1, R3965 += 1, R3966 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4044 += 1, R3966 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4044 += 1, R3966 += 1 };
  s2 -> s4 [0, 65535] { R4044 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4044 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R4046 += 1, R3968 += 1 };
  s0 -> s0 [0, 65535] { R4045 += 1, R4046 += 1 };
  s0 -> s2 [0, 65535] { R4046 += 1, R3967 += 1, R3968 += 1 };
  s1 -> s1 [0, 65535] { R4046 += 1, R3968 += 1 };
  s1 -> s4 [0, 65535] { R4046 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4046 += 1, R3968 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4046 += 1, R3967 += 1, R3968 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4046 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 65535] { R4048 += 1, R3969 += 1, R3970 += 1 };
  s0 -> s0 [0, 65535] { R4047 += 1, R4048 += 1 };
  s0 -> s2 [0, 65535] { R4048 += 1, R3970 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R4048 += 1, R3969 += 1, R3970 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R4048 += 1, R3970 += 1, R20 += 1 };
  s2 -> s3 [0, 65535] { R4048 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4048 += 1, R3970 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R4048 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R4050 += 1, R3972 += 1 };
  s0 -> s2 [0, 65535] { R4050 += 1, R3971 += 1, R3972 += 1 };
  s0 -> s0 [0, 65535] { R4049 += 1, R4050 += 1 };
  s0 -> s3 [65, 65] { R4050 += 1, R3972 += 1 };
  s0 -> s4 [65, 65] { R4050 += 1, R3972 += 1 };
  s0 -> s5 [80, 80] { R4050 += 1, R3972 += 1 };
  s0 -> s1 [81, 65535] { R4050 += 1, R3972 += 1 };
  s1 -> s1 [0, 64] { R4050 += 1, R3972 += 1 };
  s1 -> s3 [65, 65] { R4050 += 1, R3972 += 1 };
  s1 -> s4 [65, 65] { R4050 += 1, R3972 += 1 };
  s1 -> s5 [80, 80] { R4050 += 1, R3972 += 1 };
  s1 -> s1 [81, 65535] { R4050 += 1, R3972 += 1 };
  s2 -> s1 [0, 64] { R4050 += 1, R3972 += 1 };
  s2 -> s2 [0, 65535] { R4050 += 1, R3971 += 1, R3972 += 1 };
  s2 -> s3 [65, 65] { R4050 += 1, R3972 += 1 };
  s2 -> s4 [65, 65] { R4050 += 1, R3972 += 1 };
  s2 -> s5 [80, 80] { R4050 += 1, R3972 += 1 };
  s2 -> s1 [81, 65535] { R4050 += 1, R3972 += 1 };
  s4 -> s4 [0, 65] { R4050 += 1, R3972 += 1 };
  s4 -> s8 [80, 80] { R4050 += 1, R3972 += 1 };
  s4 -> s4 [81, 65535] { R4050 += 1, R3972 += 1 };
  s5 -> s5 [0, 64] { R4050 += 1, R3972 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4050 += 1 };
  s5 -> s7 [65, 65] { R4050 += 1, R3972 += 1 };
  s5 -> s8 [65, 65] { R4050 += 1, R3972 += 1 };
  s5 -> s5 [80, 65535] { R4050 += 1, R3972 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4050 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65] { R4050 += 1, R3972 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4050 += 1 };
  s8 -> s8 [80, 65535] { R4050 += 1, R3972 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R4052 += 1, R3974 += 1, R405 += 1 };
  s0 -> s0 [0, 65535] { R4051 += 1, R4052 += 1 };
  s0 -> s2 [0, 65535] { R4052 += 1, R3973 += 1, R3974 += 1 };
  s0 -> s3 [65, 65] { R4052 += 1, R3974 += 1, R405 += 1 };
  s0 -> s4 [65, 65] { R4052 += 1, R3974 += 1, R405 += 1 };
  s0 -> s1 [66, 65535] { R4052 += 1, R3974 += 1, R405 += 1 };
  s1 -> s1 [0, 64] { R4052 += 1, R3974 += 1, R405 += 1 };
  s1 -> s1 [0, 65535] { R4052 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4052 += 1, R3974 += 1, R405 += 1 };
  s1 -> s4 [65, 65] { R4052 += 1, R3974 += 1, R405 += 1 };
  s1 -> s1 [66, 65535] { R4052 += 1, R3974 += 1, R405 += 1 };
  s2 -> s1 [0, 64] { R4052 += 1, R3974 += 1, R405 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4052 += 1, R3973 += 1, R3974 += 1 };
  s2 -> s3 [65, 65] { R4052 += 1, R3974 += 1, R405 += 1 };
  s2 -> s4 [65, 65] { R4052 += 1, R3974 += 1, R405 += 1 };
  s2 -> s1 [66, 65535] { R4052 += 1, R3974 += 1, R405 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4052 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4052 += 1 };
  s4 -> s4 [0, 65535] { R4052 += 1, R3974 += 1, R405 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4052 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R4054 += 1, R3976 += 1, R407 += 1 };
  s0 -> s2 [0, 65535] { R4054 += 1, R3975 += 1, R3976 += 1 };
  s0 -> s0 [0, 65535] { R4053 += 1, R4054 += 1 };
  s0 -> s3 [65, 65] { R4054 += 1, R3976 += 1, R407 += 1 };
  s0 -> s4 [65, 65] { R4054 += 1, R3976 += 1, R407 += 1 };
  s0 -> s1 [66, 65535] { R4054 += 1, R3976 += 1, R407 += 1 };
  s1 -> s1 [0, 64] { R4054 += 1, R3976 += 1, R407 += 1 };
  s1 -> s1 [0, 65535] { R4054 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4054 += 1, R3976 += 1, R407 += 1 };
  s1 -> s4 [65, 65] { R4054 += 1, R3976 += 1, R407 += 1 };
  s1 -> s1 [66, 65535] { R4054 += 1, R3976 += 1, R407 += 1 };
  s2 -> s1 [0, 64] { R4054 += 1, R3976 += 1, R407 += 1 };
  s2 -> s2 [0, 65535] { R4054 += 1, R3975 += 1, R3976 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4054 += 1, R3976 += 1, R407 += 1 };
  s2 -> s4 [65, 65] { R4054 += 1, R3976 += 1, R407 += 1 };
  s2 -> s1 [66, 65535] { R4054 += 1, R3976 += 1, R407 += 1 };
  s3 -> s3 [0, 65535] { R4054 += 1, R3976 += 1, R407 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4054 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4054 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4054 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R4056 += 1, R3978 += 1, R409 += 1 };
  s0 -> s2 [0, 65535] { R4056 += 1, R3977 += 1, R3978 += 1 };
  s0 -> s0 [0, 65535] { R4055 += 1, R4056 += 1 };
  s0 -> s3 [65, 65] { R4056 += 1, R3978 += 1, R409 += 1 };
  s0 -> s4 [65, 65] { R4056 += 1, R3978 += 1, R409 += 1 };
  s0 -> s1 [66, 65535] { R4056 += 1, R3978 += 1, R409 += 1 };
  s1 -> s1 [0, 64] { R4056 += 1, R3978 += 1, R409 += 1 };
  s1 -> s1 [0, 65535] { R4056 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4056 += 1, R3978 += 1, R409 += 1 };
  s1 -> s4 [65, 65] { R4056 += 1, R3978 += 1, R409 += 1 };
  s1 -> s1 [66, 65535] { R4056 += 1, R3978 += 1, R409 += 1 };
  s2 -> s1 [0, 64] { R4056 += 1, R3978 += 1, R409 += 1 };
  s2 -> s2 [0, 65535] { R4056 += 1, R3977 += 1, R3978 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4056 += 1, R3978 += 1, R409 += 1 };
  s2 -> s4 [65, 65] { R4056 += 1, R3978 += 1, R409 += 1 };
  s2 -> s1 [66, 65535] { R4056 += 1, R3978 += 1, R409 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4056 += 1, R3978 += 1, R409 += 1 };
  s3 -> s6 [0, 65535] { R4056 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4056 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4056 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s0 -> s0 [0, 65535] { R4057 += 1, R4058 += 1 };
  s0 -> s2 [0, 65535] { R4058 += 1, R3979 += 1, R3980 += 1 };
  s0 -> s3 [65, 65] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s0 -> s4 [65, 65] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s0 -> s1 [66, 65535] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [0, 64] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4058 += 1 };
  s1 -> s3 [65, 65] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s1 -> s4 [65, 65] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [66, 65535] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [0, 64] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4058 += 1, R3979 += 1, R3980 += 1 };
  s2 -> s3 [65, 65] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s2 -> s4 [65, 65] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [66, 65535] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s3 -> s6 [0, 65535] { R4058 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4058 += 1, R3980 += 1, R411 += 1, R412 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4058 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4058 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 64] { R4060 += 1, R3982 += 1 };
  s0 -> s2 [0, 65535] { R4060 += 1, R3981 += 1, R3982 += 1 };
  s0 -> s0 [0, 65535] { R4059 += 1, R4060 += 1 };
  s0 -> s3 [65, 65] { R4060 += 1, R3982 += 1 };
  s0 -> s4 [65, 65] { R4060 += 1, R3982 += 1 };
  s0 -> s1 [66, 65535] { R4060 += 1, R3982 += 1 };
  s1 -> s1 [0, 64] { R4060 += 1, R3982 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4060 += 1 };
  s1 -> s3 [65, 65] { R4060 += 1, R3982 += 1 };
  s1 -> s4 [65, 65] { R4060 += 1, R3982 += 1 };
  s1 -> s1 [66, 65535] { R4060 += 1, R3982 += 1 };
  s2 -> s1 [0, 64] { R4060 += 1, R3982 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4060 += 1, R3981 += 1, R3982 += 1 };
  s2 -> s3 [65, 65] { R4060 += 1, R3982 += 1 };
  s2 -> s4 [65, 65] { R4060 += 1, R3982 += 1 };
  s2 -> s1 [66, 65535] { R4060 += 1, R3982 += 1 };
  s3 -> s3 [0, 65535] { R4060 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4060 += 1, R3982 += 1 };
  s4 -> s6 [0, 65535] { R4060 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4060 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s0 -> s2 [0, 65535] { R4062 += 1, R3983 += 1, R3984 += 1 };
  s0 -> s0 [0, 65535] { R4061 += 1, R4062 += 1 };
  s0 -> s3 [65, 65] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s0 -> s4 [65, 65] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s0 -> s1 [66, 65535] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [0, 64] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [0, 65535] { R4062 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s1 -> s4 [65, 65] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [66, 65535] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [0, 64] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s2 -> s2 [0, 65535] { R4062 += 1, R3983 += 1, R3984 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s2 -> s4 [65, 65] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [66, 65535] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s3 -> s3 [0, 65535] { R4062 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4062 += 1 };
  s4 -> s4 [0, 65535] { R4062 += 1, R3984 += 1, R417 += 1, R418 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4062 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 64] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s0 -> s2 [0, 65535] { R4064 += 1, R3985 += 1, R3986 += 1 };
  s0 -> s0 [0, 65535] { R4063 += 1, R4064 += 1 };
  s0 -> s3 [65, 65] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s0 -> s4 [65, 65] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s0 -> s1 [66, 65535] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [0, 64] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [0, 65535] { R4064 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s1 -> s4 [65, 65] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [66, 65535] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [0, 64] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s2 -> s2 [0, 65535] { R4064 += 1, R3985 += 1, R3986 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s2 -> s4 [65, 65] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [66, 65535] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s3 -> s3 [0, 65535] { R4064 += 1, R3986 += 1, R421 += 1, R422 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4064 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4064 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4064 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s0 -> s2 [0, 65535] { R4066 += 1, R3987 += 1, R3988 += 1 };
  s0 -> s0 [0, 65535] { R4065 += 1, R4066 += 1 };
  s0 -> s3 [65, 65] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s0 -> s4 [65, 65] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s0 -> s1 [66, 65535] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [0, 64] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4066 += 1 };
  s1 -> s3 [65, 65] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s1 -> s4 [65, 65] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [66, 65535] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [0, 64] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s2 -> s2 [0, 65535] { R4066 += 1, R3987 += 1, R3988 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s2 -> s4 [65, 65] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [66, 65535] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s3 -> s6 [0, 65535] { R4066 += 1 };
  s3 -> s3 [0, 65535] { R4066 += 1, R3988 += 1, R427 += 1, R428 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4066 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4066 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 64] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s0 -> s2 [0, 65535] { R4068 += 1, R3989 += 1, R3990 += 1 };
  s0 -> s0 [0, 65535] { R4067 += 1, R4068 += 1 };
  s0 -> s3 [65, 65] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s0 -> s4 [65, 65] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s0 -> s1 [66, 65535] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [0, 64] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [0, 65535] { R4068 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s1 -> s4 [65, 65] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [66, 65535] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [0, 64] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4068 += 1, R3989 += 1, R3990 += 1 };
  s2 -> s3 [65, 65] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s2 -> s4 [65, 65] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [66, 65535] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s3 -> s3 [0, 65535] { R4068 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4068 += 1, R3990 += 1, R431 += 1, R432 += 1 };
  s4 -> s6 [0, 65535] { R4068 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4068 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 64] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s2 [0, 64] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s3 [0, 65535] { R4070 += 1, R3991 += 1, R3992 += 1 };
  s0 -> s0 [0, 65535] { R4069 += 1, R4070 += 1 };
  s0 -> s4 [65, 65] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s5 [65, 65] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s6 [65, 65] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s7 [65, 65] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s1 [66, 65535] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s2 [66, 65535] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s1 -> s1 [0, 64] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R4070 += 1 };
  s1 -> s5 [65, 65] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s7 [65, 65] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s1 [66, 65535] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s1 [0, 64] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s2 [0, 64] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s2 -> s4 [65, 65] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s2 -> s5 [65, 65] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s6 [65, 65] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s2 -> s7 [65, 65] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s1 [66, 65535] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s2 [66, 65535] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s1 [0, 64] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s2 [0, 64] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s3 [0, 65535] { R4070 += 1, R3991 += 1, R3992 += 1 };
  s3 -> s4 [65, 65] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s5 [65, 65] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s6 [65, 65] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s7 [65, 65] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s1 [66, 65535] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s2 [66, 65535] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s4 -> s4 [0, 65535] { R4070 += 1, R3992 += 1, R2711 += 1, R2712 += 1 };
  s4 -> s7 [0, 65535] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R4070 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R4070 += 1 };
  s7 -> s7 [0, 65535] { R4070 += 1, R3992 += 1, R2712 += 1, R2713 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4070 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R4072 += 1, R3994 += 1 };
  s0 -> s2 [0, 65535] { R4072 += 1, R3993 += 1, R3994 += 1 };
  s0 -> s0 [0, 65535] { R4071 += 1, R4072 += 1 };
  s0 -> s3 [65, 65] { R4072 += 1, R3994 += 1 };
  s0 -> s4 [65, 65] { R4072 += 1, R3994 += 1 };
  s0 -> s1 [66, 65535] { R4072 += 1, R3994 += 1 };
  s1 -> s1 [0, 64] { R4072 += 1, R3994 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4072 += 1 };
  s1 -> s3 [65, 65] { R4072 += 1, R3994 += 1 };
  s1 -> s4 [65, 65] { R4072 += 1, R3994 += 1 };
  s1 -> s1 [66, 65535] { R4072 += 1, R3994 += 1 };
  s2 -> s1 [0, 64] { R4072 += 1, R3994 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4072 += 1, R3993 += 1, R3994 += 1 };
  s2 -> s3 [65, 65] { R4072 += 1, R3994 += 1 };
  s2 -> s4 [65, 65] { R4072 += 1, R3994 += 1 };
  s2 -> s1 [66, 65535] { R4072 += 1, R3994 += 1 };
  s3 -> s3 [0, 65535] { R4072 += 1, R3994 += 1 };
  s3 -> s6 [0, 65535] { R4072 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4072 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4072 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 64] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s0 -> s2 [0, 64] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s0 -> s3 [0, 65535] { R4074 += 1, R3995 += 1, R3996 += 1 };
  s0 -> s0 [0, 65535] { R4073 += 1, R4074 += 1 };
  s0 -> s4 [65, 65] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s0 -> s5 [65, 65] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s0 -> s6 [65, 65] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s0 -> s7 [65, 65] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s0 -> s1 [66, 65535] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s0 -> s2 [66, 65535] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s1 -> s1 [0, 64] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s1 -> s2 [0, 64] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s1 -> s4 [65, 65] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s1 -> s5 [65, 65] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s1 -> s6 [65, 65] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s1 -> s7 [65, 65] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s1 -> s1 [66, 65535] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s1 -> s2 [66, 65535] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s2 -> s2 [0, 64] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R4074 += 1 };
  s2 -> s5 [65, 65] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s2 -> s6 [65, 65] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s2 -> s2 [66, 65535] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s3 -> s1 [0, 64] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s3 -> s2 [0, 64] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s3 -> s3 [0, 65535] { R4074 += 1, R3995 += 1, R3996 += 1 };
  s3 -> s4 [65, 65] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s3 -> s5 [65, 65] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s3 -> s6 [65, 65] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s3 -> s7 [65, 65] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s3 -> s1 [66, 65535] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s3 -> s2 [66, 65535] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R4074 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R4074 += 1 };
  s6 -> s6 [0, 65535] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s7 -> s6 [0, 65535] { R4074 += 1, R3996 += 1, R3474 += 1, R3475 += 1 };
  s7 -> s7 [0, 65535] { R4074 += 1, R3996 += 1, R3473 += 1, R3474 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4074 += 1 };
  accepting s8, s5, s2, s9, s6;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 64] { R4076 += 1, R3998 += 1 };
  s0 -> s2 [0, 65535] { R4076 += 1, R3997 += 1, R3998 += 1 };
  s0 -> s0 [0, 65535] { R4075 += 1, R4076 += 1 };
  s0 -> s3 [65, 65] { R4076 += 1, R3998 += 1 };
  s0 -> s4 [65, 65] { R4076 += 1, R3998 += 1 };
  s0 -> s1 [66, 65535] { R4076 += 1, R3998 += 1 };
  s1 -> s1 [0, 64] { R4076 += 1, R3998 += 1 };
  s1 -> s1 [0, 65535] { R4076 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R4076 += 1, R3998 += 1 };
  s1 -> s4 [65, 65] { R4076 += 1, R3998 += 1 };
  s1 -> s1 [66, 65535] { R4076 += 1, R3998 += 1 };
  s2 -> s1 [0, 64] { R4076 += 1, R3998 += 1 };
  s2 -> s2 [0, 65535] { R4076 += 1, R3997 += 1, R3998 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R4076 += 1, R3998 += 1 };
  s2 -> s4 [65, 65] { R4076 += 1, R3998 += 1 };
  s2 -> s1 [66, 65535] { R4076 += 1, R3998 += 1 };
  s3 -> s3 [0, 65535] { R4076 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4076 += 1, R3998 += 1 };
  s4 -> s5 [0, 65535] { R4076 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4076 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 64] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s0 -> s2 [0, 64] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s0 -> s0 [0, 65535] { R4077 += 1, R4078 += 1 };
  s0 -> s3 [0, 65535] { R4078 += 1, R3999 += 1, R4000 += 1 };
  s0 -> s4 [65, 65] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s0 -> s5 [65, 65] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s0 -> s6 [65, 65] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s0 -> s7 [65, 65] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s0 -> s2 [66, 79] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s0 -> s1 [66, 65535] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s0 -> s8 [80, 80] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s0 -> s2 [81, 65535] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s1 -> s1 [0, 64] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s1 -> s2 [0, 64] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s1 -> s4 [65, 65] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s1 -> s5 [65, 65] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s1 -> s6 [65, 65] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s1 -> s7 [65, 65] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s1 -> s2 [66, 79] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s1 -> s1 [66, 65535] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s1 -> s8 [80, 80] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s1 -> s2 [81, 65535] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s2 -> s2 [0, 64] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s2 -> s4 [65, 65] { R4078 += 1, R4000 += 1 };
  s2 -> s6 [65, 65] { R4078 += 1, R4000 += 1 };
  s2 -> s2 [66, 79] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s2 -> s2 [66, 65535] { R4078 += 1, R4000 += 1 };
  s2 -> s8 [80, 80] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s2 -> s2 [81, 65535] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s3 -> s1 [0, 64] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s3 -> s2 [0, 64] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s3 -> s3 [0, 65535] { R4078 += 1, R3999 += 1, R4000 += 1 };
  s3 -> s4 [65, 65] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s3 -> s5 [65, 65] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s3 -> s6 [65, 65] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s3 -> s7 [65, 65] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s3 -> s2 [66, 79] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s3 -> s1 [66, 65535] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s3 -> s8 [80, 80] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s3 -> s2 [81, 65535] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s6 -> s6 [0, 79] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s6 -> s6 [0, 65535] { R4078 += 1, R4000 += 1 };
  s6 -> s11 [80, 80] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s6 -> s6 [81, 65535] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s7 -> s6 [0, 79] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s7 -> s7 [0, 65535] { R4078 += 1, R4000 += 1, R3929 += 1, R3930 += 1 };
  s7 -> s11 [80, 80] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s7 -> s6 [81, 65535] { R4078 += 1, R4000 += 1, R3930 += 1, R3931 += 1 };
  s8 -> s8 [0, 64] { R4078 += 1, R4000 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R4078 += 1 };
  s8 -> s10 [65, 65] { R4078 += 1, R4000 += 1 };
  s8 -> s11 [65, 65] { R4078 += 1, R4000 += 1 };
  s8 -> s8 [66, 65535] { R4078 += 1, R4000 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R4078 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s12 [0, 65535] { R4078 += 1 };
  s11 -> s11 [0, 65535] { R4078 += 1, R4000 += 1 };
  s11 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R4078 += 1 };
  s12 -> s9 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
};
constraint R2 = R3968 && R3 = R4078 && R21 = 0 && R22 = 1 && R23 = 0 && R24 = 1 && R406 + R405 = 0 && R3935 = 0 && R3936 = R3968 && R3937 = 0 && R3938 = R3968 && R3939 = 0 && R3940 = R3968 && R3941 = 0 && R3942 = R3968 && R3943 = 0 && R3944 = R3968 && R3945 = 0 && R3946 = R3968 && R3947 = 0 && R3948 = R3968 && R3949 = 0 && R3950 = R3968 && R3951 = 0 && R3952 = R3968 && R3953 = 0 && R3954 = R3968 && R3955 = 0 && R3956 = R3968 && R3957 = 0 && R3958 = R3968 && R3959 = 0 && R3960 = R3968 && R3961 = 0 && R3962 = R3968 && R3963 = 0 && R3964 = R3968 && R3965 = 0 && R3966 = R3968 && R3967 = 0 && R3971 = 0 && R3972 = 0 && R3991 = 0 && R3992 = 0 && R3995 = 0 && R3996 = 0 && R3999 = 0 && R4000 = 0 && R4001 = 10 && R4002 = R4078 && R4003 = 10 && R4004 = R4078 && R4005 = 10 && R4006 = R4078 && R4007 = 10 && R4008 = R4078 && R4009 = 10 && R4010 = R4078 && R4011 = 10 && R4012 = R4078 && R4013 = 10 && R4014 = R4078 && R4015 = 10 && R4016 = R4078 && R4017 = 10 && R4018 = R4078 && R4019 = 10 && R4020 = R4078 && R4021 = 10 && R4022 = R4078 && R4023 = 10 && R4024 = R4078 && R4025 = 10 && R4026 = R4078 && R4027 = 10 && R4028 = R4078 && R4029 = 10 && R4030 = R4078 && R4031 = 10 && R4032 = R4078 && R4033 = 10 && R4034 = R4078 && R4035 = 10 && R4036 = R4078 && R4037 = 10 && R4038 = R4078 && R4039 = 10 && R4040 = R4078 && R4041 = 10 && R4042 = R4078 && R4043 = 10 && R4044 = R4078 && R4045 = 10 && R4046 = R4078 && R4047 = 10 && R4048 = R4078 && R4049 = 10 && R4050 = R4078 && R4051 = 10 && R4052 = R4078 && R4053 = 10 && R4054 = R4078 && R4055 = 10 && R4056 = R4078 && R4057 = 10 && R4058 = R4078 && R4059 = 10 && R4060 = R4078 && R4061 = 10 && R4062 = R4078 && R4063 = 10 && R4064 = R4078 && R4065 = 10 && R4066 = R4078 && R4067 = 10 && R4068 = R4078 && R4069 = 10 && R4070 = R4078 && R4071 = 10 && R4072 = R4078 && R4073 = 10 && R4074 = R4078 && R4075 = 10 && R4076 = R4078 && R4077 = 10 && R436 + R433 + R3934 + R3931 != 0 && R11 < 1 && R12 < 1 && R408 + R407 < 1 && R410 + R409 < 1 && 0 < R3968 && 9 < R4078 && (R20 = 0 || (R3969 = 0 && R3970 = 0)) && (R20 = 0 || (R3973 = 0 && R3974 = 0)) && (R20 = 0 || (R3975 = 0 && R3976 = 0)) && (R20 = 0 || (R3977 = 0 && R3978 = 0)) && (R20 = 0 || (R3979 = 0 && R3980 = 0)) && (R20 = 0 || (R3981 = 0 && R3982 = 0)) && (R20 = 0 || (R3983 = 0 && R3984 = 0)) && (R20 = 0 || (R3985 = 0 && R3986 = 0)) && (R20 = 0 || (R3987 = 0 && R3988 = 0)) && (R20 = 0 || (R3989 = 0 && R3990 = 0)) && (R20 = 0 || (R3993 = 0 && R3994 = 0)) && (R20 = 0 || (R3997 = 0 && R3998 = 0)) && (R416 + R413 = 0 || (R414 + R411 = 0 && R415 + R412 = 0)) && (R426 + R423 = 0 || (R419 + R417 = 0 && R420 + R418 = 0)) && (R426 + R423 = 0 || (R424 + R421 = 0 && R425 + R422 = 0)) && (R426 + R423 = 0 || (R429 + R427 = 0 && R430 + R428 = 0)) && (R426 + R423 = 0 || (R434 + R431 = 0 && R435 + R432 = 0)) && (R2716 + R2713 = 0 || (R2714 + R2711 = 0 && R2715 + R2712 = 0)) && (R3478 + R3475 = 0 || (R3476 + R3473 = 0 && R3477 + R3474 = 0)) && (R3478 + R3475 = 0 || (R3932 + R3929 = 0 && R3933 + R3930 = 0));
// End of Parikh automata intersection problem
