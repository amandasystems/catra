// Parikh automata intersection problem, generated by OSTRICH+
counter int R11, R12, R19, R2, R20, R21, R22, R23, R24, R2711, R2712, R2713, R2714, R2715, R2716, R3, R4, R405, R406, R407, R408, R409, R410, R411, R412, R413, R414, R415, R416, R417, R418, R419, R420, R421, R422, R4229, R423, R4230, R4231, R4232, R4233, R4234, R424, R425, R426, R427, R428, R429, R430, R431, R432, R433, R434, R435, R436, R4835, R4836, R4837, R4838, R4839, R4840, R4841, R4842, R4843, R4844, R4845, R4846, R4847, R4848, R4849, R4850, R4851, R4852, R4853, R4854, R4855, R4856, R4857, R4858, R4859, R4860, R4861, R4862, R4863, R4864, R4865, R4866, R4867, R4868, R4869, R4870, R4871, R4872, R4873, R4874, R4875, R4876, R4877, R4878, R4879, R4880, R4881, R4882, R4883, R4884, R4885, R4886, R4887, R4888, R4889, R4890, R4891, R4892, R4893, R4894, R4895, R4896, R4897, R4898, R4899, R4900, R4901, R4902, R4903, R4904, R4905, R4906, R4907, R4908, R4909, R4910, R4911, R4912, R4913, R4914, R4915, R4916, R4917, R4918, R4919, R4920, R4921, R4922, R4923, R4924, R4925, R4926, R4927, R4928, R4929, R4930, R4931, R4932, R4933, R4934, R4935, R4936, R4937, R4938, R4939, R4940, R4941, R4942, R4943, R4944, R4945, R4946, R4947, R4948, R4949, R4950, R4951, R4952, R4953, R4954, R4955, R4956, R4957, R4958, R4959, R4960, R4961, R4962, R4963, R4964, R4965, R4966, R4967, R4968, R4969, R4970, R4971, R4972, R4973, R4974, R4975, R4976, R4977, R4978, R4979, R4980, R4981, R4982, R4983, R4984;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining c11
automaton c11_0 {
  init s0;
  s0 -> s1 [115, 115];
  accepting s1;
};
};
synchronised {  // Automata constraining P53
automaton P53_0 {
  init s0;
  s0 -> s1 [112, 112];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 43] { R4908 += 1 };
  s0 -> s0 [0, 65535] { R4907 += 1, R4908 += 1 };
  s0 -> s1 [45, 45] { R4908 += 1 };
  s0 -> s2 [46, 46] { R4908 += 1 };
  s0 -> s1 [48, 62] { R4908 += 1 };
  s0 -> s3 [65, 65] { R4908 += 1 };
  s0 -> s1 [66, 65535] { R4908 += 1 };
  s1 -> s1 [0, 43] { R4908 += 1 };
  s1 -> s1 [45, 45] { R4908 += 1 };
  s1 -> s2 [46, 46] { R4908 += 1 };
  s1 -> s1 [48, 62] { R4908 += 1 };
  s1 -> s3 [65, 65] { R4908 += 1 };
  s1 -> s1 [66, 65535] { R4908 += 1 };
  s2 -> s1 [0, 43] { R4908 += 1 };
  s2 -> s1 [45, 45] { R4908 += 1 };
  s2 -> s2 [46, 46] { R4908 += 1 };
  s2 -> s1 [48, 62] { R4908 += 1 };
  s2 -> s3 [65, 65] { R4908 += 1 };
  s2 -> s1 [66, 114] { R4908 += 1 };
  s2 -> s8 [115, 115] { R4908 += 1 };
  s2 -> s1 [116, 65535] { R4908 += 1 };
  s3 -> s3 [0, 43] { R4908 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R4908 += 1 };
  s3 -> s4 [46, 46] { R4908 += 1 };
  s3 -> s3 [48, 62] { R4908 += 1 };
  s3 -> s3 [65, 65535] { R4908 += 1 };
  s4 -> s3 [0, 43] { R4908 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R4908 += 1 };
  s4 -> s4 [46, 46] { R4908 += 1 };
  s4 -> s3 [48, 62] { R4908 += 1 };
  s4 -> s3 [65, 114] { R4908 += 1 };
  s4 -> s5 [115, 115] { R4908 += 1 };
  s4 -> s3 [116, 65535] { R4908 += 1 };
  s5 -> s3 [0, 43] { R4908 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R4908 += 1 };
  s5 -> s4 [46, 46] { R4908 += 1 };
  s5 -> s3 [48, 62] { R4908 += 1 };
  s5 -> s3 [65, 110] { R4908 += 1 };
  s5 -> s6 [111, 111] { R4908 += 1 };
  s5 -> s3 [112, 65535] { R4908 += 1 };
  s6 -> s3 [0, 43] { R4908 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R4908 += 1 };
  s6 -> s4 [46, 46] { R4908 += 1 };
  s6 -> s3 [48, 62] { R4908 += 1 };
  s6 -> s3 [65, 98] { R4908 += 1 };
  s6 -> s7 [99, 99] { R4908 += 1 };
  s6 -> s3 [100, 65535] { R4908 += 1 };
  s7 -> s3 [0, 43] { R4908 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R4908 += 1 };
  s7 -> s4 [46, 46] { R4908 += 1 };
  s7 -> s3 [48, 62] { R4908 += 1 };
  s7 -> s3 [65, 106] { R4908 += 1 };
  s7 -> s3 [108, 65535] { R4908 += 1 };
  s8 -> s1 [0, 43] { R4908 += 1 };
  s8 -> s1 [45, 45] { R4908 += 1 };
  s8 -> s2 [46, 46] { R4908 += 1 };
  s8 -> s1 [48, 62] { R4908 += 1 };
  s8 -> s3 [65, 65] { R4908 += 1 };
  s8 -> s1 [66, 110] { R4908 += 1 };
  s8 -> s9 [111, 111] { R4908 += 1 };
  s8 -> s1 [112, 65535] { R4908 += 1 };
  s9 -> s1 [0, 43] { R4908 += 1 };
  s9 -> s1 [45, 45] { R4908 += 1 };
  s9 -> s2 [46, 46] { R4908 += 1 };
  s9 -> s1 [48, 62] { R4908 += 1 };
  s9 -> s3 [65, 65] { R4908 += 1 };
  s9 -> s1 [66, 98] { R4908 += 1 };
  s9 -> s10 [99, 99] { R4908 += 1 };
  s9 -> s1 [100, 65535] { R4908 += 1 };
  s10 -> s1 [0, 43] { R4908 += 1 };
  s10 -> s1 [45, 45] { R4908 += 1 };
  s10 -> s2 [46, 46] { R4908 += 1 };
  s10 -> s1 [48, 62] { R4908 += 1 };
  s10 -> s3 [65, 65] { R4908 += 1 };
  s10 -> s1 [66, 106] { R4908 += 1 };
  s10 -> s1 [108, 65535] { R4908 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R4910 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4909 += 1, R4910 += 1 };
  s1 -> s1 [0, 65535] { R4910 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 57] { R4912 += 1 };
  s0 -> s0 [0, 65535] { R4911 += 1, R4912 += 1 };
  s0 -> s2 [0, 65535] { R4912 += 1, R11 += 1 };
  s0 -> s3 [58, 58] { R4912 += 1 };
  s0 -> s1 [59, 65535] { R4912 += 1 };
  s1 -> s1 [0, 57] { R4912 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R4912 += 1 };
  s1 -> s1 [59, 65535] { R4912 += 1 };
  s2 -> s1 [0, 57] { R4912 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4912 += 1, R11 += 1 };
  s2 -> s3 [58, 58] { R4912 += 1 };
  s2 -> s1 [59, 65535] { R4912 += 1 };
  s3 -> s3 [0, 65535] { R4912 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 64] { R4914 += 1 };
  s0 -> s0 [0, 65535] { R4913 += 1, R4914 += 1 };
  s0 -> s2 [0, 65535] { R4914 += 1, R12 += 1 };
  s0 -> s3 [65, 65] { R4914 += 1 };
  s0 -> s1 [66, 65535] { R4914 += 1 };
  s1 -> s1 [0, 64] { R4914 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R4914 += 1 };
  s1 -> s1 [66, 65535] { R4914 += 1 };
  s2 -> s1 [0, 64] { R4914 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4914 += 1, R12 += 1 };
  s2 -> s3 [65, 65] { R4914 += 1 };
  s2 -> s1 [66, 65535] { R4914 += 1 };
  s3 -> s3 [0, 65535] { R4914 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 90] { R4916 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R4915 += 1, R4916 += 1 };
  s0 -> s2 [0, 65535] { R4916 += 1, R21 += 1, R22 += 1 };
  s0 -> s3 [91, 91] { R4916 += 1, R22 += 1 };
  s0 -> s1 [92, 65535] { R4916 += 1, R22 += 1 };
  s1 -> s5 [0, 65535] { R4916 += 1 };
  s1 -> s1 [0, 65535] { R4916 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 90] { R4916 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4916 += 1, R21 += 1, R22 += 1 };
  s2 -> s3 [91, 91] { R4916 += 1, R22 += 1 };
  s2 -> s1 [92, 65535] { R4916 += 1, R22 += 1 };
  s3 -> s1 [0, 65535] { R4916 += 1, R22 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4916 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R4918 += 1, R24 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R4917 += 1, R4918 += 1 };
  s0 -> s2 [0, 65535] { R4918 += 1, R23 += 1, R24 += 1 };
  s1 -> s4 [0, 65535] { R4918 += 1 };
  s1 -> s1 [0, 65535] { R4918 += 1, R24 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4918 += 1, R24 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4918 += 1, R23 += 1, R24 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4918 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 64] { R4920 += 1, R4842 += 1 };
  s0 -> s2 [0, 65535] { R4920 += 1, R4841 += 1, R4842 += 1 };
  s0 -> s0 [0, 65535] { R4919 += 1, R4920 += 1 };
  s0 -> s1 [66, 65535] { R4920 += 1, R4842 += 1 };
  s1 -> s1 [0, 64] { R4920 += 1, R4842 += 1 };
  s1 -> s1 [0, 65535] { R4920 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [66, 65535] { R4920 += 1, R4842 += 1 };
  s2 -> s1 [0, 64] { R4920 += 1, R4842 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4920 += 1, R4841 += 1, R4842 += 1 };
  s2 -> s1 [66, 65535] { R4920 += 1, R4842 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_9 {
  init s0;
  s0 -> s0 [0, 65535] { R4921 += 1, R4922 += 1 };
  s0 -> s1 [0, 65535] { R4922 += 1, R4844 += 1, R19 += 1 };
  s0 -> s2 [0, 65535] { R4922 += 1, R4843 += 1, R4844 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4922 += 1, R4844 += 1, R19 += 1 };
  s1 -> s4 [0, 65535] { R4922 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4922 += 1, R4844 += 1, R19 += 1 };
  s2 -> s2 [0, 65535] { R4922 += 1, R4843 += 1, R4844 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4922 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65] { R4924 += 1, R4846 += 1 };
  s0 -> s0 [0, 65535] { R4923 += 1, R4924 += 1 };
  s0 -> s2 [0, 65535] { R4924 += 1, R4845 += 1, R4846 += 1 };
  s0 -> s1 [80, 65535] { R4924 += 1, R4846 += 1 };
  s1 -> s1 [0, 65] { R4924 += 1, R4846 += 1 };
  s1 -> s1 [0, 65535] { R4924 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [80, 65535] { R4924 += 1, R4846 += 1 };
  s2 -> s1 [0, 65] { R4924 += 1, R4846 += 1 };
  s2 -> s2 [0, 65535] { R4924 += 1, R4845 += 1, R4846 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [80, 65535] { R4924 += 1, R4846 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_11 {
  init s0;
  s0 -> s0 [0, 65535] { R4925 += 1, R4926 += 1 };
  s0 -> s1 [0, 65535] { R4926 += 1, R4848 += 1, R406 += 1 };
  s0 -> s2 [0, 65535] { R4926 += 1, R4847 += 1, R4848 += 1 };
  s1 -> s4 [0, 65535] { R4926 += 1 };
  s1 -> s1 [0, 65535] { R4926 += 1, R4848 += 1, R406 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4926 += 1, R4848 += 1, R406 += 1 };
  s2 -> s2 [0, 65535] { R4926 += 1, R4847 += 1, R4848 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4926 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 82] { R4928 += 1, R4850 += 1 };
  s0 -> s2 [0, 65535] { R4928 += 1, R4849 += 1, R4850 += 1 };
  s0 -> s0 [0, 65535] { R4927 += 1, R4928 += 1 };
  s0 -> s3 [0, 65535] { R4928 += 1, R4850 += 1, R408 += 1 };
  s0 -> s1 [84, 65535] { R4928 += 1, R4850 += 1 };
  s1 -> s1 [0, 82] { R4928 += 1, R4850 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4928 += 1 };
  s1 -> s1 [84, 65535] { R4928 += 1, R4850 += 1 };
  s2 -> s1 [0, 82] { R4928 += 1, R4850 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4928 += 1, R4849 += 1, R4850 += 1 };
  s2 -> s3 [0, 65535] { R4928 += 1, R4850 += 1, R408 += 1 };
  s2 -> s1 [84, 65535] { R4928 += 1, R4850 += 1 };
  s3 -> s1 [0, 82] { R4928 += 1, R4850 += 1 };
  s3 -> s4 [0, 65535] { R4928 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4928 += 1, R4850 += 1, R408 += 1 };
  s3 -> s1 [84, 65535] { R4928 += 1, R4850 += 1 };
  s4 -> s4 [0, 65535] { R4928 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 79] { R4930 += 1, R4852 += 1 };
  s0 -> s0 [0, 65535] { R4929 += 1, R4930 += 1 };
  s0 -> s2 [0, 65535] { R4930 += 1, R4852 += 1, R410 += 1 };
  s0 -> s3 [0, 65535] { R4930 += 1, R4851 += 1, R4852 += 1 };
  s0 -> s1 [81, 65535] { R4930 += 1, R4852 += 1 };
  s1 -> s1 [0, 79] { R4930 += 1, R4852 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4930 += 1 };
  s1 -> s1 [81, 65535] { R4930 += 1, R4852 += 1 };
  s2 -> s1 [0, 79] { R4930 += 1, R4852 += 1 };
  s2 -> s2 [0, 65535] { R4930 += 1, R4852 += 1, R410 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4930 += 1 };
  s2 -> s1 [81, 65535] { R4930 += 1, R4852 += 1 };
  s3 -> s1 [0, 79] { R4930 += 1, R4852 += 1 };
  s3 -> s2 [0, 65535] { R4930 += 1, R4852 += 1, R410 += 1 };
  s3 -> s3 [0, 65535] { R4930 += 1, R4851 += 1, R4852 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [81, 65535] { R4930 += 1, R4852 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4930 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R4932 += 1, R4853 += 1, R4854 += 1 };
  s0 -> s2 [0, 65535] { R4932 += 1, R4854 += 1, R414 += 1, R415 += 1 };
  s0 -> s0 [0, 65535] { R4931 += 1, R4932 += 1 };
  s0 -> s3 [0, 65535] { R4932 += 1, R4854 += 1, R415 += 1, R416 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R4932 += 1, R4853 += 1, R4854 += 1 };
  s1 -> s2 [0, 65535] { R4932 += 1, R4854 += 1, R414 += 1, R415 += 1 };
  s1 -> s3 [0, 65535] { R4932 += 1, R4854 += 1, R415 += 1, R416 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4932 += 1 };
  s2 -> s2 [0, 65535] { R4932 += 1, R4854 += 1, R414 += 1, R415 += 1 };
  s2 -> s3 [0, 65535] { R4932 += 1, R4854 += 1, R415 += 1, R416 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4932 += 1 };
  s3 -> s6 [0, 65535] { R4932 += 1, R4854 += 1 };
  s3 -> s3 [0, 65535] { R4932 += 1, R4854 += 1, R415 += 1, R416 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4932 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4932 += 1 };
  s6 -> s6 [0, 65535] { R4932 += 1, R4854 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s0 [0, 65535] { R4933 += 1, R4934 += 1 };
  s0 -> s1 [0, 65535] { R4934 += 1, R4856 += 1 };
  s0 -> s2 [0, 65535] { R4934 += 1, R4855 += 1, R4856 += 1 };
  s1 -> s1 [0, 65535] { R4934 += 1, R4856 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4934 += 1 };
  s2 -> s1 [0, 65535] { R4934 += 1, R4856 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4934 += 1, R4855 += 1, R4856 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4934 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 79] { R4936 += 1, R4858 += 1, R420 += 1 };
  s0 -> s0 [0, 65535] { R4935 += 1, R4936 += 1 };
  s0 -> s2 [0, 65535] { R4936 += 1, R4858 += 1, R419 += 1, R420 += 1 };
  s0 -> s3 [0, 65535] { R4936 += 1, R4857 += 1, R4858 += 1 };
  s0 -> s1 [81, 65535] { R4936 += 1, R4858 += 1, R420 += 1 };
  s1 -> s1 [0, 79] { R4936 += 1, R4858 += 1, R420 += 1 };
  s1 -> s1 [0, 65535] { R4936 += 1, R4858 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4936 += 1 };
  s1 -> s1 [81, 65535] { R4936 += 1, R4858 += 1, R420 += 1 };
  s2 -> s1 [0, 79] { R4936 += 1, R4858 += 1, R420 += 1 };
  s2 -> s2 [0, 65535] { R4936 += 1, R4858 += 1, R419 += 1, R420 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4936 += 1 };
  s2 -> s1 [81, 65535] { R4936 += 1, R4858 += 1, R420 += 1 };
  s3 -> s1 [0, 79] { R4936 += 1, R4858 += 1, R420 += 1 };
  s3 -> s2 [0, 65535] { R4936 += 1, R4858 += 1, R419 += 1, R420 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4936 += 1, R4857 += 1, R4858 += 1 };
  s3 -> s1 [81, 65535] { R4936 += 1, R4858 += 1, R420 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4936 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R4938 += 1, R4859 += 1, R4860 += 1 };
  s0 -> s2 [0, 65535] { R4938 += 1, R4860 += 1, R425 += 1, R426 += 1 };
  s0 -> s0 [0, 65535] { R4937 += 1, R4938 += 1 };
  s0 -> s3 [0, 65535] { R4938 += 1, R4860 += 1, R424 += 1, R425 += 1 };
  s1 -> s1 [0, 65535] { R4938 += 1, R4859 += 1, R4860 += 1 };
  s1 -> s2 [0, 65535] { R4938 += 1, R4860 += 1, R425 += 1, R426 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R4938 += 1, R4860 += 1, R424 += 1, R425 += 1 };
  s2 -> s2 [0, 65535] { R4938 += 1, R4860 += 1, R425 += 1, R426 += 1 };
  s2 -> s6 [0, 65535] { R4938 += 1, R4860 += 1 };
  s2 -> s4 [0, 65535] { R4938 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R4938 += 1, R4860 += 1, R425 += 1, R426 += 1 };
  s3 -> s4 [0, 65535] { R4938 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4938 += 1, R4860 += 1, R424 += 1, R425 += 1 };
  s4 -> s4 [0, 65535] { R4938 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4938 += 1, R4860 += 1 };
  s6 -> s4 [0, 65535] { R4938 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s0 -> s2 [0, 65535] { R4940 += 1, R4862 += 1, R429 += 1, R430 += 1 };
  s0 -> s3 [0, 65535] { R4940 += 1, R4861 += 1, R4862 += 1 };
  s0 -> s0 [0, 65535] { R4939 += 1, R4940 += 1 };
  s0 -> s1 [91, 107] { R4940 += 1, R4862 += 1, R430 += 1 };
  s0 -> s4 [108, 108] { R4940 += 1, R4862 += 1, R430 += 1 };
  s0 -> s1 [109, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s1 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4940 += 1, R4862 += 1 };
  s1 -> s6 [0, 65535] { R4940 += 1 };
  s1 -> s1 [91, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s2 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s2 -> s2 [0, 65535] { R4940 += 1, R4862 += 1, R429 += 1, R430 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R4940 += 1 };
  s2 -> s1 [91, 107] { R4940 += 1, R4862 += 1, R430 += 1 };
  s2 -> s4 [108, 108] { R4940 += 1, R4862 += 1, R430 += 1 };
  s2 -> s1 [109, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s3 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s3 -> s2 [0, 65535] { R4940 += 1, R4862 += 1, R429 += 1, R430 += 1 };
  s3 -> s3 [0, 65535] { R4940 += 1, R4861 += 1, R4862 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [91, 107] { R4940 += 1, R4862 += 1, R430 += 1 };
  s3 -> s4 [108, 108] { R4940 += 1, R4862 += 1, R430 += 1 };
  s3 -> s1 [109, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s4 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4940 += 1, R4862 += 1 };
  s4 -> s6 [0, 65535] { R4940 += 1 };
  s4 -> s1 [91, 110] { R4940 += 1, R4862 += 1, R430 += 1 };
  s4 -> s7 [111, 111] { R4940 += 1, R4862 += 1, R430 += 1 };
  s4 -> s1 [112, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4940 += 1 };
  s7 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4940 += 1, R4862 += 1 };
  s7 -> s6 [0, 65535] { R4940 += 1 };
  s7 -> s1 [91, 98] { R4940 += 1, R4862 += 1, R430 += 1 };
  s7 -> s8 [99, 99] { R4940 += 1, R4862 += 1, R430 += 1 };
  s7 -> s1 [100, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s8 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R4940 += 1, R4862 += 1 };
  s8 -> s6 [0, 65535] { R4940 += 1 };
  s8 -> s1 [91, 96] { R4940 += 1, R4862 += 1, R430 += 1 };
  s8 -> s9 [97, 97] { R4940 += 1, R4862 += 1, R430 += 1 };
  s8 -> s1 [98, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s9 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s9 -> s9 [0, 65535] { R4940 += 1, R4862 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s6 [0, 65535] { R4940 += 1 };
  s9 -> s1 [91, 107] { R4940 += 1, R4862 += 1, R430 += 1 };
  s9 -> s10 [108, 108] { R4940 += 1, R4862 += 1, R430 += 1 };
  s9 -> s1 [109, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s10 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s10 -> s5 [0, 65535];
  s10 -> s10 [0, 65535] { R4940 += 1, R4862 += 1 };
  s10 -> s6 [0, 65535] { R4940 += 1 };
  s10 -> s1 [91, 103] { R4940 += 1, R4862 += 1, R430 += 1 };
  s10 -> s11 [104, 104] { R4940 += 1, R4862 += 1, R430 += 1 };
  s10 -> s1 [105, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s11 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s11 -> s11 [0, 65535] { R4940 += 1, R4862 += 1 };
  s11 -> s5 [0, 65535];
  s11 -> s6 [0, 65535] { R4940 += 1 };
  s11 -> s1 [91, 110] { R4940 += 1, R4862 += 1, R430 += 1 };
  s11 -> s12 [111, 111] { R4940 += 1, R4862 += 1, R430 += 1 };
  s11 -> s1 [112, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s12 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s12 -> s5 [0, 65535];
  s12 -> s12 [0, 65535] { R4940 += 1, R4862 += 1 };
  s12 -> s6 [0, 65535] { R4940 += 1 };
  s12 -> s1 [91, 114] { R4940 += 1, R4862 += 1, R430 += 1 };
  s12 -> s13 [115, 115] { R4940 += 1, R4862 += 1, R430 += 1 };
  s12 -> s1 [116, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s13 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s13 -> s13 [0, 65535] { R4940 += 1, R4862 += 1 };
  s13 -> s5 [0, 65535];
  s13 -> s6 [0, 65535] { R4940 += 1 };
  s13 -> s1 [91, 115] { R4940 += 1, R4862 += 1, R430 += 1 };
  s13 -> s14 [116, 116] { R4940 += 1, R4862 += 1, R430 += 1 };
  s13 -> s1 [117, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  s14 -> s1 [0, 80] { R4940 += 1, R4862 += 1, R430 += 1 };
  s14 -> s1 [91, 65535] { R4940 += 1, R4862 += 1, R430 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s0 [0, 65535] { R4941 += 1, R4942 += 1 };
  s0 -> s1 [0, 65535] { R4942 += 1, R4864 += 1, R435 += 1, R436 += 1 };
  s0 -> s2 [0, 65535] { R4942 += 1, R4864 += 1, R434 += 1, R435 += 1 };
  s0 -> s3 [0, 65535] { R4942 += 1, R4863 += 1, R4864 += 1 };
  s1 -> s1 [0, 65535] { R4942 += 1, R4864 += 1, R435 += 1, R436 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4942 += 1 };
  s1 -> s6 [0, 65535] { R4942 += 1, R4864 += 1 };
  s2 -> s1 [0, 65535] { R4942 += 1, R4864 += 1, R435 += 1, R436 += 1 };
  s2 -> s2 [0, 65535] { R4942 += 1, R4864 += 1, R434 += 1, R435 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R4942 += 1 };
  s3 -> s1 [0, 65535] { R4942 += 1, R4864 += 1, R435 += 1, R436 += 1 };
  s3 -> s2 [0, 65535] { R4942 += 1, R4864 += 1, R434 += 1, R435 += 1 };
  s3 -> s3 [0, 65535] { R4942 += 1, R4863 += 1, R4864 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4942 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4942 += 1 };
  s6 -> s6 [0, 65535] { R4942 += 1, R4864 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R4944 += 1, R4866 += 1 };
  s0 -> s0 [0, 65535] { R4943 += 1, R4944 += 1 };
  s0 -> s2 [0, 65535] { R4944 += 1, R4866 += 1, R2715 += 1, R2716 += 1 };
  s0 -> s3 [0, 65535] { R4944 += 1, R4865 += 1, R4866 += 1 };
  s1 -> s1 [0, 65535] { R4944 += 1, R4866 += 1 };
  s1 -> s5 [0, 65535] { R4944 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R4944 += 1, R4866 += 1 };
  s2 -> s5 [0, 65535] { R4944 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4944 += 1, R4866 += 1, R2715 += 1, R2716 += 1 };
  s3 -> s1 [0, 65535] { R4944 += 1, R4866 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4944 += 1, R4866 += 1, R2715 += 1, R2716 += 1 };
  s3 -> s3 [0, 65535] { R4944 += 1, R4865 += 1, R4866 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4944 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s1 [0, 65535] { R4946 += 1, R4867 += 1, R4868 += 1 };
  s0 -> s2 [0, 65535] { R4946 += 1, R4868 += 1 };
  s0 -> s0 [0, 65535] { R4945 += 1, R4946 += 1 };
  s1 -> s1 [0, 65535] { R4946 += 1, R4867 += 1, R4868 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4946 += 1, R4868 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4946 += 1, R4868 += 1 };
  s2 -> s4 [0, 65535] { R4946 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4946 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R4948 += 1, R4869 += 1, R4870 += 1 };
  s0 -> s0 [0, 65535] { R4947 += 1, R4948 += 1 };
  s0 -> s2 [0, 65535] { R4948 += 1, R4870 += 1 };
  s1 -> s1 [0, 65535] { R4948 += 1, R4869 += 1, R4870 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4948 += 1, R4870 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R4948 += 1 };
  s2 -> s2 [0, 65535] { R4948 += 1, R4870 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4948 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s1 [0, 65535] { R4950 += 1, R4872 += 1 };
  s0 -> s2 [0, 65535] { R4950 += 1, R4871 += 1, R4872 += 1 };
  s0 -> s0 [0, 65535] { R4949 += 1, R4950 += 1 };
  s1 -> s1 [0, 65535] { R4950 += 1, R4872 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4950 += 1 };
  s2 -> s1 [0, 65535] { R4950 += 1, R4872 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4950 += 1, R4871 += 1, R4872 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4950 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s0 [0, 65535] { R4951 += 1, R4952 += 1 };
  s0 -> s1 [0, 65535] { R4952 += 1, R4874 += 1 };
  s0 -> s2 [0, 65535] { R4952 += 1, R4873 += 1, R4874 += 1 };
  s1 -> s4 [0, 65535] { R4952 += 1 };
  s1 -> s1 [0, 65535] { R4952 += 1, R4874 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4952 += 1, R4874 += 1 };
  s2 -> s2 [0, 65535] { R4952 += 1, R4873 += 1, R4874 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4952 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 65535] { R4954 += 1, R4876 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R4954 += 1, R4875 += 1, R4876 += 1 };
  s0 -> s0 [0, 65535] { R4953 += 1, R4954 += 1 };
  s1 -> s1 [0, 65535] { R4954 += 1, R4876 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R4954 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4954 += 1, R4876 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R4954 += 1, R4875 += 1, R4876 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4954 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R4956 += 1, R4878 += 1 };
  s0 -> s2 [0, 65535] { R4956 += 1, R4877 += 1, R4878 += 1 };
  s0 -> s0 [0, 65535] { R4955 += 1, R4956 += 1 };
  s0 -> s3 [65, 65] { R4956 += 1, R4878 += 1 };
  s0 -> s4 [65, 65] { R4956 += 1, R4878 += 1 };
  s0 -> s5 [80, 80] { R4956 += 1, R4878 += 1 };
  s0 -> s1 [81, 65535] { R4956 += 1, R4878 += 1 };
  s1 -> s1 [0, 64] { R4956 += 1, R4878 += 1 };
  s1 -> s3 [65, 65] { R4956 += 1, R4878 += 1 };
  s1 -> s4 [65, 65] { R4956 += 1, R4878 += 1 };
  s1 -> s5 [80, 80] { R4956 += 1, R4878 += 1 };
  s1 -> s1 [81, 65535] { R4956 += 1, R4878 += 1 };
  s2 -> s1 [0, 64] { R4956 += 1, R4878 += 1 };
  s2 -> s2 [0, 65535] { R4956 += 1, R4877 += 1, R4878 += 1 };
  s2 -> s3 [65, 65] { R4956 += 1, R4878 += 1 };
  s2 -> s4 [65, 65] { R4956 += 1, R4878 += 1 };
  s2 -> s5 [80, 80] { R4956 += 1, R4878 += 1 };
  s2 -> s1 [81, 65535] { R4956 += 1, R4878 += 1 };
  s4 -> s4 [0, 65] { R4956 += 1, R4878 += 1 };
  s4 -> s7 [80, 80] { R4956 += 1, R4878 += 1 };
  s4 -> s4 [81, 65535] { R4956 += 1, R4878 += 1 };
  s5 -> s5 [0, 64] { R4956 += 1, R4878 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4956 += 1 };
  s5 -> s7 [65, 65] { R4956 += 1, R4878 += 1 };
  s5 -> s8 [65, 65] { R4956 += 1, R4878 += 1 };
  s5 -> s5 [80, 65535] { R4956 += 1, R4878 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65] { R4956 += 1, R4878 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4956 += 1 };
  s7 -> s7 [80, 65535] { R4956 += 1, R4878 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4956 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R4958 += 1, R4880 += 1, R405 += 1 };
  s0 -> s2 [0, 65535] { R4958 += 1, R4879 += 1, R4880 += 1 };
  s0 -> s0 [0, 65535] { R4957 += 1, R4958 += 1 };
  s0 -> s3 [65, 65] { R4958 += 1, R4880 += 1, R405 += 1 };
  s0 -> s4 [65, 65] { R4958 += 1, R4880 += 1, R405 += 1 };
  s0 -> s1 [66, 65535] { R4958 += 1, R4880 += 1, R405 += 1 };
  s1 -> s1 [0, 64] { R4958 += 1, R4880 += 1, R405 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4958 += 1 };
  s1 -> s3 [65, 65] { R4958 += 1, R4880 += 1, R405 += 1 };
  s1 -> s4 [65, 65] { R4958 += 1, R4880 += 1, R405 += 1 };
  s1 -> s1 [66, 65535] { R4958 += 1, R4880 += 1, R405 += 1 };
  s2 -> s1 [0, 64] { R4958 += 1, R4880 += 1, R405 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4958 += 1, R4879 += 1, R4880 += 1 };
  s2 -> s3 [65, 65] { R4958 += 1, R4880 += 1, R405 += 1 };
  s2 -> s4 [65, 65] { R4958 += 1, R4880 += 1, R405 += 1 };
  s2 -> s1 [66, 65535] { R4958 += 1, R4880 += 1, R405 += 1 };
  s3 -> s3 [0, 65535] { R4958 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4958 += 1 };
  s4 -> s4 [0, 65535] { R4958 += 1, R4880 += 1, R405 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4958 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R4960 += 1, R4882 += 1, R407 += 1 };
  s0 -> s2 [0, 65535] { R4960 += 1, R4881 += 1, R4882 += 1 };
  s0 -> s0 [0, 65535] { R4959 += 1, R4960 += 1 };
  s0 -> s3 [65, 65] { R4960 += 1, R4882 += 1, R407 += 1 };
  s0 -> s4 [65, 65] { R4960 += 1, R4882 += 1, R407 += 1 };
  s0 -> s1 [66, 65535] { R4960 += 1, R4882 += 1, R407 += 1 };
  s1 -> s1 [0, 64] { R4960 += 1, R4882 += 1, R407 += 1 };
  s1 -> s1 [0, 65535] { R4960 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4960 += 1, R4882 += 1, R407 += 1 };
  s1 -> s4 [65, 65] { R4960 += 1, R4882 += 1, R407 += 1 };
  s1 -> s1 [66, 65535] { R4960 += 1, R4882 += 1, R407 += 1 };
  s2 -> s1 [0, 64] { R4960 += 1, R4882 += 1, R407 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4960 += 1, R4881 += 1, R4882 += 1 };
  s2 -> s3 [65, 65] { R4960 += 1, R4882 += 1, R407 += 1 };
  s2 -> s4 [65, 65] { R4960 += 1, R4882 += 1, R407 += 1 };
  s2 -> s1 [66, 65535] { R4960 += 1, R4882 += 1, R407 += 1 };
  s3 -> s3 [0, 65535] { R4960 += 1, R4882 += 1, R407 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4960 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4960 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4960 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R4962 += 1, R4884 += 1, R409 += 1 };
  s0 -> s0 [0, 65535] { R4961 += 1, R4962 += 1 };
  s0 -> s2 [0, 65535] { R4962 += 1, R4883 += 1, R4884 += 1 };
  s0 -> s3 [65, 65] { R4962 += 1, R4884 += 1, R409 += 1 };
  s0 -> s4 [65, 65] { R4962 += 1, R4884 += 1, R409 += 1 };
  s0 -> s1 [66, 65535] { R4962 += 1, R4884 += 1, R409 += 1 };
  s1 -> s1 [0, 64] { R4962 += 1, R4884 += 1, R409 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4962 += 1 };
  s1 -> s3 [65, 65] { R4962 += 1, R4884 += 1, R409 += 1 };
  s1 -> s4 [65, 65] { R4962 += 1, R4884 += 1, R409 += 1 };
  s1 -> s1 [66, 65535] { R4962 += 1, R4884 += 1, R409 += 1 };
  s2 -> s1 [0, 64] { R4962 += 1, R4884 += 1, R409 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4962 += 1, R4883 += 1, R4884 += 1 };
  s2 -> s3 [65, 65] { R4962 += 1, R4884 += 1, R409 += 1 };
  s2 -> s4 [65, 65] { R4962 += 1, R4884 += 1, R409 += 1 };
  s2 -> s1 [66, 65535] { R4962 += 1, R4884 += 1, R409 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4962 += 1 };
  s4 -> s5 [0, 65535] { R4962 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4962 += 1, R4884 += 1, R409 += 1 };
  s5 -> s5 [0, 65535] { R4962 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s0 -> s2 [0, 65535] { R4964 += 1, R4885 += 1, R4886 += 1 };
  s0 -> s0 [0, 65535] { R4963 += 1, R4964 += 1 };
  s0 -> s3 [65, 65] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s0 -> s4 [65, 65] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s0 -> s1 [66, 65535] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [0, 64] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4964 += 1 };
  s1 -> s3 [65, 65] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s1 -> s4 [65, 65] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [66, 65535] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [0, 64] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s2 -> s2 [0, 65535] { R4964 += 1, R4885 += 1, R4886 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s2 -> s4 [65, 65] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [66, 65535] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s3 -> s3 [0, 65535] { R4964 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4964 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4964 += 1, R4886 += 1, R411 += 1, R412 += 1 };
  s5 -> s5 [0, 65535] { R4964 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 64] { R4966 += 1, R4888 += 1 };
  s0 -> s0 [0, 65535] { R4965 += 1, R4966 += 1 };
  s0 -> s2 [0, 65535] { R4966 += 1, R4887 += 1, R4888 += 1 };
  s0 -> s3 [65, 65] { R4966 += 1, R4888 += 1 };
  s0 -> s4 [65, 65] { R4966 += 1, R4888 += 1 };
  s0 -> s1 [66, 65535] { R4966 += 1, R4888 += 1 };
  s1 -> s1 [0, 64] { R4966 += 1, R4888 += 1 };
  s1 -> s1 [0, 65535] { R4966 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R4966 += 1, R4888 += 1 };
  s1 -> s4 [65, 65] { R4966 += 1, R4888 += 1 };
  s1 -> s1 [66, 65535] { R4966 += 1, R4888 += 1 };
  s2 -> s1 [0, 64] { R4966 += 1, R4888 += 1 };
  s2 -> s2 [0, 65535] { R4966 += 1, R4887 += 1, R4888 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R4966 += 1, R4888 += 1 };
  s2 -> s4 [65, 65] { R4966 += 1, R4888 += 1 };
  s2 -> s1 [66, 65535] { R4966 += 1, R4888 += 1 };
  s3 -> s3 [0, 65535] { R4966 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4966 += 1 };
  s4 -> s4 [0, 65535] { R4966 += 1, R4888 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4966 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s0 -> s0 [0, 65535] { R4967 += 1, R4968 += 1 };
  s0 -> s2 [0, 65535] { R4968 += 1, R4889 += 1, R4890 += 1 };
  s0 -> s3 [65, 65] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s0 -> s4 [65, 65] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s0 -> s1 [66, 65535] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [0, 64] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [0, 65535] { R4968 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s1 -> s4 [65, 65] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [66, 65535] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [0, 64] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4968 += 1, R4889 += 1, R4890 += 1 };
  s2 -> s3 [65, 65] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s2 -> s4 [65, 65] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [66, 65535] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4968 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4968 += 1 };
  s4 -> s4 [0, 65535] { R4968 += 1, R4890 += 1, R417 += 1, R418 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4968 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 64] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s0 -> s0 [0, 65535] { R4969 += 1, R4970 += 1 };
  s0 -> s2 [0, 65535] { R4970 += 1, R4891 += 1, R4892 += 1 };
  s0 -> s3 [65, 65] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s0 -> s4 [65, 65] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s0 -> s1 [66, 65535] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [0, 64] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [0, 65535] { R4970 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s1 -> s4 [65, 65] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [66, 65535] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [0, 64] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s2 -> s2 [0, 65535] { R4970 += 1, R4891 += 1, R4892 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s2 -> s4 [65, 65] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [66, 65535] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s3 -> s3 [0, 65535] { R4970 += 1, R4892 += 1, R421 += 1, R422 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4970 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4970 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4970 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s0 -> s0 [0, 65535] { R4971 += 1, R4972 += 1 };
  s0 -> s2 [0, 65535] { R4972 += 1, R4893 += 1, R4894 += 1 };
  s0 -> s3 [65, 65] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s0 -> s4 [65, 65] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s0 -> s1 [66, 65535] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [0, 64] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4972 += 1 };
  s1 -> s3 [65, 65] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s1 -> s4 [65, 65] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [66, 65535] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [0, 64] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4972 += 1, R4893 += 1, R4894 += 1 };
  s2 -> s3 [65, 65] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s2 -> s4 [65, 65] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [66, 65535] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4972 += 1, R4894 += 1, R427 += 1, R428 += 1 };
  s3 -> s6 [0, 65535] { R4972 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4972 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4972 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 64] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s0 -> s2 [0, 65535] { R4974 += 1, R4895 += 1, R4896 += 1 };
  s0 -> s0 [0, 65535] { R4973 += 1, R4974 += 1 };
  s0 -> s3 [65, 65] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s0 -> s4 [65, 65] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s0 -> s1 [66, 65535] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [0, 64] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4974 += 1 };
  s1 -> s3 [65, 65] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s1 -> s4 [65, 65] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [66, 65535] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [0, 64] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4974 += 1, R4895 += 1, R4896 += 1 };
  s2 -> s3 [65, 65] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s2 -> s4 [65, 65] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [66, 65535] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4974 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4974 += 1 };
  s4 -> s4 [0, 65535] { R4974 += 1, R4896 += 1, R431 += 1, R432 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4974 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 64] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s2 [0, 64] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s3 [0, 65535] { R4976 += 1, R4897 += 1, R4898 += 1 };
  s0 -> s0 [0, 65535] { R4975 += 1, R4976 += 1 };
  s0 -> s4 [65, 65] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s5 [65, 65] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s6 [65, 65] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s7 [65, 65] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s1 [66, 65535] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s2 [66, 65535] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s1 -> s1 [0, 64] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s1 [0, 65535] { R4976 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [65, 65] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s7 [65, 65] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s1 [66, 65535] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s1 [0, 64] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s2 [0, 64] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s2 -> s4 [65, 65] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s2 -> s5 [65, 65] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s6 [65, 65] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s2 -> s7 [65, 65] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s1 [66, 65535] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s2 [66, 65535] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s1 [0, 64] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s2 [0, 64] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s3 [0, 65535] { R4976 += 1, R4897 += 1, R4898 += 1 };
  s3 -> s4 [65, 65] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s5 [65, 65] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s6 [65, 65] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s7 [65, 65] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s1 [66, 65535] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s2 [66, 65535] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s5 -> s5 [0, 65535] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R4976 += 1 };
  s6 -> s5 [0, 65535] { R4976 += 1, R4898 += 1, R2712 += 1, R2713 += 1 };
  s6 -> s6 [0, 65535] { R4976 += 1, R4898 += 1, R2711 += 1, R2712 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R4976 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4976 += 1 };
  accepting s8, s5, s9, s1, s7;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R4978 += 1, R4900 += 1 };
  s0 -> s2 [0, 65535] { R4978 += 1, R4899 += 1, R4900 += 1 };
  s0 -> s0 [0, 65535] { R4977 += 1, R4978 += 1 };
  s0 -> s3 [65, 65] { R4978 += 1, R4900 += 1 };
  s0 -> s4 [65, 65] { R4978 += 1, R4900 += 1 };
  s0 -> s1 [66, 65535] { R4978 += 1, R4900 += 1 };
  s1 -> s1 [0, 64] { R4978 += 1, R4900 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4978 += 1 };
  s1 -> s3 [65, 65] { R4978 += 1, R4900 += 1 };
  s1 -> s4 [65, 65] { R4978 += 1, R4900 += 1 };
  s1 -> s1 [66, 65535] { R4978 += 1, R4900 += 1 };
  s2 -> s1 [0, 64] { R4978 += 1, R4900 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4978 += 1, R4899 += 1, R4900 += 1 };
  s2 -> s3 [65, 65] { R4978 += 1, R4900 += 1 };
  s2 -> s4 [65, 65] { R4978 += 1, R4900 += 1 };
  s2 -> s1 [66, 65535] { R4978 += 1, R4900 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4978 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4978 += 1, R4900 += 1 };
  s4 -> s6 [0, 65535] { R4978 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4978 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 64] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s0 -> s2 [0, 64] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s0 -> s0 [0, 65535] { R4979 += 1, R4980 += 1 };
  s0 -> s3 [0, 65535] { R4980 += 1, R4901 += 1, R4902 += 1 };
  s0 -> s4 [65, 65] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s0 -> s5 [65, 65] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s0 -> s6 [65, 65] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s0 -> s7 [65, 65] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s0 -> s1 [66, 65535] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s0 -> s2 [66, 65535] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s1 -> s1 [0, 64] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s1 -> s11 [0, 64] { R4980 += 1, R4902 += 1 };
  s1 -> s12 [65, 65] { R4980 += 1, R4902 += 1 };
  s1 -> s8 [65, 65] { R4980 += 1, R4902 += 1 };
  s1 -> s6 [65, 65] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s1 -> s7 [65, 65] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s1 -> s1 [66, 65535] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s1 -> s11 [66, 65535] { R4980 += 1, R4902 += 1 };
  s2 -> s1 [0, 64] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s2 -> s2 [0, 64] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s2 -> s4 [65, 65] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s2 -> s5 [65, 65] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s2 -> s6 [65, 65] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s2 -> s7 [65, 65] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s2 -> s1 [66, 65535] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s2 -> s2 [66, 65535] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s3 -> s1 [0, 64] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s3 -> s2 [0, 64] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s3 -> s3 [0, 65535] { R4980 += 1, R4901 += 1, R4902 += 1 };
  s3 -> s4 [65, 65] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s3 -> s5 [65, 65] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s3 -> s6 [65, 65] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s3 -> s7 [65, 65] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s3 -> s1 [66, 65535] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s3 -> s2 [66, 65535] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s4 -> s4 [0, 65535] { R4980 += 1, R4902 += 1, R4229 += 1, R4230 += 1 };
  s4 -> s7 [0, 65535] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s7 -> s8 [0, 65535] { R4980 += 1, R4902 += 1 };
  s7 -> s7 [0, 65535] { R4980 += 1, R4902 += 1, R4230 += 1, R4231 += 1 };
  s8 -> s9 [0, 65535] { R4980 += 1 };
  s8 -> s8 [0, 65535] { R4980 += 1, R4902 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R4980 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 64] { R4980 += 1, R4902 += 1 };
  s11 -> s11 [0, 65535] { R4980 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s12 [65, 65] { R4980 += 1, R4902 += 1 };
  s11 -> s8 [65, 65] { R4980 += 1, R4902 += 1 };
  s11 -> s11 [66, 65535] { R4980 += 1, R4902 += 1 };
  s12 -> s12 [0, 65535] { R4980 += 1 };
  s12 -> s10 [0, 65535];
  accepting s12, s8, s9, s10, s11;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 64] { R4982 += 1, R4904 += 1 };
  s0 -> s0 [0, 65535] { R4981 += 1, R4982 += 1 };
  s0 -> s2 [0, 65535] { R4982 += 1, R4903 += 1, R4904 += 1 };
  s0 -> s3 [65, 65] { R4982 += 1, R4904 += 1 };
  s0 -> s4 [65, 65] { R4982 += 1, R4904 += 1 };
  s0 -> s1 [66, 65535] { R4982 += 1, R4904 += 1 };
  s1 -> s1 [0, 64] { R4982 += 1, R4904 += 1 };
  s1 -> s1 [0, 65535] { R4982 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4982 += 1, R4904 += 1 };
  s1 -> s4 [65, 65] { R4982 += 1, R4904 += 1 };
  s1 -> s1 [66, 65535] { R4982 += 1, R4904 += 1 };
  s2 -> s1 [0, 64] { R4982 += 1, R4904 += 1 };
  s2 -> s2 [0, 65535] { R4982 += 1, R4903 += 1, R4904 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4982 += 1, R4904 += 1 };
  s2 -> s4 [65, 65] { R4982 += 1, R4904 += 1 };
  s2 -> s1 [66, 65535] { R4982 += 1, R4904 += 1 };
  s3 -> s3 [0, 65535] { R4982 += 1, R4904 += 1 };
  s3 -> s6 [0, 65535] { R4982 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4982 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4982 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 64] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s0 -> s2 [0, 64] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s0 -> s0 [0, 65535] { R4983 += 1, R4984 += 1 };
  s0 -> s3 [0, 65535] { R4984 += 1, R4905 += 1, R4906 += 1 };
  s0 -> s4 [65, 65] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s0 -> s5 [65, 65] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s0 -> s6 [65, 65] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s0 -> s7 [65, 65] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s0 -> s1 [66, 79] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s0 -> s2 [66, 65535] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s0 -> s8 [80, 80] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s0 -> s1 [81, 65535] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s1 -> s1 [0, 64] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s1 -> s5 [65, 65] { R4984 += 1, R4906 += 1 };
  s1 -> s6 [65, 65] { R4984 += 1, R4906 += 1 };
  s1 -> s1 [66, 79] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s1 -> s1 [66, 65535] { R4984 += 1, R4906 += 1 };
  s1 -> s8 [80, 80] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s1 -> s1 [81, 65535] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s2 -> s1 [0, 64] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s2 -> s2 [0, 64] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s2 -> s4 [65, 65] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s2 -> s5 [65, 65] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s2 -> s6 [65, 65] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s2 -> s7 [65, 65] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s2 -> s1 [66, 79] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s2 -> s2 [66, 65535] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s2 -> s8 [80, 80] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s2 -> s1 [81, 65535] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s3 -> s1 [0, 64] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s3 -> s2 [0, 64] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s3 -> s3 [0, 65535] { R4984 += 1, R4905 += 1, R4906 += 1 };
  s3 -> s4 [65, 65] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s3 -> s5 [65, 65] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s3 -> s6 [65, 65] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s3 -> s7 [65, 65] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s3 -> s1 [66, 79] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s3 -> s2 [66, 65535] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s3 -> s8 [80, 80] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s3 -> s1 [81, 65535] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s6 -> s6 [0, 79] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s6 -> s6 [0, 65535] { R4984 += 1, R4906 += 1 };
  s6 -> s13 [80, 80] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s6 -> s6 [81, 65535] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s7 -> s6 [0, 79] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s7 -> s7 [0, 65535] { R4984 += 1, R4906 += 1, R4835 += 1, R4836 += 1 };
  s7 -> s13 [80, 80] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s7 -> s6 [81, 65535] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s8 -> s9 [0, 64] { R4984 += 1, R4906 += 1 };
  s8 -> s8 [0, 64] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s8 -> s10 [65, 65] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s8 -> s11 [65, 65] { R4984 += 1, R4906 += 1 };
  s8 -> s12 [65, 65] { R4984 += 1, R4906 += 1 };
  s8 -> s13 [65, 65] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s8 -> s9 [66, 65535] { R4984 += 1, R4906 += 1 };
  s8 -> s8 [66, 65535] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s9 -> s9 [0, 64] { R4984 += 1, R4906 += 1 };
  s9 -> s14 [0, 65535];
  s9 -> s9 [0, 65535] { R4984 += 1 };
  s9 -> s11 [65, 65] { R4984 += 1, R4906 += 1 };
  s9 -> s12 [65, 65] { R4984 += 1, R4906 += 1 };
  s9 -> s9 [66, 65535] { R4984 += 1, R4906 += 1 };
  s11 -> s14 [0, 65535];
  s11 -> s11 [0, 65535] { R4984 += 1 };
  s12 -> s14 [0, 65535];
  s12 -> s12 [0, 65535] { R4984 += 1, R4906 += 1 };
  s12 -> s15 [0, 65535] { R4984 += 1 };
  s13 -> s12 [0, 65535] { R4984 += 1, R4906 += 1 };
  s13 -> s13 [0, 65535] { R4984 += 1, R4906 += 1, R4836 += 1, R4837 += 1 };
  s14 -> s14 [0, 65535];
  s15 -> s14 [0, 65535];
  s15 -> s15 [0, 65535] { R4984 += 1 };
  accepting s12, s9, s14, s15, s11;
};
};
constraint R2 = R4874 && R3 = R4984 && R21 = 0 && R22 = 1 && R23 = 0 && R24 = 1 && R406 + R405 = 0 && R4841 = 0 && R4842 = R4874 && R4843 = 0 && R4844 = R4874 && R4845 = 0 && R4846 = R4874 && R4847 = 0 && R4848 = R4874 && R4849 = 0 && R4850 = R4874 && R4851 = 0 && R4852 = R4874 && R4853 = 0 && R4854 = R4874 && R4855 = 0 && R4856 = R4874 && R4857 = 0 && R4858 = R4874 && R4859 = 0 && R4860 = R4874 && R4861 = 0 && R4862 = R4874 && R4863 = 0 && R4864 = R4874 && R4865 = 0 && R4866 = R4874 && R4867 = 0 && R4868 = R4874 && R4869 = 0 && R4870 = R4874 && R4871 = 0 && R4872 = R4874 && R4873 = 0 && R4877 = 0 && R4878 = 0 && R4897 = 0 && R4898 = 0 && R4901 = 0 && R4902 = 0 && R4905 = 0 && R4906 = 0 && R4907 = 10 && R4908 = R4984 && R4909 = 10 && R4910 = R4984 && R4911 = 10 && R4912 = R4984 && R4913 = 10 && R4914 = R4984 && R4915 = 10 && R4916 = R4984 && R4917 = 10 && R4918 = R4984 && R4919 = 10 && R4920 = R4984 && R4921 = 10 && R4922 = R4984 && R4923 = 10 && R4924 = R4984 && R4925 = 10 && R4926 = R4984 && R4927 = 10 && R4928 = R4984 && R4929 = 10 && R4930 = R4984 && R4931 = 10 && R4932 = R4984 && R4933 = 10 && R4934 = R4984 && R4935 = 10 && R4936 = R4984 && R4937 = 10 && R4938 = R4984 && R4939 = 10 && R4940 = R4984 && R4941 = 10 && R4942 = R4984 && R4943 = 10 && R4944 = R4984 && R4945 = 10 && R4946 = R4984 && R4947 = 10 && R4948 = R4984 && R4949 = 10 && R4950 = R4984 && R4951 = 10 && R4952 = R4984 && R4953 = 10 && R4954 = R4984 && R4955 = 10 && R4956 = R4984 && R4957 = 10 && R4958 = R4984 && R4959 = 10 && R4960 = R4984 && R4961 = 10 && R4962 = R4984 && R4963 = 10 && R4964 = R4984 && R4965 = 10 && R4966 = R4984 && R4967 = 10 && R4968 = R4984 && R4969 = 10 && R4970 = R4984 && R4971 = 10 && R4972 = R4984 && R4973 = 10 && R4974 = R4984 && R4975 = 10 && R4976 = R4984 && R4977 = 10 && R4978 = R4984 && R4979 = 10 && R4980 = R4984 && R4981 = 10 && R4982 = R4984 && R4983 = 10 && R436 + R433 + R4840 + R4837 != 0 && R11 < 1 && R12 < 1 && R408 + R407 < 1 && R410 + R409 < 1 && 0 < R4874 && 9 < R4984 && (R20 = 0 || (R4875 = 0 && R4876 = 0)) && (R20 = 0 || (R4879 = 0 && R4880 = 0)) && (R20 = 0 || (R4881 = 0 && R4882 = 0)) && (R20 = 0 || (R4883 = 0 && R4884 = 0)) && (R20 = 0 || (R4885 = 0 && R4886 = 0)) && (R20 = 0 || (R4887 = 0 && R4888 = 0)) && (R20 = 0 || (R4889 = 0 && R4890 = 0)) && (R20 = 0 || (R4891 = 0 && R4892 = 0)) && (R20 = 0 || (R4893 = 0 && R4894 = 0)) && (R20 = 0 || (R4895 = 0 && R4896 = 0)) && (R20 = 0 || (R4899 = 0 && R4900 = 0)) && (R20 = 0 || (R4903 = 0 && R4904 = 0)) && (R416 + R413 = 0 || (R414 + R411 = 0 && R415 + R412 = 0)) && (R426 + R423 = 0 || (R419 + R417 = 0 && R420 + R418 = 0)) && (R426 + R423 = 0 || (R424 + R421 = 0 && R425 + R422 = 0)) && (R426 + R423 = 0 || (R429 + R427 = 0 && R430 + R428 = 0)) && (R426 + R423 = 0 || (R434 + R431 = 0 && R435 + R432 = 0)) && (R2716 + R2713 = 0 || (R2714 + R2711 = 0 && R2715 + R2712 = 0)) && (R4234 + R4231 = 0 || (R4232 + R4229 = 0 && R4233 + R4230 = 0)) && (R4234 + R4231 = 0 || (R4838 + R4835 = 0 && R4839 + R4836 = 0));
// End of Parikh automata intersection problem
