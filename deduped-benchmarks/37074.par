// Parikh automata intersection problem, generated by OSTRICH+
counter int R11, R12, R19, R2, R20, R21, R22, R23, R24, R2711, R2712, R2713, R2714, R2715, R2716, R3, R3473, R3474, R3475, R3476, R3477, R3478, R4, R405, R406, R407, R4079, R408, R4080, R4081, R4082, R4083, R4084, R4085, R4086, R4087, R4088, R4089, R409, R4090, R4091, R4092, R4093, R4094, R4095, R4096, R4097, R4098, R4099, R410, R4100, R4101, R4102, R4103, R4104, R4105, R4106, R4107, R4108, R4109, R411, R4110, R4111, R4112, R4113, R4114, R4115, R4116, R4117, R4118, R4119, R412, R4120, R4121, R4122, R4123, R4124, R4125, R4126, R4127, R4128, R4129, R413, R4130, R4131, R4132, R4133, R4134, R4135, R4136, R4137, R4138, R4139, R414, R4140, R4141, R4142, R4143, R4144, R4145, R4146, R4147, R4148, R4149, R415, R4150, R4151, R4152, R4153, R4154, R4155, R4156, R4157, R4158, R4159, R416, R4160, R4161, R4162, R4163, R4164, R4165, R4166, R4167, R4168, R4169, R417, R4170, R4171, R4172, R4173, R4174, R4175, R4176, R4177, R4178, R4179, R418, R4180, R4181, R4182, R4183, R4184, R4185, R4186, R4187, R4188, R4189, R419, R4190, R4191, R4192, R4193, R4194, R4195, R4196, R4197, R4198, R4199, R420, R4200, R4201, R4202, R4203, R4204, R4205, R4206, R4207, R4208, R4209, R421, R4210, R4211, R4212, R4213, R4214, R4215, R4216, R4217, R4218, R4219, R422, R4220, R4221, R4222, R4223, R4224, R4225, R4226, R4227, R4228, R423, R424, R425, R426, R427, R428, R429, R430, R431, R432, R433, R434, R435, R436;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining c11
automaton c11_0 {
  init s0;
  s0 -> s1 [115, 115];
  accepting s1;
};
};
synchronised {  // Automata constraining P53
automaton P53_0 {
  init s0;
  s0 -> s1 [112, 112];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 43] { R4152 += 1 };
  s0 -> s0 [0, 65535] { R4151 += 1, R4152 += 1 };
  s0 -> s1 [45, 45] { R4152 += 1 };
  s0 -> s2 [46, 46] { R4152 += 1 };
  s0 -> s1 [48, 62] { R4152 += 1 };
  s0 -> s3 [65, 65] { R4152 += 1 };
  s0 -> s1 [66, 65535] { R4152 += 1 };
  s1 -> s1 [0, 43] { R4152 += 1 };
  s1 -> s1 [45, 45] { R4152 += 1 };
  s1 -> s2 [46, 46] { R4152 += 1 };
  s1 -> s1 [48, 62] { R4152 += 1 };
  s1 -> s3 [65, 65] { R4152 += 1 };
  s1 -> s1 [66, 65535] { R4152 += 1 };
  s2 -> s1 [0, 43] { R4152 += 1 };
  s2 -> s1 [45, 45] { R4152 += 1 };
  s2 -> s2 [46, 46] { R4152 += 1 };
  s2 -> s1 [48, 62] { R4152 += 1 };
  s2 -> s3 [65, 65] { R4152 += 1 };
  s2 -> s1 [66, 114] { R4152 += 1 };
  s2 -> s8 [115, 115] { R4152 += 1 };
  s2 -> s1 [116, 65535] { R4152 += 1 };
  s3 -> s3 [0, 43] { R4152 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R4152 += 1 };
  s3 -> s4 [46, 46] { R4152 += 1 };
  s3 -> s3 [48, 62] { R4152 += 1 };
  s3 -> s3 [65, 65535] { R4152 += 1 };
  s4 -> s3 [0, 43] { R4152 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R4152 += 1 };
  s4 -> s4 [46, 46] { R4152 += 1 };
  s4 -> s3 [48, 62] { R4152 += 1 };
  s4 -> s3 [65, 114] { R4152 += 1 };
  s4 -> s5 [115, 115] { R4152 += 1 };
  s4 -> s3 [116, 65535] { R4152 += 1 };
  s5 -> s3 [0, 43] { R4152 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R4152 += 1 };
  s5 -> s4 [46, 46] { R4152 += 1 };
  s5 -> s3 [48, 62] { R4152 += 1 };
  s5 -> s3 [65, 110] { R4152 += 1 };
  s5 -> s6 [111, 111] { R4152 += 1 };
  s5 -> s3 [112, 65535] { R4152 += 1 };
  s6 -> s3 [0, 43] { R4152 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R4152 += 1 };
  s6 -> s4 [46, 46] { R4152 += 1 };
  s6 -> s3 [48, 62] { R4152 += 1 };
  s6 -> s3 [65, 98] { R4152 += 1 };
  s6 -> s7 [99, 99] { R4152 += 1 };
  s6 -> s3 [100, 65535] { R4152 += 1 };
  s7 -> s3 [0, 43] { R4152 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R4152 += 1 };
  s7 -> s4 [46, 46] { R4152 += 1 };
  s7 -> s3 [48, 62] { R4152 += 1 };
  s7 -> s3 [65, 106] { R4152 += 1 };
  s7 -> s3 [108, 65535] { R4152 += 1 };
  s8 -> s1 [0, 43] { R4152 += 1 };
  s8 -> s1 [45, 45] { R4152 += 1 };
  s8 -> s2 [46, 46] { R4152 += 1 };
  s8 -> s1 [48, 62] { R4152 += 1 };
  s8 -> s3 [65, 65] { R4152 += 1 };
  s8 -> s1 [66, 110] { R4152 += 1 };
  s8 -> s9 [111, 111] { R4152 += 1 };
  s8 -> s1 [112, 65535] { R4152 += 1 };
  s9 -> s1 [0, 43] { R4152 += 1 };
  s9 -> s1 [45, 45] { R4152 += 1 };
  s9 -> s2 [46, 46] { R4152 += 1 };
  s9 -> s1 [48, 62] { R4152 += 1 };
  s9 -> s3 [65, 65] { R4152 += 1 };
  s9 -> s1 [66, 98] { R4152 += 1 };
  s9 -> s10 [99, 99] { R4152 += 1 };
  s9 -> s1 [100, 65535] { R4152 += 1 };
  s10 -> s1 [0, 43] { R4152 += 1 };
  s10 -> s1 [45, 45] { R4152 += 1 };
  s10 -> s2 [46, 46] { R4152 += 1 };
  s10 -> s1 [48, 62] { R4152 += 1 };
  s10 -> s3 [65, 65] { R4152 += 1 };
  s10 -> s1 [66, 106] { R4152 += 1 };
  s10 -> s1 [108, 65535] { R4152 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s0 [0, 65535] { R4153 += 1, R4154 += 1 };
  s0 -> s1 [0, 65535] { R4154 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R4154 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 57] { R4156 += 1 };
  s0 -> s2 [0, 65535] { R4156 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R4155 += 1, R4156 += 1 };
  s0 -> s3 [58, 58] { R4156 += 1 };
  s0 -> s1 [59, 65535] { R4156 += 1 };
  s1 -> s1 [0, 57] { R4156 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R4156 += 1 };
  s1 -> s1 [59, 65535] { R4156 += 1 };
  s2 -> s1 [0, 57] { R4156 += 1 };
  s2 -> s2 [0, 65535] { R4156 += 1, R11 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [58, 58] { R4156 += 1 };
  s2 -> s1 [59, 65535] { R4156 += 1 };
  s3 -> s3 [0, 65535] { R4156 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 64] { R4158 += 1 };
  s0 -> s2 [0, 65535] { R4158 += 1, R12 += 1 };
  s0 -> s0 [0, 65535] { R4157 += 1, R4158 += 1 };
  s0 -> s3 [65, 65] { R4158 += 1 };
  s0 -> s1 [66, 65535] { R4158 += 1 };
  s1 -> s1 [0, 64] { R4158 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R4158 += 1 };
  s1 -> s1 [66, 65535] { R4158 += 1 };
  s2 -> s1 [0, 64] { R4158 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4158 += 1, R12 += 1 };
  s2 -> s3 [65, 65] { R4158 += 1 };
  s2 -> s1 [66, 65535] { R4158 += 1 };
  s3 -> s3 [0, 65535] { R4158 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 90] { R4160 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R4159 += 1, R4160 += 1 };
  s0 -> s2 [0, 65535] { R4160 += 1, R21 += 1, R22 += 1 };
  s0 -> s3 [91, 91] { R4160 += 1, R22 += 1 };
  s0 -> s1 [92, 65535] { R4160 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R4160 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4160 += 1 };
  s2 -> s1 [0, 90] { R4160 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4160 += 1, R21 += 1, R22 += 1 };
  s2 -> s3 [91, 91] { R4160 += 1, R22 += 1 };
  s2 -> s1 [92, 65535] { R4160 += 1, R22 += 1 };
  s3 -> s1 [0, 65535] { R4160 += 1, R22 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4160 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s0 [0, 65535] { R4161 += 1, R4162 += 1 };
  s0 -> s1 [0, 65535] { R4162 += 1, R24 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R4162 += 1, R23 += 1, R24 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4162 += 1 };
  s1 -> s1 [0, 65535] { R4162 += 1, R24 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4162 += 1, R24 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R4162 += 1, R23 += 1, R24 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4162 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 64] { R4164 += 1, R4086 += 1 };
  s0 -> s0 [0, 65535] { R4163 += 1, R4164 += 1 };
  s0 -> s2 [0, 65535] { R4164 += 1, R4085 += 1, R4086 += 1 };
  s0 -> s1 [66, 65535] { R4164 += 1, R4086 += 1 };
  s1 -> s1 [0, 64] { R4164 += 1, R4086 += 1 };
  s1 -> s1 [0, 65535] { R4164 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [66, 65535] { R4164 += 1, R4086 += 1 };
  s2 -> s1 [0, 64] { R4164 += 1, R4086 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4164 += 1, R4085 += 1, R4086 += 1 };
  s2 -> s1 [66, 65535] { R4164 += 1, R4086 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R4166 += 1, R4087 += 1, R4088 += 1 };
  s0 -> s2 [0, 65535] { R4166 += 1, R4088 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R4165 += 1, R4166 += 1 };
  s1 -> s1 [0, 65535] { R4166 += 1, R4087 += 1, R4088 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R4166 += 1, R4088 += 1, R19 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4166 += 1, R4088 += 1, R19 += 1 };
  s2 -> s4 [0, 65535] { R4166 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4166 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65] { R4168 += 1, R4090 += 1 };
  s0 -> s2 [0, 65535] { R4168 += 1, R4089 += 1, R4090 += 1 };
  s0 -> s0 [0, 65535] { R4167 += 1, R4168 += 1 };
  s0 -> s1 [80, 65535] { R4168 += 1, R4090 += 1 };
  s1 -> s1 [0, 65] { R4168 += 1, R4090 += 1 };
  s1 -> s1 [0, 65535] { R4168 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [80, 65535] { R4168 += 1, R4090 += 1 };
  s2 -> s1 [0, 65] { R4168 += 1, R4090 += 1 };
  s2 -> s2 [0, 65535] { R4168 += 1, R4089 += 1, R4090 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [80, 65535] { R4168 += 1, R4090 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R4170 += 1, R4091 += 1, R4092 += 1 };
  s0 -> s2 [0, 65535] { R4170 += 1, R4092 += 1, R406 += 1 };
  s0 -> s0 [0, 65535] { R4169 += 1, R4170 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4170 += 1, R4091 += 1, R4092 += 1 };
  s1 -> s2 [0, 65535] { R4170 += 1, R4092 += 1, R406 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4170 += 1, R4092 += 1, R406 += 1 };
  s2 -> s4 [0, 65535] { R4170 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4170 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 82] { R4172 += 1, R4094 += 1 };
  s0 -> s2 [0, 65535] { R4172 += 1, R4094 += 1, R408 += 1 };
  s0 -> s0 [0, 65535] { R4171 += 1, R4172 += 1 };
  s0 -> s3 [0, 65535] { R4172 += 1, R4093 += 1, R4094 += 1 };
  s0 -> s1 [84, 65535] { R4172 += 1, R4094 += 1 };
  s1 -> s1 [0, 82] { R4172 += 1, R4094 += 1 };
  s1 -> s1 [0, 65535] { R4172 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [84, 65535] { R4172 += 1, R4094 += 1 };
  s2 -> s1 [0, 82] { R4172 += 1, R4094 += 1 };
  s2 -> s5 [0, 65535] { R4172 += 1 };
  s2 -> s2 [0, 65535] { R4172 += 1, R4094 += 1, R408 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [84, 65535] { R4172 += 1, R4094 += 1 };
  s3 -> s1 [0, 82] { R4172 += 1, R4094 += 1 };
  s3 -> s2 [0, 65535] { R4172 += 1, R4094 += 1, R408 += 1 };
  s3 -> s3 [0, 65535] { R4172 += 1, R4093 += 1, R4094 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [84, 65535] { R4172 += 1, R4094 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4172 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 79] { R4174 += 1, R4096 += 1 };
  s0 -> s0 [0, 65535] { R4173 += 1, R4174 += 1 };
  s0 -> s2 [0, 65535] { R4174 += 1, R4096 += 1, R410 += 1 };
  s0 -> s3 [0, 65535] { R4174 += 1, R4095 += 1, R4096 += 1 };
  s0 -> s1 [81, 65535] { R4174 += 1, R4096 += 1 };
  s1 -> s1 [0, 79] { R4174 += 1, R4096 += 1 };
  s1 -> s1 [0, 65535] { R4174 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [81, 65535] { R4174 += 1, R4096 += 1 };
  s2 -> s1 [0, 79] { R4174 += 1, R4096 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4174 += 1, R4096 += 1, R410 += 1 };
  s2 -> s5 [0, 65535] { R4174 += 1 };
  s2 -> s1 [81, 65535] { R4174 += 1, R4096 += 1 };
  s3 -> s1 [0, 79] { R4174 += 1, R4096 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4174 += 1, R4096 += 1, R410 += 1 };
  s3 -> s3 [0, 65535] { R4174 += 1, R4095 += 1, R4096 += 1 };
  s3 -> s1 [81, 65535] { R4174 += 1, R4096 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4174 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R4176 += 1, R4098 += 1, R415 += 1, R416 += 1 };
  s0 -> s0 [0, 65535] { R4175 += 1, R4176 += 1 };
  s0 -> s2 [0, 65535] { R4176 += 1, R4098 += 1, R414 += 1, R415 += 1 };
  s0 -> s3 [0, 65535] { R4176 += 1, R4097 += 1, R4098 += 1 };
  s1 -> s1 [0, 65535] { R4176 += 1, R4098 += 1, R415 += 1, R416 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R4176 += 1, R4098 += 1 };
  s1 -> s5 [0, 65535] { R4176 += 1 };
  s2 -> s1 [0, 65535] { R4176 += 1, R4098 += 1, R415 += 1, R416 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4176 += 1, R4098 += 1, R414 += 1, R415 += 1 };
  s2 -> s5 [0, 65535] { R4176 += 1 };
  s3 -> s1 [0, 65535] { R4176 += 1, R4098 += 1, R415 += 1, R416 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4176 += 1, R4098 += 1, R414 += 1, R415 += 1 };
  s3 -> s3 [0, 65535] { R4176 += 1, R4097 += 1, R4098 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4176 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4176 += 1, R4098 += 1 };
  s6 -> s5 [0, 65535] { R4176 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s0 [0, 65535] { R4177 += 1, R4178 += 1 };
  s0 -> s1 [0, 65535] { R4178 += 1, R4100 += 1 };
  s0 -> s2 [0, 65535] { R4178 += 1, R4099 += 1, R4100 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4178 += 1, R4100 += 1 };
  s1 -> s4 [0, 65535] { R4178 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4178 += 1, R4100 += 1 };
  s2 -> s2 [0, 65535] { R4178 += 1, R4099 += 1, R4100 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4178 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 79] { R4180 += 1, R4102 += 1, R420 += 1 };
  s0 -> s0 [0, 65535] { R4179 += 1, R4180 += 1 };
  s0 -> s2 [0, 65535] { R4180 += 1, R4101 += 1, R4102 += 1 };
  s0 -> s3 [0, 65535] { R4180 += 1, R4102 += 1, R419 += 1, R420 += 1 };
  s0 -> s1 [81, 65535] { R4180 += 1, R4102 += 1, R420 += 1 };
  s1 -> s1 [0, 79] { R4180 += 1, R4102 += 1, R420 += 1 };
  s1 -> s4 [0, 65535] { R4180 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4180 += 1, R4102 += 1 };
  s1 -> s1 [81, 65535] { R4180 += 1, R4102 += 1, R420 += 1 };
  s2 -> s1 [0, 79] { R4180 += 1, R4102 += 1, R420 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4180 += 1, R4101 += 1, R4102 += 1 };
  s2 -> s3 [0, 65535] { R4180 += 1, R4102 += 1, R419 += 1, R420 += 1 };
  s2 -> s1 [81, 65535] { R4180 += 1, R4102 += 1, R420 += 1 };
  s3 -> s1 [0, 79] { R4180 += 1, R4102 += 1, R420 += 1 };
  s3 -> s4 [0, 65535] { R4180 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4180 += 1, R4102 += 1, R419 += 1, R420 += 1 };
  s3 -> s1 [81, 65535] { R4180 += 1, R4102 += 1, R420 += 1 };
  s4 -> s4 [0, 65535] { R4180 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s0 [0, 65535] { R4181 += 1, R4182 += 1 };
  s0 -> s1 [0, 65535] { R4182 += 1, R4104 += 1, R425 += 1, R426 += 1 };
  s0 -> s2 [0, 65535] { R4182 += 1, R4103 += 1, R4104 += 1 };
  s0 -> s3 [0, 65535] { R4182 += 1, R4104 += 1, R424 += 1, R425 += 1 };
  s1 -> s1 [0, 65535] { R4182 += 1, R4104 += 1, R425 += 1, R426 += 1 };
  s1 -> s6 [0, 65535] { R4182 += 1, R4104 += 1 };
  s1 -> s4 [0, 65535] { R4182 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R4182 += 1, R4104 += 1, R425 += 1, R426 += 1 };
  s2 -> s2 [0, 65535] { R4182 += 1, R4103 += 1, R4104 += 1 };
  s2 -> s3 [0, 65535] { R4182 += 1, R4104 += 1, R424 += 1, R425 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R4182 += 1, R4104 += 1, R425 += 1, R426 += 1 };
  s3 -> s4 [0, 65535] { R4182 += 1 };
  s3 -> s3 [0, 65535] { R4182 += 1, R4104 += 1, R424 += 1, R425 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4182 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4182 += 1, R4104 += 1 };
  s6 -> s4 [0, 65535] { R4182 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s0 -> s2 [0, 65535] { R4184 += 1, R4106 += 1, R429 += 1, R430 += 1 };
  s0 -> s3 [0, 65535] { R4184 += 1, R4105 += 1, R4106 += 1 };
  s0 -> s0 [0, 65535] { R4183 += 1, R4184 += 1 };
  s0 -> s1 [91, 107] { R4184 += 1, R4106 += 1, R430 += 1 };
  s0 -> s4 [108, 108] { R4184 += 1, R4106 += 1, R430 += 1 };
  s0 -> s1 [109, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s1 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s1 -> s5 [0, 65535] { R4184 += 1 };
  s1 -> s1 [0, 65535] { R4184 += 1, R4106 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [91, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s2 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s2 -> s2 [0, 65535] { R4184 += 1, R4106 += 1, R429 += 1, R430 += 1 };
  s2 -> s5 [0, 65535] { R4184 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [91, 107] { R4184 += 1, R4106 += 1, R430 += 1 };
  s2 -> s4 [108, 108] { R4184 += 1, R4106 += 1, R430 += 1 };
  s2 -> s1 [109, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s3 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s3 -> s2 [0, 65535] { R4184 += 1, R4106 += 1, R429 += 1, R430 += 1 };
  s3 -> s3 [0, 65535] { R4184 += 1, R4105 += 1, R4106 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [91, 107] { R4184 += 1, R4106 += 1, R430 += 1 };
  s3 -> s4 [108, 108] { R4184 += 1, R4106 += 1, R430 += 1 };
  s3 -> s1 [109, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s4 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s4 -> s5 [0, 65535] { R4184 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4184 += 1, R4106 += 1 };
  s4 -> s1 [91, 110] { R4184 += 1, R4106 += 1, R430 += 1 };
  s4 -> s7 [111, 111] { R4184 += 1, R4106 += 1, R430 += 1 };
  s4 -> s1 [112, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s5 -> s5 [0, 65535] { R4184 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s7 -> s5 [0, 65535] { R4184 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4184 += 1, R4106 += 1 };
  s7 -> s1 [91, 98] { R4184 += 1, R4106 += 1, R430 += 1 };
  s7 -> s8 [99, 99] { R4184 += 1, R4106 += 1, R430 += 1 };
  s7 -> s1 [100, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s8 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s8 -> s5 [0, 65535] { R4184 += 1 };
  s8 -> s8 [0, 65535] { R4184 += 1, R4106 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s1 [91, 96] { R4184 += 1, R4106 += 1, R430 += 1 };
  s8 -> s9 [97, 97] { R4184 += 1, R4106 += 1, R430 += 1 };
  s8 -> s1 [98, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s9 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s9 -> s5 [0, 65535] { R4184 += 1 };
  s9 -> s9 [0, 65535] { R4184 += 1, R4106 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s1 [91, 107] { R4184 += 1, R4106 += 1, R430 += 1 };
  s9 -> s10 [108, 108] { R4184 += 1, R4106 += 1, R430 += 1 };
  s9 -> s1 [109, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s10 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s10 -> s10 [0, 65535] { R4184 += 1, R4106 += 1 };
  s10 -> s5 [0, 65535] { R4184 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s1 [91, 103] { R4184 += 1, R4106 += 1, R430 += 1 };
  s10 -> s11 [104, 104] { R4184 += 1, R4106 += 1, R430 += 1 };
  s10 -> s1 [105, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s11 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s11 -> s5 [0, 65535] { R4184 += 1 };
  s11 -> s11 [0, 65535] { R4184 += 1, R4106 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s1 [91, 110] { R4184 += 1, R4106 += 1, R430 += 1 };
  s11 -> s12 [111, 111] { R4184 += 1, R4106 += 1, R430 += 1 };
  s11 -> s1 [112, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s12 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s12 -> s5 [0, 65535] { R4184 += 1 };
  s12 -> s12 [0, 65535] { R4184 += 1, R4106 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s1 [91, 114] { R4184 += 1, R4106 += 1, R430 += 1 };
  s12 -> s13 [115, 115] { R4184 += 1, R4106 += 1, R430 += 1 };
  s12 -> s1 [116, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s13 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s13 -> s13 [0, 65535] { R4184 += 1, R4106 += 1 };
  s13 -> s5 [0, 65535] { R4184 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s1 [91, 115] { R4184 += 1, R4106 += 1, R430 += 1 };
  s13 -> s14 [116, 116] { R4184 += 1, R4106 += 1, R430 += 1 };
  s13 -> s1 [117, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  s14 -> s1 [0, 80] { R4184 += 1, R4106 += 1, R430 += 1 };
  s14 -> s1 [91, 65535] { R4184 += 1, R4106 += 1, R430 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s0 [0, 65535] { R4185 += 1, R4186 += 1 };
  s0 -> s1 [0, 65535] { R4186 += 1, R4108 += 1, R435 += 1, R436 += 1 };
  s0 -> s2 [0, 65535] { R4186 += 1, R4107 += 1, R4108 += 1 };
  s0 -> s3 [0, 65535] { R4186 += 1, R4108 += 1, R434 += 1, R435 += 1 };
  s1 -> s1 [0, 65535] { R4186 += 1, R4108 += 1, R435 += 1, R436 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R4186 += 1, R4108 += 1 };
  s1 -> s5 [0, 65535] { R4186 += 1 };
  s2 -> s1 [0, 65535] { R4186 += 1, R4108 += 1, R435 += 1, R436 += 1 };
  s2 -> s2 [0, 65535] { R4186 += 1, R4107 += 1, R4108 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4186 += 1, R4108 += 1, R434 += 1, R435 += 1 };
  s3 -> s1 [0, 65535] { R4186 += 1, R4108 += 1, R435 += 1, R436 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4186 += 1, R4108 += 1, R434 += 1, R435 += 1 };
  s3 -> s5 [0, 65535] { R4186 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4186 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4186 += 1, R4108 += 1 };
  s6 -> s5 [0, 65535] { R4186 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R4188 += 1, R4110 += 1, R2715 += 1, R2716 += 1 };
  s0 -> s2 [0, 65535] { R4188 += 1, R4109 += 1, R4110 += 1 };
  s0 -> s3 [0, 65535] { R4188 += 1, R4110 += 1 };
  s0 -> s0 [0, 65535] { R4187 += 1, R4188 += 1 };
  s1 -> s1 [0, 65535] { R4188 += 1, R4110 += 1, R2715 += 1, R2716 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s3 [0, 65535] { R4188 += 1, R4110 += 1 };
  s1 -> s5 [0, 65535] { R4188 += 1 };
  s2 -> s1 [0, 65535] { R4188 += 1, R4110 += 1, R2715 += 1, R2716 += 1 };
  s2 -> s2 [0, 65535] { R4188 += 1, R4109 += 1, R4110 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4188 += 1, R4110 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R4188 += 1, R4110 += 1 };
  s3 -> s5 [0, 65535] { R4188 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4188 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s0 [0, 65535] { R4189 += 1, R4190 += 1 };
  s0 -> s1 [0, 65535] { R4190 += 1, R4112 += 1 };
  s0 -> s2 [0, 65535] { R4190 += 1, R4111 += 1, R4112 += 1 };
  s1 -> s4 [0, 65535] { R4190 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4190 += 1, R4112 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4190 += 1, R4112 += 1 };
  s2 -> s2 [0, 65535] { R4190 += 1, R4111 += 1, R4112 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4190 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R4192 += 1, R4114 += 1, R3477 += 1, R3478 += 1 };
  s0 -> s2 [0, 65535] { R4192 += 1, R4113 += 1, R4114 += 1 };
  s0 -> s3 [0, 65535] { R4192 += 1, R4114 += 1 };
  s0 -> s0 [0, 65535] { R4191 += 1, R4192 += 1 };
  s1 -> s1 [0, 65535] { R4192 += 1, R4114 += 1, R3477 += 1, R3478 += 1 };
  s1 -> s4 [0, 65535] { R4192 += 1 };
  s1 -> s3 [0, 65535] { R4192 += 1, R4114 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R4192 += 1, R4114 += 1, R3477 += 1, R3478 += 1 };
  s2 -> s2 [0, 65535] { R4192 += 1, R4113 += 1, R4114 += 1 };
  s2 -> s3 [0, 65535] { R4192 += 1, R4114 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4192 += 1 };
  s3 -> s3 [0, 65535] { R4192 += 1, R4114 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4192 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s0 [0, 65535] { R4193 += 1, R4194 += 1 };
  s0 -> s1 [0, 65535] { R4194 += 1, R4116 += 1 };
  s0 -> s2 [0, 65535] { R4194 += 1, R4115 += 1, R4116 += 1 };
  s1 -> s4 [0, 65535] { R4194 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4194 += 1, R4116 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4194 += 1, R4116 += 1 };
  s2 -> s2 [0, 65535] { R4194 += 1, R4115 += 1, R4116 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4194 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R4196 += 1, R4118 += 1 };
  s0 -> s0 [0, 65535] { R4195 += 1, R4196 += 1 };
  s0 -> s2 [0, 65535] { R4196 += 1, R4117 += 1, R4118 += 1 };
  s1 -> s1 [0, 65535] { R4196 += 1, R4118 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4196 += 1 };
  s2 -> s1 [0, 65535] { R4196 += 1, R4118 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4196 += 1, R4117 += 1, R4118 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4196 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s0 [0, 65535] { R4197 += 1, R4198 += 1 };
  s0 -> s1 [0, 65535] { R4198 += 1, R4120 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R4198 += 1, R4119 += 1, R4120 += 1 };
  s1 -> s1 [0, 65535] { R4198 += 1, R4120 += 1, R20 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R4198 += 1 };
  s2 -> s1 [0, 65535] { R4198 += 1, R4120 += 1, R20 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4198 += 1, R4119 += 1, R4120 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4198 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R4200 += 1, R4122 += 1 };
  s0 -> s0 [0, 65535] { R4199 += 1, R4200 += 1 };
  s0 -> s2 [0, 65535] { R4200 += 1, R4121 += 1, R4122 += 1 };
  s0 -> s3 [65, 65] { R4200 += 1, R4122 += 1 };
  s0 -> s4 [65, 65] { R4200 += 1, R4122 += 1 };
  s0 -> s5 [80, 80] { R4200 += 1, R4122 += 1 };
  s0 -> s1 [81, 65535] { R4200 += 1, R4122 += 1 };
  s1 -> s1 [0, 64] { R4200 += 1, R4122 += 1 };
  s1 -> s3 [65, 65] { R4200 += 1, R4122 += 1 };
  s1 -> s4 [65, 65] { R4200 += 1, R4122 += 1 };
  s1 -> s5 [80, 80] { R4200 += 1, R4122 += 1 };
  s1 -> s1 [81, 65535] { R4200 += 1, R4122 += 1 };
  s2 -> s1 [0, 64] { R4200 += 1, R4122 += 1 };
  s2 -> s2 [0, 65535] { R4200 += 1, R4121 += 1, R4122 += 1 };
  s2 -> s3 [65, 65] { R4200 += 1, R4122 += 1 };
  s2 -> s4 [65, 65] { R4200 += 1, R4122 += 1 };
  s2 -> s5 [80, 80] { R4200 += 1, R4122 += 1 };
  s2 -> s1 [81, 65535] { R4200 += 1, R4122 += 1 };
  s3 -> s3 [0, 65] { R4200 += 1, R4122 += 1 };
  s3 -> s8 [80, 80] { R4200 += 1, R4122 += 1 };
  s3 -> s3 [81, 65535] { R4200 += 1, R4122 += 1 };
  s5 -> s5 [0, 64] { R4200 += 1, R4122 += 1 };
  s5 -> s5 [0, 65535] { R4200 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [65, 65] { R4200 += 1, R4122 += 1 };
  s5 -> s8 [65, 65] { R4200 += 1, R4122 += 1 };
  s5 -> s5 [80, 65535] { R4200 += 1, R4122 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4200 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65] { R4200 += 1, R4122 += 1 };
  s8 -> s8 [0, 65535] { R4200 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [80, 65535] { R4200 += 1, R4122 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R4202 += 1, R4124 += 1, R405 += 1 };
  s0 -> s0 [0, 65535] { R4201 += 1, R4202 += 1 };
  s0 -> s2 [0, 65535] { R4202 += 1, R4123 += 1, R4124 += 1 };
  s0 -> s3 [65, 65] { R4202 += 1, R4124 += 1, R405 += 1 };
  s0 -> s4 [65, 65] { R4202 += 1, R4124 += 1, R405 += 1 };
  s0 -> s1 [66, 65535] { R4202 += 1, R4124 += 1, R405 += 1 };
  s1 -> s1 [0, 64] { R4202 += 1, R4124 += 1, R405 += 1 };
  s1 -> s1 [0, 65535] { R4202 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4202 += 1, R4124 += 1, R405 += 1 };
  s1 -> s4 [65, 65] { R4202 += 1, R4124 += 1, R405 += 1 };
  s1 -> s1 [66, 65535] { R4202 += 1, R4124 += 1, R405 += 1 };
  s2 -> s1 [0, 64] { R4202 += 1, R4124 += 1, R405 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4202 += 1, R4123 += 1, R4124 += 1 };
  s2 -> s3 [65, 65] { R4202 += 1, R4124 += 1, R405 += 1 };
  s2 -> s4 [65, 65] { R4202 += 1, R4124 += 1, R405 += 1 };
  s2 -> s1 [66, 65535] { R4202 += 1, R4124 += 1, R405 += 1 };
  s3 -> s3 [0, 65535] { R4202 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4202 += 1, R4124 += 1, R405 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4202 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4202 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R4204 += 1, R4126 += 1, R407 += 1 };
  s0 -> s2 [0, 65535] { R4204 += 1, R4125 += 1, R4126 += 1 };
  s0 -> s0 [0, 65535] { R4203 += 1, R4204 += 1 };
  s0 -> s3 [65, 65] { R4204 += 1, R4126 += 1, R407 += 1 };
  s0 -> s4 [65, 65] { R4204 += 1, R4126 += 1, R407 += 1 };
  s0 -> s1 [66, 65535] { R4204 += 1, R4126 += 1, R407 += 1 };
  s1 -> s1 [0, 64] { R4204 += 1, R4126 += 1, R407 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4204 += 1 };
  s1 -> s3 [65, 65] { R4204 += 1, R4126 += 1, R407 += 1 };
  s1 -> s4 [65, 65] { R4204 += 1, R4126 += 1, R407 += 1 };
  s1 -> s1 [66, 65535] { R4204 += 1, R4126 += 1, R407 += 1 };
  s2 -> s1 [0, 64] { R4204 += 1, R4126 += 1, R407 += 1 };
  s2 -> s2 [0, 65535] { R4204 += 1, R4125 += 1, R4126 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R4204 += 1, R4126 += 1, R407 += 1 };
  s2 -> s4 [65, 65] { R4204 += 1, R4126 += 1, R407 += 1 };
  s2 -> s1 [66, 65535] { R4204 += 1, R4126 += 1, R407 += 1 };
  s3 -> s3 [0, 65535] { R4204 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4204 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4204 += 1, R4126 += 1, R407 += 1 };
  s5 -> s5 [0, 65535] { R4204 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R4206 += 1, R4128 += 1, R409 += 1 };
  s0 -> s2 [0, 65535] { R4206 += 1, R4127 += 1, R4128 += 1 };
  s0 -> s0 [0, 65535] { R4205 += 1, R4206 += 1 };
  s0 -> s3 [65, 65] { R4206 += 1, R4128 += 1, R409 += 1 };
  s0 -> s4 [65, 65] { R4206 += 1, R4128 += 1, R409 += 1 };
  s0 -> s1 [66, 65535] { R4206 += 1, R4128 += 1, R409 += 1 };
  s1 -> s1 [0, 64] { R4206 += 1, R4128 += 1, R409 += 1 };
  s1 -> s1 [0, 65535] { R4206 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4206 += 1, R4128 += 1, R409 += 1 };
  s1 -> s4 [65, 65] { R4206 += 1, R4128 += 1, R409 += 1 };
  s1 -> s1 [66, 65535] { R4206 += 1, R4128 += 1, R409 += 1 };
  s2 -> s1 [0, 64] { R4206 += 1, R4128 += 1, R409 += 1 };
  s2 -> s2 [0, 65535] { R4206 += 1, R4127 += 1, R4128 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4206 += 1, R4128 += 1, R409 += 1 };
  s2 -> s4 [65, 65] { R4206 += 1, R4128 += 1, R409 += 1 };
  s2 -> s1 [66, 65535] { R4206 += 1, R4128 += 1, R409 += 1 };
  s3 -> s3 [0, 65535] { R4206 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4206 += 1, R4128 += 1, R409 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4206 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4206 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s0 -> s0 [0, 65535] { R4207 += 1, R4208 += 1 };
  s0 -> s2 [0, 65535] { R4208 += 1, R4129 += 1, R4130 += 1 };
  s0 -> s3 [65, 65] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s0 -> s4 [65, 65] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s0 -> s1 [66, 65535] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [0, 64] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [0, 65535] { R4208 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s1 -> s4 [65, 65] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [66, 65535] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [0, 64] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s2 -> s2 [0, 65535] { R4208 += 1, R4129 += 1, R4130 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s2 -> s4 [65, 65] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [66, 65535] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s3 -> s3 [0, 65535] { R4208 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4208 += 1, R4130 += 1, R411 += 1, R412 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4208 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4208 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 64] { R4210 += 1, R4132 += 1 };
  s0 -> s0 [0, 65535] { R4209 += 1, R4210 += 1 };
  s0 -> s2 [0, 65535] { R4210 += 1, R4131 += 1, R4132 += 1 };
  s0 -> s3 [65, 65] { R4210 += 1, R4132 += 1 };
  s0 -> s4 [65, 65] { R4210 += 1, R4132 += 1 };
  s0 -> s1 [66, 65535] { R4210 += 1, R4132 += 1 };
  s1 -> s1 [0, 64] { R4210 += 1, R4132 += 1 };
  s1 -> s1 [0, 65535] { R4210 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R4210 += 1, R4132 += 1 };
  s1 -> s4 [65, 65] { R4210 += 1, R4132 += 1 };
  s1 -> s1 [66, 65535] { R4210 += 1, R4132 += 1 };
  s2 -> s1 [0, 64] { R4210 += 1, R4132 += 1 };
  s2 -> s2 [0, 65535] { R4210 += 1, R4131 += 1, R4132 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R4210 += 1, R4132 += 1 };
  s2 -> s4 [65, 65] { R4210 += 1, R4132 += 1 };
  s2 -> s1 [66, 65535] { R4210 += 1, R4132 += 1 };
  s3 -> s3 [0, 65535] { R4210 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4210 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4210 += 1, R4132 += 1 };
  s5 -> s5 [0, 65535] { R4210 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s0 -> s2 [0, 65535] { R4212 += 1, R4133 += 1, R4134 += 1 };
  s0 -> s0 [0, 65535] { R4211 += 1, R4212 += 1 };
  s0 -> s3 [65, 65] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s0 -> s4 [65, 65] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s0 -> s1 [66, 65535] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [0, 64] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4212 += 1 };
  s1 -> s3 [65, 65] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s1 -> s4 [65, 65] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [66, 65535] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [0, 64] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4212 += 1, R4133 += 1, R4134 += 1 };
  s2 -> s3 [65, 65] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s2 -> s4 [65, 65] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [66, 65535] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4212 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4212 += 1, R4134 += 1, R417 += 1, R418 += 1 };
  s4 -> s6 [0, 65535] { R4212 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4212 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 64] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s0 -> s2 [0, 65535] { R4214 += 1, R4135 += 1, R4136 += 1 };
  s0 -> s0 [0, 65535] { R4213 += 1, R4214 += 1 };
  s0 -> s3 [65, 65] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s0 -> s4 [65, 65] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s0 -> s1 [66, 65535] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [0, 64] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [0, 65535] { R4214 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s1 -> s4 [65, 65] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [66, 65535] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [0, 64] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s2 -> s2 [0, 65535] { R4214 += 1, R4135 += 1, R4136 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s2 -> s4 [65, 65] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [66, 65535] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s3 -> s3 [0, 65535] { R4214 += 1, R4136 += 1, R421 += 1, R422 += 1 };
  s3 -> s6 [0, 65535] { R4214 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4214 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4214 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s0 -> s0 [0, 65535] { R4215 += 1, R4216 += 1 };
  s0 -> s2 [0, 65535] { R4216 += 1, R4137 += 1, R4138 += 1 };
  s0 -> s3 [65, 65] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s0 -> s4 [65, 65] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s0 -> s1 [66, 65535] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [0, 64] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [0, 65535] { R4216 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s1 -> s4 [65, 65] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [66, 65535] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [0, 64] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4216 += 1, R4137 += 1, R4138 += 1 };
  s2 -> s3 [65, 65] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s2 -> s4 [65, 65] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [66, 65535] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4216 += 1 };
  s4 -> s5 [0, 65535] { R4216 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4216 += 1, R4138 += 1, R427 += 1, R428 += 1 };
  s5 -> s5 [0, 65535] { R4216 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 64] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s0 -> s2 [0, 65535] { R4218 += 1, R4139 += 1, R4140 += 1 };
  s0 -> s0 [0, 65535] { R4217 += 1, R4218 += 1 };
  s0 -> s3 [65, 65] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s0 -> s4 [65, 65] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s0 -> s1 [66, 65535] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [0, 64] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [0, 65535] { R4218 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s1 -> s4 [65, 65] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [66, 65535] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [0, 64] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4218 += 1, R4139 += 1, R4140 += 1 };
  s2 -> s3 [65, 65] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s2 -> s4 [65, 65] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [66, 65535] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s3 -> s3 [0, 65535] { R4218 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4218 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4218 += 1, R4140 += 1, R431 += 1, R432 += 1 };
  s5 -> s5 [0, 65535] { R4218 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 64] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s2 [0, 64] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s0 [0, 65535] { R4219 += 1, R4220 += 1 };
  s0 -> s3 [0, 65535] { R4220 += 1, R4141 += 1, R4142 += 1 };
  s0 -> s4 [65, 65] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s5 [65, 65] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s6 [65, 65] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s7 [65, 65] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s0 -> s1 [66, 65535] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s0 -> s2 [66, 65535] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s1 [0, 64] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s1 -> s2 [0, 64] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s4 [65, 65] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s1 -> s5 [65, 65] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s6 [65, 65] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s1 -> s7 [65, 65] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s1 -> s1 [66, 65535] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s1 -> s2 [66, 65535] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s2 [0, 64] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s2 [0, 65535] { R4220 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s5 [65, 65] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s7 [65, 65] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s2 -> s2 [66, 65535] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s1 [0, 64] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s2 [0, 64] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s3 [0, 65535] { R4220 += 1, R4141 += 1, R4142 += 1 };
  s3 -> s4 [65, 65] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s5 [65, 65] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s6 [65, 65] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s7 [65, 65] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s3 -> s1 [66, 65535] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s3 -> s2 [66, 65535] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s4 -> s4 [0, 65535] { R4220 += 1, R4142 += 1, R2711 += 1, R2712 += 1 };
  s4 -> s7 [0, 65535] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s5 -> s5 [0, 65535] { R4220 += 1 };
  s5 -> s8 [0, 65535];
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R4220 += 1, R4142 += 1, R2712 += 1, R2713 += 1 };
  s7 -> s9 [0, 65535] { R4220 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4220 += 1 };
  accepting s8, s5, s2, s9, s7;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R4222 += 1, R4144 += 1 };
  s0 -> s0 [0, 65535] { R4221 += 1, R4222 += 1 };
  s0 -> s2 [0, 65535] { R4222 += 1, R4143 += 1, R4144 += 1 };
  s0 -> s3 [65, 65] { R4222 += 1, R4144 += 1 };
  s0 -> s4 [65, 65] { R4222 += 1, R4144 += 1 };
  s0 -> s1 [66, 65535] { R4222 += 1, R4144 += 1 };
  s1 -> s1 [0, 64] { R4222 += 1, R4144 += 1 };
  s1 -> s1 [0, 65535] { R4222 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R4222 += 1, R4144 += 1 };
  s1 -> s4 [65, 65] { R4222 += 1, R4144 += 1 };
  s1 -> s1 [66, 65535] { R4222 += 1, R4144 += 1 };
  s2 -> s1 [0, 64] { R4222 += 1, R4144 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4222 += 1, R4143 += 1, R4144 += 1 };
  s2 -> s3 [65, 65] { R4222 += 1, R4144 += 1 };
  s2 -> s4 [65, 65] { R4222 += 1, R4144 += 1 };
  s2 -> s1 [66, 65535] { R4222 += 1, R4144 += 1 };
  s3 -> s3 [0, 65535] { R4222 += 1, R4144 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4222 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4222 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4222 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 64] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s0 -> s2 [0, 64] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s0 -> s0 [0, 65535] { R4223 += 1, R4224 += 1 };
  s0 -> s3 [0, 65535] { R4224 += 1, R4145 += 1, R4146 += 1 };
  s0 -> s4 [65, 65] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s0 -> s5 [65, 65] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s0 -> s6 [65, 65] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s0 -> s7 [65, 65] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s0 -> s1 [66, 65535] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s0 -> s2 [66, 65535] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s1 -> s1 [0, 64] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s1 -> s1 [0, 65535] { R4224 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s5 [65, 65] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s1 -> s6 [65, 65] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s1 -> s1 [66, 65535] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s2 -> s1 [0, 64] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s2 -> s2 [0, 64] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s2 -> s4 [65, 65] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s2 -> s5 [65, 65] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s2 -> s6 [65, 65] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s2 -> s7 [65, 65] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s2 -> s1 [66, 65535] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s2 -> s2 [66, 65535] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s3 -> s1 [0, 64] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s3 -> s2 [0, 64] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s3 -> s3 [0, 65535] { R4224 += 1, R4145 += 1, R4146 += 1 };
  s3 -> s4 [65, 65] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s3 -> s5 [65, 65] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s3 -> s6 [65, 65] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s3 -> s7 [65, 65] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s3 -> s1 [66, 65535] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s3 -> s2 [66, 65535] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R4224 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s6 -> s9 [0, 65535] { R4224 += 1 };
  s7 -> s6 [0, 65535] { R4224 += 1, R4146 += 1, R3474 += 1, R3475 += 1 };
  s7 -> s7 [0, 65535] { R4224 += 1, R4146 += 1, R3473 += 1, R3474 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4224 += 1 };
  accepting s8, s5, s9, s6, s1;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 64] { R4226 += 1, R4148 += 1 };
  s0 -> s2 [0, 65535] { R4226 += 1, R4147 += 1, R4148 += 1 };
  s0 -> s0 [0, 65535] { R4225 += 1, R4226 += 1 };
  s0 -> s3 [65, 65] { R4226 += 1, R4148 += 1 };
  s0 -> s4 [65, 65] { R4226 += 1, R4148 += 1 };
  s0 -> s1 [66, 65535] { R4226 += 1, R4148 += 1 };
  s1 -> s1 [0, 64] { R4226 += 1, R4148 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4226 += 1 };
  s1 -> s3 [65, 65] { R4226 += 1, R4148 += 1 };
  s1 -> s4 [65, 65] { R4226 += 1, R4148 += 1 };
  s1 -> s1 [66, 65535] { R4226 += 1, R4148 += 1 };
  s2 -> s1 [0, 64] { R4226 += 1, R4148 += 1 };
  s2 -> s2 [0, 65535] { R4226 += 1, R4147 += 1, R4148 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R4226 += 1, R4148 += 1 };
  s2 -> s4 [65, 65] { R4226 += 1, R4148 += 1 };
  s2 -> s1 [66, 65535] { R4226 += 1, R4148 += 1 };
  s3 -> s3 [0, 65535] { R4226 += 1, R4148 += 1 };
  s3 -> s6 [0, 65535] { R4226 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4226 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4226 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 64] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s0 -> s2 [0, 64] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s0 -> s3 [0, 65535] { R4228 += 1, R4149 += 1, R4150 += 1 };
  s0 -> s0 [0, 65535] { R4227 += 1, R4228 += 1 };
  s0 -> s4 [65, 65] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s0 -> s5 [65, 65] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s0 -> s6 [65, 65] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s0 -> s7 [65, 65] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s0 -> s1 [66, 79] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s0 -> s2 [66, 65535] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s0 -> s8 [80, 80] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s0 -> s1 [81, 65535] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s1 -> s1 [0, 64] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s1 -> s5 [65, 65] { R4228 += 1, R4150 += 1 };
  s1 -> s6 [65, 65] { R4228 += 1, R4150 += 1 };
  s1 -> s1 [66, 79] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s1 -> s1 [66, 65535] { R4228 += 1, R4150 += 1 };
  s1 -> s8 [80, 80] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s1 -> s1 [81, 65535] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s2 -> s1 [0, 64] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s2 -> s2 [0, 64] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s2 -> s4 [65, 65] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s2 -> s5 [65, 65] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s2 -> s6 [65, 65] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s2 -> s7 [65, 65] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s2 -> s1 [66, 79] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s2 -> s2 [66, 65535] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s2 -> s8 [80, 80] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s2 -> s1 [81, 65535] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s3 -> s1 [0, 64] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s3 -> s2 [0, 64] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s3 -> s3 [0, 65535] { R4228 += 1, R4149 += 1, R4150 += 1 };
  s3 -> s4 [65, 65] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s3 -> s5 [65, 65] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s3 -> s6 [65, 65] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s3 -> s7 [65, 65] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s3 -> s1 [66, 79] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s3 -> s2 [66, 65535] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s3 -> s8 [80, 80] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s3 -> s1 [81, 65535] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s4 -> s6 [0, 79] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s4 -> s4 [0, 65535] { R4228 += 1, R4150 += 1, R4079 += 1, R4080 += 1 };
  s4 -> s13 [80, 80] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s4 -> s6 [81, 65535] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s6 -> s6 [0, 79] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s6 -> s6 [0, 65535] { R4228 += 1, R4150 += 1 };
  s6 -> s13 [80, 80] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s6 -> s6 [81, 65535] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s8 -> s8 [0, 64] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s8 -> s9 [0, 64] { R4228 += 1, R4150 += 1 };
  s8 -> s10 [65, 65] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s8 -> s11 [65, 65] { R4228 += 1, R4150 += 1 };
  s8 -> s12 [65, 65] { R4228 += 1, R4150 += 1 };
  s8 -> s13 [65, 65] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s8 -> s8 [66, 65535] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s8 -> s9 [66, 65535] { R4228 += 1, R4150 += 1 };
  s9 -> s9 [0, 64] { R4228 += 1, R4150 += 1 };
  s9 -> s15 [0, 65535];
  s9 -> s9 [0, 65535] { R4228 += 1 };
  s9 -> s11 [65, 65] { R4228 += 1, R4150 += 1 };
  s9 -> s12 [65, 65] { R4228 += 1, R4150 += 1 };
  s9 -> s9 [66, 65535] { R4228 += 1, R4150 += 1 };
  s11 -> s11 [0, 65535] { R4228 += 1 };
  s11 -> s15 [0, 65535];
  s12 -> s14 [0, 65535] { R4228 += 1 };
  s12 -> s12 [0, 65535] { R4228 += 1, R4150 += 1 };
  s12 -> s15 [0, 65535];
  s13 -> s12 [0, 65535] { R4228 += 1, R4150 += 1 };
  s13 -> s13 [0, 65535] { R4228 += 1, R4150 += 1, R4080 += 1, R4081 += 1 };
  s14 -> s14 [0, 65535] { R4228 += 1 };
  s14 -> s15 [0, 65535];
  s15 -> s15 [0, 65535];
  accepting s12, s9, s14, s15, s11;
};
};
constraint R2 = R4118 && R3 = R4228 && R21 = 0 && R22 = 1 && R23 = 0 && R24 = 1 && R406 + R405 = 0 && R4085 = 0 && R4086 = R4118 && R4087 = 0 && R4088 = R4118 && R4089 = 0 && R4090 = R4118 && R4091 = 0 && R4092 = R4118 && R4093 = 0 && R4094 = R4118 && R4095 = 0 && R4096 = R4118 && R4097 = 0 && R4098 = R4118 && R4099 = 0 && R4100 = R4118 && R4101 = 0 && R4102 = R4118 && R4103 = 0 && R4104 = R4118 && R4105 = 0 && R4106 = R4118 && R4107 = 0 && R4108 = R4118 && R4109 = 0 && R4110 = R4118 && R4111 = 0 && R4112 = R4118 && R4113 = 0 && R4114 = R4118 && R4115 = 0 && R4116 = R4118 && R4117 = 0 && R4121 = 0 && R4122 = 0 && R4141 = 0 && R4142 = 0 && R4145 = 0 && R4146 = 0 && R4149 = 0 && R4150 = 0 && R4151 = 10 && R4152 = R4228 && R4153 = 10 && R4154 = R4228 && R4155 = 10 && R4156 = R4228 && R4157 = 10 && R4158 = R4228 && R4159 = 10 && R4160 = R4228 && R4161 = 10 && R4162 = R4228 && R4163 = 10 && R4164 = R4228 && R4165 = 10 && R4166 = R4228 && R4167 = 10 && R4168 = R4228 && R4169 = 10 && R4170 = R4228 && R4171 = 10 && R4172 = R4228 && R4173 = 10 && R4174 = R4228 && R4175 = 10 && R4176 = R4228 && R4177 = 10 && R4178 = R4228 && R4179 = 10 && R4180 = R4228 && R4181 = 10 && R4182 = R4228 && R4183 = 10 && R4184 = R4228 && R4185 = 10 && R4186 = R4228 && R4187 = 10 && R4188 = R4228 && R4189 = 10 && R4190 = R4228 && R4191 = 10 && R4192 = R4228 && R4193 = 10 && R4194 = R4228 && R4195 = 10 && R4196 = R4228 && R4197 = 10 && R4198 = R4228 && R4199 = 10 && R4200 = R4228 && R4201 = 10 && R4202 = R4228 && R4203 = 10 && R4204 = R4228 && R4205 = 10 && R4206 = R4228 && R4207 = 10 && R4208 = R4228 && R4209 = 10 && R4210 = R4228 && R4211 = 10 && R4212 = R4228 && R4213 = 10 && R4214 = R4228 && R4215 = 10 && R4216 = R4228 && R4217 = 10 && R4218 = R4228 && R4219 = 10 && R4220 = R4228 && R4221 = 10 && R4222 = R4228 && R4223 = 10 && R4224 = R4228 && R4225 = 10 && R4226 = R4228 && R4227 = 10 && R436 + R433 + R4084 + R4081 != 0 && R11 < 1 && R12 < 1 && R408 + R407 < 1 && R410 + R409 < 1 && 0 < R4118 && 9 < R4228 && (R20 = 0 || (R4119 = 0 && R4120 = 0)) && (R20 = 0 || (R4123 = 0 && R4124 = 0)) && (R20 = 0 || (R4125 = 0 && R4126 = 0)) && (R20 = 0 || (R4127 = 0 && R4128 = 0)) && (R20 = 0 || (R4129 = 0 && R4130 = 0)) && (R20 = 0 || (R4131 = 0 && R4132 = 0)) && (R20 = 0 || (R4133 = 0 && R4134 = 0)) && (R20 = 0 || (R4135 = 0 && R4136 = 0)) && (R20 = 0 || (R4137 = 0 && R4138 = 0)) && (R20 = 0 || (R4139 = 0 && R4140 = 0)) && (R20 = 0 || (R4143 = 0 && R4144 = 0)) && (R20 = 0 || (R4147 = 0 && R4148 = 0)) && (R416 + R413 = 0 || (R414 + R411 = 0 && R415 + R412 = 0)) && (R426 + R423 = 0 || (R419 + R417 = 0 && R420 + R418 = 0)) && (R426 + R423 = 0 || (R424 + R421 = 0 && R425 + R422 = 0)) && (R426 + R423 = 0 || (R429 + R427 = 0 && R430 + R428 = 0)) && (R426 + R423 = 0 || (R434 + R431 = 0 && R435 + R432 = 0)) && (R2716 + R2713 = 0 || (R2714 + R2711 = 0 && R2715 + R2712 = 0)) && (R3478 + R3475 = 0 || (R3476 + R3473 = 0 && R3477 + R3474 = 0)) && (R3478 + R3475 = 0 || (R4082 + R4079 = 0 && R4083 + R4080 = 0));
// End of Parikh automata intersection problem
