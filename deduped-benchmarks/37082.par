// Parikh automata intersection problem, generated by OSTRICH+
counter int R11, R1199, R12, R1200, R1201, R1202, R1203, R1204, R1805, R1806, R1807, R1808, R1809, R1810, R1811, R1812, R1813, R1814, R1815, R1816, R1817, R1818, R1819, R1820, R1821, R1822, R1823, R1824, R1825, R1826, R1827, R1828, R1829, R1830, R1831, R1832, R1833, R1834, R1835, R1836, R1837, R1838, R1839, R1840, R1841, R1842, R1843, R1844, R1845, R1846, R1847, R1848, R1849, R1850, R1851, R1852, R1853, R1854, R1855, R1856, R1857, R1858, R1859, R1860, R1861, R1862, R1863, R1864, R1865, R1866, R1867, R1868, R1869, R1870, R1871, R1872, R1873, R1874, R1875, R1876, R1877, R1878, R1879, R1880, R1881, R1882, R1883, R1884, R1885, R1886, R1887, R1888, R1889, R1890, R1891, R1892, R1893, R1894, R1895, R1896, R1897, R1898, R1899, R19, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R2, R20, R21, R22, R23, R24, R3, R4, R405, R406, R407, R408, R409, R410, R411, R412, R413, R414, R415, R416, R417, R418, R419, R420, R421, R422, R423, R424, R425, R426, R427, R428, R429, R430, R431, R432, R433, R434, R435, R436, R437, R438, R439, R440, R441, R442;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [97, 97];
  accepting s1;
};
};
synchronised {  // Automata constraining c11
automaton c11_0 {
  init s0;
  s0 -> s1 [115, 115];
  accepting s1;
};
};
synchronised {  // Automata constraining P53
automaton P53_0 {
  init s0;
  s0 -> s1 [112, 112];
  accepting s1;
};
};
synchronised {  // Automata constraining uri
automaton uri_0 {
  init s0;
  s0 -> s1 [109, 109];
  s1 -> s2 [111, 111];
  s2 -> s3 [110, 110];
  s3 -> s4 [103, 103];
  s4 -> s5 [111, 111];
  s5 -> s6 [100, 100];
  s6 -> s7 [98, 98];
  s7 -> s8 [58, 58];
  s8 -> s9 [47, 47];
  s9 -> s10 [47, 47];
  s10 -> s10 [0, 65535];
  accepting s10;
};
automaton uri_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton uri_2 {
  init s0;
  s0 -> s1 [0, 43] { R1878 += 1 };
  s0 -> s0 [0, 65535] { R1877 += 1, R1878 += 1 };
  s0 -> s1 [45, 45] { R1878 += 1 };
  s0 -> s2 [46, 46] { R1878 += 1 };
  s0 -> s1 [48, 62] { R1878 += 1 };
  s0 -> s3 [65, 65] { R1878 += 1 };
  s0 -> s1 [66, 65535] { R1878 += 1 };
  s1 -> s1 [0, 43] { R1878 += 1 };
  s1 -> s1 [45, 45] { R1878 += 1 };
  s1 -> s2 [46, 46] { R1878 += 1 };
  s1 -> s1 [48, 62] { R1878 += 1 };
  s1 -> s3 [65, 65] { R1878 += 1 };
  s1 -> s1 [66, 65535] { R1878 += 1 };
  s2 -> s1 [0, 43] { R1878 += 1 };
  s2 -> s1 [45, 45] { R1878 += 1 };
  s2 -> s2 [46, 46] { R1878 += 1 };
  s2 -> s1 [48, 62] { R1878 += 1 };
  s2 -> s3 [65, 65] { R1878 += 1 };
  s2 -> s1 [66, 114] { R1878 += 1 };
  s2 -> s8 [115, 115] { R1878 += 1 };
  s2 -> s1 [116, 65535] { R1878 += 1 };
  s3 -> s3 [0, 43] { R1878 += 1 };
  s3 -> s3 [0, 65535];
  s3 -> s3 [45, 45] { R1878 += 1 };
  s3 -> s4 [46, 46] { R1878 += 1 };
  s3 -> s3 [48, 62] { R1878 += 1 };
  s3 -> s3 [65, 65535] { R1878 += 1 };
  s4 -> s3 [0, 43] { R1878 += 1 };
  s4 -> s4 [0, 65535];
  s4 -> s3 [45, 45] { R1878 += 1 };
  s4 -> s4 [46, 46] { R1878 += 1 };
  s4 -> s3 [48, 62] { R1878 += 1 };
  s4 -> s3 [65, 114] { R1878 += 1 };
  s4 -> s5 [115, 115] { R1878 += 1 };
  s4 -> s3 [116, 65535] { R1878 += 1 };
  s5 -> s3 [0, 43] { R1878 += 1 };
  s5 -> s5 [0, 65535];
  s5 -> s3 [45, 45] { R1878 += 1 };
  s5 -> s4 [46, 46] { R1878 += 1 };
  s5 -> s3 [48, 62] { R1878 += 1 };
  s5 -> s3 [65, 110] { R1878 += 1 };
  s5 -> s6 [111, 111] { R1878 += 1 };
  s5 -> s3 [112, 65535] { R1878 += 1 };
  s6 -> s3 [0, 43] { R1878 += 1 };
  s6 -> s6 [0, 65535];
  s6 -> s3 [45, 45] { R1878 += 1 };
  s6 -> s4 [46, 46] { R1878 += 1 };
  s6 -> s3 [48, 62] { R1878 += 1 };
  s6 -> s3 [65, 98] { R1878 += 1 };
  s6 -> s7 [99, 99] { R1878 += 1 };
  s6 -> s3 [100, 65535] { R1878 += 1 };
  s7 -> s3 [0, 43] { R1878 += 1 };
  s7 -> s7 [0, 65535];
  s7 -> s3 [45, 45] { R1878 += 1 };
  s7 -> s4 [46, 46] { R1878 += 1 };
  s7 -> s3 [48, 62] { R1878 += 1 };
  s7 -> s3 [65, 106] { R1878 += 1 };
  s7 -> s3 [108, 65535] { R1878 += 1 };
  s8 -> s1 [0, 43] { R1878 += 1 };
  s8 -> s1 [45, 45] { R1878 += 1 };
  s8 -> s2 [46, 46] { R1878 += 1 };
  s8 -> s1 [48, 62] { R1878 += 1 };
  s8 -> s3 [65, 65] { R1878 += 1 };
  s8 -> s1 [66, 110] { R1878 += 1 };
  s8 -> s9 [111, 111] { R1878 += 1 };
  s8 -> s1 [112, 65535] { R1878 += 1 };
  s9 -> s1 [0, 43] { R1878 += 1 };
  s9 -> s1 [45, 45] { R1878 += 1 };
  s9 -> s2 [46, 46] { R1878 += 1 };
  s9 -> s1 [48, 62] { R1878 += 1 };
  s9 -> s3 [65, 65] { R1878 += 1 };
  s9 -> s1 [66, 98] { R1878 += 1 };
  s9 -> s10 [99, 99] { R1878 += 1 };
  s9 -> s1 [100, 65535] { R1878 += 1 };
  s10 -> s1 [0, 43] { R1878 += 1 };
  s10 -> s1 [45, 45] { R1878 += 1 };
  s10 -> s2 [46, 46] { R1878 += 1 };
  s10 -> s1 [48, 62] { R1878 += 1 };
  s10 -> s3 [65, 65] { R1878 += 1 };
  s10 -> s1 [66, 106] { R1878 += 1 };
  s10 -> s1 [108, 65535] { R1878 += 1 };
  accepting s3, s4, s5, s6, s7;
};
automaton uri_3 {
  init s0;
  s0 -> s1 [0, 65535] { R1880 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R1879 += 1, R1880 += 1 };
  s1 -> s1 [0, 65535] { R1880 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton uri_4 {
  init s0;
  s0 -> s1 [0, 57] { R1882 += 1 };
  s0 -> s0 [0, 65535] { R1881 += 1, R1882 += 1 };
  s0 -> s2 [0, 65535] { R1882 += 1, R11 += 1 };
  s0 -> s3 [58, 58] { R1882 += 1 };
  s0 -> s1 [59, 65535] { R1882 += 1 };
  s1 -> s1 [0, 57] { R1882 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [58, 58] { R1882 += 1 };
  s1 -> s1 [59, 65535] { R1882 += 1 };
  s2 -> s1 [0, 57] { R1882 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1882 += 1, R11 += 1 };
  s2 -> s3 [58, 58] { R1882 += 1 };
  s2 -> s1 [59, 65535] { R1882 += 1 };
  s3 -> s3 [0, 65535] { R1882 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_5 {
  init s0;
  s0 -> s1 [0, 64] { R1884 += 1 };
  s0 -> s0 [0, 65535] { R1883 += 1, R1884 += 1 };
  s0 -> s2 [0, 65535] { R1884 += 1, R12 += 1 };
  s0 -> s3 [65, 65] { R1884 += 1 };
  s0 -> s1 [66, 65535] { R1884 += 1 };
  s1 -> s1 [0, 64] { R1884 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [65, 65] { R1884 += 1 };
  s1 -> s1 [66, 65535] { R1884 += 1 };
  s2 -> s1 [0, 64] { R1884 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1884 += 1, R12 += 1 };
  s2 -> s3 [65, 65] { R1884 += 1 };
  s2 -> s1 [66, 65535] { R1884 += 1 };
  s3 -> s3 [0, 65535] { R1884 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton uri_6 {
  init s0;
  s0 -> s1 [0, 90] { R1886 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R1885 += 1, R1886 += 1 };
  s0 -> s2 [0, 65535] { R1886 += 1, R21 += 1, R22 += 1 };
  s0 -> s3 [91, 91] { R1886 += 1, R22 += 1 };
  s0 -> s1 [92, 65535] { R1886 += 1, R22 += 1 };
  s1 -> s5 [0, 65535] { R1886 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1886 += 1, R22 += 1 };
  s2 -> s1 [0, 90] { R1886 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1886 += 1, R21 += 1, R22 += 1 };
  s2 -> s3 [91, 91] { R1886 += 1, R22 += 1 };
  s2 -> s1 [92, 65535] { R1886 += 1, R22 += 1 };
  s3 -> s1 [0, 65535] { R1886 += 1, R22 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1886 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton uri_7 {
  init s0;
  s0 -> s1 [0, 65535] { R1888 += 1, R24 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R1887 += 1, R1888 += 1 };
  s0 -> s2 [0, 65535] { R1888 += 1, R23 += 1, R24 += 1 };
  s1 -> s4 [0, 65535] { R1888 += 1 };
  s1 -> s1 [0, 65535] { R1888 += 1, R24 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1888 += 1, R24 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1888 += 1, R23 += 1, R24 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1888 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_8 {
  init s0;
  s0 -> s1 [0, 64] { R1890 += 1, R1812 += 1 };
  s0 -> s2 [0, 65535] { R1890 += 1, R1811 += 1, R1812 += 1 };
  s0 -> s0 [0, 65535] { R1889 += 1, R1890 += 1 };
  s0 -> s1 [66, 65535] { R1890 += 1, R1812 += 1 };
  s1 -> s1 [0, 64] { R1890 += 1, R1812 += 1 };
  s1 -> s1 [0, 65535] { R1890 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [66, 65535] { R1890 += 1, R1812 += 1 };
  s2 -> s1 [0, 64] { R1890 += 1, R1812 += 1 };
  s2 -> s2 [0, 65535] { R1890 += 1, R1811 += 1, R1812 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [66, 65535] { R1890 += 1, R1812 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_9 {
  init s0;
  s0 -> s1 [0, 65535] { R1892 += 1, R1814 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R1891 += 1, R1892 += 1 };
  s0 -> s2 [0, 65535] { R1892 += 1, R1813 += 1, R1814 += 1 };
  s1 -> s1 [0, 65535] { R1892 += 1, R1814 += 1, R19 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1892 += 1 };
  s2 -> s1 [0, 65535] { R1892 += 1, R1814 += 1, R19 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1892 += 1, R1813 += 1, R1814 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1892 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_10 {
  init s0;
  s0 -> s1 [0, 65] { R1894 += 1, R1816 += 1 };
  s0 -> s0 [0, 65535] { R1893 += 1, R1894 += 1 };
  s0 -> s2 [0, 65535] { R1894 += 1, R1815 += 1, R1816 += 1 };
  s0 -> s1 [80, 65535] { R1894 += 1, R1816 += 1 };
  s1 -> s1 [0, 65] { R1894 += 1, R1816 += 1 };
  s1 -> s1 [0, 65535] { R1894 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [80, 65535] { R1894 += 1, R1816 += 1 };
  s2 -> s1 [0, 65] { R1894 += 1, R1816 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1894 += 1, R1815 += 1, R1816 += 1 };
  s2 -> s1 [80, 65535] { R1894 += 1, R1816 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton uri_11 {
  init s0;
  s0 -> s1 [0, 65535] { R1896 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s0 [0, 65535] { R1895 += 1, R1896 += 1 };
  s0 -> s2 [0, 65535] { R1896 += 1, R1818 += 1, R406 += 1 };
  s1 -> s1 [0, 65535] { R1896 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s2 [0, 65535] { R1896 += 1, R1818 += 1, R406 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1896 += 1, R1818 += 1, R406 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R1896 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1896 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_12 {
  init s0;
  s0 -> s1 [0, 82] { R1898 += 1, R1820 += 1 };
  s0 -> s2 [0, 65535] { R1898 += 1, R1819 += 1, R1820 += 1 };
  s0 -> s0 [0, 65535] { R1897 += 1, R1898 += 1 };
  s0 -> s3 [0, 65535] { R1898 += 1, R1820 += 1, R408 += 1 };
  s0 -> s1 [84, 65535] { R1898 += 1, R1820 += 1 };
  s1 -> s1 [0, 82] { R1898 += 1, R1820 += 1 };
  s1 -> s1 [0, 65535] { R1898 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [84, 65535] { R1898 += 1, R1820 += 1 };
  s2 -> s1 [0, 82] { R1898 += 1, R1820 += 1 };
  s2 -> s2 [0, 65535] { R1898 += 1, R1819 += 1, R1820 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R1898 += 1, R1820 += 1, R408 += 1 };
  s2 -> s1 [84, 65535] { R1898 += 1, R1820 += 1 };
  s3 -> s1 [0, 82] { R1898 += 1, R1820 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1898 += 1 };
  s3 -> s3 [0, 65535] { R1898 += 1, R1820 += 1, R408 += 1 };
  s3 -> s1 [84, 65535] { R1898 += 1, R1820 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1898 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_13 {
  init s0;
  s0 -> s1 [0, 79] { R1900 += 1, R1822 += 1 };
  s0 -> s2 [0, 65535] { R1900 += 1, R1821 += 1, R1822 += 1 };
  s0 -> s3 [0, 65535] { R1900 += 1, R1822 += 1, R410 += 1 };
  s0 -> s0 [0, 65535] { R1899 += 1, R1900 += 1 };
  s0 -> s1 [81, 65535] { R1900 += 1, R1822 += 1 };
  s1 -> s1 [0, 79] { R1900 += 1, R1822 += 1 };
  s1 -> s1 [0, 65535] { R1900 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [81, 65535] { R1900 += 1, R1822 += 1 };
  s2 -> s1 [0, 79] { R1900 += 1, R1822 += 1 };
  s2 -> s2 [0, 65535] { R1900 += 1, R1821 += 1, R1822 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R1900 += 1, R1822 += 1, R410 += 1 };
  s2 -> s1 [81, 65535] { R1900 += 1, R1822 += 1 };
  s3 -> s1 [0, 79] { R1900 += 1, R1822 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1900 += 1 };
  s3 -> s3 [0, 65535] { R1900 += 1, R1822 += 1, R410 += 1 };
  s3 -> s1 [81, 65535] { R1900 += 1, R1822 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1900 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_14 {
  init s0;
  s0 -> s1 [0, 65535] { R1902 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s0 [0, 65535] { R1901 += 1, R1902 += 1 };
  s0 -> s2 [0, 65535] { R1902 += 1, R1824 += 1, R415 += 1, R416 += 1 };
  s0 -> s3 [0, 65535] { R1902 += 1, R1824 += 1, R414 += 1, R415 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1902 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s2 [0, 65535] { R1902 += 1, R1824 += 1, R415 += 1, R416 += 1 };
  s1 -> s3 [0, 65535] { R1902 += 1, R1824 += 1, R414 += 1, R415 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1902 += 1, R1824 += 1, R415 += 1, R416 += 1 };
  s2 -> s5 [0, 65535] { R1902 += 1 };
  s2 -> s6 [0, 65535] { R1902 += 1, R1824 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R1902 += 1, R1824 += 1, R415 += 1, R416 += 1 };
  s3 -> s5 [0, 65535] { R1902 += 1 };
  s3 -> s3 [0, 65535] { R1902 += 1, R1824 += 1, R414 += 1, R415 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1902 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1902 += 1 };
  s6 -> s6 [0, 65535] { R1902 += 1, R1824 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_15 {
  init s0;
  s0 -> s1 [0, 65535] { R1904 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s0 [0, 65535] { R1903 += 1, R1904 += 1 };
  s0 -> s2 [0, 65535] { R1904 += 1, R1826 += 1 };
  s1 -> s1 [0, 65535] { R1904 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1904 += 1, R1826 += 1 };
  s2 -> s3 [0, 65535] { R1904 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1904 += 1, R1826 += 1 };
  s3 -> s3 [0, 65535] { R1904 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_16 {
  init s0;
  s0 -> s1 [0, 79] { R1906 += 1, R1828 += 1, R420 += 1 };
  s0 -> s2 [0, 65535] { R1906 += 1, R1828 += 1, R419 += 1, R420 += 1 };
  s0 -> s3 [0, 65535] { R1906 += 1, R1827 += 1, R1828 += 1 };
  s0 -> s0 [0, 65535] { R1905 += 1, R1906 += 1 };
  s0 -> s1 [81, 65535] { R1906 += 1, R1828 += 1, R420 += 1 };
  s1 -> s1 [0, 79] { R1906 += 1, R1828 += 1, R420 += 1 };
  s1 -> s1 [0, 65535] { R1906 += 1, R1828 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1906 += 1 };
  s1 -> s1 [81, 65535] { R1906 += 1, R1828 += 1, R420 += 1 };
  s2 -> s1 [0, 79] { R1906 += 1, R1828 += 1, R420 += 1 };
  s2 -> s2 [0, 65535] { R1906 += 1, R1828 += 1, R419 += 1, R420 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1906 += 1 };
  s2 -> s1 [81, 65535] { R1906 += 1, R1828 += 1, R420 += 1 };
  s3 -> s1 [0, 79] { R1906 += 1, R1828 += 1, R420 += 1 };
  s3 -> s2 [0, 65535] { R1906 += 1, R1828 += 1, R419 += 1, R420 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1906 += 1, R1827 += 1, R1828 += 1 };
  s3 -> s1 [81, 65535] { R1906 += 1, R1828 += 1, R420 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1906 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_17 {
  init s0;
  s0 -> s1 [0, 65535] { R1908 += 1, R1829 += 1, R1830 += 1 };
  s0 -> s2 [0, 65535] { R1908 += 1, R1830 += 1, R424 += 1, R425 += 1 };
  s0 -> s3 [0, 65535] { R1908 += 1, R1830 += 1, R425 += 1, R426 += 1 };
  s0 -> s0 [0, 65535] { R1907 += 1, R1908 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1908 += 1, R1829 += 1, R1830 += 1 };
  s1 -> s2 [0, 65535] { R1908 += 1, R1830 += 1, R424 += 1, R425 += 1 };
  s1 -> s3 [0, 65535] { R1908 += 1, R1830 += 1, R425 += 1, R426 += 1 };
  s2 -> s5 [0, 65535] { R1908 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R1908 += 1, R1830 += 1, R424 += 1, R425 += 1 };
  s2 -> s3 [0, 65535] { R1908 += 1, R1830 += 1, R425 += 1, R426 += 1 };
  s3 -> s4 [0, 65535] { R1908 += 1, R1830 += 1 };
  s3 -> s5 [0, 65535] { R1908 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1908 += 1, R1830 += 1, R425 += 1, R426 += 1 };
  s4 -> s4 [0, 65535] { R1908 += 1, R1830 += 1 };
  s4 -> s5 [0, 65535] { R1908 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1908 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_18 {
  init s0;
  s0 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s0 -> s2 [0, 65535] { R1910 += 1, R1831 += 1, R1832 += 1 };
  s0 -> s0 [0, 65535] { R1909 += 1, R1910 += 1 };
  s0 -> s3 [0, 65535] { R1910 += 1, R1832 += 1, R429 += 1, R430 += 1 };
  s0 -> s1 [91, 107] { R1910 += 1, R1832 += 1, R430 += 1 };
  s0 -> s4 [108, 108] { R1910 += 1, R1832 += 1, R430 += 1 };
  s0 -> s1 [109, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s1 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s1 -> s1 [0, 65535] { R1910 += 1, R1832 += 1 };
  s1 -> s5 [0, 65535] { R1910 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [91, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s2 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s2 -> s2 [0, 65535] { R1910 += 1, R1831 += 1, R1832 += 1 };
  s2 -> s3 [0, 65535] { R1910 += 1, R1832 += 1, R429 += 1, R430 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [91, 107] { R1910 += 1, R1832 += 1, R430 += 1 };
  s2 -> s4 [108, 108] { R1910 += 1, R1832 += 1, R430 += 1 };
  s2 -> s1 [109, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s3 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s3 -> s3 [0, 65535] { R1910 += 1, R1832 += 1, R429 += 1, R430 += 1 };
  s3 -> s5 [0, 65535] { R1910 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [91, 107] { R1910 += 1, R1832 += 1, R430 += 1 };
  s3 -> s4 [108, 108] { R1910 += 1, R1832 += 1, R430 += 1 };
  s3 -> s1 [109, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s4 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s4 -> s4 [0, 65535] { R1910 += 1, R1832 += 1 };
  s4 -> s5 [0, 65535] { R1910 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [91, 110] { R1910 += 1, R1832 += 1, R430 += 1 };
  s4 -> s7 [111, 111] { R1910 += 1, R1832 += 1, R430 += 1 };
  s4 -> s1 [112, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s5 -> s5 [0, 65535] { R1910 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s7 -> s5 [0, 65535] { R1910 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1910 += 1, R1832 += 1 };
  s7 -> s1 [91, 98] { R1910 += 1, R1832 += 1, R430 += 1 };
  s7 -> s8 [99, 99] { R1910 += 1, R1832 += 1, R430 += 1 };
  s7 -> s1 [100, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s8 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s8 -> s8 [0, 65535] { R1910 += 1, R1832 += 1 };
  s8 -> s5 [0, 65535] { R1910 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s1 [91, 96] { R1910 += 1, R1832 += 1, R430 += 1 };
  s8 -> s9 [97, 97] { R1910 += 1, R1832 += 1, R430 += 1 };
  s8 -> s1 [98, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s9 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s9 -> s9 [0, 65535] { R1910 += 1, R1832 += 1 };
  s9 -> s5 [0, 65535] { R1910 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s1 [91, 107] { R1910 += 1, R1832 += 1, R430 += 1 };
  s9 -> s10 [108, 108] { R1910 += 1, R1832 += 1, R430 += 1 };
  s9 -> s1 [109, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s10 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s10 -> s10 [0, 65535] { R1910 += 1, R1832 += 1 };
  s10 -> s5 [0, 65535] { R1910 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s1 [91, 103] { R1910 += 1, R1832 += 1, R430 += 1 };
  s10 -> s11 [104, 104] { R1910 += 1, R1832 += 1, R430 += 1 };
  s10 -> s1 [105, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s11 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s11 -> s5 [0, 65535] { R1910 += 1 };
  s11 -> s6 [0, 65535];
  s11 -> s11 [0, 65535] { R1910 += 1, R1832 += 1 };
  s11 -> s1 [91, 110] { R1910 += 1, R1832 += 1, R430 += 1 };
  s11 -> s12 [111, 111] { R1910 += 1, R1832 += 1, R430 += 1 };
  s11 -> s1 [112, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s12 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s12 -> s5 [0, 65535] { R1910 += 1 };
  s12 -> s12 [0, 65535] { R1910 += 1, R1832 += 1 };
  s12 -> s6 [0, 65535];
  s12 -> s1 [91, 114] { R1910 += 1, R1832 += 1, R430 += 1 };
  s12 -> s13 [115, 115] { R1910 += 1, R1832 += 1, R430 += 1 };
  s12 -> s1 [116, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s13 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s13 -> s13 [0, 65535] { R1910 += 1, R1832 += 1 };
  s13 -> s5 [0, 65535] { R1910 += 1 };
  s13 -> s6 [0, 65535];
  s13 -> s1 [91, 115] { R1910 += 1, R1832 += 1, R430 += 1 };
  s13 -> s14 [116, 116] { R1910 += 1, R1832 += 1, R430 += 1 };
  s13 -> s1 [117, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  s14 -> s1 [0, 80] { R1910 += 1, R1832 += 1, R430 += 1 };
  s14 -> s1 [91, 65535] { R1910 += 1, R1832 += 1, R430 += 1 };
  accepting s3, s4, s12, s8, s13, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton uri_19 {
  init s0;
  s0 -> s0 [0, 65535] { R1911 += 1, R1912 += 1 };
  s0 -> s1 [0, 65535] { R1912 += 1, R1834 += 1, R434 += 1, R435 += 1 };
  s0 -> s2 [0, 65535] { R1912 += 1, R1833 += 1, R1834 += 1 };
  s0 -> s3 [0, 65535] { R1912 += 1, R1834 += 1, R435 += 1, R436 += 1 };
  s1 -> s1 [0, 65535] { R1912 += 1, R1834 += 1, R434 += 1, R435 += 1 };
  s1 -> s5 [0, 65535] { R1912 += 1 };
  s1 -> s3 [0, 65535] { R1912 += 1, R1834 += 1, R435 += 1, R436 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R1912 += 1, R1834 += 1, R434 += 1, R435 += 1 };
  s2 -> s2 [0, 65535] { R1912 += 1, R1833 += 1, R1834 += 1 };
  s2 -> s3 [0, 65535] { R1912 += 1, R1834 += 1, R435 += 1, R436 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R1912 += 1, R1834 += 1 };
  s3 -> s5 [0, 65535] { R1912 += 1 };
  s3 -> s3 [0, 65535] { R1912 += 1, R1834 += 1, R435 += 1, R436 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1912 += 1, R1834 += 1 };
  s4 -> s5 [0, 65535] { R1912 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1912 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_20 {
  init s0;
  s0 -> s1 [0, 65535] { R1914 += 1, R1836 += 1, R441 += 1, R442 += 1 };
  s0 -> s0 [0, 65535] { R1913 += 1, R1914 += 1 };
  s0 -> s2 [0, 65535] { R1914 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s3 [0, 65535] { R1914 += 1, R1836 += 1, R440 += 1, R441 += 1 };
  s1 -> s6 [0, 65535] { R1914 += 1, R1836 += 1 };
  s1 -> s1 [0, 65535] { R1914 += 1, R1836 += 1, R441 += 1, R442 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1914 += 1 };
  s2 -> s1 [0, 65535] { R1914 += 1, R1836 += 1, R441 += 1, R442 += 1 };
  s2 -> s2 [0, 65535] { R1914 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s3 [0, 65535] { R1914 += 1, R1836 += 1, R440 += 1, R441 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1914 += 1, R1836 += 1, R441 += 1, R442 += 1 };
  s3 -> s3 [0, 65535] { R1914 += 1, R1836 += 1, R440 += 1, R441 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1914 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1914 += 1 };
  s6 -> s6 [0, 65535] { R1914 += 1, R1836 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1914 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_21 {
  init s0;
  s0 -> s0 [0, 65535] { R1915 += 1, R1916 += 1 };
  s0 -> s1 [0, 65535] { R1916 += 1, R1838 += 1 };
  s0 -> s2 [0, 65535] { R1916 += 1, R1837 += 1, R1838 += 1 };
  s1 -> s4 [0, 65535] { R1916 += 1 };
  s1 -> s1 [0, 65535] { R1916 += 1, R1838 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1916 += 1, R1838 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1916 += 1, R1837 += 1, R1838 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1916 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_22 {
  init s0;
  s0 -> s1 [0, 65535] { R1918 += 1, R1840 += 1, R1203 += 1, R1204 += 1 };
  s0 -> s0 [0, 65535] { R1917 += 1, R1918 += 1 };
  s0 -> s2 [0, 65535] { R1918 += 1, R1840 += 1 };
  s0 -> s3 [0, 65535] { R1918 += 1, R1839 += 1, R1840 += 1 };
  s1 -> s1 [0, 65535] { R1918 += 1, R1840 += 1, R1203 += 1, R1204 += 1 };
  s1 -> s5 [0, 65535] { R1918 += 1 };
  s1 -> s2 [0, 65535] { R1918 += 1, R1840 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1918 += 1 };
  s2 -> s2 [0, 65535] { R1918 += 1, R1840 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1918 += 1, R1840 += 1, R1203 += 1, R1204 += 1 };
  s3 -> s2 [0, 65535] { R1918 += 1, R1840 += 1 };
  s3 -> s3 [0, 65535] { R1918 += 1, R1839 += 1, R1840 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1918 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton uri_23 {
  init s0;
  s0 -> s0 [0, 65535] { R1919 += 1, R1920 += 1 };
  s0 -> s1 [0, 65535] { R1920 += 1, R1842 += 1 };
  s0 -> s2 [0, 65535] { R1920 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1920 += 1, R1842 += 1 };
  s1 -> s4 [0, 65535] { R1920 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1920 += 1, R1842 += 1 };
  s2 -> s2 [0, 65535] { R1920 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1920 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton uri_24 {
  init s0;
  s0 -> s1 [0, 65535] { R1922 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s2 [0, 65535] { R1922 += 1, R1844 += 1 };
  s0 -> s0 [0, 65535] { R1921 += 1, R1922 += 1 };
  s1 -> s1 [0, 65535] { R1922 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s2 [0, 65535] { R1922 += 1, R1844 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1922 += 1, R1844 += 1 };
  s2 -> s3 [0, 65535] { R1922 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1922 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_25 {
  init s0;
  s0 -> s1 [0, 65535] { R1924 += 1, R1846 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R1924 += 1, R1845 += 1, R1846 += 1 };
  s0 -> s0 [0, 65535] { R1923 += 1, R1924 += 1 };
  s1 -> s1 [0, 65535] { R1924 += 1, R1846 += 1, R20 += 1 };
  s1 -> s4 [0, 65535] { R1924 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1924 += 1, R1846 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R1924 += 1, R1845 += 1, R1846 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1924 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton uri_26 {
  init s0;
  s0 -> s1 [0, 64] { R1926 += 1, R1848 += 1 };
  s0 -> s0 [0, 65535] { R1925 += 1, R1926 += 1 };
  s0 -> s2 [0, 65535] { R1926 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s3 [65, 65] { R1926 += 1, R1848 += 1 };
  s0 -> s4 [65, 65] { R1926 += 1, R1848 += 1 };
  s0 -> s5 [80, 80] { R1926 += 1, R1848 += 1 };
  s0 -> s1 [81, 65535] { R1926 += 1, R1848 += 1 };
  s1 -> s1 [0, 64] { R1926 += 1, R1848 += 1 };
  s1 -> s3 [65, 65] { R1926 += 1, R1848 += 1 };
  s1 -> s4 [65, 65] { R1926 += 1, R1848 += 1 };
  s1 -> s5 [80, 80] { R1926 += 1, R1848 += 1 };
  s1 -> s1 [81, 65535] { R1926 += 1, R1848 += 1 };
  s2 -> s1 [0, 64] { R1926 += 1, R1848 += 1 };
  s2 -> s2 [0, 65535] { R1926 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s3 [65, 65] { R1926 += 1, R1848 += 1 };
  s2 -> s4 [65, 65] { R1926 += 1, R1848 += 1 };
  s2 -> s5 [80, 80] { R1926 += 1, R1848 += 1 };
  s2 -> s1 [81, 65535] { R1926 += 1, R1848 += 1 };
  s4 -> s4 [0, 65] { R1926 += 1, R1848 += 1 };
  s4 -> s8 [80, 80] { R1926 += 1, R1848 += 1 };
  s4 -> s4 [81, 65535] { R1926 += 1, R1848 += 1 };
  s5 -> s5 [0, 64] { R1926 += 1, R1848 += 1 };
  s5 -> s5 [0, 65535] { R1926 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [65, 65] { R1926 += 1, R1848 += 1 };
  s5 -> s8 [65, 65] { R1926 += 1, R1848 += 1 };
  s5 -> s5 [80, 65535] { R1926 += 1, R1848 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1926 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65] { R1926 += 1, R1848 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1926 += 1 };
  s8 -> s8 [80, 65535] { R1926 += 1, R1848 += 1 };
  accepting s5, s6, s7, s8;
};
automaton uri_27 {
  init s0;
  s0 -> s1 [0, 64] { R1928 += 1, R1850 += 1, R405 += 1 };
  s0 -> s2 [0, 65535] { R1928 += 1, R1849 += 1, R1850 += 1 };
  s0 -> s0 [0, 65535] { R1927 += 1, R1928 += 1 };
  s0 -> s3 [65, 65] { R1928 += 1, R1850 += 1, R405 += 1 };
  s0 -> s4 [65, 65] { R1928 += 1, R1850 += 1, R405 += 1 };
  s0 -> s1 [66, 65535] { R1928 += 1, R1850 += 1, R405 += 1 };
  s1 -> s1 [0, 64] { R1928 += 1, R1850 += 1, R405 += 1 };
  s1 -> s1 [0, 65535] { R1928 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R1928 += 1, R1850 += 1, R405 += 1 };
  s1 -> s4 [65, 65] { R1928 += 1, R1850 += 1, R405 += 1 };
  s1 -> s1 [66, 65535] { R1928 += 1, R1850 += 1, R405 += 1 };
  s2 -> s1 [0, 64] { R1928 += 1, R1850 += 1, R405 += 1 };
  s2 -> s2 [0, 65535] { R1928 += 1, R1849 += 1, R1850 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R1928 += 1, R1850 += 1, R405 += 1 };
  s2 -> s4 [65, 65] { R1928 += 1, R1850 += 1, R405 += 1 };
  s2 -> s1 [66, 65535] { R1928 += 1, R1850 += 1, R405 += 1 };
  s3 -> s3 [0, 65535] { R1928 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1928 += 1 };
  s4 -> s4 [0, 65535] { R1928 += 1, R1850 += 1, R405 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1928 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_28 {
  init s0;
  s0 -> s1 [0, 64] { R1930 += 1, R1852 += 1, R407 += 1 };
  s0 -> s2 [0, 65535] { R1930 += 1, R1851 += 1, R1852 += 1 };
  s0 -> s0 [0, 65535] { R1929 += 1, R1930 += 1 };
  s0 -> s3 [65, 65] { R1930 += 1, R1852 += 1, R407 += 1 };
  s0 -> s4 [65, 65] { R1930 += 1, R1852 += 1, R407 += 1 };
  s0 -> s1 [66, 65535] { R1930 += 1, R1852 += 1, R407 += 1 };
  s1 -> s1 [0, 64] { R1930 += 1, R1852 += 1, R407 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1930 += 1 };
  s1 -> s3 [65, 65] { R1930 += 1, R1852 += 1, R407 += 1 };
  s1 -> s4 [65, 65] { R1930 += 1, R1852 += 1, R407 += 1 };
  s1 -> s1 [66, 65535] { R1930 += 1, R1852 += 1, R407 += 1 };
  s2 -> s1 [0, 64] { R1930 += 1, R1852 += 1, R407 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1930 += 1, R1851 += 1, R1852 += 1 };
  s2 -> s3 [65, 65] { R1930 += 1, R1852 += 1, R407 += 1 };
  s2 -> s4 [65, 65] { R1930 += 1, R1852 += 1, R407 += 1 };
  s2 -> s1 [66, 65535] { R1930 += 1, R1852 += 1, R407 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1930 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1930 += 1, R1852 += 1, R407 += 1 };
  s4 -> s6 [0, 65535] { R1930 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1930 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_29 {
  init s0;
  s0 -> s1 [0, 64] { R1932 += 1, R1854 += 1, R409 += 1 };
  s0 -> s2 [0, 65535] { R1932 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s0 [0, 65535] { R1931 += 1, R1932 += 1 };
  s0 -> s3 [65, 65] { R1932 += 1, R1854 += 1, R409 += 1 };
  s0 -> s4 [65, 65] { R1932 += 1, R1854 += 1, R409 += 1 };
  s0 -> s1 [66, 65535] { R1932 += 1, R1854 += 1, R409 += 1 };
  s1 -> s1 [0, 64] { R1932 += 1, R1854 += 1, R409 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1932 += 1 };
  s1 -> s3 [65, 65] { R1932 += 1, R1854 += 1, R409 += 1 };
  s1 -> s4 [65, 65] { R1932 += 1, R1854 += 1, R409 += 1 };
  s1 -> s1 [66, 65535] { R1932 += 1, R1854 += 1, R409 += 1 };
  s2 -> s1 [0, 64] { R1932 += 1, R1854 += 1, R409 += 1 };
  s2 -> s2 [0, 65535] { R1932 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R1932 += 1, R1854 += 1, R409 += 1 };
  s2 -> s4 [65, 65] { R1932 += 1, R1854 += 1, R409 += 1 };
  s2 -> s1 [66, 65535] { R1932 += 1, R1854 += 1, R409 += 1 };
  s3 -> s6 [0, 65535] { R1932 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1932 += 1, R1854 += 1, R409 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1932 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1932 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_30 {
  init s0;
  s0 -> s1 [0, 64] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s0 -> s2 [0, 65535] { R1934 += 1, R1855 += 1, R1856 += 1 };
  s0 -> s0 [0, 65535] { R1933 += 1, R1934 += 1 };
  s0 -> s3 [65, 65] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s0 -> s4 [65, 65] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s0 -> s1 [66, 65535] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [0, 64] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1934 += 1 };
  s1 -> s3 [65, 65] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s1 -> s4 [65, 65] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s1 -> s1 [66, 65535] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [0, 64] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s2 -> s2 [0, 65535] { R1934 += 1, R1855 += 1, R1856 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s2 -> s4 [65, 65] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s2 -> s1 [66, 65535] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s3 -> s3 [0, 65535] { R1934 += 1, R1856 += 1, R411 += 1, R412 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1934 += 1 };
  s4 -> s4 [0, 65535] { R1934 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1934 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_31 {
  init s0;
  s0 -> s1 [0, 64] { R1936 += 1, R1858 += 1 };
  s0 -> s2 [0, 65535] { R1936 += 1, R1857 += 1, R1858 += 1 };
  s0 -> s0 [0, 65535] { R1935 += 1, R1936 += 1 };
  s0 -> s3 [65, 65] { R1936 += 1, R1858 += 1 };
  s0 -> s4 [65, 65] { R1936 += 1, R1858 += 1 };
  s0 -> s1 [66, 65535] { R1936 += 1, R1858 += 1 };
  s1 -> s1 [0, 64] { R1936 += 1, R1858 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1936 += 1 };
  s1 -> s3 [65, 65] { R1936 += 1, R1858 += 1 };
  s1 -> s4 [65, 65] { R1936 += 1, R1858 += 1 };
  s1 -> s1 [66, 65535] { R1936 += 1, R1858 += 1 };
  s2 -> s1 [0, 64] { R1936 += 1, R1858 += 1 };
  s2 -> s2 [0, 65535] { R1936 += 1, R1857 += 1, R1858 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R1936 += 1, R1858 += 1 };
  s2 -> s4 [65, 65] { R1936 += 1, R1858 += 1 };
  s2 -> s1 [66, 65535] { R1936 += 1, R1858 += 1 };
  s3 -> s3 [0, 65535] { R1936 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1936 += 1 };
  s4 -> s4 [0, 65535] { R1936 += 1, R1858 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1936 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_32 {
  init s0;
  s0 -> s1 [0, 64] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s0 -> s2 [0, 65535] { R1938 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s0 [0, 65535] { R1937 += 1, R1938 += 1 };
  s0 -> s3 [65, 65] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s0 -> s4 [65, 65] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s0 -> s1 [66, 65535] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [0, 64] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1938 += 1 };
  s1 -> s3 [65, 65] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s1 -> s4 [65, 65] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s1 -> s1 [66, 65535] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [0, 64] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s2 -> s2 [0, 65535] { R1938 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s2 -> s4 [65, 65] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s2 -> s1 [66, 65535] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s3 -> s3 [0, 65535] { R1938 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1938 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1938 += 1, R1860 += 1, R417 += 1, R418 += 1 };
  s5 -> s5 [0, 65535] { R1938 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_33 {
  init s0;
  s0 -> s1 [0, 64] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s0 -> s2 [0, 65535] { R1940 += 1, R1861 += 1, R1862 += 1 };
  s0 -> s0 [0, 65535] { R1939 += 1, R1940 += 1 };
  s0 -> s3 [65, 65] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s0 -> s4 [65, 65] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s0 -> s1 [66, 65535] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [0, 64] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [0, 65535] { R1940 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [65, 65] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s1 -> s4 [65, 65] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s1 -> s1 [66, 65535] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [0, 64] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s2 -> s2 [0, 65535] { R1940 += 1, R1861 += 1, R1862 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s2 -> s4 [65, 65] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s2 -> s1 [66, 65535] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s3 -> s3 [0, 65535] { R1940 += 1, R1862 += 1, R421 += 1, R422 += 1 };
  s3 -> s6 [0, 65535] { R1940 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1940 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1940 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_34 {
  init s0;
  s0 -> s1 [0, 64] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s0 -> s0 [0, 65535] { R1941 += 1, R1942 += 1 };
  s0 -> s2 [0, 65535] { R1942 += 1, R1863 += 1, R1864 += 1 };
  s0 -> s3 [65, 65] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s0 -> s4 [65, 65] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s0 -> s1 [66, 65535] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [0, 64] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1942 += 1 };
  s1 -> s3 [65, 65] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s1 -> s4 [65, 65] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s1 -> s1 [66, 65535] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [0, 64] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1942 += 1, R1863 += 1, R1864 += 1 };
  s2 -> s3 [65, 65] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s2 -> s4 [65, 65] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s2 -> s1 [66, 65535] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s3 -> s3 [0, 65535] { R1942 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1942 += 1, R1864 += 1, R427 += 1, R428 += 1 };
  s4 -> s6 [0, 65535] { R1942 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1942 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_35 {
  init s0;
  s0 -> s1 [0, 64] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s0 -> s0 [0, 65535] { R1943 += 1, R1944 += 1 };
  s0 -> s2 [0, 65535] { R1944 += 1, R1865 += 1, R1866 += 1 };
  s0 -> s3 [65, 65] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s0 -> s4 [65, 65] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s0 -> s1 [66, 65535] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [0, 64] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1944 += 1 };
  s1 -> s3 [65, 65] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s1 -> s4 [65, 65] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s1 -> s1 [66, 65535] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [0, 64] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1944 += 1, R1865 += 1, R1866 += 1 };
  s2 -> s3 [65, 65] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s2 -> s4 [65, 65] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s2 -> s1 [66, 65535] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1944 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1944 += 1, R1866 += 1, R431 += 1, R432 += 1 };
  s4 -> s6 [0, 65535] { R1944 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1944 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_36 {
  init s0;
  s0 -> s1 [0, 64] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s0 -> s2 [0, 65535] { R1946 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s0 [0, 65535] { R1945 += 1, R1946 += 1 };
  s0 -> s3 [65, 65] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s0 -> s4 [65, 65] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s0 -> s1 [66, 65535] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s1 -> s1 [0, 64] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1946 += 1 };
  s1 -> s3 [65, 65] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s1 -> s4 [65, 65] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s1 -> s1 [66, 65535] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s2 -> s1 [0, 64] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s2 -> s2 [0, 65535] { R1946 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s2 -> s4 [65, 65] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s2 -> s1 [66, 65535] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s3 -> s3 [0, 65535] { R1946 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1946 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1946 += 1, R1868 += 1, R437 += 1, R438 += 1 };
  s5 -> s5 [0, 65535] { R1946 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_37 {
  init s0;
  s0 -> s1 [0, 64] { R1948 += 1, R1870 += 1 };
  s0 -> s0 [0, 65535] { R1947 += 1, R1948 += 1 };
  s0 -> s2 [0, 65535] { R1948 += 1, R1869 += 1, R1870 += 1 };
  s0 -> s3 [65, 65] { R1948 += 1, R1870 += 1 };
  s0 -> s4 [65, 65] { R1948 += 1, R1870 += 1 };
  s0 -> s1 [66, 65535] { R1948 += 1, R1870 += 1 };
  s1 -> s1 [0, 64] { R1948 += 1, R1870 += 1 };
  s1 -> s1 [0, 65535] { R1948 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [65, 65] { R1948 += 1, R1870 += 1 };
  s1 -> s4 [65, 65] { R1948 += 1, R1870 += 1 };
  s1 -> s1 [66, 65535] { R1948 += 1, R1870 += 1 };
  s2 -> s1 [0, 64] { R1948 += 1, R1870 += 1 };
  s2 -> s2 [0, 65535] { R1948 += 1, R1869 += 1, R1870 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [65, 65] { R1948 += 1, R1870 += 1 };
  s2 -> s4 [65, 65] { R1948 += 1, R1870 += 1 };
  s2 -> s1 [66, 65535] { R1948 += 1, R1870 += 1 };
  s3 -> s3 [0, 65535] { R1948 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1948 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1948 += 1, R1870 += 1 };
  s5 -> s5 [0, 65535] { R1948 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_38 {
  init s0;
  s0 -> s1 [0, 64] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s0 -> s2 [0, 64] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s0 -> s0 [0, 65535] { R1949 += 1, R1950 += 1 };
  s0 -> s3 [0, 65535] { R1950 += 1, R1871 += 1, R1872 += 1 };
  s0 -> s4 [65, 65] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s0 -> s5 [65, 65] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s0 -> s6 [65, 65] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s0 -> s7 [65, 65] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s0 -> s1 [66, 65535] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s0 -> s2 [66, 65535] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s1 -> s1 [0, 64] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s1 -> s1 [0, 65535] { R1950 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [65, 65] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s1 -> s5 [65, 65] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s1 -> s1 [66, 65535] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s2 -> s1 [0, 64] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s2 -> s2 [0, 64] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s2 -> s4 [65, 65] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s2 -> s5 [65, 65] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s2 -> s6 [65, 65] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s2 -> s7 [65, 65] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s2 -> s1 [66, 65535] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s2 -> s2 [66, 65535] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s3 -> s1 [0, 64] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s3 -> s2 [0, 64] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s3 -> s3 [0, 65535] { R1950 += 1, R1871 += 1, R1872 += 1 };
  s3 -> s4 [65, 65] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s3 -> s5 [65, 65] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s3 -> s6 [65, 65] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s3 -> s7 [65, 65] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s3 -> s1 [66, 65535] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s3 -> s2 [66, 65535] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s4 -> s4 [0, 65535] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s4 -> s9 [0, 65535] { R1950 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R1950 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s4 [0, 65535] { R1950 += 1, R1872 += 1, R1200 += 1, R1201 += 1 };
  s6 -> s6 [0, 65535] { R1950 += 1, R1872 += 1, R1199 += 1, R1200 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1950 += 1 };
  s9 -> s8 [0, 65535];
  accepting s4, s8, s5, s9, s1;
};
automaton uri_39 {
  init s0;
  s0 -> s1 [0, 64] { R1952 += 1, R1874 += 1 };
  s0 -> s2 [0, 65535] { R1952 += 1, R1873 += 1, R1874 += 1 };
  s0 -> s0 [0, 65535] { R1951 += 1, R1952 += 1 };
  s0 -> s3 [65, 65] { R1952 += 1, R1874 += 1 };
  s0 -> s4 [65, 65] { R1952 += 1, R1874 += 1 };
  s0 -> s1 [66, 65535] { R1952 += 1, R1874 += 1 };
  s1 -> s1 [0, 64] { R1952 += 1, R1874 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1952 += 1 };
  s1 -> s3 [65, 65] { R1952 += 1, R1874 += 1 };
  s1 -> s4 [65, 65] { R1952 += 1, R1874 += 1 };
  s1 -> s1 [66, 65535] { R1952 += 1, R1874 += 1 };
  s2 -> s1 [0, 64] { R1952 += 1, R1874 += 1 };
  s2 -> s2 [0, 65535] { R1952 += 1, R1873 += 1, R1874 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [65, 65] { R1952 += 1, R1874 += 1 };
  s2 -> s4 [65, 65] { R1952 += 1, R1874 += 1 };
  s2 -> s1 [66, 65535] { R1952 += 1, R1874 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1952 += 1 };
  s3 -> s3 [0, 65535] { R1952 += 1, R1874 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1952 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1952 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton uri_40 {
  init s0;
  s0 -> s1 [0, 64] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s2 [0, 64] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s0 -> s3 [0, 65535] { R1954 += 1, R1875 += 1, R1876 += 1 };
  s0 -> s0 [0, 65535] { R1953 += 1, R1954 += 1 };
  s0 -> s4 [65, 65] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s0 -> s5 [65, 65] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s6 [65, 65] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s0 -> s7 [65, 65] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s2 [66, 79] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s0 -> s1 [66, 65535] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s8 [80, 80] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s0 -> s2 [81, 65535] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s1 -> s1 [0, 64] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s2 [0, 64] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s1 -> s4 [65, 65] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s1 -> s5 [65, 65] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s6 [65, 65] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s1 -> s7 [65, 65] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s2 [66, 79] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s1 -> s1 [66, 65535] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s8 [80, 80] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s1 -> s2 [81, 65535] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s2 -> s2 [0, 64] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s2 -> s4 [65, 65] { R1954 += 1, R1876 += 1 };
  s2 -> s6 [65, 65] { R1954 += 1, R1876 += 1 };
  s2 -> s2 [66, 79] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s2 -> s2 [66, 65535] { R1954 += 1, R1876 += 1 };
  s2 -> s8 [80, 80] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s2 -> s2 [81, 65535] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s3 -> s1 [0, 64] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s2 [0, 64] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s3 -> s3 [0, 65535] { R1954 += 1, R1875 += 1, R1876 += 1 };
  s3 -> s4 [65, 65] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s3 -> s5 [65, 65] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s6 [65, 65] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s3 -> s7 [65, 65] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s2 [66, 79] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s3 -> s1 [66, 65535] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s8 [80, 80] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s3 -> s2 [81, 65535] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s4 -> s4 [0, 79] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s4 -> s4 [0, 65535] { R1954 += 1, R1876 += 1 };
  s4 -> s11 [80, 80] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s4 -> s4 [81, 65535] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s7 -> s4 [0, 79] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s7 -> s7 [0, 65535] { R1954 += 1, R1876 += 1, R1805 += 1, R1806 += 1 };
  s7 -> s11 [80, 80] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s7 -> s4 [81, 65535] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s8 -> s8 [0, 64] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s8 -> s9 [0, 64] { R1954 += 1, R1876 += 1 };
  s8 -> s10 [65, 65] { R1954 += 1, R1876 += 1 };
  s8 -> s11 [65, 65] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s8 -> s12 [65, 65] { R1954 += 1, R1876 += 1 };
  s8 -> s13 [65, 65] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s8 -> s8 [66, 65535] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s8 -> s9 [66, 65535] { R1954 += 1, R1876 += 1 };
  s9 -> s9 [0, 64] { R1954 += 1, R1876 += 1 };
  s9 -> s14 [0, 65535];
  s9 -> s9 [0, 65535] { R1954 += 1 };
  s9 -> s10 [65, 65] { R1954 += 1, R1876 += 1 };
  s9 -> s12 [65, 65] { R1954 += 1, R1876 += 1 };
  s9 -> s9 [66, 65535] { R1954 += 1, R1876 += 1 };
  s10 -> s10 [0, 65535] { R1954 += 1, R1876 += 1 };
  s10 -> s15 [0, 65535] { R1954 += 1 };
  s10 -> s14 [0, 65535];
  s11 -> s10 [0, 65535] { R1954 += 1, R1876 += 1 };
  s11 -> s11 [0, 65535] { R1954 += 1, R1876 += 1, R1806 += 1, R1807 += 1 };
  s12 -> s12 [0, 65535] { R1954 += 1 };
  s12 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  s15 -> s15 [0, 65535] { R1954 += 1 };
  s15 -> s14 [0, 65535];
  accepting s12, s9, s14, s15, s10;
};
};
constraint R2 = R1844 && R3 = R1954 && R21 = 0 && R22 = 1 && R23 = 0 && R24 = 1 && R406 + R405 = 0 && R1811 = 0 && R1812 = R1844 && R1813 = 0 && R1814 = R1844 && R1815 = 0 && R1816 = R1844 && R1817 = 0 && R1818 = R1844 && R1819 = 0 && R1820 = R1844 && R1821 = 0 && R1822 = R1844 && R1823 = 0 && R1824 = R1844 && R1825 = 0 && R1826 = R1844 && R1827 = 0 && R1828 = R1844 && R1829 = 0 && R1830 = R1844 && R1831 = 0 && R1832 = R1844 && R1833 = 0 && R1834 = R1844 && R1835 = 0 && R1836 = R1844 && R1837 = 0 && R1838 = R1844 && R1839 = 0 && R1840 = R1844 && R1841 = 0 && R1842 = R1844 && R1843 = 0 && R1847 = 0 && R1848 = 0 && R1871 = 0 && R1872 = 0 && R1875 = 0 && R1876 = 0 && R1877 = 10 && R1878 = R1954 && R1879 = 10 && R1880 = R1954 && R1881 = 10 && R1882 = R1954 && R1883 = 10 && R1884 = R1954 && R1885 = 10 && R1886 = R1954 && R1887 = 10 && R1888 = R1954 && R1889 = 10 && R1890 = R1954 && R1891 = 10 && R1892 = R1954 && R1893 = 10 && R1894 = R1954 && R1895 = 10 && R1896 = R1954 && R1897 = 10 && R1898 = R1954 && R1899 = 10 && R1900 = R1954 && R1901 = 10 && R1902 = R1954 && R1903 = 10 && R1904 = R1954 && R1905 = 10 && R1906 = R1954 && R1907 = 10 && R1908 = R1954 && R1909 = 10 && R1910 = R1954 && R1911 = 10 && R1912 = R1954 && R1913 = 10 && R1914 = R1954 && R1915 = 10 && R1916 = R1954 && R1917 = 10 && R1918 = R1954 && R1919 = 10 && R1920 = R1954 && R1921 = 10 && R1922 = R1954 && R1923 = 10 && R1924 = R1954 && R1925 = 10 && R1926 = R1954 && R1927 = 10 && R1928 = R1954 && R1929 = 10 && R1930 = R1954 && R1931 = 10 && R1932 = R1954 && R1933 = 10 && R1934 = R1954 && R1935 = 10 && R1936 = R1954 && R1937 = 10 && R1938 = R1954 && R1939 = 10 && R1940 = R1954 && R1941 = 10 && R1942 = R1954 && R1943 = 10 && R1944 = R1954 && R1945 = 10 && R1946 = R1954 && R1947 = 10 && R1948 = R1954 && R1949 = 10 && R1950 = R1954 && R1951 = 10 && R1952 = R1954 && R1953 = 10 && R436 + R433 + R1810 + R1807 != 0 && R11 < 1 && R12 < 1 && R408 + R407 < 1 && R410 + R409 < 1 && 0 < R1844 && 9 < R1954 && (R20 = 0 || (R1845 = 0 && R1846 = 0)) && (R20 = 0 || (R1849 = 0 && R1850 = 0)) && (R20 = 0 || (R1851 = 0 && R1852 = 0)) && (R20 = 0 || (R1853 = 0 && R1854 = 0)) && (R20 = 0 || (R1855 = 0 && R1856 = 0)) && (R20 = 0 || (R1857 = 0 && R1858 = 0)) && (R20 = 0 || (R1859 = 0 && R1860 = 0)) && (R20 = 0 || (R1861 = 0 && R1862 = 0)) && (R20 = 0 || (R1863 = 0 && R1864 = 0)) && (R20 = 0 || (R1865 = 0 && R1866 = 0)) && (R20 = 0 || (R1867 = 0 && R1868 = 0)) && (R20 = 0 || (R1869 = 0 && R1870 = 0)) && (R20 = 0 || (R1873 = 0 && R1874 = 0)) && (R416 + R413 = 0 || (R414 + R411 = 0 && R415 + R412 = 0)) && (R426 + R423 = 0 || (R419 + R417 = 0 && R420 + R418 = 0)) && (R426 + R423 = 0 || (R424 + R421 = 0 && R425 + R422 = 0)) && (R426 + R423 = 0 || (R429 + R427 = 0 && R430 + R428 = 0)) && (R426 + R423 = 0 || (R434 + R431 = 0 && R435 + R432 = 0)) && (R442 + R439 = 0 || (R440 + R437 = 0 && R441 + R438 = 0)) && (R1204 + R1201 = 0 || (R1202 + R1199 = 0 && R1203 + R1200 = 0)) && (R1204 + R1201 = 0 || (R1808 + R1805 = 0 && R1809 + R1806 = 0));
// End of Parikh automata intersection problem
