// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R17, R2, R20, R21, R22, R2273, R2274, R2275, R2276, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R3729, R3730, R3731, R3732, R3733, R3734, R3735, R3736, R3737, R3738, R3739, R3740, R3741, R3742, R3743, R3744, R3745, R3746, R3747, R3748, R3749, R3750, R3751, R3752, R3753, R3754, R3755, R3756, R3757, R3758, R3759, R3760, R3761, R3762, R3763, R3764, R3765, R3766, R3767, R3768, R3769, R3770, R3771, R3772, R3773, R3774, R3775, R3776, R3777, R3778, R3779, R3780, R3781, R3782, R3783, R3784, R3785, R3786, R3787, R3788, R3789, R3790, R3791, R3792, R3793, R3794, R3795, R3796, R3797, R3798, R3799, R38, R3800, R3801, R3802, R3803, R3804, R3805, R3806, R3807, R3808, R3809, R3810, R3811, R3812, R3813, R3814, R3815, R3816, R3817, R3818, R3819, R3820, R3821, R3822, R3823, R3824, R3825, R3826, R3827, R3828, R3829, R3830, R3831, R3832, R3833, R3834, R3835, R3836, R3837, R3838, R3839, R3840, R3841, R3842, R3843, R3844, R3845, R3846, R3847, R3848, R3849, R3850, R3851, R3852, R3853, R3854, R3855, R3856, R3857, R3858, R3859, R3860, R3861, R3862, R3863, R3864, R3865, R3866, R3867, R3868, R3869, R3870, R3871, R3872, R3873, R3874, R3875, R3876, R3877, R3878, R3879, R3880, R3881, R3882, R3883, R3884, R3885, R3886, R3887, R3888, R3889, R3890, R3891, R3892, R3893, R3894, R3895, R3896, R3897, R3898, R3899, R3900, R3901, R3902, R3903, R3904, R3905, R3906, R3907, R3908, R3909, R3910, R3911, R3912, R3913, R3914, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R3840 += 1 };
  s0 -> s0 [0, 65535] { R3839 += 1, R3840 += 1 };
  s0 -> s2 [66, 66] { R3840 += 1 };
  s0 -> s1 [67, 65535] { R3840 += 1 };
  s1 -> s1 [0, 64] { R3840 += 1 };
  s1 -> s2 [66, 66] { R3840 += 1 };
  s1 -> s1 [67, 65535] { R3840 += 1 };
  s2 -> s2 [0, 64] { R3840 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R3840 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3841 += 1, R3842 += 1 };
  s0 -> s1 [0, 65535] { R3842 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R3842 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R3844 += 1 };
  s0 -> s2 [0, 65535] { R3844 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R3843 += 1, R3844 += 1 };
  s0 -> s3 [66, 66] { R3844 += 1 };
  s0 -> s1 [67, 65535] { R3844 += 1 };
  s1 -> s1 [0, 65] { R3844 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R3844 += 1 };
  s1 -> s1 [67, 65535] { R3844 += 1 };
  s2 -> s1 [0, 65] { R3844 += 1 };
  s2 -> s2 [0, 65535] { R3844 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R3844 += 1 };
  s2 -> s1 [67, 65535] { R3844 += 1 };
  s3 -> s3 [0, 65535] { R3844 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R3846 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R3846 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R3845 += 1, R3846 += 1 };
  s0 -> s3 [9, 13] { R3846 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R3846 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R3846 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R3846 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R3846 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3846 += 1 };
  s2 -> s1 [0, 8] { R3846 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3846 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R3846 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R3846 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R3846 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R3846 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R3846 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3846 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R3848 += 1, R26 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R3848 += 1, R25 += 1, R26 += 1 };
  s0 -> s0 [0, 65535] { R3847 += 1, R3848 += 1 };
  s1 -> s1 [0, 65535] { R3848 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R3848 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3848 += 1, R26 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R3848 += 1, R25 += 1, R26 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3848 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R3850 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R3849 += 1, R3850 += 1 };
  s0 -> s2 [0, 65535] { R3850 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R3850 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R3850 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R3850 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R3850 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3850 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R3850 += 1 };
  s2 -> s1 [0, 8] { R3850 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3850 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R3850 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R3850 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R3850 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R3850 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R3850 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3850 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R3852 += 1, R29 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R3852 += 1, R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R3851 += 1, R3852 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3852 += 1, R29 += 1, R30 += 1 };
  s1 -> s2 [0, 65535] { R3852 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R3852 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3852 += 1, R30 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R3852 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s0 [0, 65535] { R3853 += 1, R3854 += 1 };
  s0 -> s1 [0, 65535] { R3854 += 1, R3759 += 1, R3760 += 1 };
  s0 -> s2 [0, 65535] { R3854 += 1, R3760 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R3854 += 1, R3759 += 1, R3760 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R3854 += 1, R3760 += 1, R22 += 1 };
  s2 -> s3 [0, 65535] { R3854 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3854 += 1, R3760 += 1, R22 += 1 };
  s3 -> s3 [0, 65535] { R3854 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R3856 += 1, R3762 += 1 };
  s0 -> s2 [0, 65535] { R3856 += 1, R3761 += 1, R3762 += 1 };
  s0 -> s0 [0, 65535] { R3855 += 1, R3856 += 1 };
  s0 -> s3 [66, 66] { R3856 += 1, R3762 += 1 };
  s0 -> s4 [66, 66] { R3856 += 1, R3762 += 1 };
  s0 -> s1 [71, 65535] { R3856 += 1, R3762 += 1 };
  s1 -> s1 [0, 65] { R3856 += 1, R3762 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3856 += 1 };
  s1 -> s3 [66, 66] { R3856 += 1, R3762 += 1 };
  s1 -> s4 [66, 66] { R3856 += 1, R3762 += 1 };
  s1 -> s1 [71, 65535] { R3856 += 1, R3762 += 1 };
  s2 -> s1 [0, 65] { R3856 += 1, R3762 += 1 };
  s2 -> s2 [0, 65535] { R3856 += 1, R3761 += 1, R3762 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R3856 += 1, R3762 += 1 };
  s2 -> s4 [66, 66] { R3856 += 1, R3762 += 1 };
  s2 -> s1 [71, 65535] { R3856 += 1, R3762 += 1 };
  s3 -> s3 [0, 66] { R3856 += 1, R3762 += 1 };
  s3 -> s3 [0, 65535] { R3856 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [71, 65535] { R3856 += 1, R3762 += 1 };
  s4 -> s4 [0, 65535] { R3856 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R3858 += 1, R3764 += 1, R49 += 1 };
  s0 -> s0 [0, 65535] { R3857 += 1, R3858 += 1 };
  s0 -> s2 [0, 65535] { R3858 += 1, R3763 += 1, R3764 += 1 };
  s0 -> s3 [66, 66] { R3858 += 1, R3764 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R3858 += 1, R3764 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R3858 += 1, R3764 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R3858 += 1, R3764 += 1, R49 += 1 };
  s1 -> s1 [0, 65535] { R3858 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R3858 += 1, R3764 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R3858 += 1, R3764 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R3858 += 1, R3764 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R3858 += 1, R3764 += 1, R49 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3858 += 1, R3763 += 1, R3764 += 1 };
  s2 -> s3 [66, 66] { R3858 += 1, R3764 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R3858 += 1, R3764 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R3858 += 1, R3764 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R3858 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3858 += 1, R3764 += 1, R49 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3858 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3858 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R3860 += 1, R3766 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R3860 += 1, R3765 += 1, R3766 += 1 };
  s0 -> s0 [0, 65535] { R3859 += 1, R3860 += 1 };
  s0 -> s3 [66, 66] { R3860 += 1, R3766 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R3860 += 1, R3766 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R3860 += 1, R3766 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R3860 += 1, R3766 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R3860 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R3860 += 1, R3766 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R3860 += 1, R3766 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R3860 += 1, R3766 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R3860 += 1, R3766 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R3860 += 1, R3765 += 1, R3766 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R3860 += 1, R3766 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R3860 += 1, R3766 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R3860 += 1, R3766 += 1, R51 += 1 };
  s3 -> s6 [0, 65535] { R3860 += 1 };
  s3 -> s3 [0, 65535] { R3860 += 1, R3766 += 1, R51 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3860 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3860 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R3861 += 1, R3862 += 1 };
  s0 -> s2 [0, 65535] { R3862 += 1, R3767 += 1, R3768 += 1 };
  s0 -> s3 [66, 66] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3862 += 1 };
  s1 -> s3 [66, 66] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R3862 += 1, R3767 += 1, R3768 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s3 -> s6 [0, 65535] { R3862 += 1 };
  s3 -> s3 [0, 65535] { R3862 += 1, R3768 += 1, R53 += 1, R54 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3862 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3862 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s0 -> s2 [0, 65535] { R3864 += 1, R3769 += 1, R3770 += 1 };
  s0 -> s0 [0, 65535] { R3863 += 1, R3864 += 1 };
  s0 -> s3 [66, 66] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3864 += 1 };
  s1 -> s3 [66, 66] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3864 += 1, R3769 += 1, R3770 += 1 };
  s2 -> s3 [66, 66] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3864 += 1, R3770 += 1, R57 += 1, R58 += 1 };
  s3 -> s6 [0, 65535] { R3864 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3864 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3864 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s0 -> s2 [0, 65535] { R3866 += 1, R3771 += 1, R3772 += 1 };
  s0 -> s0 [0, 65535] { R3865 += 1, R3866 += 1 };
  s0 -> s3 [66, 66] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3866 += 1 };
  s1 -> s3 [66, 66] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R3866 += 1, R3771 += 1, R3772 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3866 += 1, R3772 += 1, R63 += 1, R64 += 1 };
  s3 -> s6 [0, 65535] { R3866 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3866 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3866 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R3868 += 1, R3773 += 1, R3774 += 1 };
  s0 -> s0 [0, 65535] { R3867 += 1, R3868 += 1 };
  s0 -> s3 [66, 66] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R3868 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R3868 += 1, R3773 += 1, R3774 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R3868 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3868 += 1 };
  s4 -> s4 [0, 65535] { R3868 += 1, R3774 += 1, R67 += 1, R68 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3868 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R3869 += 1, R3870 += 1 };
  s0 -> s2 [0, 65535] { R3870 += 1, R3775 += 1, R3776 += 1 };
  s0 -> s3 [66, 66] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535] { R3870 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3870 += 1, R3775 += 1, R3776 += 1 };
  s2 -> s3 [66, 66] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R3870 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3870 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3870 += 1, R3776 += 1, R73 += 1, R74 += 1 };
  s5 -> s5 [0, 65535] { R3870 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R3872 += 1, R3796 += 1 };
  s0 -> s0 [0, 65535] { R3871 += 1, R3872 += 1 };
  s0 -> s2 [0, 65535] { R3872 += 1, R3795 += 1, R3796 += 1 };
  s0 -> s3 [66, 66] { R3872 += 1, R3796 += 1 };
  s0 -> s1 [67, 65535] { R3872 += 1, R3796 += 1 };
  s1 -> s1 [0, 65] { R3872 += 1, R3796 += 1 };
  s1 -> s3 [66, 66] { R3872 += 1, R3796 += 1 };
  s1 -> s1 [67, 65535] { R3872 += 1, R3796 += 1 };
  s2 -> s1 [0, 65] { R3872 += 1, R3796 += 1 };
  s2 -> s2 [0, 65535] { R3872 += 1, R3795 += 1, R3796 += 1 };
  s2 -> s3 [66, 66] { R3872 += 1, R3796 += 1 };
  s2 -> s1 [67, 65535] { R3872 += 1, R3796 += 1 };
  s3 -> s3 [0, 65535] { R3872 += 1, R3796 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3872 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3872 += 1 };
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s0 [0, 65535] { R3873 += 1, R3874 += 1 };
  s0 -> s1 [0, 65535] { R3874 += 1, R3798 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R3874 += 1, R3797 += 1, R3798 += 1 };
  s1 -> s4 [0, 65535] { R3874 += 1 };
  s1 -> s1 [0, 65535] { R3874 += 1, R3798 += 1, R1 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3874 += 1, R3798 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R3874 += 1, R3797 += 1, R3798 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3874 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R3876 += 1, R3800 += 1 };
  s0 -> s0 [0, 65535] { R3875 += 1, R3876 += 1 };
  s0 -> s2 [0, 65535] { R3876 += 1, R3800 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R3876 += 1, R3799 += 1, R3800 += 1 };
  s0 -> s4 [66, 66] { R3876 += 1, R3800 += 1 };
  s0 -> s1 [67, 65535] { R3876 += 1, R3800 += 1 };
  s1 -> s1 [0, 65] { R3876 += 1, R3800 += 1 };
  s1 -> s1 [0, 65535] { R3876 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [66, 66] { R3876 += 1, R3800 += 1 };
  s1 -> s1 [67, 65535] { R3876 += 1, R3800 += 1 };
  s2 -> s1 [0, 65] { R3876 += 1, R3800 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3876 += 1, R3800 += 1, R11 += 1 };
  s2 -> s6 [0, 65535] { R3876 += 1 };
  s2 -> s4 [66, 66] { R3876 += 1, R3800 += 1 };
  s2 -> s1 [67, 65535] { R3876 += 1, R3800 += 1 };
  s3 -> s1 [0, 65] { R3876 += 1, R3800 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3876 += 1, R3800 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R3876 += 1, R3799 += 1, R3800 += 1 };
  s3 -> s4 [66, 66] { R3876 += 1, R3800 += 1 };
  s3 -> s1 [67, 65535] { R3876 += 1, R3800 += 1 };
  s4 -> s4 [0, 65535] { R3876 += 1, R3800 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3876 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R3878 += 1, R3802 += 1, R3740 += 1 };
  s0 -> s2 [0, 65535] { R3878 += 1, R3801 += 1, R3802 += 1 };
  s0 -> s3 [0, 65535] { R3878 += 1, R3802 += 1, R3739 += 1, R3740 += 1 };
  s0 -> s0 [0, 65535] { R3877 += 1, R3878 += 1 };
  s0 -> s1 [67, 65535] { R3878 += 1, R3802 += 1, R3740 += 1 };
  s1 -> s1 [0, 65] { R3878 += 1, R3802 += 1, R3740 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3878 += 1, R3802 += 1 };
  s1 -> s5 [0, 65535] { R3878 += 1 };
  s1 -> s1 [67, 65535] { R3878 += 1, R3802 += 1, R3740 += 1 };
  s2 -> s1 [0, 65] { R3878 += 1, R3802 += 1, R3740 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3878 += 1, R3801 += 1, R3802 += 1 };
  s2 -> s3 [0, 65535] { R3878 += 1, R3802 += 1, R3739 += 1, R3740 += 1 };
  s2 -> s1 [67, 65535] { R3878 += 1, R3802 += 1, R3740 += 1 };
  s3 -> s1 [0, 65] { R3878 += 1, R3802 += 1, R3740 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3878 += 1 };
  s3 -> s3 [0, 65535] { R3878 += 1, R3802 += 1, R3739 += 1, R3740 += 1 };
  s3 -> s1 [67, 65535] { R3878 += 1, R3802 += 1, R3740 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3878 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s0 [0, 65535] { R3879 += 1, R3880 += 1 };
  s0 -> s1 [0, 65535] { R3880 += 1, R3803 += 1, R3804 += 1 };
  s0 -> s2 [0, 65535] { R3880 += 1, R3804 += 1, R3742 += 1, R20 += 1 };
  s0 -> s3 [0, 65535] { R3880 += 1, R3804 += 1, R3741 += 1, R3742 += 1 };
  s1 -> s1 [0, 65535] { R3880 += 1, R3803 += 1, R3804 += 1 };
  s1 -> s2 [0, 65535] { R3880 += 1, R3804 += 1, R3742 += 1, R20 += 1 };
  s1 -> s3 [0, 65535] { R3880 += 1, R3804 += 1, R3741 += 1, R3742 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3880 += 1, R3804 += 1 };
  s2 -> s2 [0, 65535] { R3880 += 1, R3804 += 1, R3742 += 1, R20 += 1 };
  s2 -> s4 [0, 65535] { R3880 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3880 += 1, R3804 += 1, R3742 += 1, R20 += 1 };
  s3 -> s4 [0, 65535] { R3880 += 1 };
  s3 -> s3 [0, 65535] { R3880 += 1, R3804 += 1, R3741 += 1, R3742 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3880 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3880 += 1, R3804 += 1 };
  s6 -> s4 [0, 65535] { R3880 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R3882 += 1, R3806 += 1, R3744 += 1 };
  s0 -> s2 [0, 65535] { R3882 += 1, R3806 += 1, R3743 += 1, R3744 += 1 };
  s0 -> s0 [0, 65535] { R3881 += 1, R3882 += 1 };
  s0 -> s3 [0, 65535] { R3882 += 1, R3805 += 1, R3806 += 1 };
  s0 -> s1 [70, 65535] { R3882 += 1, R3806 += 1, R3744 += 1 };
  s1 -> s1 [0, 66] { R3882 += 1, R3806 += 1, R3744 += 1 };
  s1 -> s1 [0, 65535] { R3882 += 1, R3806 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3882 += 1 };
  s1 -> s1 [70, 65535] { R3882 += 1, R3806 += 1, R3744 += 1 };
  s2 -> s1 [0, 66] { R3882 += 1, R3806 += 1, R3744 += 1 };
  s2 -> s2 [0, 65535] { R3882 += 1, R3806 += 1, R3743 += 1, R3744 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3882 += 1 };
  s2 -> s1 [70, 65535] { R3882 += 1, R3806 += 1, R3744 += 1 };
  s3 -> s1 [0, 66] { R3882 += 1, R3806 += 1, R3744 += 1 };
  s3 -> s2 [0, 65535] { R3882 += 1, R3806 += 1, R3743 += 1, R3744 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3882 += 1, R3805 += 1, R3806 += 1 };
  s3 -> s1 [70, 65535] { R3882 += 1, R3806 += 1, R3744 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3882 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R3883 += 1, R3884 += 1 };
  s0 -> s1 [0, 65535] { R3884 += 1, R3807 += 1, R3808 += 1 };
  s0 -> s2 [0, 65535] { R3884 += 1, R3808 += 1, R3745 += 1, R3746 += 1 };
  s0 -> s3 [0, 65535] { R3884 += 1, R3808 += 1, R3746 += 1, R78 += 1 };
  s1 -> s1 [0, 65535] { R3884 += 1, R3807 += 1, R3808 += 1 };
  s1 -> s2 [0, 65535] { R3884 += 1, R3808 += 1, R3745 += 1, R3746 += 1 };
  s1 -> s3 [0, 65535] { R3884 += 1, R3808 += 1, R3746 += 1, R78 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s5 [0, 65535] { R3884 += 1 };
  s2 -> s2 [0, 65535] { R3884 += 1, R3808 += 1, R3745 += 1, R3746 += 1 };
  s2 -> s3 [0, 65535] { R3884 += 1, R3808 += 1, R3746 += 1, R78 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R3884 += 1, R3808 += 1 };
  s3 -> s5 [0, 65535] { R3884 += 1 };
  s3 -> s3 [0, 65535] { R3884 += 1, R3808 += 1, R3746 += 1, R78 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3884 += 1, R3808 += 1 };
  s4 -> s5 [0, 65535] { R3884 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3884 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s0 -> s2 [0, 65535] { R3886 += 1, R3810 += 1, R3748 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R3885 += 1, R3886 += 1 };
  s0 -> s3 [0, 65535] { R3886 += 1, R3810 += 1, R3747 += 1, R3748 += 1 };
  s0 -> s4 [0, 65535] { R3886 += 1, R3809 += 1, R3810 += 1 };
  s0 -> s1 [71, 65535] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s1 -> s1 [0, 69] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s1 -> s6 [0, 65535] { R3886 += 1 };
  s1 -> s1 [0, 65535] { R3886 += 1, R3810 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [71, 65535] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s2 -> s1 [0, 69] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s2 -> s6 [0, 65535] { R3886 += 1 };
  s2 -> s2 [0, 65535] { R3886 += 1, R3810 += 1, R3748 += 1, R80 += 1 };
  s2 -> s7 [0, 65535] { R3886 += 1, R3810 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [71, 65535] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s3 -> s1 [0, 69] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s3 -> s6 [0, 65535] { R3886 += 1 };
  s3 -> s2 [0, 65535] { R3886 += 1, R3810 += 1, R3748 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R3886 += 1, R3810 += 1, R3747 += 1, R3748 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [71, 65535] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s4 -> s1 [0, 69] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s4 -> s2 [0, 65535] { R3886 += 1, R3810 += 1, R3748 += 1, R80 += 1 };
  s4 -> s3 [0, 65535] { R3886 += 1, R3810 += 1, R3747 += 1, R3748 += 1 };
  s4 -> s4 [0, 65535] { R3886 += 1, R3809 += 1, R3810 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [71, 65535] { R3886 += 1, R3810 += 1, R3748 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3886 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3886 += 1 };
  s7 -> s7 [0, 65535] { R3886 += 1, R3810 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R3888 += 1, R3811 += 1, R3812 += 1 };
  s0 -> s0 [0, 65535] { R3887 += 1, R3888 += 1 };
  s0 -> s3 [0, 65535] { R3888 += 1, R3812 += 1, R3749 += 1, R3750 += 1 };
  s0 -> s4 [0, 65535] { R3888 += 1, R3812 += 1, R3750 += 1, R83 += 1, R84 += 1 };
  s0 -> s1 [71, 65535] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s1 -> s5 [0, 65535] { R3888 += 1, R3812 += 1 };
  s1 -> s6 [0, 65535] { R3888 += 1 };
  s1 -> s1 [0, 65535] { R3888 += 1, R3812 += 1, R3750 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [71, 65535] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R3888 += 1, R3811 += 1, R3812 += 1 };
  s2 -> s3 [0, 65535] { R3888 += 1, R3812 += 1, R3749 += 1, R3750 += 1 };
  s2 -> s4 [0, 65535] { R3888 += 1, R3812 += 1, R3750 += 1, R83 += 1, R84 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [71, 65535] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s3 -> s6 [0, 65535] { R3888 += 1 };
  s3 -> s3 [0, 65535] { R3888 += 1, R3812 += 1, R3749 += 1, R3750 += 1 };
  s3 -> s4 [0, 65535] { R3888 += 1, R3812 += 1, R3750 += 1, R83 += 1, R84 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [71, 65535] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s4 -> s5 [0, 65535] { R3888 += 1, R3812 += 1 };
  s4 -> s6 [0, 65535] { R3888 += 1 };
  s4 -> s4 [0, 65535] { R3888 += 1, R3812 += 1, R3750 += 1, R83 += 1, R84 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [71, 65535] { R3888 += 1, R3812 += 1, R3750 += 1, R84 += 1 };
  s5 -> s5 [0, 65535] { R3888 += 1, R3812 += 1 };
  s5 -> s6 [0, 65535] { R3888 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3888 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R3890 += 1, R3814 += 1, R3751 += 1, R3752 += 1 };
  s0 -> s0 [0, 65535] { R3889 += 1, R3890 += 1 };
  s0 -> s2 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1, R89 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1, R88 += 1, R89 += 1 };
  s0 -> s4 [0, 65535] { R3890 += 1, R3813 += 1, R3814 += 1 };
  s1 -> s1 [0, 65535] { R3890 += 1, R3814 += 1, R3751 += 1, R3752 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1, R89 += 1, R90 += 1 };
  s1 -> s3 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1, R88 += 1, R89 += 1 };
  s1 -> s7 [0, 65535] { R3890 += 1 };
  s2 -> s6 [0, 65535] { R3890 += 1, R3814 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1, R89 += 1, R90 += 1 };
  s2 -> s8 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1 };
  s2 -> s7 [0, 65535] { R3890 += 1 };
  s3 -> s6 [0, 65535] { R3890 += 1, R3814 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1, R89 += 1, R90 += 1 };
  s3 -> s3 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1, R88 += 1, R89 += 1 };
  s3 -> s7 [0, 65535] { R3890 += 1 };
  s4 -> s1 [0, 65535] { R3890 += 1, R3814 += 1, R3751 += 1, R3752 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1, R89 += 1, R90 += 1 };
  s4 -> s3 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1, R88 += 1, R89 += 1 };
  s4 -> s4 [0, 65535] { R3890 += 1, R3813 += 1, R3814 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3890 += 1, R3814 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R3890 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3890 += 1 };
  s8 -> s6 [0, 65535] { R3890 += 1, R3814 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R3890 += 1, R3814 += 1, R3752 += 1 };
  s8 -> s7 [0, 65535] { R3890 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s0 -> s2 [0, 65535] { R3892 += 1, R3816 += 1, R3753 += 1, R3754 += 1 };
  s0 -> s3 [0, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2275 += 1, R2276 += 1 };
  s0 -> s0 [0, 65535] { R3891 += 1, R3892 += 1 };
  s0 -> s4 [0, 65535] { R3892 += 1, R3815 += 1, R3816 += 1 };
  s0 -> s5 [75, 75] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s0 -> s1 [76, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s1 -> s1 [0, 70] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s1 -> s5 [75, 75] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s1 -> s1 [76, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s2 -> s1 [0, 70] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s2 -> s2 [0, 65535] { R3892 += 1, R3816 += 1, R3753 += 1, R3754 += 1 };
  s2 -> s3 [0, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2275 += 1, R2276 += 1 };
  s2 -> s5 [75, 75] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s2 -> s1 [76, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s3 -> s1 [0, 70] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s3 -> s3 [0, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2275 += 1, R2276 += 1 };
  s3 -> s5 [75, 75] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s3 -> s1 [76, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s4 -> s1 [0, 70] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s4 -> s2 [0, 65535] { R3892 += 1, R3816 += 1, R3753 += 1, R3754 += 1 };
  s4 -> s3 [0, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2275 += 1, R2276 += 1 };
  s4 -> s4 [0, 65535] { R3892 += 1, R3815 += 1, R3816 += 1 };
  s4 -> s5 [75, 75] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s4 -> s1 [76, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s5 -> s5 [0, 70] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s5 -> s6 [0, 65535] { R3892 += 1, R3816 += 1 };
  s5 -> s7 [0, 65535] { R3892 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R3892 += 1, R3816 += 1, R3754 += 1 };
  s5 -> s5 [75, 65535] { R3892 += 1, R3816 += 1, R3754 += 1, R2276 += 1 };
  s6 -> s6 [0, 65535] { R3892 += 1, R3816 += 1 };
  s6 -> s7 [0, 65535] { R3892 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3892 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R3894 += 1, R3818 += 1, R3755 += 1, R3756 += 1 };
  s0 -> s2 [0, 65535] { R3894 += 1, R3818 += 1, R3756 += 1 };
  s0 -> s0 [0, 65535] { R3893 += 1, R3894 += 1 };
  s0 -> s3 [0, 65535] { R3894 += 1, R3817 += 1, R3818 += 1 };
  s1 -> s1 [0, 65535] { R3894 += 1, R3818 += 1, R3755 += 1, R3756 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R3894 += 1, R3818 += 1, R3756 += 1 };
  s1 -> s6 [0, 65535] { R3894 += 1 };
  s2 -> s5 [0, 65535] { R3894 += 1, R3818 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3894 += 1, R3818 += 1, R3756 += 1 };
  s2 -> s6 [0, 65535] { R3894 += 1 };
  s3 -> s1 [0, 65535] { R3894 += 1, R3818 += 1, R3755 += 1, R3756 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R3894 += 1, R3818 += 1, R3756 += 1 };
  s3 -> s3 [0, 65535] { R3894 += 1, R3817 += 1, R3818 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3894 += 1, R3818 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R3894 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3894 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s0 -> s2 [0, 65535] { R3896 += 1, R3820 += 1, R3757 += 1, R3758 += 1 };
  s0 -> s0 [0, 65535] { R3895 += 1, R3896 += 1 };
  s0 -> s3 [0, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3737 += 1, R3738 += 1 };
  s0 -> s4 [0, 65535] { R3896 += 1, R3819 += 1, R3820 += 1 };
  s0 -> s5 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s0 -> s6 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s0 -> s1 [76, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s1 -> s1 [0, 69] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s1 -> s7 [0, 65535] { R3896 += 1 };
  s1 -> s1 [0, 65535] { R3896 += 1, R3820 += 1, R3758 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R3896 += 1, R3820 += 1 };
  s1 -> s5 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s1 -> s6 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s1 -> s1 [76, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s2 -> s1 [0, 69] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s2 -> s7 [0, 65535] { R3896 += 1 };
  s2 -> s2 [0, 65535] { R3896 += 1, R3820 += 1, R3757 += 1, R3758 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s3 [0, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3737 += 1, R3738 += 1 };
  s2 -> s5 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s2 -> s6 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s2 -> s1 [76, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s3 -> s1 [0, 69] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s3 -> s7 [0, 65535] { R3896 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3737 += 1, R3738 += 1 };
  s3 -> s9 [0, 65535] { R3896 += 1, R3820 += 1 };
  s3 -> s5 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s3 -> s6 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s3 -> s1 [76, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s4 -> s1 [0, 69] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s4 -> s2 [0, 65535] { R3896 += 1, R3820 += 1, R3757 += 1, R3758 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s3 [0, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3737 += 1, R3738 += 1 };
  s4 -> s4 [0, 65535] { R3896 += 1, R3819 += 1, R3820 += 1 };
  s4 -> s5 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s4 -> s6 [70, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s4 -> s1 [76, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s5 -> s7 [0, 65535] { R3896 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R3896 += 1, R3820 += 1, R3758 += 1 };
  s5 -> s9 [0, 65535] { R3896 += 1, R3820 += 1 };
  s6 -> s6 [0, 70] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s6 -> s7 [0, 65535] { R3896 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3896 += 1, R3820 += 1, R3758 += 1 };
  s6 -> s9 [0, 65535] { R3896 += 1, R3820 += 1 };
  s6 -> s6 [76, 65535] { R3896 += 1, R3820 += 1, R3758 += 1, R3738 += 1 };
  s7 -> s7 [0, 65535] { R3896 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R3896 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3896 += 1, R3820 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R3897 += 1, R3898 += 1 };
  s0 -> s1 [0, 65535] { R3898 += 1, R3821 += 1, R3822 += 1 };
  s0 -> s2 [0, 65535] { R3898 += 1, R3822 += 1, R3777 += 1, R3778 += 1 };
  s0 -> s3 [0, 65535] { R3898 += 1, R3822 += 1, R3778 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R3898 += 1, R3821 += 1, R3822 += 1 };
  s1 -> s2 [0, 65535] { R3898 += 1, R3822 += 1, R3777 += 1, R3778 += 1 };
  s1 -> s3 [0, 65535] { R3898 += 1, R3822 += 1, R3778 += 1, R21 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3898 += 1, R3822 += 1, R3777 += 1, R3778 += 1 };
  s2 -> s3 [0, 65535] { R3898 += 1, R3822 += 1, R3778 += 1, R21 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3898 += 1 };
  s3 -> s4 [0, 65535] { R3898 += 1, R3822 += 1 };
  s3 -> s3 [0, 65535] { R3898 += 1, R3822 += 1, R3778 += 1, R21 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3898 += 1 };
  s4 -> s4 [0, 65535] { R3898 += 1, R3822 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3898 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3898 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s0 -> s0 [0, 65535] { R3899 += 1, R3900 += 1 };
  s0 -> s2 [0, 65535] { R3900 += 1, R3824 += 1, R3779 += 1, R3780 += 1 };
  s0 -> s3 [0, 65535] { R3900 += 1, R3823 += 1, R3824 += 1 };
  s0 -> s4 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s0 -> s5 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s0 -> s6 [70, 70] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s0 -> s1 [71, 65535] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s1 -> s1 [0, 65] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s1 -> s4 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s1 -> s5 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s1 -> s6 [70, 70] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s1 -> s1 [71, 65535] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s2 -> s1 [0, 65] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s2 -> s2 [0, 65535] { R3900 += 1, R3824 += 1, R3779 += 1, R3780 += 1 };
  s2 -> s4 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s2 -> s5 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s2 -> s6 [70, 70] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s2 -> s1 [71, 65535] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s3 -> s1 [0, 65] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s3 -> s2 [0, 65535] { R3900 += 1, R3824 += 1, R3779 += 1, R3780 += 1 };
  s3 -> s3 [0, 65535] { R3900 += 1, R3823 += 1, R3824 += 1 };
  s3 -> s4 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s3 -> s5 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s3 -> s6 [70, 70] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s3 -> s1 [71, 65535] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s4 -> s4 [0, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s4 -> s9 [70, 70] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s4 -> s4 [71, 65535] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s6 -> s6 [0, 65] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s6 -> s7 [0, 65535] { R3900 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3900 += 1, R3824 += 1 };
  s6 -> s9 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s6 -> s10 [66, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s6 -> s6 [70, 65535] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s7 -> s7 [0, 65535] { R3900 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 66] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s9 -> s9 [0, 65535] { R3900 += 1, R3824 += 1 };
  s9 -> s7 [0, 65535] { R3900 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [70, 65535] { R3900 += 1, R3824 += 1, R3780 += 1 };
  s10 -> s7 [0, 65535] { R3900 += 1 };
  s10 -> s10 [0, 65535] { R3900 += 1, R3824 += 1 };
  s10 -> s8 [0, 65535];
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R3902 += 1, R3825 += 1, R3826 += 1 };
  s0 -> s3 [0, 65535] { R3902 += 1, R3826 += 1, R3781 += 1, R3782 += 1 };
  s0 -> s0 [0, 65535] { R3901 += 1, R3902 += 1 };
  s0 -> s4 [66, 66] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s1 -> s1 [0, 65535] { R3902 += 1, R3826 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3902 += 1 };
  s1 -> s4 [66, 66] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3902 += 1, R3825 += 1, R3826 += 1 };
  s2 -> s3 [0, 65535] { R3902 += 1, R3826 += 1, R3781 += 1, R3782 += 1 };
  s2 -> s4 [66, 66] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3902 += 1, R3826 += 1, R3781 += 1, R3782 += 1 };
  s3 -> s7 [0, 65535] { R3902 += 1 };
  s3 -> s4 [66, 66] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3902 += 1, R3826 += 1, R3782 += 1, R77 += 1 };
  s4 -> s7 [0, 65535] { R3902 += 1 };
  s4 -> s8 [0, 65535] { R3902 += 1, R3826 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3902 += 1, R3826 += 1 };
  s5 -> s7 [0, 65535] { R3902 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3902 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3902 += 1 };
  s8 -> s8 [0, 65535] { R3902 += 1, R3826 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s0 -> s0 [0, 65535] { R3903 += 1, R3904 += 1 };
  s0 -> s2 [0, 65535] { R3904 += 1, R3827 += 1, R3828 += 1 };
  s0 -> s3 [0, 65535] { R3904 += 1, R3828 += 1, R3783 += 1, R3784 += 1 };
  s0 -> s4 [66, 66] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s1 -> s6 [0, 65535] { R3904 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3904 += 1, R3828 += 1 };
  s1 -> s4 [66, 66] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3904 += 1, R3827 += 1, R3828 += 1 };
  s2 -> s3 [0, 65535] { R3904 += 1, R3828 += 1, R3783 += 1, R3784 += 1 };
  s2 -> s4 [66, 66] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s3 -> s6 [0, 65535] { R3904 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3904 += 1, R3828 += 1, R3783 += 1, R3784 += 1 };
  s3 -> s4 [66, 66] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R3904 += 1, R3828 += 1 };
  s4 -> s6 [0, 65535] { R3904 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R3904 += 1 };
  s5 -> s5 [0, 65535] { R3904 += 1, R3828 += 1, R3784 += 1, R79 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3904 += 1, R3828 += 1 };
  s6 -> s6 [0, 65535] { R3904 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3904 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3904 += 1, R3828 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R3906 += 1, R3829 += 1, R3830 += 1 };
  s0 -> s0 [0, 65535] { R3905 += 1, R3906 += 1 };
  s0 -> s3 [0, 65535] { R3906 += 1, R3830 += 1, R3785 += 1, R3786 += 1 };
  s0 -> s4 [66, 66] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s1 -> s6 [0, 65535] { R3906 += 1 };
  s1 -> s1 [0, 65535] { R3906 += 1, R3830 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R3906 += 1, R3829 += 1, R3830 += 1 };
  s2 -> s3 [0, 65535] { R3906 += 1, R3830 += 1, R3785 += 1, R3786 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535] { R3906 += 1 };
  s3 -> s3 [0, 65535] { R3906 += 1, R3830 += 1, R3785 += 1, R3786 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s4 -> s6 [0, 65535] { R3906 += 1 };
  s4 -> s4 [0, 65535] { R3906 += 1, R3830 += 1, R3786 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R3906 += 1, R3830 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R3906 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3906 += 1, R3830 += 1 };
  s6 -> s6 [0, 65535] { R3906 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3906 += 1 };
  s8 -> s8 [0, 65535] { R3906 += 1, R3830 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R3907 += 1, R3908 += 1 };
  s0 -> s2 [0, 65535] { R3908 += 1, R3831 += 1, R3832 += 1 };
  s0 -> s3 [0, 65535] { R3908 += 1, R3832 += 1, R3787 += 1, R3788 += 1 };
  s0 -> s4 [66, 66] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s0 -> s5 [66, 66] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s0 -> s1 [67, 65535] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3908 += 1, R3832 += 1 };
  s1 -> s8 [0, 65535] { R3908 += 1 };
  s1 -> s4 [66, 66] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s1 -> s5 [66, 66] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [67, 65535] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [0, 65] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3908 += 1, R3831 += 1, R3832 += 1 };
  s2 -> s3 [0, 65535] { R3908 += 1, R3832 += 1, R3787 += 1, R3788 += 1 };
  s2 -> s4 [66, 66] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s2 -> s5 [66, 66] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [67, 65535] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [0, 65] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3908 += 1, R3832 += 1, R3787 += 1, R3788 += 1 };
  s3 -> s8 [0, 65535] { R3908 += 1 };
  s3 -> s4 [66, 66] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s3 -> s5 [66, 66] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [67, 65535] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R3908 += 1, R3832 += 1 };
  s4 -> s8 [0, 65535] { R3908 += 1 };
  s5 -> s6 [0, 65535] { R3908 += 1, R3832 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3908 += 1, R3832 += 1, R3788 += 1, R85 += 1, R86 += 1 };
  s5 -> s8 [0, 65535] { R3908 += 1 };
  s6 -> s6 [0, 65535] { R3908 += 1, R3832 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R3908 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3908 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s0 -> s0 [0, 65535] { R3909 += 1, R3910 += 1 };
  s0 -> s2 [0, 65535] { R3910 += 1, R3834 += 1, R3789 += 1, R3790 += 1 };
  s0 -> s3 [0, 65535] { R3910 += 1, R3833 += 1, R3834 += 1 };
  s0 -> s4 [66, 66] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s0 -> s5 [66, 66] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s0 -> s1 [67, 65535] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s1 -> s1 [0, 65] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s1 -> s1 [0, 65535] { R3910 += 1, R3834 += 1 };
  s1 -> s6 [0, 65535] { R3910 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s1 -> s5 [66, 66] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s1 -> s1 [67, 65535] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s2 -> s1 [0, 65] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s2 -> s2 [0, 65535] { R3910 += 1, R3834 += 1, R3789 += 1, R3790 += 1 };
  s2 -> s6 [0, 65535] { R3910 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s2 -> s5 [66, 66] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s2 -> s1 [67, 65535] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s3 -> s1 [0, 65] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s3 -> s2 [0, 65535] { R3910 += 1, R3834 += 1, R3789 += 1, R3790 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3910 += 1, R3833 += 1, R3834 += 1 };
  s3 -> s4 [66, 66] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s3 -> s5 [66, 66] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s3 -> s1 [67, 65535] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s4 -> s8 [0, 65535] { R3910 += 1, R3834 += 1 };
  s4 -> s4 [0, 65535] { R3910 += 1, R3834 += 1, R3790 += 1, R2273 += 1, R2274 += 1 };
  s4 -> s6 [0, 65535] { R3910 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3910 += 1, R3834 += 1 };
  s5 -> s6 [0, 65535] { R3910 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3910 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3910 += 1, R3834 += 1 };
  s8 -> s6 [0, 65535] { R3910 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s0 -> s2 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s0 -> s3 [0, 65535] { R3912 += 1, R3836 += 1, R3791 += 1, R3792 += 1 };
  s0 -> s0 [0, 65535] { R3911 += 1, R3912 += 1 };
  s0 -> s4 [0, 65535] { R3912 += 1, R3835 += 1, R3836 += 1 };
  s0 -> s5 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s0 -> s6 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s0 -> s7 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s0 -> s8 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s0 -> s1 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s0 -> s2 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s1 -> s1 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s1 -> s13 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s1 -> s5 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s1 -> s14 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s1 -> s7 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s1 -> s9 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s1 -> s1 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s1 -> s13 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s2 -> s1 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s2 -> s2 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s2 -> s5 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s2 -> s6 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s2 -> s7 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s2 -> s8 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s2 -> s1 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s2 -> s2 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s3 -> s1 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s3 -> s2 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s3 -> s3 [0, 65535] { R3912 += 1, R3836 += 1, R3791 += 1, R3792 += 1 };
  s3 -> s5 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s3 -> s6 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s3 -> s7 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s3 -> s8 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s3 -> s1 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s3 -> s2 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s4 -> s1 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s4 -> s2 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s4 -> s3 [0, 65535] { R3912 += 1, R3836 += 1, R3791 += 1, R3792 += 1 };
  s4 -> s4 [0, 65535] { R3912 += 1, R3835 += 1, R3836 += 1 };
  s4 -> s5 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s4 -> s6 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s4 -> s7 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s4 -> s8 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s4 -> s1 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s4 -> s2 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s7 -> s7 [0, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s7 -> s9 [0, 65535] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s8 -> s7 [0, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3730 += 1, R3731 += 1 };
  s8 -> s8 [0, 65535] { R3912 += 1, R3836 += 1, R3792 += 1, R3729 += 1, R3730 += 1 };
  s9 -> s10 [0, 65535] { R3912 += 1 };
  s9 -> s9 [0, 65535] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s9 -> s11 [0, 65535] { R3912 += 1, R3836 += 1 };
  s9 -> s12 [0, 65535];
  s10 -> s10 [0, 65535] { R3912 += 1 };
  s10 -> s12 [0, 65535];
  s11 -> s10 [0, 65535] { R3912 += 1 };
  s11 -> s11 [0, 65535] { R3912 += 1, R3836 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s13 -> s10 [0, 65535] { R3912 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3912 += 1, R3836 += 1 };
  s13 -> s14 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s13 -> s9 [66, 66] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s13 -> s13 [67, 65535] { R3912 += 1, R3836 += 1, R3792 += 1 };
  s14 -> s14 [0, 65535] { R3912 += 1, R3836 += 1 };
  s14 -> s10 [0, 65535] { R3912 += 1 };
  s14 -> s12 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s0 -> s2 [0, 65535] { R3914 += 1, R3837 += 1, R3838 += 1 };
  s0 -> s0 [0, 65535] { R3913 += 1, R3914 += 1 };
  s0 -> s3 [0, 65535] { R3914 += 1, R3838 += 1, R3793 += 1, R3794 += 1 };
  s0 -> s4 [66, 66] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s0 -> s5 [66, 66] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s0 -> s1 [67, 65535] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s1 -> s1 [0, 65] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s1 -> s6 [0, 65535] { R3914 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3914 += 1, R3838 += 1 };
  s1 -> s4 [66, 66] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s1 -> s5 [66, 66] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s1 -> s1 [67, 65535] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s2 -> s1 [0, 65] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s2 -> s2 [0, 65535] { R3914 += 1, R3837 += 1, R3838 += 1 };
  s2 -> s3 [0, 65535] { R3914 += 1, R3838 += 1, R3793 += 1, R3794 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s2 -> s5 [66, 66] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s2 -> s1 [67, 65535] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s3 -> s1 [0, 65] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s3 -> s6 [0, 65535] { R3914 += 1 };
  s3 -> s3 [0, 65535] { R3914 += 1, R3838 += 1, R3793 += 1, R3794 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s3 -> s5 [66, 66] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s3 -> s1 [67, 65535] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s4 -> s4 [0, 65535] { R3914 += 1, R3838 += 1, R3794 += 1, R3735 += 1, R3736 += 1 };
  s4 -> s6 [0, 65535] { R3914 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R3914 += 1, R3838 += 1 };
  s5 -> s6 [0, 65535] { R3914 += 1 };
  s5 -> s5 [0, 65535] { R3914 += 1, R3838 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3914 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3914 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3914 += 1, R3838 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R1 = R3754 && R2 = R3838 && R3 - R3914 = 1 && R23 - R3838 = -1 && R24 = R3838 && R25 - R3838 = -1 && R26 = R3838 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R3914 && R32 - R3914 = 1 && R33 = R3914 && R34 - R3914 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R2276 + -1*R2274 - R64 = 0 && R63 + R2275 + R2273 = 0 && R3753 = 0 && R3779 = 0 && R3780 = 0 && R3791 = 0 && R3792 = 0 && R3795 = 0 && R3796 = R3838 && R3797 = 0 && R3798 = R3838 && R3799 = 0 && R3800 = R3838 && R3801 = 0 && R3802 = R3838 && R3803 = 0 && R3804 = R3838 && R3805 = 0 && R3806 = R3838 && R3807 = 0 && R3808 = R3838 && R3809 = 0 && R3810 = R3838 && R3811 = 0 && R3812 = R3838 && R3813 = 0 && R3814 = R3838 && R3815 = 0 && R3816 = R3838 && R3817 = 0 && R3818 = R3838 && R3819 = 0 && R3820 = R3838 && R3821 = 0 && R3822 = R3838 && R3823 = 0 && R3824 = R3838 && R3825 = 0 && R3826 = R3838 && R3827 = 0 && R3828 = R3838 && R3829 = 0 && R3830 = R3838 && R3831 = 0 && R3832 = R3838 && R3833 = 0 && R3834 = R3838 && R3835 = 0 && R3836 = R3838 && R3837 = 0 && R3839 = 0 && R3840 = R3914 && R3841 = 0 && R3842 = R3914 && R3843 = 0 && R3844 = R3914 && R3845 = 0 && R3846 = R3914 && R3847 = 0 && R3848 = R3914 && R3849 = 0 && R3850 = R3914 && R3851 = 0 && R3852 = R3914 && R3853 = 0 && R3854 = R3914 && R3855 = 0 && R3856 = R3914 && R3857 = 0 && R3858 = R3914 && R3859 = 0 && R3860 = R3914 && R3861 = 0 && R3862 = R3914 && R3863 = 0 && R3864 = R3914 && R3865 = 0 && R3866 = R3914 && R3867 = 0 && R3868 = R3914 && R3869 = 0 && R3870 = R3914 && R3871 = 0 && R3872 = R3914 && R3873 = 0 && R3874 = R3914 && R3875 = 0 && R3876 = R3914 && R3877 = 0 && R3878 = R3914 && R3879 = 0 && R3880 = R3914 && R3881 = 0 && R3882 = R3914 && R3883 = 0 && R3884 = R3914 && R3885 = 0 && R3886 = R3914 && R3887 = 0 && R3888 = R3914 && R3889 = 0 && R3890 = R3914 && R3891 = 0 && R3892 = R3914 && R3893 = 0 && R3894 = R3914 && R3895 = 0 && R3896 = R3914 && R3897 = 0 && R3898 = R3914 && R3899 = 0 && R3900 = R3914 && R3901 = 0 && R3902 = R3914 && R3903 = 0 && R3904 = R3914 && R3905 = 0 && R3906 = R3914 && R3907 = 0 && R3908 = R3914 && R3909 = 0 && R3910 = R3914 && R3911 = 0 && R3912 = R3914 && R3913 = 0 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R2276 + -1*R2274 - R64 < 1 && -1 < R3754 && 0 < R3838 && -1 < R3914 && (R59 + R90 + R87 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R2276 + -1*R2274 - R64 = 0 || R64 + R2276 + R2274 < 1) && (R53 + R83 + R81 = 0 || R64 + R2276 + R2274 < 1))) && (R59 + R90 + R87 != 0 || ((R57 + R88 + R85 != 0 || R58 + R89 + R86 + -1*R2276 + -1*R2274 - R64 = 0 || R64 + R2276 + R2274 < 1) && (R57 + R88 + R85 = 0 || R64 + R2276 + R2274 < 1))) && (R3739 != 0 || R3740 = R3754 || (R20 = 0 && R3754 = 0)) && (R3741 != 0 || R3742 = R3754 || (R20 = 0 && R3754 = 0)) && (R3743 != 0 || R3744 = R3754 || (R20 = 0 && R3754 = 0)) && (R3745 != 0 || R3746 = R3754 || (R20 = 0 && R3754 = 0)) && (R3747 != 0 || R3748 = R3754 || (R20 = 0 && R3754 = 0)) && (R3749 != 0 || R3750 = R3754 || (R20 = 0 && R3754 = 0)) && (R3751 != 0 || R3752 = R3754 || (R20 = 0 && R3754 = 0)) && (R3755 != 0 || R3754 = R3756 || (R20 = 0 && R3754 = 0)) && (R3757 != 0 || R3754 = R3758 || (R20 = 0 && R3754 = 0)) && (R21 = 0 || (R3777 = 0 && R3778 = 0)) && (R21 = 0 || (R3781 = 0 && R3782 = 0)) && (R21 = 0 || (R3783 = 0 && R3784 = 0)) && (R21 = 0 || (R3785 = 0 && R3786 = 0)) && (R21 = 0 || (R3787 = 0 && R3788 = 0)) && (R21 = 0 || (R3789 = 0 && R3790 = 0)) && (R21 = 0 || (R3793 = 0 && R3794 = 0)) && (R22 = 0 || (R3759 = 0 && R3760 = 0)) && (R22 = 0 || (R3761 = 0 && R3762 = 0)) && (R22 = 0 || (R3763 = 0 && R3764 = 0)) && (R22 = 0 || (R3765 = 0 && R3766 = 0)) && (R22 = 0 || (R3767 = 0 && R3768 = 0)) && (R22 = 0 || (R3769 = 0 && R3770 = 0)) && (R22 = 0 || (R3771 = 0 && R3772 = 0)) && (R22 = 0 || (R3773 = 0 && R3774 = 0)) && (R22 = 0 || (R3775 = 0 && R3776 = 0)) && (R59 + R90 + R87 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R2276 + -1*R2274 - R64 = 0)) && (R59 + R90 + R87 = 0 || (R57 + R88 + R85 = 0 && R58 + R89 + R86 + -1*R2276 + -1*R2274 - R64 = 0)) && (R69 + R3734 + R3731 = 0 || (R67 + R3732 + R3729 = 0 && R68 + R3733 + R3730 = 0)) && (R69 + R3734 + R3731 = 0 || (R73 + R3737 + R3735 = 0 && R74 + R3738 + R3736 = 0)) && (R3739 = 0 || (R20 = 0 && R3754 = 0)) && (R3741 = 0 || (R20 = 0 && R3754 = 0)) && (R3743 = 0 || (R20 = 0 && R3754 = 0)) && (R3745 = 0 || (R20 = 0 && R3754 = 0)) && (R3747 = 0 || (R20 = 0 && R3754 = 0)) && (R3749 = 0 || (R20 = 0 && R3754 = 0)) && (R3751 = 0 || (R20 = 0 && R3754 = 0)) && (R3755 = 0 || (R20 = 0 && R3754 = 0)) && (R3757 = 0 || (R20 = 0 && R3754 = 0));
// End of Parikh automata intersection problem
