// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R13189, R13190, R13191, R13192, R13193, R13194, R13195, R13196, R13197, R13198, R13199, R13200, R13201, R13202, R13203, R13204, R13745, R13746, R13747, R13748, R13749, R13750, R13751, R13752, R13753, R13754, R13755, R13756, R13757, R13758, R13759, R13760, R13761, R13762, R13763, R13764, R13765, R13766, R13767, R13768, R13769, R13770, R13771, R13772, R13773, R13774, R13775, R13776, R13777, R13778, R13779, R13780, R13781, R13782, R13783, R13784, R13785, R13786, R13787, R13788, R13789, R13790, R13791, R13792, R13793, R13794, R13795, R13796, R13797, R13798, R13799, R13800, R13801, R13802, R13803, R13804, R13805, R13806, R13807, R13808, R13809, R13810, R13811, R13812, R13813, R13814, R13815, R13816, R13817, R13818, R13819, R13820, R13821, R13822, R13823, R13824, R13825, R13826, R13827, R13828, R13829, R13830, R13831, R13832, R13833, R13834, R13835, R13836, R13837, R13838, R13839, R13840, R13841, R13842, R13843, R13844, R13845, R13846, R13847, R13848, R13849, R13850, R13851, R13852, R13853, R13854, R13855, R13856, R13857, R13858, R13859, R13860, R13861, R13862, R13863, R13864, R13865, R13866, R13867, R13868, R13869, R13870, R13871, R13872, R13873, R13874, R13875, R13876, R13877, R13878, R13879, R13880, R13881, R13882, R13883, R13884, R13885, R13886, R13887, R13888, R13889, R13890, R13891, R13892, R13893, R13894, R13895, R13896, R13897, R13898, R13899, R13900, R13901, R13902, R13903, R13904, R13905, R13906, R13907, R13908, R13909, R13910, R13911, R13912, R13913, R13914, R13915, R13916, R13917, R13918, R13919, R13920, R13921, R13922, R13923, R13924, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R13850 += 1 };
  s0 -> s0 [0, 65535] { R13849 += 1, R13850 += 1 };
  s0 -> s2 [66, 66] { R13850 += 1 };
  s0 -> s1 [67, 65535] { R13850 += 1 };
  s1 -> s1 [0, 64] { R13850 += 1 };
  s1 -> s2 [66, 66] { R13850 += 1 };
  s1 -> s1 [67, 65535] { R13850 += 1 };
  s2 -> s2 [0, 64] { R13850 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R13850 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R13852 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R13851 += 1, R13852 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R13852 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R13854 += 1 };
  s0 -> s0 [0, 65535] { R13853 += 1, R13854 += 1 };
  s0 -> s2 [0, 65535] { R13854 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R13854 += 1 };
  s0 -> s1 [67, 65535] { R13854 += 1 };
  s1 -> s1 [0, 65] { R13854 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R13854 += 1 };
  s1 -> s1 [67, 65535] { R13854 += 1 };
  s2 -> s1 [0, 65] { R13854 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13854 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R13854 += 1 };
  s2 -> s1 [67, 65535] { R13854 += 1 };
  s3 -> s3 [0, 65535] { R13854 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R13856 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R13855 += 1, R13856 += 1 };
  s0 -> s2 [0, 65535] { R13856 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R13856 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R13856 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R13856 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R13856 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R13856 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13856 += 1, R24 += 1 };
  s2 -> s1 [0, 8] { R13856 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13856 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R13856 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R13856 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R13856 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R13856 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R13856 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13856 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R13858 += 1, R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R13857 += 1, R13858 += 1 };
  s0 -> s2 [0, 65535] { R13858 += 1, R25 += 1, R26 += 1 };
  s1 -> s4 [0, 65535] { R13858 += 1 };
  s1 -> s1 [0, 65535] { R13858 += 1, R26 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13858 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13858 += 1, R25 += 1, R26 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13858 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R13860 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R13859 += 1, R13860 += 1 };
  s0 -> s2 [0, 65535] { R13860 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R13860 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R13860 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R13860 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R13860 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13860 += 1 };
  s1 -> s1 [0, 65535] { R13860 += 1, R28 += 1 };
  s2 -> s1 [0, 8] { R13860 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13860 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R13860 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R13860 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R13860 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R13860 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R13860 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13860 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R13862 += 1, R29 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R13862 += 1, R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R13861 += 1, R13862 += 1 };
  s1 -> s1 [0, 65535] { R13862 += 1, R29 += 1, R30 += 1 };
  s1 -> s2 [0, 65535] { R13862 += 1, R30 += 1, R5 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13862 += 1 };
  s2 -> s2 [0, 65535] { R13862 += 1, R30 += 1, R5 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13862 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R13864 += 1, R13770 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R13863 += 1, R13864 += 1 };
  s0 -> s2 [0, 65535] { R13864 += 1, R13769 += 1, R13770 += 1 };
  s1 -> s1 [0, 65535] { R13864 += 1, R13770 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13864 += 1 };
  s2 -> s1 [0, 65535] { R13864 += 1, R13770 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13864 += 1, R13769 += 1, R13770 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13864 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R13866 += 1, R13772 += 1 };
  s0 -> s2 [0, 65535] { R13866 += 1, R13771 += 1, R13772 += 1 };
  s0 -> s0 [0, 65535] { R13865 += 1, R13866 += 1 };
  s0 -> s3 [66, 66] { R13866 += 1, R13772 += 1 };
  s0 -> s4 [66, 66] { R13866 += 1, R13772 += 1 };
  s0 -> s1 [71, 65535] { R13866 += 1, R13772 += 1 };
  s1 -> s1 [0, 65] { R13866 += 1, R13772 += 1 };
  s1 -> s1 [0, 65535] { R13866 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13866 += 1, R13772 += 1 };
  s1 -> s4 [66, 66] { R13866 += 1, R13772 += 1 };
  s1 -> s1 [71, 65535] { R13866 += 1, R13772 += 1 };
  s2 -> s1 [0, 65] { R13866 += 1, R13772 += 1 };
  s2 -> s2 [0, 65535] { R13866 += 1, R13771 += 1, R13772 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13866 += 1, R13772 += 1 };
  s2 -> s4 [66, 66] { R13866 += 1, R13772 += 1 };
  s2 -> s1 [71, 65535] { R13866 += 1, R13772 += 1 };
  s3 -> s3 [0, 66] { R13866 += 1, R13772 += 1 };
  s3 -> s3 [0, 65535] { R13866 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [71, 65535] { R13866 += 1, R13772 += 1 };
  s4 -> s4 [0, 65535] { R13866 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R13868 += 1, R13774 += 1, R49 += 1 };
  s0 -> s2 [0, 65535] { R13868 += 1, R13773 += 1, R13774 += 1 };
  s0 -> s0 [0, 65535] { R13867 += 1, R13868 += 1 };
  s0 -> s3 [66, 66] { R13868 += 1, R13774 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R13868 += 1, R13774 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R13868 += 1, R13774 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R13868 += 1, R13774 += 1, R49 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13868 += 1 };
  s1 -> s3 [66, 66] { R13868 += 1, R13774 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R13868 += 1, R13774 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R13868 += 1, R13774 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R13868 += 1, R13774 += 1, R49 += 1 };
  s2 -> s2 [0, 65535] { R13868 += 1, R13773 += 1, R13774 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13868 += 1, R13774 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R13868 += 1, R13774 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R13868 += 1, R13774 += 1, R49 += 1 };
  s3 -> s6 [0, 65535] { R13868 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13868 += 1, R13774 += 1, R49 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13868 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13868 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R13870 += 1, R13776 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R13870 += 1, R13775 += 1, R13776 += 1 };
  s0 -> s0 [0, 65535] { R13869 += 1, R13870 += 1 };
  s0 -> s3 [66, 66] { R13870 += 1, R13776 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R13870 += 1, R13776 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R13870 += 1, R13776 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R13870 += 1, R13776 += 1, R51 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13870 += 1 };
  s1 -> s3 [66, 66] { R13870 += 1, R13776 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R13870 += 1, R13776 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R13870 += 1, R13776 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R13870 += 1, R13776 += 1, R51 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13870 += 1, R13775 += 1, R13776 += 1 };
  s2 -> s3 [66, 66] { R13870 += 1, R13776 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R13870 += 1, R13776 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R13870 += 1, R13776 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R13870 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13870 += 1 };
  s4 -> s4 [0, 65535] { R13870 += 1, R13776 += 1, R51 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13870 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13871 += 1, R13872 += 1 };
  s0 -> s2 [0, 65535] { R13872 += 1, R13777 += 1, R13778 += 1 };
  s0 -> s3 [66, 66] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13872 += 1 };
  s1 -> s3 [66, 66] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13872 += 1, R13777 += 1, R13778 += 1 };
  s2 -> s3 [66, 66] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13872 += 1, R13778 += 1, R53 += 1, R54 += 1 };
  s3 -> s6 [0, 65535] { R13872 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13872 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13872 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R13873 += 1, R13874 += 1 };
  s0 -> s2 [0, 65535] { R13874 += 1, R13779 += 1, R13780 += 1 };
  s0 -> s3 [66, 66] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R13874 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13874 += 1, R13779 += 1, R13780 += 1 };
  s2 -> s3 [66, 66] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R13874 += 1, R13780 += 1, R57 += 1, R58 += 1 };
  s3 -> s6 [0, 65535] { R13874 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13874 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13874 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s0 -> s0 [0, 65535] { R13875 += 1, R13876 += 1 };
  s0 -> s2 [0, 65535] { R13876 += 1, R13781 += 1, R13782 += 1 };
  s0 -> s3 [66, 66] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13876 += 1 };
  s1 -> s3 [66, 66] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13876 += 1, R13781 += 1, R13782 += 1 };
  s2 -> s3 [66, 66] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s3 -> s3 [0, 65535] { R13876 += 1, R13782 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13876 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13876 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13876 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R13877 += 1, R13878 += 1 };
  s0 -> s2 [0, 65535] { R13878 += 1, R13783 += 1, R13784 += 1 };
  s0 -> s3 [66, 66] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13878 += 1 };
  s1 -> s3 [66, 66] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13878 += 1, R13783 += 1, R13784 += 1 };
  s2 -> s3 [66, 66] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13878 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13878 += 1 };
  s4 -> s4 [0, 65535] { R13878 += 1, R13784 += 1, R67 += 1, R68 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13878 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13879 += 1, R13880 += 1 };
  s0 -> s2 [0, 65535] { R13880 += 1, R13785 += 1, R13786 += 1 };
  s0 -> s3 [66, 66] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13880 += 1 };
  s1 -> s3 [66, 66] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R13880 += 1, R13785 += 1, R13786 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R13880 += 1, R13786 += 1, R73 += 1, R74 += 1 };
  s3 -> s6 [0, 65535] { R13880 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13880 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13880 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R13882 += 1, R13806 += 1 };
  s0 -> s2 [0, 65535] { R13882 += 1, R13805 += 1, R13806 += 1 };
  s0 -> s0 [0, 65535] { R13881 += 1, R13882 += 1 };
  s0 -> s3 [66, 66] { R13882 += 1, R13806 += 1 };
  s0 -> s1 [67, 65535] { R13882 += 1, R13806 += 1 };
  s1 -> s1 [0, 65] { R13882 += 1, R13806 += 1 };
  s1 -> s3 [66, 66] { R13882 += 1, R13806 += 1 };
  s1 -> s1 [67, 65535] { R13882 += 1, R13806 += 1 };
  s2 -> s1 [0, 65] { R13882 += 1, R13806 += 1 };
  s2 -> s2 [0, 65535] { R13882 += 1, R13805 += 1, R13806 += 1 };
  s2 -> s3 [66, 66] { R13882 += 1, R13806 += 1 };
  s2 -> s1 [67, 65535] { R13882 += 1, R13806 += 1 };
  s3 -> s3 [0, 65535] { R13882 += 1, R13806 += 1 };
  s3 -> s4 [0, 65535] { R13882 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13882 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s0 [0, 65535] { R13883 += 1, R13884 += 1 };
  s0 -> s1 [0, 65535] { R13884 += 1, R13808 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R13884 += 1, R13807 += 1, R13808 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R13884 += 1 };
  s1 -> s1 [0, 65535] { R13884 += 1, R13808 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13884 += 1, R13808 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R13884 += 1, R13807 += 1, R13808 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13884 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R13886 += 1, R13810 += 1 };
  s0 -> s0 [0, 65535] { R13885 += 1, R13886 += 1 };
  s0 -> s2 [0, 65535] { R13886 += 1, R13809 += 1, R13810 += 1 };
  s0 -> s3 [0, 65535] { R13886 += 1, R13810 += 1, R11 += 1 };
  s0 -> s4 [66, 66] { R13886 += 1, R13810 += 1 };
  s0 -> s1 [67, 65535] { R13886 += 1, R13810 += 1 };
  s1 -> s1 [0, 65] { R13886 += 1, R13810 += 1 };
  s1 -> s1 [0, 65535] { R13886 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [66, 66] { R13886 += 1, R13810 += 1 };
  s1 -> s1 [67, 65535] { R13886 += 1, R13810 += 1 };
  s2 -> s1 [0, 65] { R13886 += 1, R13810 += 1 };
  s2 -> s2 [0, 65535] { R13886 += 1, R13809 += 1, R13810 += 1 };
  s2 -> s3 [0, 65535] { R13886 += 1, R13810 += 1, R11 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R13886 += 1, R13810 += 1 };
  s2 -> s1 [67, 65535] { R13886 += 1, R13810 += 1 };
  s3 -> s1 [0, 65] { R13886 += 1, R13810 += 1 };
  s3 -> s5 [0, 65535] { R13886 += 1 };
  s3 -> s3 [0, 65535] { R13886 += 1, R13810 += 1, R11 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [66, 66] { R13886 += 1, R13810 += 1 };
  s3 -> s1 [67, 65535] { R13886 += 1, R13810 += 1 };
  s4 -> s4 [0, 65535] { R13886 += 1, R13810 += 1 };
  s5 -> s5 [0, 65535] { R13886 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R13888 += 1, R13812 += 1, R13750 += 1 };
  s0 -> s2 [0, 65535] { R13888 += 1, R13812 += 1, R13749 += 1, R13750 += 1 };
  s0 -> s3 [0, 65535] { R13888 += 1, R13811 += 1, R13812 += 1 };
  s0 -> s0 [0, 65535] { R13887 += 1, R13888 += 1 };
  s0 -> s1 [67, 65535] { R13888 += 1, R13812 += 1, R13750 += 1 };
  s1 -> s1 [0, 65] { R13888 += 1, R13812 += 1, R13750 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13888 += 1 };
  s1 -> s1 [0, 65535] { R13888 += 1, R13812 += 1 };
  s1 -> s1 [67, 65535] { R13888 += 1, R13812 += 1, R13750 += 1 };
  s2 -> s1 [0, 65] { R13888 += 1, R13812 += 1, R13750 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13888 += 1, R13812 += 1, R13749 += 1, R13750 += 1 };
  s2 -> s5 [0, 65535] { R13888 += 1 };
  s2 -> s1 [67, 65535] { R13888 += 1, R13812 += 1, R13750 += 1 };
  s3 -> s1 [0, 65] { R13888 += 1, R13812 += 1, R13750 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13888 += 1, R13812 += 1, R13749 += 1, R13750 += 1 };
  s3 -> s3 [0, 65535] { R13888 += 1, R13811 += 1, R13812 += 1 };
  s3 -> s1 [67, 65535] { R13888 += 1, R13812 += 1, R13750 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13888 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s0 [0, 65535] { R13889 += 1, R13890 += 1 };
  s0 -> s1 [0, 65535] { R13890 += 1, R13814 += 1, R13752 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R13890 += 1, R13814 += 1, R13751 += 1, R13752 += 1 };
  s0 -> s3 [0, 65535] { R13890 += 1, R13813 += 1, R13814 += 1 };
  s1 -> s1 [0, 65535] { R13890 += 1, R13814 += 1, R13752 += 1, R20 += 1 };
  s1 -> s5 [0, 65535] { R13890 += 1 };
  s1 -> s6 [0, 65535] { R13890 += 1, R13814 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R13890 += 1, R13814 += 1, R13752 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R13890 += 1, R13814 += 1, R13751 += 1, R13752 += 1 };
  s2 -> s5 [0, 65535] { R13890 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R13890 += 1, R13814 += 1, R13752 += 1, R20 += 1 };
  s3 -> s2 [0, 65535] { R13890 += 1, R13814 += 1, R13751 += 1, R13752 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13890 += 1, R13813 += 1, R13814 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13890 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13890 += 1 };
  s6 -> s6 [0, 65535] { R13890 += 1, R13814 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R13892 += 1, R13816 += 1, R13754 += 1 };
  s0 -> s2 [0, 65535] { R13892 += 1, R13815 += 1, R13816 += 1 };
  s0 -> s3 [0, 65535] { R13892 += 1, R13816 += 1, R13753 += 1, R13754 += 1 };
  s0 -> s0 [0, 65535] { R13891 += 1, R13892 += 1 };
  s0 -> s1 [70, 65535] { R13892 += 1, R13816 += 1, R13754 += 1 };
  s1 -> s1 [0, 66] { R13892 += 1, R13816 += 1, R13754 += 1 };
  s1 -> s1 [0, 65535] { R13892 += 1, R13816 += 1 };
  s1 -> s4 [0, 65535] { R13892 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [70, 65535] { R13892 += 1, R13816 += 1, R13754 += 1 };
  s2 -> s1 [0, 66] { R13892 += 1, R13816 += 1, R13754 += 1 };
  s2 -> s2 [0, 65535] { R13892 += 1, R13815 += 1, R13816 += 1 };
  s2 -> s3 [0, 65535] { R13892 += 1, R13816 += 1, R13753 += 1, R13754 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [70, 65535] { R13892 += 1, R13816 += 1, R13754 += 1 };
  s3 -> s1 [0, 66] { R13892 += 1, R13816 += 1, R13754 += 1 };
  s3 -> s3 [0, 65535] { R13892 += 1, R13816 += 1, R13753 += 1, R13754 += 1 };
  s3 -> s4 [0, 65535] { R13892 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [70, 65535] { R13892 += 1, R13816 += 1, R13754 += 1 };
  s4 -> s4 [0, 65535] { R13892 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R13893 += 1, R13894 += 1 };
  s0 -> s1 [0, 65535] { R13894 += 1, R13817 += 1, R13818 += 1 };
  s0 -> s2 [0, 65535] { R13894 += 1, R13818 += 1, R13755 += 1, R13756 += 1 };
  s0 -> s3 [0, 65535] { R13894 += 1, R13818 += 1, R13756 += 1, R78 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13894 += 1, R13817 += 1, R13818 += 1 };
  s1 -> s2 [0, 65535] { R13894 += 1, R13818 += 1, R13755 += 1, R13756 += 1 };
  s1 -> s3 [0, 65535] { R13894 += 1, R13818 += 1, R13756 += 1, R78 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13894 += 1 };
  s2 -> s2 [0, 65535] { R13894 += 1, R13818 += 1, R13755 += 1, R13756 += 1 };
  s2 -> s3 [0, 65535] { R13894 += 1, R13818 += 1, R13756 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13894 += 1 };
  s3 -> s3 [0, 65535] { R13894 += 1, R13818 += 1, R13756 += 1, R78 += 1 };
  s3 -> s6 [0, 65535] { R13894 += 1, R13818 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13894 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13894 += 1 };
  s6 -> s6 [0, 65535] { R13894 += 1, R13818 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s0 -> s2 [0, 65535] { R13896 += 1, R13819 += 1, R13820 += 1 };
  s0 -> s3 [0, 65535] { R13896 += 1, R13820 += 1, R13758 += 1, R80 += 1 };
  s0 -> s4 [0, 65535] { R13896 += 1, R13820 += 1, R13757 += 1, R13758 += 1 };
  s0 -> s0 [0, 65535] { R13895 += 1, R13896 += 1 };
  s0 -> s1 [71, 65535] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s1 -> s1 [0, 69] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s1 -> s5 [0, 65535] { R13896 += 1 };
  s1 -> s1 [0, 65535] { R13896 += 1, R13820 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s2 -> s1 [0, 69] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s2 -> s2 [0, 65535] { R13896 += 1, R13819 += 1, R13820 += 1 };
  s2 -> s3 [0, 65535] { R13896 += 1, R13820 += 1, R13758 += 1, R80 += 1 };
  s2 -> s4 [0, 65535] { R13896 += 1, R13820 += 1, R13757 += 1, R13758 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [71, 65535] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s3 -> s1 [0, 69] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s3 -> s5 [0, 65535] { R13896 += 1 };
  s3 -> s3 [0, 65535] { R13896 += 1, R13820 += 1, R13758 += 1, R80 += 1 };
  s3 -> s7 [0, 65535] { R13896 += 1, R13820 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [71, 65535] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s4 -> s1 [0, 69] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s4 -> s5 [0, 65535] { R13896 += 1 };
  s4 -> s3 [0, 65535] { R13896 += 1, R13820 += 1, R13758 += 1, R80 += 1 };
  s4 -> s4 [0, 65535] { R13896 += 1, R13820 += 1, R13757 += 1, R13758 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [71, 65535] { R13896 += 1, R13820 += 1, R13758 += 1 };
  s5 -> s5 [0, 65535] { R13896 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R13896 += 1 };
  s7 -> s7 [0, 65535] { R13896 += 1, R13820 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R13898 += 1, R13821 += 1, R13822 += 1 };
  s0 -> s3 [0, 65535] { R13898 += 1, R13822 += 1, R13759 += 1, R13760 += 1 };
  s0 -> s0 [0, 65535] { R13897 += 1, R13898 += 1 };
  s0 -> s4 [0, 65535] { R13898 += 1, R13822 += 1, R13760 += 1, R83 += 1, R84 += 1 };
  s0 -> s1 [71, 65535] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R13898 += 1, R13822 += 1, R13760 += 1 };
  s1 -> s5 [0, 65535] { R13898 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13898 += 1, R13822 += 1 };
  s1 -> s1 [71, 65535] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R13898 += 1, R13821 += 1, R13822 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R13898 += 1, R13822 += 1, R13759 += 1, R13760 += 1 };
  s2 -> s4 [0, 65535] { R13898 += 1, R13822 += 1, R13760 += 1, R83 += 1, R84 += 1 };
  s2 -> s1 [71, 65535] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s3 -> s5 [0, 65535] { R13898 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13898 += 1, R13822 += 1, R13759 += 1, R13760 += 1 };
  s3 -> s4 [0, 65535] { R13898 += 1, R13822 += 1, R13760 += 1, R83 += 1, R84 += 1 };
  s3 -> s1 [71, 65535] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s4 -> s5 [0, 65535] { R13898 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R13898 += 1, R13822 += 1 };
  s4 -> s4 [0, 65535] { R13898 += 1, R13822 += 1, R13760 += 1, R83 += 1, R84 += 1 };
  s4 -> s1 [71, 65535] { R13898 += 1, R13822 += 1, R13760 += 1, R84 += 1 };
  s5 -> s5 [0, 65535] { R13898 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R13898 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13898 += 1, R13822 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R13900 += 1, R13823 += 1, R13824 += 1 };
  s0 -> s2 [0, 65535] { R13900 += 1, R13824 += 1, R13761 += 1, R13762 += 1 };
  s0 -> s0 [0, 65535] { R13899 += 1, R13900 += 1 };
  s0 -> s3 [0, 65535] { R13900 += 1, R13824 += 1, R13762 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R13900 += 1, R13823 += 1, R13824 += 1 };
  s1 -> s2 [0, 65535] { R13900 += 1, R13824 += 1, R13761 += 1, R13762 += 1 };
  s1 -> s3 [0, 65535] { R13900 += 1, R13824 += 1, R13762 += 1 };
  s2 -> s5 [0, 65535] { R13900 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13900 += 1, R13824 += 1, R13761 += 1, R13762 += 1 };
  s2 -> s3 [0, 65535] { R13900 += 1, R13824 += 1, R13762 += 1 };
  s3 -> s4 [0, 65535] { R13900 += 1, R13824 += 1 };
  s3 -> s5 [0, 65535] { R13900 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13900 += 1, R13824 += 1, R13762 += 1 };
  s4 -> s4 [0, 65535] { R13900 += 1, R13824 += 1 };
  s4 -> s5 [0, 65535] { R13900 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13900 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R13902 += 1, R13826 += 1, R13764 += 1, R13198 += 1 };
  s0 -> s0 [0, 65535] { R13901 += 1, R13902 += 1 };
  s0 -> s2 [0, 65535] { R13902 += 1, R13825 += 1, R13826 += 1 };
  s0 -> s3 [0, 65535] { R13902 += 1, R13826 += 1, R13763 += 1, R13764 += 1 };
  s0 -> s1 [0, 65535] { R13902 += 1, R13826 += 1, R13764 += 1 };
  s0 -> s1 [75, 65535] { R13902 += 1, R13826 += 1, R13764 += 1, R13198 += 1 };
  s1 -> s1 [0, 70] { R13902 += 1, R13826 += 1, R13764 += 1, R13198 += 1 };
  s1 -> s4 [0, 65535] { R13902 += 1 };
  s1 -> s6 [0, 65535] { R13902 += 1, R13826 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13902 += 1, R13826 += 1, R13764 += 1 };
  s1 -> s1 [75, 65535] { R13902 += 1, R13826 += 1, R13764 += 1, R13198 += 1 };
  s2 -> s1 [0, 70] { R13902 += 1, R13826 += 1, R13764 += 1, R13198 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13902 += 1, R13825 += 1, R13826 += 1 };
  s2 -> s3 [0, 65535] { R13902 += 1, R13826 += 1, R13763 += 1, R13764 += 1 };
  s2 -> s1 [0, 65535] { R13902 += 1, R13826 += 1, R13764 += 1 };
  s2 -> s1 [75, 65535] { R13902 += 1, R13826 += 1, R13764 += 1, R13198 += 1 };
  s3 -> s1 [0, 70] { R13902 += 1, R13826 += 1, R13764 += 1, R13198 += 1 };
  s3 -> s4 [0, 65535] { R13902 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13902 += 1, R13826 += 1, R13763 += 1, R13764 += 1 };
  s3 -> s1 [0, 65535] { R13902 += 1, R13826 += 1, R13764 += 1 };
  s3 -> s1 [75, 65535] { R13902 += 1, R13826 += 1, R13764 += 1, R13198 += 1 };
  s4 -> s4 [0, 65535] { R13902 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R13902 += 1 };
  s6 -> s6 [0, 65535] { R13902 += 1, R13826 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s0 [0, 65535] { R13903 += 1, R13904 += 1 };
  s0 -> s1 [0, 65535] { R13904 += 1, R13828 += 1, R13765 += 1, R13766 += 1 };
  s0 -> s2 [0, 65535] { R13904 += 1, R13827 += 1, R13828 += 1 };
  s0 -> s3 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1, R13203 += 1, R13204 += 1 };
  s0 -> s4 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1, R13202 += 1, R13203 += 1 };
  s1 -> s1 [0, 65535] { R13904 += 1, R13828 += 1, R13765 += 1, R13766 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1, R13203 += 1, R13204 += 1 };
  s1 -> s4 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1, R13202 += 1, R13203 += 1 };
  s1 -> s7 [0, 65535] { R13904 += 1 };
  s2 -> s1 [0, 65535] { R13904 += 1, R13828 += 1, R13765 += 1, R13766 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13904 += 1, R13827 += 1, R13828 += 1 };
  s2 -> s3 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1, R13203 += 1, R13204 += 1 };
  s2 -> s4 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1, R13202 += 1, R13203 += 1 };
  s3 -> s5 [0, 65535] { R13904 += 1, R13828 += 1 };
  s3 -> s8 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1, R13203 += 1, R13204 += 1 };
  s3 -> s7 [0, 65535] { R13904 += 1 };
  s4 -> s5 [0, 65535] { R13904 += 1, R13828 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1, R13203 += 1, R13204 += 1 };
  s4 -> s4 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1, R13202 += 1, R13203 += 1 };
  s4 -> s7 [0, 65535] { R13904 += 1 };
  s5 -> s5 [0, 65535] { R13904 += 1, R13828 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13904 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13904 += 1 };
  s8 -> s5 [0, 65535] { R13904 += 1, R13828 += 1 };
  s8 -> s8 [0, 65535] { R13904 += 1, R13828 += 1, R13766 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R13904 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 70] { R13906 += 1, R13830 += 1, R13768 += 1, R13748 += 1 };
  s0 -> s2 [0, 65535] { R13906 += 1, R13829 += 1, R13830 += 1 };
  s0 -> s0 [0, 65535] { R13905 += 1, R13906 += 1 };
  s0 -> s1 [0, 65535] { R13906 += 1, R13830 += 1, R13768 += 1 };
  s0 -> s3 [0, 65535] { R13906 += 1, R13830 += 1, R13767 += 1, R13768 += 1 };
  s0 -> s1 [76, 65535] { R13906 += 1, R13830 += 1, R13768 += 1, R13748 += 1 };
  s1 -> s1 [0, 70] { R13906 += 1, R13830 += 1, R13768 += 1, R13748 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13906 += 1, R13830 += 1, R13768 += 1 };
  s1 -> s5 [0, 65535] { R13906 += 1 };
  s1 -> s6 [0, 65535] { R13906 += 1, R13830 += 1 };
  s1 -> s1 [76, 65535] { R13906 += 1, R13830 += 1, R13768 += 1, R13748 += 1 };
  s2 -> s1 [0, 70] { R13906 += 1, R13830 += 1, R13768 += 1, R13748 += 1 };
  s2 -> s2 [0, 65535] { R13906 += 1, R13829 += 1, R13830 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R13906 += 1, R13830 += 1, R13768 += 1 };
  s2 -> s3 [0, 65535] { R13906 += 1, R13830 += 1, R13767 += 1, R13768 += 1 };
  s2 -> s1 [76, 65535] { R13906 += 1, R13830 += 1, R13768 += 1, R13748 += 1 };
  s3 -> s1 [0, 70] { R13906 += 1, R13830 += 1, R13768 += 1, R13748 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R13906 += 1, R13830 += 1, R13768 += 1 };
  s3 -> s5 [0, 65535] { R13906 += 1 };
  s3 -> s3 [0, 65535] { R13906 += 1, R13830 += 1, R13767 += 1, R13768 += 1 };
  s3 -> s1 [76, 65535] { R13906 += 1, R13830 += 1, R13768 += 1, R13748 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13906 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13906 += 1 };
  s6 -> s6 [0, 65535] { R13906 += 1, R13830 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R13908 += 1, R13832 += 1, R13788 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R13908 += 1, R13831 += 1, R13832 += 1 };
  s0 -> s0 [0, 65535] { R13907 += 1, R13908 += 1 };
  s0 -> s3 [0, 65535] { R13908 += 1, R13832 += 1, R13787 += 1, R13788 += 1 };
  s1 -> s1 [0, 65535] { R13908 += 1, R13832 += 1, R13788 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R13908 += 1 };
  s1 -> s6 [0, 65535] { R13908 += 1, R13832 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R13908 += 1, R13832 += 1, R13788 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R13908 += 1, R13831 += 1, R13832 += 1 };
  s2 -> s3 [0, 65535] { R13908 += 1, R13832 += 1, R13787 += 1, R13788 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R13908 += 1, R13832 += 1, R13788 += 1, R21 += 1 };
  s3 -> s4 [0, 65535] { R13908 += 1 };
  s3 -> s3 [0, 65535] { R13908 += 1, R13832 += 1, R13787 += 1, R13788 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13908 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R13908 += 1 };
  s6 -> s6 [0, 65535] { R13908 += 1, R13832 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s0 -> s2 [0, 65535] { R13910 += 1, R13833 += 1, R13834 += 1 };
  s0 -> s3 [0, 65535] { R13910 += 1, R13834 += 1, R13789 += 1, R13790 += 1 };
  s0 -> s0 [0, 65535] { R13909 += 1, R13910 += 1 };
  s0 -> s4 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s0 -> s5 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s0 -> s6 [70, 70] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s0 -> s1 [71, 65535] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s1 -> s1 [0, 65] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s1 -> s4 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s1 -> s5 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s1 -> s6 [70, 70] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s1 -> s1 [71, 65535] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s2 -> s1 [0, 65] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s2 -> s2 [0, 65535] { R13910 += 1, R13833 += 1, R13834 += 1 };
  s2 -> s3 [0, 65535] { R13910 += 1, R13834 += 1, R13789 += 1, R13790 += 1 };
  s2 -> s4 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s2 -> s5 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s2 -> s6 [70, 70] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s2 -> s1 [71, 65535] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s3 -> s1 [0, 65] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s3 -> s3 [0, 65535] { R13910 += 1, R13834 += 1, R13789 += 1, R13790 += 1 };
  s3 -> s4 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s3 -> s5 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s3 -> s6 [70, 70] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s3 -> s1 [71, 65535] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s5 -> s5 [0, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s5 -> s10 [70, 70] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s5 -> s5 [71, 65535] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s6 -> s6 [0, 65] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s6 -> s7 [0, 65535] { R13910 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R13910 += 1, R13834 += 1 };
  s6 -> s9 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s6 -> s10 [66, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s6 -> s6 [70, 65535] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s7 -> s7 [0, 65535] { R13910 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R13910 += 1 };
  s9 -> s9 [0, 65535] { R13910 += 1, R13834 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s10 [0, 66] { R13910 += 1, R13834 += 1, R13790 += 1 };
  s10 -> s7 [0, 65535] { R13910 += 1 };
  s10 -> s10 [0, 65535] { R13910 += 1, R13834 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [70, 65535] { R13910 += 1, R13834 += 1, R13790 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R13911 += 1, R13912 += 1 };
  s0 -> s2 [0, 65535] { R13912 += 1, R13835 += 1, R13836 += 1 };
  s0 -> s3 [0, 65535] { R13912 += 1, R13836 += 1, R13791 += 1, R13792 += 1 };
  s0 -> s4 [66, 66] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s1 -> s6 [0, 65535] { R13912 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R13912 += 1, R13836 += 1 };
  s1 -> s4 [66, 66] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R13912 += 1, R13835 += 1, R13836 += 1 };
  s2 -> s3 [0, 65535] { R13912 += 1, R13836 += 1, R13791 += 1, R13792 += 1 };
  s2 -> s4 [66, 66] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s3 -> s6 [0, 65535] { R13912 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R13912 += 1, R13836 += 1, R13791 += 1, R13792 += 1 };
  s3 -> s4 [66, 66] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s4 -> s4 [0, 65535] { R13912 += 1, R13836 += 1 };
  s4 -> s6 [0, 65535] { R13912 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R13912 += 1 };
  s5 -> s5 [0, 65535] { R13912 += 1, R13836 += 1, R13792 += 1, R77 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R13912 += 1, R13836 += 1 };
  s6 -> s6 [0, 65535] { R13912 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R13912 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R13912 += 1, R13836 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s0 -> s0 [0, 65535] { R13913 += 1, R13914 += 1 };
  s0 -> s2 [0, 65535] { R13914 += 1, R13837 += 1, R13838 += 1 };
  s0 -> s3 [0, 65535] { R13914 += 1, R13838 += 1, R13793 += 1, R13794 += 1 };
  s0 -> s4 [66, 66] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13914 += 1 };
  s1 -> s1 [0, 65535] { R13914 += 1, R13838 += 1 };
  s1 -> s4 [66, 66] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13914 += 1, R13837 += 1, R13838 += 1 };
  s2 -> s3 [0, 65535] { R13914 += 1, R13838 += 1, R13793 += 1, R13794 += 1 };
  s2 -> s4 [66, 66] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R13914 += 1 };
  s3 -> s3 [0, 65535] { R13914 += 1, R13838 += 1, R13793 += 1, R13794 += 1 };
  s3 -> s4 [66, 66] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s4 -> s8 [0, 65535] { R13914 += 1, R13838 += 1 };
  s4 -> s4 [0, 65535] { R13914 += 1, R13838 += 1, R13794 += 1, R79 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R13914 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13914 += 1 };
  s5 -> s5 [0, 65535] { R13914 += 1, R13838 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13914 += 1 };
  s8 -> s8 [0, 65535] { R13914 += 1, R13838 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R13914 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R13915 += 1, R13916 += 1 };
  s0 -> s2 [0, 65535] { R13916 += 1, R13839 += 1, R13840 += 1 };
  s0 -> s3 [0, 65535] { R13916 += 1, R13840 += 1, R13795 += 1, R13796 += 1 };
  s0 -> s4 [66, 66] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535] { R13916 += 1, R13840 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13916 += 1 };
  s1 -> s4 [66, 66] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13916 += 1, R13839 += 1, R13840 += 1 };
  s2 -> s3 [0, 65535] { R13916 += 1, R13840 += 1, R13795 += 1, R13796 += 1 };
  s2 -> s4 [66, 66] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R13916 += 1 };
  s3 -> s3 [0, 65535] { R13916 += 1, R13840 += 1, R13795 += 1, R13796 += 1 };
  s3 -> s4 [66, 66] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535] { R13916 += 1, R13840 += 1, R13796 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R13916 += 1, R13840 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R13916 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13916 += 1, R13840 += 1 };
  s5 -> s7 [0, 65535] { R13916 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13916 += 1 };
  s8 -> s8 [0, 65535] { R13916 += 1, R13840 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R13916 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s2 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s0 [0, 65535] { R13917 += 1, R13918 += 1 };
  s0 -> s3 [0, 65535] { R13918 += 1, R13842 += 1, R13797 += 1, R13798 += 1 };
  s0 -> s4 [0, 65535] { R13918 += 1, R13841 += 1, R13842 += 1 };
  s0 -> s5 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s6 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s7 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s8 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s1 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s2 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s1 -> s1 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s13 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s1 -> s14 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s1 -> s6 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s9 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s1 -> s5 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s1 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s13 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s2 -> s1 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s2 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s2 -> s5 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s6 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s7 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s2 -> s8 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s2 -> s1 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s2 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s1 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s2 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s3 [0, 65535] { R13918 += 1, R13842 += 1, R13797 += 1, R13798 += 1 };
  s3 -> s5 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s6 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s7 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s8 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s1 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s2 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s1 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s2 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s3 [0, 65535] { R13918 += 1, R13842 += 1, R13797 += 1, R13798 += 1 };
  s4 -> s4 [0, 65535] { R13918 += 1, R13841 += 1, R13842 += 1 };
  s4 -> s5 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s6 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s7 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s8 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s1 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s2 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s5 -> s9 [0, 65535] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s5 -> s5 [0, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s7 -> s7 [0, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13189 += 1, R13190 += 1 };
  s7 -> s5 [0, 65535] { R13918 += 1, R13842 += 1, R13798 += 1, R13190 += 1, R13191 += 1 };
  s9 -> s10 [0, 65535] { R13918 += 1 };
  s9 -> s9 [0, 65535] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R13918 += 1, R13842 += 1 };
  s10 -> s10 [0, 65535] { R13918 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s10 [0, 65535] { R13918 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R13918 += 1, R13842 += 1 };
  s13 -> s13 [0, 65] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s13 -> s10 [0, 65535] { R13918 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R13918 += 1, R13842 += 1 };
  s13 -> s14 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s13 -> s9 [66, 66] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s13 -> s13 [67, 65535] { R13918 += 1, R13842 += 1, R13798 += 1 };
  s14 -> s14 [0, 65535] { R13918 += 1, R13842 += 1 };
  s14 -> s10 [0, 65535] { R13918 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s2 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s0 -> s3 [0, 65535] { R13920 += 1, R13844 += 1, R13799 += 1, R13800 += 1 };
  s0 -> s0 [0, 65535] { R13919 += 1, R13920 += 1 };
  s0 -> s4 [0, 65535] { R13920 += 1, R13843 += 1, R13844 += 1 };
  s0 -> s5 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s0 -> s6 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s0 -> s7 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s8 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s2 [67, 70] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s0 -> s1 [67, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s9 [75, 75] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s0 -> s2 [76, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s1 -> s1 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s1 -> s2 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s1 -> s5 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s1 -> s6 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s1 -> s7 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s1 -> s8 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s1 -> s2 [67, 70] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s1 -> s1 [67, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s1 -> s9 [75, 75] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s1 -> s2 [76, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s2 -> s2 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s2 -> s5 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s2 -> s6 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s2 -> s2 [67, 70] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s2 -> s9 [75, 75] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s2 -> s2 [76, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s3 -> s1 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s2 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s3 -> s3 [0, 65535] { R13920 += 1, R13844 += 1, R13799 += 1, R13800 += 1 };
  s3 -> s5 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s3 -> s6 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s3 -> s7 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s8 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s2 [67, 70] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s3 -> s1 [67, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s9 [75, 75] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s3 -> s2 [76, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s4 -> s1 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s2 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s4 -> s3 [0, 65535] { R13920 += 1, R13844 += 1, R13799 += 1, R13800 += 1 };
  s4 -> s4 [0, 65535] { R13920 += 1, R13843 += 1, R13844 += 1 };
  s4 -> s5 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s4 -> s6 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s4 -> s7 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s8 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s2 [67, 70] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s4 -> s1 [67, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s9 [75, 75] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s4 -> s2 [76, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s6 -> s6 [0, 70] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s6 -> s12 [75, 75] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s6 -> s6 [76, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s7 -> s6 [0, 70] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s7 -> s7 [0, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13195 += 1, R13196 += 1 };
  s7 -> s12 [75, 75] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s7 -> s6 [76, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s9 -> s9 [0, 65] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s9 -> s10 [0, 65535] { R13920 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R13920 += 1, R13844 += 1 };
  s9 -> s12 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1 };
  s9 -> s13 [66, 66] { R13920 += 1, R13844 += 1, R13800 += 1 };
  s9 -> s9 [67, 70] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s9 -> s9 [67, 65535] { R13920 += 1, R13844 += 1, R13800 += 1 };
  s9 -> s9 [75, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s10 -> s10 [0, 65535] { R13920 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 70] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s12 -> s14 [0, 65535] { R13920 += 1, R13844 += 1 };
  s12 -> s10 [0, 65535] { R13920 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R13920 += 1, R13844 += 1, R13800 += 1 };
  s12 -> s12 [75, 65535] { R13920 += 1, R13844 += 1, R13800 += 1, R13196 += 1 };
  s13 -> s10 [0, 65535] { R13920 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R13920 += 1, R13844 += 1 };
  s14 -> s14 [0, 65535] { R13920 += 1, R13844 += 1 };
  s14 -> s10 [0, 65535] { R13920 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s0 -> s2 [0, 65535] { R13922 += 1, R13845 += 1, R13846 += 1 };
  s0 -> s0 [0, 65535] { R13921 += 1, R13922 += 1 };
  s0 -> s3 [0, 65535] { R13922 += 1, R13846 += 1, R13801 += 1, R13802 += 1 };
  s0 -> s4 [66, 66] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s0 -> s5 [66, 66] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s0 -> s1 [67, 65535] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s1 [0, 65] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s1 [0, 65535] { R13922 += 1, R13846 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R13922 += 1 };
  s1 -> s4 [66, 66] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s5 [66, 66] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s1 [67, 65535] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s1 [0, 65] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s2 [0, 65535] { R13922 += 1, R13845 += 1, R13846 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R13922 += 1, R13846 += 1, R13801 += 1, R13802 += 1 };
  s2 -> s4 [66, 66] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s5 [66, 66] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s1 [67, 65535] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s1 [0, 65] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R13922 += 1 };
  s3 -> s3 [0, 65535] { R13922 += 1, R13846 += 1, R13801 += 1, R13802 += 1 };
  s3 -> s4 [66, 66] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s5 [66, 66] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s1 [67, 65535] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s4 -> s4 [0, 65535] { R13922 += 1, R13846 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R13922 += 1 };
  s5 -> s5 [0, 65535] { R13922 += 1, R13846 += 1, R13802 += 1, R13199 += 1, R13200 += 1 };
  s5 -> s6 [0, 65535] { R13922 += 1, R13846 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R13922 += 1 };
  s6 -> s6 [0, 65535] { R13922 += 1, R13846 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R13922 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R13922 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s0 -> s2 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s0 -> s3 [0, 65535] { R13924 += 1, R13847 += 1, R13848 += 1 };
  s0 -> s0 [0, 65535] { R13923 += 1, R13924 += 1 };
  s0 -> s4 [0, 65535] { R13924 += 1, R13848 += 1, R13803 += 1, R13804 += 1 };
  s0 -> s5 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s0 -> s6 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s0 -> s7 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s0 -> s8 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s0 -> s2 [67, 69] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s0 -> s1 [67, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s0 -> s9 [70, 70] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s0 -> s2 [76, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s1 -> s1 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s1 -> s2 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s1 -> s5 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s1 -> s6 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s1 -> s7 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s1 -> s8 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s1 -> s2 [67, 69] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s1 -> s1 [67, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s1 -> s9 [70, 70] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s1 -> s2 [76, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s2 -> s2 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s2 -> s5 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1 };
  s2 -> s6 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1 };
  s2 -> s2 [67, 69] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s2 -> s2 [67, 65535] { R13924 += 1, R13848 += 1, R13804 += 1 };
  s2 -> s9 [70, 70] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s2 -> s2 [76, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s3 -> s1 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s3 -> s2 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s3 -> s3 [0, 65535] { R13924 += 1, R13847 += 1, R13848 += 1 };
  s3 -> s4 [0, 65535] { R13924 += 1, R13848 += 1, R13803 += 1, R13804 += 1 };
  s3 -> s5 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s3 -> s6 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s3 -> s7 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s3 -> s8 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s3 -> s2 [67, 69] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s3 -> s1 [67, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s3 -> s9 [70, 70] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s3 -> s2 [76, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s4 -> s1 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s4 -> s2 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s4 -> s4 [0, 65535] { R13924 += 1, R13848 += 1, R13803 += 1, R13804 += 1 };
  s4 -> s5 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s4 -> s6 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s4 -> s7 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s4 -> s8 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s4 -> s2 [67, 69] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s4 -> s1 [67, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s4 -> s9 [70, 70] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s4 -> s2 [76, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s6 -> s6 [0, 69] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s6 -> s6 [0, 65535] { R13924 += 1, R13848 += 1, R13804 += 1 };
  s6 -> s12 [70, 70] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s6 -> s6 [76, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s7 -> s6 [0, 69] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s7 -> s7 [0, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13745 += 1, R13746 += 1 };
  s7 -> s12 [70, 70] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s7 -> s6 [76, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s9 -> s9 [0, 65] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s9 -> s9 [0, 65535] { R13924 += 1, R13848 += 1 };
  s9 -> s10 [0, 65535] { R13924 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1 };
  s9 -> s13 [66, 66] { R13924 += 1, R13848 += 1, R13804 += 1 };
  s9 -> s9 [67, 70] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s9 -> s9 [67, 65535] { R13924 += 1, R13848 += 1, R13804 += 1 };
  s9 -> s9 [76, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s10 -> s10 [0, 65535] { R13924 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 70] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s12 -> s10 [0, 65535] { R13924 += 1 };
  s12 -> s12 [0, 65535] { R13924 += 1, R13848 += 1, R13804 += 1 };
  s12 -> s14 [0, 65535] { R13924 += 1, R13848 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s12 [76, 65535] { R13924 += 1, R13848 += 1, R13804 += 1, R13746 += 1 };
  s13 -> s10 [0, 65535] { R13924 += 1 };
  s13 -> s13 [0, 65535] { R13924 += 1, R13848 += 1 };
  s13 -> s11 [0, 65535];
  s14 -> s10 [0, 65535] { R13924 += 1 };
  s14 -> s14 [0, 65535] { R13924 += 1, R13848 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R13848 && R3 - R13924 = 1 && R23 - R13848 = -1 && R24 = R13848 && R25 - R13848 = -1 && R26 = R13848 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R13924 && R32 - R13924 = 1 && R33 = R13924 && R34 - R13924 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R13198 + -1*R13196 - R64 = 0 && R63 + R13197 + R13195 = 0 && R13789 = 0 && R13790 = 0 && R13797 = 0 && R13798 = 0 && R13799 = 0 && R13800 = 0 && R13803 = 0 && R13804 = 0 && R13805 = 0 && R13806 = R13848 && R13807 = 0 && R13808 = R13848 && R13809 = 0 && R13810 = R13848 && R13811 = 0 && R13812 = R13848 && R13813 = 0 && R13814 = R13848 && R13815 = 0 && R13816 = R13848 && R13817 = 0 && R13818 = R13848 && R13819 = 0 && R13820 = R13848 && R13821 = 0 && R13822 = R13848 && R13823 = 0 && R13824 = R13848 && R13825 = 0 && R13826 = R13848 && R13827 = 0 && R13828 = R13848 && R13829 = 0 && R13830 = R13848 && R13831 = 0 && R13832 = R13848 && R13833 = 0 && R13834 = R13848 && R13835 = 0 && R13836 = R13848 && R13837 = 0 && R13838 = R13848 && R13839 = 0 && R13840 = R13848 && R13841 = 0 && R13842 = R13848 && R13843 = 0 && R13844 = R13848 && R13845 = 0 && R13846 = R13848 && R13847 = 0 && R13849 = 0 && R13850 = R13924 && R13851 = 0 && R13852 = R13924 && R13853 = 0 && R13854 = R13924 && R13855 = 0 && R13856 = R13924 && R13857 = 0 && R13858 = R13924 && R13859 = 0 && R13860 = R13924 && R13861 = 0 && R13862 = R13924 && R13863 = 0 && R13864 = R13924 && R13865 = 0 && R13866 = R13924 && R13867 = 0 && R13868 = R13924 && R13869 = 0 && R13870 = R13924 && R13871 = 0 && R13872 = R13924 && R13873 = 0 && R13874 = R13924 && R13875 = 0 && R13876 = R13924 && R13877 = 0 && R13878 = R13924 && R13879 = 0 && R13880 = R13924 && R13881 = 0 && R13882 = R13924 && R13883 = 0 && R13884 = R13924 && R13885 = 0 && R13886 = R13924 && R13887 = 0 && R13888 = R13924 && R13889 = 0 && R13890 = R13924 && R13891 = 0 && R13892 = R13924 && R13893 = 0 && R13894 = R13924 && R13895 = 0 && R13896 = R13924 && R13897 = 0 && R13898 = R13924 && R13899 = 0 && R13900 = R13924 && R13901 = 0 && R13902 = R13924 && R13903 = 0 && R13904 = R13924 && R13905 = 0 && R13906 = R13924 && R13907 = 0 && R13908 = R13924 && R13909 = 0 && R13910 = R13924 && R13911 = 0 && R13912 = R13924 && R13913 = 0 && R13914 = R13924 && R13915 = 0 && R13916 = R13924 && R13917 = 0 && R13918 = R13924 && R13919 = 0 && R13920 = R13924 && R13921 = 0 && R13922 = R13924 && R13923 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R13198 + -1*R13196 - R64 < 1 && 0 < R13848 && -1 < R13924 && (R1 != 0 || R20 = 0 || (R13749 = 0 && R13750 = 0)) && (R1 != 0 || R20 = 0 || (R13751 = 0 && R13752 = 0)) && (R1 != 0 || R20 = 0 || (R13753 = 0 && R13754 = 0)) && (R1 != 0 || R20 = 0 || (R13755 = 0 && R13756 = 0)) && (R1 != 0 || R20 = 0 || (R13757 = 0 && R13758 = 0)) && (R1 != 0 || R20 = 0 || (R13759 = 0 && R13760 = 0)) && (R1 != 0 || R20 = 0 || (R13761 = 0 && R13762 = 0)) && (R1 != 0 || R20 = 0 || (R13763 = 0 && R13764 = 0)) && (R1 != 0 || R20 = 0 || (R13765 = 0 && R13766 = 0)) && (R1 != 0 || R20 = 0 || (R13767 = 0 && R13768 = 0)) && (R59 + R13194 + R13191 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R13198 + -1*R13196 - R64 = 0 || R64 + R13198 + R13196 < 1) && (R53 + R83 + R81 = 0 || R64 + R13198 + R13196 < 1))) && (R59 + R13194 + R13191 != 0 || ((R57 + R13192 + R13189 != 0 || R58 + R13193 + R13190 + -1*R13198 + -1*R13196 - R64 = 0 || R64 + R13198 + R13196 < 1) && (R57 + R13192 + R13189 = 0 || R64 + R13198 + R13196 < 1))) && (R13749 != 0 || R1 = R13750 || R1 < 1) && (R13751 != 0 || R1 = R13752 || R1 < 1) && (R13753 != 0 || R1 = R13754 || R1 < 1) && (R13755 != 0 || R1 = R13756 || R1 < 1) && (R13757 != 0 || R1 = R13758 || R1 < 1) && (R13759 != 0 || R1 = R13760 || R1 < 1) && (R13761 != 0 || R1 = R13762 || R1 < 1) && (R13763 != 0 || R1 = R13764 || R1 < 1) && (R13765 != 0 || R1 = R13766 || R1 < 1) && (R13767 != 0 || R1 = R13768 || R1 < 1) && (R21 = 0 || (R13787 = 0 && R13788 = 0)) && (R21 = 0 || (R13791 = 0 && R13792 = 0)) && (R21 = 0 || (R13793 = 0 && R13794 = 0)) && (R21 = 0 || (R13795 = 0 && R13796 = 0)) && (R21 = 0 || (R13801 = 0 && R13802 = 0)) && (R22 = 0 || (R13769 = 0 && R13770 = 0)) && (R22 = 0 || (R13771 = 0 && R13772 = 0)) && (R22 = 0 || (R13773 = 0 && R13774 = 0)) && (R22 = 0 || (R13775 = 0 && R13776 = 0)) && (R22 = 0 || (R13777 = 0 && R13778 = 0)) && (R22 = 0 || (R13779 = 0 && R13780 = 0)) && (R22 = 0 || (R13781 = 0 && R13782 = 0)) && (R22 = 0 || (R13783 = 0 && R13784 = 0)) && (R22 = 0 || (R13785 = 0 && R13786 = 0)) && (R59 + R13194 + R13191 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R13198 + -1*R13196 - R64 = 0)) && (R59 + R13194 + R13191 = 0 || (R57 + R13192 + R13189 = 0 && R58 + R13193 + R13190 + -1*R13198 + -1*R13196 - R64 = 0)) && (R69 + R13204 + R13201 = 0 || (R67 + R13202 + R13199 = 0 && R68 + R13203 + R13200 = 0)) && (R69 + R13204 + R13201 = 0 || (R73 + R13747 + R13745 = 0 && R74 + R13748 + R13746 = 0)) && (R13749 = 0 || R1 < 1) && (R13751 = 0 || R1 < 1) && (R13753 = 0 || R1 < 1) && (R13755 = 0 || R1 < 1) && (R13757 = 0 || R1 < 1) && (R13759 = 0 || R1 < 1) && (R13761 = 0 || R1 < 1) && (R13763 = 0 || R1 < 1) && (R13765 = 0 || R1 < 1) && (R13767 = 0 || R1 < 1);
// End of Parikh automata intersection problem
