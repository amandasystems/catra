// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11007, R11008, R11009, R11010, R11737, R11738, R11739, R11740, R11741, R11742, R11923, R11924, R11925, R11926, R11927, R11928, R11929, R11930, R11931, R11932, R11933, R11934, R11935, R11936, R11937, R11938, R11939, R11940, R11941, R11942, R11943, R11944, R11945, R11946, R11947, R11948, R11949, R11950, R11951, R11952, R11953, R11954, R11955, R11956, R11957, R11958, R11959, R11960, R11961, R11962, R11963, R11964, R11965, R11966, R11967, R11968, R11969, R11970, R11971, R11972, R11973, R11974, R11975, R11976, R11977, R11978, R11979, R11980, R11981, R11982, R11983, R11984, R11985, R11986, R11987, R11988, R11989, R11990, R11991, R11992, R11993, R11994, R11995, R11996, R11997, R11998, R11999, R12000, R12001, R12002, R12003, R12004, R12005, R12006, R12007, R12008, R12009, R12010, R12011, R12012, R12013, R12014, R12015, R12016, R12017, R12018, R12019, R12020, R12021, R12022, R12023, R12024, R12025, R12026, R12027, R12028, R12029, R12030, R12031, R12032, R12033, R12034, R12035, R12036, R12037, R12038, R12039, R12040, R12041, R12042, R12043, R12044, R12045, R12046, R12047, R12048, R12049, R12050, R12051, R12052, R12053, R12054, R12055, R12056, R12057, R12058, R12059, R12060, R12061, R12062, R12063, R12064, R12065, R12066, R12067, R12068, R12069, R12070, R12071, R12072, R12073, R12074, R12075, R12076, R12077, R12078, R12079, R12080, R12081, R12082, R12083, R12084, R12085, R12086, R12087, R12088, R12089, R12090, R12091, R12092, R12093, R12094, R12095, R12096, R12097, R12098, R12099, R12100, R12101, R12102, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R6637, R6638, R6639, R6640, R6641, R6642, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R12028 += 1 };
  s0 -> s0 [0, 65535] { R12027 += 1, R12028 += 1 };
  s0 -> s2 [66, 66] { R12028 += 1 };
  s0 -> s1 [67, 65535] { R12028 += 1 };
  s1 -> s1 [0, 64] { R12028 += 1 };
  s1 -> s2 [66, 66] { R12028 += 1 };
  s1 -> s1 [67, 65535] { R12028 += 1 };
  s2 -> s2 [0, 64] { R12028 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R12028 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R12029 += 1, R12030 += 1 };
  s0 -> s1 [0, 65535] { R12030 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R12030 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R12032 += 1 };
  s0 -> s0 [0, 65535] { R12031 += 1, R12032 += 1 };
  s0 -> s2 [0, 65535] { R12032 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R12032 += 1 };
  s0 -> s1 [67, 65535] { R12032 += 1 };
  s1 -> s1 [0, 65] { R12032 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R12032 += 1 };
  s1 -> s1 [67, 65535] { R12032 += 1 };
  s2 -> s1 [0, 65] { R12032 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12032 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R12032 += 1 };
  s2 -> s1 [67, 65535] { R12032 += 1 };
  s3 -> s3 [0, 65535] { R12032 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R12034 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R12033 += 1, R12034 += 1 };
  s0 -> s2 [0, 65535] { R12034 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R12034 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R12034 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R12034 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R12034 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12034 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R12034 += 1 };
  s2 -> s1 [0, 8] { R12034 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12034 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R12034 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R12034 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R12034 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R12034 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R12034 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12034 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R12036 += 1, R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R12035 += 1, R12036 += 1 };
  s0 -> s2 [0, 65535] { R12036 += 1, R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R12036 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R12036 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12036 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12036 += 1, R25 += 1, R26 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12036 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R12038 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R12037 += 1, R12038 += 1 };
  s0 -> s2 [0, 65535] { R12038 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R12038 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R12038 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R12038 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R12038 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R12038 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R12038 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R12038 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R12038 += 1, R27 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R12038 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R12038 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R12038 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R12038 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R12038 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12038 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R12040 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R12039 += 1, R12040 += 1 };
  s0 -> s2 [0, 65535] { R12040 += 1, R30 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R12040 += 1, R29 += 1, R30 += 1 };
  s1 -> s2 [0, 65535] { R12040 += 1, R30 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R12040 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R12040 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12040 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R12042 += 1, R11947 += 1, R11948 += 1 };
  s0 -> s2 [0, 65535] { R12042 += 1, R11948 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R12041 += 1, R12042 += 1 };
  s1 -> s1 [0, 65535] { R12042 += 1, R11947 += 1, R11948 += 1 };
  s1 -> s2 [0, 65535] { R12042 += 1, R11948 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R12042 += 1 };
  s2 -> s2 [0, 65535] { R12042 += 1, R11948 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12042 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R12044 += 1, R11950 += 1 };
  s0 -> s0 [0, 65535] { R12043 += 1, R12044 += 1 };
  s0 -> s2 [0, 65535] { R12044 += 1, R11949 += 1, R11950 += 1 };
  s0 -> s3 [66, 66] { R12044 += 1, R11950 += 1 };
  s0 -> s4 [66, 66] { R12044 += 1, R11950 += 1 };
  s0 -> s1 [71, 65535] { R12044 += 1, R11950 += 1 };
  s1 -> s1 [0, 65] { R12044 += 1, R11950 += 1 };
  s1 -> s1 [0, 65535] { R12044 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12044 += 1, R11950 += 1 };
  s1 -> s4 [66, 66] { R12044 += 1, R11950 += 1 };
  s1 -> s1 [71, 65535] { R12044 += 1, R11950 += 1 };
  s2 -> s1 [0, 65] { R12044 += 1, R11950 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12044 += 1, R11949 += 1, R11950 += 1 };
  s2 -> s3 [66, 66] { R12044 += 1, R11950 += 1 };
  s2 -> s4 [66, 66] { R12044 += 1, R11950 += 1 };
  s2 -> s1 [71, 65535] { R12044 += 1, R11950 += 1 };
  s3 -> s3 [0, 65535] { R12044 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R12044 += 1, R11950 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12044 += 1 };
  s4 -> s4 [71, 65535] { R12044 += 1, R11950 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R12046 += 1, R11952 += 1, R49 += 1 };
  s0 -> s0 [0, 65535] { R12045 += 1, R12046 += 1 };
  s0 -> s2 [0, 65535] { R12046 += 1, R11951 += 1, R11952 += 1 };
  s0 -> s3 [66, 66] { R12046 += 1, R11952 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R12046 += 1, R11952 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R12046 += 1, R11952 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R12046 += 1, R11952 += 1, R49 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12046 += 1 };
  s1 -> s3 [66, 66] { R12046 += 1, R11952 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R12046 += 1, R11952 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R12046 += 1, R11952 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R12046 += 1, R11952 += 1, R49 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12046 += 1, R11951 += 1, R11952 += 1 };
  s2 -> s3 [66, 66] { R12046 += 1, R11952 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R12046 += 1, R11952 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R12046 += 1, R11952 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R12046 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R12046 += 1 };
  s4 -> s4 [0, 65535] { R12046 += 1, R11952 += 1, R49 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12046 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R12048 += 1, R11954 += 1, R51 += 1 };
  s0 -> s0 [0, 65535] { R12047 += 1, R12048 += 1 };
  s0 -> s2 [0, 65535] { R12048 += 1, R11953 += 1, R11954 += 1 };
  s0 -> s3 [66, 66] { R12048 += 1, R11954 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R12048 += 1, R11954 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R12048 += 1, R11954 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R12048 += 1, R11954 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R12048 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12048 += 1, R11954 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R12048 += 1, R11954 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R12048 += 1, R11954 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R12048 += 1, R11954 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R12048 += 1, R11953 += 1, R11954 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R12048 += 1, R11954 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R12048 += 1, R11954 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R12048 += 1, R11954 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R12048 += 1, R11954 += 1, R51 += 1 };
  s3 -> s6 [0, 65535] { R12048 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12048 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12048 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R12049 += 1, R12050 += 1 };
  s0 -> s2 [0, 65535] { R12050 += 1, R11955 += 1, R11956 += 1 };
  s0 -> s3 [66, 66] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12050 += 1 };
  s1 -> s3 [66, 66] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12050 += 1, R11955 += 1, R11956 += 1 };
  s2 -> s3 [66, 66] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12050 += 1, R11956 += 1, R53 += 1, R54 += 1 };
  s3 -> s6 [0, 65535] { R12050 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12050 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12050 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R12051 += 1, R12052 += 1 };
  s0 -> s2 [0, 65535] { R12052 += 1, R11957 += 1, R11958 += 1 };
  s0 -> s3 [66, 66] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12052 += 1 };
  s1 -> s3 [66, 66] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12052 += 1, R11957 += 1, R11958 += 1 };
  s2 -> s3 [66, 66] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12052 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12052 += 1, R11958 += 1, R57 += 1, R58 += 1 };
  s4 -> s6 [0, 65535] { R12052 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12052 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s0 -> s0 [0, 65535] { R12053 += 1, R12054 += 1 };
  s0 -> s2 [0, 65535] { R12054 += 1, R11959 += 1, R11960 += 1 };
  s0 -> s3 [66, 66] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65535] { R12054 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R12054 += 1, R11959 += 1, R11960 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s3 -> s3 [0, 65535] { R12054 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R12054 += 1 };
  s4 -> s4 [0, 65535] { R12054 += 1, R11960 += 1, R63 += 1, R64 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R12054 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R12055 += 1, R12056 += 1 };
  s0 -> s2 [0, 65535] { R12056 += 1, R11961 += 1, R11962 += 1 };
  s0 -> s3 [66, 66] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R12056 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12056 += 1, R11961 += 1, R11962 += 1 };
  s2 -> s3 [66, 66] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R12056 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12056 += 1, R11962 += 1, R67 += 1, R68 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12056 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12056 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R12057 += 1, R12058 += 1 };
  s0 -> s2 [0, 65535] { R12058 += 1, R11963 += 1, R11964 += 1 };
  s0 -> s3 [66, 66] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12058 += 1 };
  s1 -> s3 [66, 66] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12058 += 1, R11963 += 1, R11964 += 1 };
  s2 -> s3 [66, 66] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12058 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R12058 += 1 };
  s4 -> s4 [0, 65535] { R12058 += 1, R11964 += 1, R73 += 1, R74 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12058 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R12060 += 1, R11984 += 1 };
  s0 -> s2 [0, 65535] { R12060 += 1, R11983 += 1, R11984 += 1 };
  s0 -> s0 [0, 65535] { R12059 += 1, R12060 += 1 };
  s0 -> s3 [66, 66] { R12060 += 1, R11984 += 1 };
  s0 -> s1 [67, 65535] { R12060 += 1, R11984 += 1 };
  s1 -> s1 [0, 65] { R12060 += 1, R11984 += 1 };
  s1 -> s3 [66, 66] { R12060 += 1, R11984 += 1 };
  s1 -> s1 [67, 65535] { R12060 += 1, R11984 += 1 };
  s2 -> s1 [0, 65] { R12060 += 1, R11984 += 1 };
  s2 -> s2 [0, 65535] { R12060 += 1, R11983 += 1, R11984 += 1 };
  s2 -> s3 [66, 66] { R12060 += 1, R11984 += 1 };
  s2 -> s1 [67, 65535] { R12060 += 1, R11984 += 1 };
  s3 -> s4 [0, 65535] { R12060 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12060 += 1, R11984 += 1 };
  s4 -> s4 [0, 65535] { R12060 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R12062 += 1, R11986 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R12061 += 1, R12062 += 1 };
  s0 -> s2 [0, 65535] { R12062 += 1, R11985 += 1, R11986 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12062 += 1, R11986 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R12062 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12062 += 1, R11986 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R12062 += 1, R11985 += 1, R11986 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12062 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R12064 += 1, R11988 += 1 };
  s0 -> s2 [0, 65535] { R12064 += 1, R11987 += 1, R11988 += 1 };
  s0 -> s0 [0, 65535] { R12063 += 1, R12064 += 1 };
  s0 -> s3 [0, 65535] { R12064 += 1, R11988 += 1, R11 += 1 };
  s0 -> s4 [66, 66] { R12064 += 1, R11988 += 1 };
  s0 -> s1 [67, 65535] { R12064 += 1, R11988 += 1 };
  s1 -> s1 [0, 65] { R12064 += 1, R11988 += 1 };
  s1 -> s1 [0, 65535] { R12064 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [66, 66] { R12064 += 1, R11988 += 1 };
  s1 -> s1 [67, 65535] { R12064 += 1, R11988 += 1 };
  s2 -> s1 [0, 65] { R12064 += 1, R11988 += 1 };
  s2 -> s2 [0, 65535] { R12064 += 1, R11987 += 1, R11988 += 1 };
  s2 -> s3 [0, 65535] { R12064 += 1, R11988 += 1, R11 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R12064 += 1, R11988 += 1 };
  s2 -> s1 [67, 65535] { R12064 += 1, R11988 += 1 };
  s3 -> s1 [0, 65] { R12064 += 1, R11988 += 1 };
  s3 -> s3 [0, 65535] { R12064 += 1, R11988 += 1, R11 += 1 };
  s3 -> s5 [0, 65535] { R12064 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [66, 66] { R12064 += 1, R11988 += 1 };
  s3 -> s1 [67, 65535] { R12064 += 1, R11988 += 1 };
  s4 -> s4 [0, 65535] { R12064 += 1, R11988 += 1 };
  s5 -> s5 [0, 65535] { R12064 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R12066 += 1, R11990 += 1, R11928 += 1 };
  s0 -> s0 [0, 65535] { R12065 += 1, R12066 += 1 };
  s0 -> s2 [0, 65535] { R12066 += 1, R11989 += 1, R11990 += 1 };
  s0 -> s3 [0, 65535] { R12066 += 1, R11990 += 1, R11927 += 1, R11928 += 1 };
  s0 -> s1 [67, 65535] { R12066 += 1, R11990 += 1, R11928 += 1 };
  s1 -> s1 [0, 65] { R12066 += 1, R11990 += 1, R11928 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R12066 += 1 };
  s1 -> s1 [0, 65535] { R12066 += 1, R11990 += 1 };
  s1 -> s1 [67, 65535] { R12066 += 1, R11990 += 1, R11928 += 1 };
  s2 -> s1 [0, 65] { R12066 += 1, R11990 += 1, R11928 += 1 };
  s2 -> s2 [0, 65535] { R12066 += 1, R11989 += 1, R11990 += 1 };
  s2 -> s3 [0, 65535] { R12066 += 1, R11990 += 1, R11927 += 1, R11928 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [67, 65535] { R12066 += 1, R11990 += 1, R11928 += 1 };
  s3 -> s1 [0, 65] { R12066 += 1, R11990 += 1, R11928 += 1 };
  s3 -> s3 [0, 65535] { R12066 += 1, R11990 += 1, R11927 += 1, R11928 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R12066 += 1 };
  s3 -> s1 [67, 65535] { R12066 += 1, R11990 += 1, R11928 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12066 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R12068 += 1, R11991 += 1, R11992 += 1 };
  s0 -> s0 [0, 65535] { R12067 += 1, R12068 += 1 };
  s0 -> s2 [0, 65535] { R12068 += 1, R11992 += 1, R11930 += 1, R20 += 1 };
  s0 -> s3 [0, 65535] { R12068 += 1, R11992 += 1, R11929 += 1, R11930 += 1 };
  s1 -> s1 [0, 65535] { R12068 += 1, R11991 += 1, R11992 += 1 };
  s1 -> s2 [0, 65535] { R12068 += 1, R11992 += 1, R11930 += 1, R20 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R12068 += 1, R11992 += 1, R11929 += 1, R11930 += 1 };
  s2 -> s4 [0, 65535] { R12068 += 1 };
  s2 -> s2 [0, 65535] { R12068 += 1, R11992 += 1, R11930 += 1, R20 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R12068 += 1, R11992 += 1 };
  s3 -> s4 [0, 65535] { R12068 += 1 };
  s3 -> s2 [0, 65535] { R12068 += 1, R11992 += 1, R11930 += 1, R20 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12068 += 1, R11992 += 1, R11929 += 1, R11930 += 1 };
  s4 -> s4 [0, 65535] { R12068 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R12068 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12068 += 1, R11992 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R12070 += 1, R11994 += 1, R11932 += 1 };
  s0 -> s0 [0, 65535] { R12069 += 1, R12070 += 1 };
  s0 -> s2 [0, 65535] { R12070 += 1, R11993 += 1, R11994 += 1 };
  s0 -> s3 [0, 65535] { R12070 += 1, R11994 += 1, R11931 += 1, R11932 += 1 };
  s0 -> s1 [70, 65535] { R12070 += 1, R11994 += 1, R11932 += 1 };
  s1 -> s1 [0, 66] { R12070 += 1, R11994 += 1, R11932 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12070 += 1, R11994 += 1 };
  s1 -> s5 [0, 65535] { R12070 += 1 };
  s1 -> s1 [70, 65535] { R12070 += 1, R11994 += 1, R11932 += 1 };
  s2 -> s1 [0, 66] { R12070 += 1, R11994 += 1, R11932 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12070 += 1, R11993 += 1, R11994 += 1 };
  s2 -> s3 [0, 65535] { R12070 += 1, R11994 += 1, R11931 += 1, R11932 += 1 };
  s2 -> s1 [70, 65535] { R12070 += 1, R11994 += 1, R11932 += 1 };
  s3 -> s1 [0, 66] { R12070 += 1, R11994 += 1, R11932 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R12070 += 1, R11994 += 1, R11931 += 1, R11932 += 1 };
  s3 -> s5 [0, 65535] { R12070 += 1 };
  s3 -> s1 [70, 65535] { R12070 += 1, R11994 += 1, R11932 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12070 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R12072 += 1, R11995 += 1, R11996 += 1 };
  s0 -> s2 [0, 65535] { R12072 += 1, R11996 += 1, R11934 += 1, R78 += 1 };
  s0 -> s3 [0, 65535] { R12072 += 1, R11996 += 1, R11933 += 1, R11934 += 1 };
  s0 -> s0 [0, 65535] { R12071 += 1, R12072 += 1 };
  s1 -> s1 [0, 65535] { R12072 += 1, R11995 += 1, R11996 += 1 };
  s1 -> s2 [0, 65535] { R12072 += 1, R11996 += 1, R11934 += 1, R78 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R12072 += 1, R11996 += 1, R11933 += 1, R11934 += 1 };
  s2 -> s2 [0, 65535] { R12072 += 1, R11996 += 1, R11934 += 1, R78 += 1 };
  s2 -> s4 [0, 65535] { R12072 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R12072 += 1, R11996 += 1 };
  s3 -> s2 [0, 65535] { R12072 += 1, R11996 += 1, R11934 += 1, R78 += 1 };
  s3 -> s4 [0, 65535] { R12072 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12072 += 1, R11996 += 1, R11933 += 1, R11934 += 1 };
  s4 -> s4 [0, 65535] { R12072 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R12072 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12072 += 1, R11996 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s0 -> s0 [0, 65535] { R12073 += 1, R12074 += 1 };
  s0 -> s2 [0, 65535] { R12074 += 1, R11998 += 1, R11936 += 1, R80 += 1 };
  s0 -> s3 [0, 65535] { R12074 += 1, R11997 += 1, R11998 += 1 };
  s0 -> s4 [0, 65535] { R12074 += 1, R11998 += 1, R11935 += 1, R11936 += 1 };
  s0 -> s1 [71, 65535] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s1 -> s1 [0, 69] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s1 -> s5 [0, 65535] { R12074 += 1 };
  s1 -> s1 [0, 65535] { R12074 += 1, R11998 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s2 -> s1 [0, 69] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s2 -> s2 [0, 65535] { R12074 += 1, R11998 += 1, R11936 += 1, R80 += 1 };
  s2 -> s7 [0, 65535] { R12074 += 1, R11998 += 1 };
  s2 -> s5 [0, 65535] { R12074 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [71, 65535] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s3 -> s1 [0, 69] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s3 -> s2 [0, 65535] { R12074 += 1, R11998 += 1, R11936 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R12074 += 1, R11997 += 1, R11998 += 1 };
  s3 -> s4 [0, 65535] { R12074 += 1, R11998 += 1, R11935 += 1, R11936 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [71, 65535] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s4 -> s1 [0, 69] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s4 -> s2 [0, 65535] { R12074 += 1, R11998 += 1, R11936 += 1, R80 += 1 };
  s4 -> s4 [0, 65535] { R12074 += 1, R11998 += 1, R11935 += 1, R11936 += 1 };
  s4 -> s5 [0, 65535] { R12074 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [71, 65535] { R12074 += 1, R11998 += 1, R11936 += 1 };
  s5 -> s5 [0, 65535] { R12074 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12074 += 1, R11998 += 1 };
  s7 -> s5 [0, 65535] { R12074 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R12075 += 1, R12076 += 1 };
  s0 -> s2 [0, 65535] { R12076 += 1, R11999 += 1, R12000 += 1 };
  s0 -> s3 [0, 65535] { R12076 += 1, R12000 += 1, R11937 += 1, R11938 += 1 };
  s0 -> s4 [0, 65535] { R12076 += 1, R12000 += 1, R11938 += 1, R83 += 1, R84 += 1 };
  s0 -> s1 [71, 65535] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s1 -> s5 [0, 65535] { R12076 += 1 };
  s1 -> s6 [0, 65535] { R12076 += 1, R12000 += 1 };
  s1 -> s1 [0, 65535] { R12076 += 1, R12000 += 1, R11938 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [71, 65535] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R12076 += 1, R11999 += 1, R12000 += 1 };
  s2 -> s3 [0, 65535] { R12076 += 1, R12000 += 1, R11937 += 1, R11938 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [0, 65535] { R12076 += 1, R12000 += 1, R11938 += 1, R83 += 1, R84 += 1 };
  s2 -> s1 [71, 65535] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s3 -> s5 [0, 65535] { R12076 += 1 };
  s3 -> s3 [0, 65535] { R12076 += 1, R12000 += 1, R11937 += 1, R11938 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [0, 65535] { R12076 += 1, R12000 += 1, R11938 += 1, R83 += 1, R84 += 1 };
  s3 -> s1 [71, 65535] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s4 -> s5 [0, 65535] { R12076 += 1 };
  s4 -> s6 [0, 65535] { R12076 += 1, R12000 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R12076 += 1, R12000 += 1, R11938 += 1, R83 += 1, R84 += 1 };
  s4 -> s1 [71, 65535] { R12076 += 1, R12000 += 1, R11938 += 1, R84 += 1 };
  s5 -> s5 [0, 65535] { R12076 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R12076 += 1 };
  s6 -> s6 [0, 65535] { R12076 += 1, R12000 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R12077 += 1, R12078 += 1 };
  s0 -> s1 [0, 65535] { R12078 += 1, R12002 += 1, R11940 += 1 };
  s0 -> s2 [0, 65535] { R12078 += 1, R12002 += 1, R11940 += 1, R6641 += 1, R6642 += 1 };
  s0 -> s3 [0, 65535] { R12078 += 1, R12002 += 1, R11939 += 1, R11940 += 1 };
  s0 -> s4 [0, 65535] { R12078 += 1, R12001 += 1, R12002 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12078 += 1, R12002 += 1, R11940 += 1 };
  s1 -> s6 [0, 65535] { R12078 += 1 };
  s1 -> s7 [0, 65535] { R12078 += 1, R12002 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R12078 += 1, R12002 += 1, R11940 += 1 };
  s2 -> s2 [0, 65535] { R12078 += 1, R12002 += 1, R11940 += 1, R6641 += 1, R6642 += 1 };
  s2 -> s6 [0, 65535] { R12078 += 1 };
  s2 -> s7 [0, 65535] { R12078 += 1, R12002 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R12078 += 1, R12002 += 1, R11940 += 1 };
  s3 -> s2 [0, 65535] { R12078 += 1, R12002 += 1, R11940 += 1, R6641 += 1, R6642 += 1 };
  s3 -> s3 [0, 65535] { R12078 += 1, R12002 += 1, R11939 += 1, R11940 += 1 };
  s3 -> s6 [0, 65535] { R12078 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R12078 += 1, R12002 += 1, R11940 += 1 };
  s4 -> s2 [0, 65535] { R12078 += 1, R12002 += 1, R11940 += 1, R6641 += 1, R6642 += 1 };
  s4 -> s3 [0, 65535] { R12078 += 1, R12002 += 1, R11939 += 1, R11940 += 1 };
  s4 -> s4 [0, 65535] { R12078 += 1, R12001 += 1, R12002 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12078 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R12078 += 1 };
  s7 -> s7 [0, 65535] { R12078 += 1, R12002 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s0 -> s0 [0, 65535] { R12079 += 1, R12080 += 1 };
  s0 -> s2 [0, 65535] { R12080 += 1, R12004 += 1, R11941 += 1, R11942 += 1 };
  s0 -> s3 [0, 65535] { R12080 += 1, R12003 += 1, R12004 += 1 };
  s0 -> s4 [75, 75] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s0 -> s1 [76, 65535] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s1 -> s1 [0, 70] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s1 -> s4 [75, 75] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s1 -> s1 [76, 65535] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s2 -> s1 [0, 70] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s2 -> s2 [0, 65535] { R12080 += 1, R12004 += 1, R11941 += 1, R11942 += 1 };
  s2 -> s4 [75, 75] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s2 -> s1 [76, 65535] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s3 -> s1 [0, 70] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s3 -> s2 [0, 65535] { R12080 += 1, R12004 += 1, R11941 += 1, R11942 += 1 };
  s3 -> s3 [0, 65535] { R12080 += 1, R12003 += 1, R12004 += 1 };
  s3 -> s4 [75, 75] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s3 -> s1 [76, 65535] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s4 -> s4 [0, 70] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s4 -> s5 [0, 65535] { R12080 += 1, R12004 += 1 };
  s4 -> s4 [0, 65535] { R12080 += 1, R12004 += 1, R11942 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R12080 += 1 };
  s4 -> s4 [75, 65535] { R12080 += 1, R12004 += 1, R11942 += 1, R11010 += 1 };
  s5 -> s5 [0, 65535] { R12080 += 1, R12004 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R12080 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12080 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R12082 += 1, R12006 += 1, R11943 += 1, R11944 += 1 };
  s0 -> s2 [0, 65535] { R12082 += 1, R12006 += 1, R11944 += 1, R11741 += 1, R11742 += 1 };
  s0 -> s0 [0, 65535] { R12081 += 1, R12082 += 1 };
  s0 -> s3 [0, 65535] { R12082 += 1, R12005 += 1, R12006 += 1 };
  s0 -> s4 [0, 65535] { R12082 += 1, R12006 += 1, R11944 += 1 };
  s1 -> s1 [0, 65535] { R12082 += 1, R12006 += 1, R11943 += 1, R11944 += 1 };
  s1 -> s2 [0, 65535] { R12082 += 1, R12006 += 1, R11944 += 1, R11741 += 1, R11742 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R12082 += 1 };
  s1 -> s4 [0, 65535] { R12082 += 1, R12006 += 1, R11944 += 1 };
  s2 -> s2 [0, 65535] { R12082 += 1, R12006 += 1, R11944 += 1, R11741 += 1, R11742 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R12082 += 1 };
  s2 -> s7 [0, 65535] { R12082 += 1, R12006 += 1 };
  s2 -> s4 [0, 65535] { R12082 += 1, R12006 += 1, R11944 += 1 };
  s3 -> s1 [0, 65535] { R12082 += 1, R12006 += 1, R11943 += 1, R11944 += 1 };
  s3 -> s2 [0, 65535] { R12082 += 1, R12006 += 1, R11944 += 1, R11741 += 1, R11742 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12082 += 1, R12005 += 1, R12006 += 1 };
  s3 -> s4 [0, 65535] { R12082 += 1, R12006 += 1, R11944 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R12082 += 1 };
  s4 -> s7 [0, 65535] { R12082 += 1, R12006 += 1 };
  s4 -> s4 [0, 65535] { R12082 += 1, R12006 += 1, R11944 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12082 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R12082 += 1 };
  s7 -> s7 [0, 65535] { R12082 += 1, R12006 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s0 -> s2 [0, 65535] { R12084 += 1, R12007 += 1, R12008 += 1 };
  s0 -> s3 [0, 65535] { R12084 += 1, R12008 += 1, R11945 += 1, R11946 += 1 };
  s0 -> s1 [0, 65535] { R12084 += 1, R12008 += 1, R11946 += 1 };
  s0 -> s0 [0, 65535] { R12083 += 1, R12084 += 1 };
  s0 -> s4 [70, 70] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s0 -> s5 [70, 70] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s0 -> s1 [76, 65535] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s1 -> s1 [0, 69] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s1 -> s6 [0, 65535] { R12084 += 1 };
  s1 -> s1 [0, 65535] { R12084 += 1, R12008 += 1, R11946 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R12084 += 1, R12008 += 1 };
  s1 -> s4 [70, 70] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s1 -> s5 [70, 70] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s1 -> s1 [76, 65535] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s2 -> s1 [0, 69] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s2 -> s2 [0, 65535] { R12084 += 1, R12007 += 1, R12008 += 1 };
  s2 -> s3 [0, 65535] { R12084 += 1, R12008 += 1, R11945 += 1, R11946 += 1 };
  s2 -> s1 [0, 65535] { R12084 += 1, R12008 += 1, R11946 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s2 -> s5 [70, 70] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s2 -> s1 [76, 65535] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s3 -> s1 [0, 69] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s3 -> s6 [0, 65535] { R12084 += 1 };
  s3 -> s3 [0, 65535] { R12084 += 1, R12008 += 1, R11945 += 1, R11946 += 1 };
  s3 -> s1 [0, 65535] { R12084 += 1, R12008 += 1, R11946 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [70, 70] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s3 -> s5 [70, 70] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s3 -> s1 [76, 65535] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s4 -> s4 [0, 70] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s4 -> s4 [0, 65535] { R12084 += 1, R12008 += 1, R11946 += 1 };
  s4 -> s6 [0, 65535] { R12084 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R12084 += 1, R12008 += 1 };
  s4 -> s4 [76, 65535] { R12084 += 1, R12008 += 1, R11946 += 1, R11926 += 1 };
  s5 -> s6 [0, 65535] { R12084 += 1 };
  s5 -> s5 [0, 65535] { R12084 += 1, R12008 += 1, R11946 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R12084 += 1, R12008 += 1 };
  s6 -> s6 [0, 65535] { R12084 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R12084 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R12084 += 1, R12008 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R12086 += 1, R12010 += 1, R11965 += 1, R11966 += 1 };
  s0 -> s0 [0, 65535] { R12085 += 1, R12086 += 1 };
  s0 -> s2 [0, 65535] { R12086 += 1, R12010 += 1, R11966 += 1, R21 += 1 };
  s0 -> s3 [0, 65535] { R12086 += 1, R12009 += 1, R12010 += 1 };
  s1 -> s1 [0, 65535] { R12086 += 1, R12010 += 1, R11965 += 1, R11966 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R12086 += 1, R12010 += 1, R11966 += 1, R21 += 1 };
  s1 -> s6 [0, 65535] { R12086 += 1 };
  s2 -> s5 [0, 65535] { R12086 += 1, R12010 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12086 += 1, R12010 += 1, R11966 += 1, R21 += 1 };
  s2 -> s6 [0, 65535] { R12086 += 1 };
  s3 -> s1 [0, 65535] { R12086 += 1, R12010 += 1, R11965 += 1, R11966 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R12086 += 1, R12010 += 1, R11966 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R12086 += 1, R12009 += 1, R12010 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12086 += 1, R12010 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R12086 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R12086 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s0 -> s0 [0, 65535] { R12087 += 1, R12088 += 1 };
  s0 -> s2 [0, 65535] { R12088 += 1, R12011 += 1, R12012 += 1 };
  s0 -> s3 [0, 65535] { R12088 += 1, R12012 += 1, R11967 += 1, R11968 += 1 };
  s0 -> s4 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s0 -> s5 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s0 -> s6 [70, 70] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s0 -> s1 [71, 65535] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s1 -> s1 [0, 65] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s1 -> s4 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s1 -> s5 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s1 -> s6 [70, 70] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s1 -> s1 [71, 65535] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s2 -> s1 [0, 65] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s2 -> s2 [0, 65535] { R12088 += 1, R12011 += 1, R12012 += 1 };
  s2 -> s3 [0, 65535] { R12088 += 1, R12012 += 1, R11967 += 1, R11968 += 1 };
  s2 -> s4 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s2 -> s5 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s2 -> s6 [70, 70] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s2 -> s1 [71, 65535] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s3 -> s1 [0, 65] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s3 -> s3 [0, 65535] { R12088 += 1, R12012 += 1, R11967 += 1, R11968 += 1 };
  s3 -> s4 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s3 -> s5 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s3 -> s6 [70, 70] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s3 -> s1 [71, 65535] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s5 -> s5 [0, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s5 -> s9 [70, 70] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s5 -> s5 [71, 65535] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s6 -> s6 [0, 65] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R12088 += 1, R12012 += 1 };
  s6 -> s8 [0, 65535] { R12088 += 1 };
  s6 -> s9 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s6 -> s10 [66, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s6 -> s6 [70, 65535] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R12088 += 1 };
  s9 -> s9 [0, 66] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R12088 += 1 };
  s9 -> s9 [0, 65535] { R12088 += 1, R12012 += 1 };
  s9 -> s9 [70, 65535] { R12088 += 1, R12012 += 1, R11968 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R12088 += 1 };
  s10 -> s10 [0, 65535] { R12088 += 1, R12012 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R12090 += 1, R12013 += 1, R12014 += 1 };
  s0 -> s0 [0, 65535] { R12089 += 1, R12090 += 1 };
  s0 -> s3 [0, 65535] { R12090 += 1, R12014 += 1, R11969 += 1, R11970 += 1 };
  s0 -> s4 [66, 66] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s1 -> s1 [0, 65535] { R12090 += 1, R12014 += 1 };
  s1 -> s6 [0, 65535] { R12090 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s2 -> s2 [0, 65535] { R12090 += 1, R12013 += 1, R12014 += 1 };
  s2 -> s3 [0, 65535] { R12090 += 1, R12014 += 1, R11969 += 1, R11970 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s3 -> s6 [0, 65535] { R12090 += 1 };
  s3 -> s3 [0, 65535] { R12090 += 1, R12014 += 1, R11969 += 1, R11970 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s4 -> s6 [0, 65535] { R12090 += 1 };
  s4 -> s8 [0, 65535] { R12090 += 1, R12014 += 1 };
  s4 -> s4 [0, 65535] { R12090 += 1, R12014 += 1, R11970 += 1, R77 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R12090 += 1 };
  s5 -> s5 [0, 65535] { R12090 += 1, R12014 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R12090 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R12090 += 1 };
  s8 -> s8 [0, 65535] { R12090 += 1, R12014 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s0 -> s0 [0, 65535] { R12091 += 1, R12092 += 1 };
  s0 -> s2 [0, 65535] { R12092 += 1, R12015 += 1, R12016 += 1 };
  s0 -> s3 [0, 65535] { R12092 += 1, R12016 += 1, R11971 += 1, R11972 += 1 };
  s0 -> s4 [66, 66] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s1 -> s6 [0, 65535] { R12092 += 1 };
  s1 -> s1 [0, 65535] { R12092 += 1, R12016 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [66, 66] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R12092 += 1, R12015 += 1, R12016 += 1 };
  s2 -> s3 [0, 65535] { R12092 += 1, R12016 += 1, R11971 += 1, R11972 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [66, 66] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s3 -> s6 [0, 65535] { R12092 += 1 };
  s3 -> s3 [0, 65535] { R12092 += 1, R12016 += 1, R11971 += 1, R11972 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [66, 66] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R12092 += 1, R12016 += 1 };
  s4 -> s6 [0, 65535] { R12092 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R12092 += 1 };
  s5 -> s7 [0, 65535] { R12092 += 1, R12016 += 1 };
  s5 -> s5 [0, 65535] { R12092 += 1, R12016 += 1, R11972 += 1, R79 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R12092 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R12092 += 1 };
  s7 -> s7 [0, 65535] { R12092 += 1, R12016 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R12094 += 1, R12017 += 1, R12018 += 1 };
  s0 -> s0 [0, 65535] { R12093 += 1, R12094 += 1 };
  s0 -> s3 [0, 65535] { R12094 += 1, R12018 += 1, R11973 += 1, R11974 += 1 };
  s0 -> s4 [66, 66] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s1 -> s6 [0, 65535] { R12094 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R12094 += 1, R12018 += 1 };
  s1 -> s4 [66, 66] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R12094 += 1, R12017 += 1, R12018 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R12094 += 1, R12018 += 1, R11973 += 1, R11974 += 1 };
  s2 -> s4 [66, 66] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535] { R12094 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R12094 += 1, R12018 += 1, R11973 += 1, R11974 += 1 };
  s3 -> s4 [66, 66] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R12094 += 1, R12018 += 1 };
  s4 -> s6 [0, 65535] { R12094 += 1 };
  s4 -> s4 [0, 65535] { R12094 += 1, R12018 += 1, R11974 += 1, R81 += 1, R82 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R12094 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R12094 += 1, R12018 += 1 };
  s6 -> s6 [0, 65535] { R12094 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R12094 += 1, R12018 += 1 };
  s8 -> s6 [0, 65535] { R12094 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s2 [0, 65] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s3 [0, 65535] { R12096 += 1, R12019 += 1, R12020 += 1 };
  s0 -> s0 [0, 65535] { R12095 += 1, R12096 += 1 };
  s0 -> s4 [0, 65535] { R12096 += 1, R12020 += 1, R11975 += 1, R11976 += 1 };
  s0 -> s5 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s6 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s7 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s8 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s1 [67, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s2 [67, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s1 [0, 65] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s2 [0, 65] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s5 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s6 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s7 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s8 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s1 [67, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s2 [67, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [0, 65] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s9 [0, 65535] { R12096 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s2 [0, 65535] { R12096 += 1, R12020 += 1 };
  s2 -> s7 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s8 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [67, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s1 [0, 65] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s2 [0, 65] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s3 [0, 65535] { R12096 += 1, R12019 += 1, R12020 += 1 };
  s3 -> s4 [0, 65535] { R12096 += 1, R12020 += 1, R11975 += 1, R11976 += 1 };
  s3 -> s5 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s6 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s7 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s8 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s1 [67, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s2 [67, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s1 [0, 65] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s2 [0, 65] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s4 [0, 65535] { R12096 += 1, R12020 += 1, R11975 += 1, R11976 += 1 };
  s4 -> s5 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s6 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s7 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s8 [66, 66] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s1 [67, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s2 [67, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s6 -> s6 [0, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6637 += 1, R6638 += 1 };
  s6 -> s7 [0, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s7 -> s9 [0, 65535] { R12096 += 1 };
  s7 -> s10 [0, 65535];
  s7 -> s7 [0, 65535] { R12096 += 1, R12020 += 1, R11976 += 1, R6638 += 1, R6639 += 1 };
  s7 -> s11 [0, 65535] { R12096 += 1, R12020 += 1 };
  s8 -> s9 [0, 65535] { R12096 += 1 };
  s8 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R12096 += 1, R12020 += 1 };
  s9 -> s9 [0, 65535] { R12096 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s9 [0, 65535] { R12096 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R12096 += 1, R12020 += 1 };
  accepting s8, s2, s9, s7, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s0 -> s2 [0, 65] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s3 [0, 65535] { R12098 += 1, R12022 += 1, R11977 += 1, R11978 += 1 };
  s0 -> s4 [0, 65535] { R12098 += 1, R12021 += 1, R12022 += 1 };
  s0 -> s0 [0, 65535] { R12097 += 1, R12098 += 1 };
  s0 -> s5 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s0 -> s6 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s0 -> s7 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s8 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s1 [67, 70] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s0 -> s2 [67, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s1 [76, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s1 -> s1 [0, 65] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s1 -> s9 [0, 65535] { R12098 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s1 [0, 65535] { R12098 += 1, R12022 += 1 };
  s1 -> s5 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s1 -> s6 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s1 -> s1 [67, 70] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s1 -> s1 [76, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s2 -> s1 [0, 65] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s2 -> s2 [0, 65] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s5 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s2 -> s6 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s2 -> s7 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s8 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s1 [67, 70] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s2 -> s2 [67, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s1 [76, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s3 -> s1 [0, 65] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s3 -> s2 [0, 65] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s3 [0, 65535] { R12098 += 1, R12022 += 1, R11977 += 1, R11978 += 1 };
  s3 -> s5 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s3 -> s6 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s3 -> s7 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s8 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s1 [67, 70] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s3 -> s2 [67, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s1 [76, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s4 -> s1 [0, 65] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s4 -> s2 [0, 65] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s3 [0, 65535] { R12098 += 1, R12022 += 1, R11977 += 1, R11978 += 1 };
  s4 -> s4 [0, 65535] { R12098 += 1, R12021 += 1, R12022 += 1 };
  s4 -> s5 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s4 -> s6 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s4 -> s7 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s8 [66, 66] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s1 [67, 70] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s4 -> s2 [67, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s1 [76, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s5 -> s5 [0, 65535] { R12098 += 1, R12022 += 1 };
  s5 -> s9 [0, 65535] { R12098 += 1 };
  s5 -> s10 [0, 65535];
  s6 -> s6 [0, 70] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s6 -> s9 [0, 65535] { R12098 += 1 };
  s6 -> s6 [0, 65535] { R12098 += 1, R12022 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s6 [76, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s8 -> s6 [0, 70] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s8 -> s8 [0, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11007 += 1, R11008 += 1 };
  s8 -> s6 [76, 65535] { R12098 += 1, R12022 += 1, R11978 += 1, R11008 += 1 };
  s9 -> s9 [0, 65535] { R12098 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s5, s9, s6, s1, s10;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s0 -> s2 [0, 65] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s0 -> s3 [0, 65535] { R12100 += 1, R12023 += 1, R12024 += 1 };
  s0 -> s4 [0, 65535] { R12100 += 1, R12024 += 1, R11979 += 1, R11980 += 1 };
  s0 -> s0 [0, 65535] { R12099 += 1, R12100 += 1 };
  s0 -> s5 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s0 -> s6 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s0 -> s7 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s0 -> s8 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s0 -> s1 [67, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s0 -> s2 [67, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s1 -> s1 [0, 65] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s1 -> s2 [0, 65] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s1 -> s5 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s1 -> s6 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s1 -> s7 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s1 -> s8 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s1 -> s1 [67, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s1 -> s2 [67, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s2 -> s2 [0, 65] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s2 -> s9 [0, 65535] { R12100 += 1 };
  s2 -> s2 [0, 65535] { R12100 += 1, R12024 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s7 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s2 -> s8 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s2 -> s2 [67, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s3 -> s1 [0, 65] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s3 -> s2 [0, 65] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s3 -> s3 [0, 65535] { R12100 += 1, R12023 += 1, R12024 += 1 };
  s3 -> s4 [0, 65535] { R12100 += 1, R12024 += 1, R11979 += 1, R11980 += 1 };
  s3 -> s5 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s3 -> s6 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s3 -> s7 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s3 -> s8 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s3 -> s1 [67, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s3 -> s2 [67, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s4 -> s1 [0, 65] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s4 -> s2 [0, 65] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s4 -> s4 [0, 65535] { R12100 += 1, R12024 += 1, R11979 += 1, R11980 += 1 };
  s4 -> s5 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s4 -> s6 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s4 -> s7 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s4 -> s8 [66, 66] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s4 -> s1 [67, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s4 -> s2 [67, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s5 -> s5 [0, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11737 += 1, R11738 += 1 };
  s5 -> s7 [0, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s7 -> s7 [0, 65535] { R12100 += 1, R12024 += 1, R11980 += 1, R11738 += 1, R11739 += 1 };
  s7 -> s11 [0, 65535] { R12100 += 1, R12024 += 1 };
  s7 -> s9 [0, 65535] { R12100 += 1 };
  s7 -> s10 [0, 65535];
  s8 -> s8 [0, 65535] { R12100 += 1, R12024 += 1 };
  s8 -> s9 [0, 65535] { R12100 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R12100 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R12100 += 1, R12024 += 1 };
  s11 -> s9 [0, 65535] { R12100 += 1 };
  s11 -> s10 [0, 65535];
  accepting s8, s2, s9, s7, s10, s11;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s0 -> s2 [0, 65] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s0 -> s3 [0, 65535] { R12102 += 1, R12025 += 1, R12026 += 1 };
  s0 -> s4 [0, 65535] { R12102 += 1, R12026 += 1, R11981 += 1, R11982 += 1 };
  s0 -> s0 [0, 65535] { R12101 += 1, R12102 += 1 };
  s0 -> s5 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s0 -> s6 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s0 -> s7 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s0 -> s8 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s0 -> s1 [67, 69] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s0 -> s2 [67, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s0 -> s1 [76, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s1 -> s1 [0, 65] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R12102 += 1, R12026 += 1 };
  s1 -> s10 [0, 65535] { R12102 += 1 };
  s1 -> s7 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1 };
  s1 -> s8 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1 };
  s1 -> s1 [67, 69] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s1 -> s1 [67, 65535] { R12102 += 1, R12026 += 1, R11982 += 1 };
  s1 -> s1 [76, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s2 -> s1 [0, 65] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s2 -> s2 [0, 65] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s2 -> s5 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s2 -> s6 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s2 -> s7 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s2 -> s8 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s2 -> s1 [67, 69] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s2 -> s2 [67, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s2 -> s1 [76, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s3 -> s1 [0, 65] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s3 -> s2 [0, 65] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s3 -> s3 [0, 65535] { R12102 += 1, R12025 += 1, R12026 += 1 };
  s3 -> s4 [0, 65535] { R12102 += 1, R12026 += 1, R11981 += 1, R11982 += 1 };
  s3 -> s5 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s3 -> s6 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s3 -> s7 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s3 -> s8 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s3 -> s1 [67, 69] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s3 -> s2 [67, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s3 -> s1 [76, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s4 -> s1 [0, 65] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s4 -> s2 [0, 65] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s4 -> s4 [0, 65535] { R12102 += 1, R12026 += 1, R11981 += 1, R11982 += 1 };
  s4 -> s5 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s4 -> s6 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s4 -> s7 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s4 -> s8 [66, 66] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s4 -> s1 [67, 69] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s4 -> s2 [67, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s4 -> s1 [76, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s6 -> s7 [0, 69] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s6 -> s6 [0, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11923 += 1, R11924 += 1 };
  s6 -> s7 [76, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s7 -> s7 [0, 69] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R12102 += 1, R12026 += 1, R11982 += 1 };
  s7 -> s11 [0, 65535] { R12102 += 1, R12026 += 1 };
  s7 -> s10 [0, 65535] { R12102 += 1 };
  s7 -> s7 [76, 65535] { R12102 += 1, R12026 += 1, R11982 += 1, R11924 += 1 };
  s8 -> s8 [0, 65535] { R12102 += 1, R12026 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R12102 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R12102 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R12102 += 1, R12026 += 1 };
  s11 -> s10 [0, 65535] { R12102 += 1 };
  accepting s8, s9, s1, s7, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R1 = R11942 && R2 = R12026 && R3 - R12102 = 1 && R23 - R12026 = -1 && R24 = R12026 && R25 - R12026 = -1 && R26 = R12026 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R12102 && R32 - R12102 = 1 && R33 = R12102 && R34 - R12102 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R11010 + -1*R11008 - R64 = 0 && R63 + R11009 + R11007 = 0 && R11941 = 0 && R11967 = 0 && R11968 = 0 && R11975 = 0 && R11976 = 0 && R11977 = 0 && R11978 = 0 && R11979 = 0 && R11980 = 0 && R11981 = 0 && R11982 = 0 && R11983 = 0 && R11984 = R12026 && R11985 = 0 && R11986 = R12026 && R11987 = 0 && R11988 = R12026 && R11989 = 0 && R11990 = R12026 && R11991 = 0 && R11992 = R12026 && R11993 = 0 && R11994 = R12026 && R11995 = 0 && R11996 = R12026 && R11997 = 0 && R11998 = R12026 && R11999 = 0 && R12000 = R12026 && R12001 = 0 && R12002 = R12026 && R12003 = 0 && R12004 = R12026 && R12005 = 0 && R12006 = R12026 && R12007 = 0 && R12008 = R12026 && R12009 = 0 && R12010 = R12026 && R12011 = 0 && R12012 = R12026 && R12013 = 0 && R12014 = R12026 && R12015 = 0 && R12016 = R12026 && R12017 = 0 && R12018 = R12026 && R12019 = 0 && R12020 = R12026 && R12021 = 0 && R12022 = R12026 && R12023 = 0 && R12024 = R12026 && R12025 = 0 && R12027 = 0 && R12028 = R12102 && R12029 = 0 && R12030 = R12102 && R12031 = 0 && R12032 = R12102 && R12033 = 0 && R12034 = R12102 && R12035 = 0 && R12036 = R12102 && R12037 = 0 && R12038 = R12102 && R12039 = 0 && R12040 = R12102 && R12041 = 0 && R12042 = R12102 && R12043 = 0 && R12044 = R12102 && R12045 = 0 && R12046 = R12102 && R12047 = 0 && R12048 = R12102 && R12049 = 0 && R12050 = R12102 && R12051 = 0 && R12052 = R12102 && R12053 = 0 && R12054 = R12102 && R12055 = 0 && R12056 = R12102 && R12057 = 0 && R12058 = R12102 && R12059 = 0 && R12060 = R12102 && R12061 = 0 && R12062 = R12102 && R12063 = 0 && R12064 = R12102 && R12065 = 0 && R12066 = R12102 && R12067 = 0 && R12068 = R12102 && R12069 = 0 && R12070 = R12102 && R12071 = 0 && R12072 = R12102 && R12073 = 0 && R12074 = R12102 && R12075 = 0 && R12076 = R12102 && R12077 = 0 && R12078 = R12102 && R12079 = 0 && R12080 = R12102 && R12081 = 0 && R12082 = R12102 && R12083 = 0 && R12084 = R12102 && R12085 = 0 && R12086 = R12102 && R12087 = 0 && R12088 = R12102 && R12089 = 0 && R12090 = R12102 && R12091 = 0 && R12092 = R12102 && R12093 = 0 && R12094 = R12102 && R12095 = 0 && R12096 = R12102 && R12097 = 0 && R12098 = R12102 && R12099 = 0 && R12100 = R12102 && R12101 = 0 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R11010 + -1*R11008 - R64 < 1 && -1 < R11942 && 0 < R12026 && -1 < R12102 && (R59 + R6642 + R6639 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R11010 + -1*R11008 - R64 = 0 || R64 + R11010 + R11008 < 1) && (R53 + R83 + R81 = 0 || R64 + R11010 + R11008 < 1))) && (R59 + R6642 + R6639 != 0 || ((R57 + R6640 + R6637 != 0 || R58 + R6641 + R6638 + -1*R11010 + -1*R11008 - R64 = 0 || R64 + R11010 + R11008 < 1) && (R57 + R6640 + R6637 = 0 || R64 + R11010 + R11008 < 1))) && (R11927 != 0 || R11928 = R11942 || (R20 = 0 && R11942 = 0)) && (R11929 != 0 || R11930 = R11942 || (R20 = 0 && R11942 = 0)) && (R11931 != 0 || R11932 = R11942 || (R20 = 0 && R11942 = 0)) && (R11933 != 0 || R11934 = R11942 || (R20 = 0 && R11942 = 0)) && (R11935 != 0 || R11936 = R11942 || (R20 = 0 && R11942 = 0)) && (R11937 != 0 || R11938 = R11942 || (R20 = 0 && R11942 = 0)) && (R11939 != 0 || R11940 = R11942 || (R20 = 0 && R11942 = 0)) && (R11943 != 0 || R11942 = R11944 || (R20 = 0 && R11942 = 0)) && (R11945 != 0 || R11942 = R11946 || (R20 = 0 && R11942 = 0)) && (R21 = 0 || (R11965 = 0 && R11966 = 0)) && (R21 = 0 || (R11969 = 0 && R11970 = 0)) && (R21 = 0 || (R11971 = 0 && R11972 = 0)) && (R21 = 0 || (R11973 = 0 && R11974 = 0)) && (R22 = 0 || (R11947 = 0 && R11948 = 0)) && (R22 = 0 || (R11949 = 0 && R11950 = 0)) && (R22 = 0 || (R11951 = 0 && R11952 = 0)) && (R22 = 0 || (R11953 = 0 && R11954 = 0)) && (R22 = 0 || (R11955 = 0 && R11956 = 0)) && (R22 = 0 || (R11957 = 0 && R11958 = 0)) && (R22 = 0 || (R11959 = 0 && R11960 = 0)) && (R22 = 0 || (R11961 = 0 && R11962 = 0)) && (R22 = 0 || (R11963 = 0 && R11964 = 0)) && (R59 + R6642 + R6639 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R11010 + -1*R11008 - R64 = 0)) && (R59 + R6642 + R6639 = 0 || (R57 + R6640 + R6637 = 0 && R58 + R6641 + R6638 + -1*R11010 + -1*R11008 - R64 = 0)) && (R69 + R11742 + R11739 = 0 || (R67 + R11740 + R11737 = 0 && R68 + R11741 + R11738 = 0)) && (R69 + R11742 + R11739 = 0 || (R73 + R11925 + R11923 = 0 && R74 + R11926 + R11924 = 0)) && (R11927 = 0 || (R20 = 0 && R11942 = 0)) && (R11929 = 0 || (R20 = 0 && R11942 = 0)) && (R11931 = 0 || (R20 = 0 && R11942 = 0)) && (R11933 = 0 || (R20 = 0 && R11942 = 0)) && (R11935 = 0 || (R20 = 0 && R11942 = 0)) && (R11937 = 0 || (R20 = 0 && R11942 = 0)) && (R11939 = 0 || (R20 = 0 && R11942 = 0)) && (R11943 = 0 || (R20 = 0 && R11942 = 0)) && (R11945 = 0 || (R20 = 0 && R11942 = 0));
// End of Parikh automata intersection problem
