// Parikh automata intersection problem, generated by OSTRICH+
counter int R0, R10, R101, R102, R105, R106, R107, R11, R111, R112, R115, R116, R117, R12, R121, R122, R125, R126, R127, R128, R129, R130, R131, R132, R133, R134, R135, R136, R137, R138, R139, R140, R141, R142, R143, R144, R145, R146, R147, R148, R16, R19, R2, R22, R28, R29, R3, R34, R35, R36, R39, R4, R40, R41, R42, R43, R44, R45, R46, R47, R48, R49, R50, R51, R52, R53, R54, R55, R56, R57, R58, R58247, R58248, R58249, R58250, R58251, R58252, R58253, R58254, R58255, R58256, R58257, R58258, R58259, R58260, R58261, R58262, R58263, R58264, R58265, R58266, R58267, R58268, R58269, R58270, R58271, R58272, R58273, R58274, R58275, R58276, R58277, R58278, R59, R6, R60, R61, R62, R63, R64, R67883, R67884, R67885, R67886, R67887, R67888, R67889, R67890, R67891, R67892, R67893, R67894, R67895, R67896, R67897, R67898, R68097, R68098, R68099, R68100, R68101, R68102, R68103, R68104, R68105, R68106, R68107, R68108, R68109, R68110, R68111, R68112, R68113, R68114, R68115, R68116, R68117, R68118, R68119, R68120, R68121, R68122, R68123, R68124, R68125, R68126, R68127, R68128, R68129, R68130, R68131, R68132, R68133, R68134, R68135, R68136, R68137, R68138, R68139, R68140, R68141, R68142, R68143, R68144, R68145, R68146, R68147, R68148, R68149, R68150, R68151, R68152, R68153, R68154, R68155, R68156, R68157, R68158, R68159, R68160, R68161, R68162, R68163, R68164, R68165, R68166, R68167, R68168, R68169, R68170, R68171, R68172, R68173, R68174, R68175, R68176, R68177, R68178, R68179, R68180, R68181, R68182, R68183, R68184, R68185, R68186, R68187, R68188, R68189, R68190, R68191, R68192, R68193, R68194, R68195, R68196, R68197, R68198, R68199, R68200, R68201, R68202, R68203, R68204, R68205, R68206, R68207, R68208, R68209, R68210, R68211, R68212, R68213, R68214, R68215, R68216, R68217, R68218, R68219, R68220, R68221, R68222, R68223, R68224, R68225, R68226, R68227, R68228, R68229, R68230, R68231, R68232, R68233, R68234, R68235, R68236, R68237, R68238, R68239, R68240, R68241, R68242, R68243, R68244, R68245, R68246, R68247, R68248, R68249, R68250, R68251, R68252, R68253, R68254, R68255, R68256, R68257, R68258, R68259, R68260, R68261, R68262, R68263, R68264, R68265, R68266, R68267, R68268, R68269, R68270, R68271, R68272, R68273, R68274, R68275, R68276, R68277, R68278, R68279, R68280, R68281, R68282, R68283, R68284, R68285, R68286, R68287, R68288, R68289, R68290, R68291, R68292, R68293, R68294, R7, R71, R72, R73, R74, R75, R76, R77, R78, R79, R8, R80, R81, R82, R9, R97, R99;
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 64];
  s0 -> s1 [71, 71];
  s0 -> s0 [72, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 64];
  s1 -> s1 [71, 65535];
  accepting s1;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R6 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R28 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s1 [0, 70];
  s0 -> s0 [0, 65535] { R29 += 1 };
  s0 -> s2 [71, 71];
  s0 -> s1 [72, 65535];
  s1 -> s1 [0, 70];
  s1 -> s2 [71, 71];
  s1 -> s1 [72, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 8] { R58 += 1 };
  s0 -> s0 [0, 65535] { R57 += 1, R58 += 1 };
  s0 -> s2 [9, 13] { R58 += 1 };
  s0 -> s1 [14, 31] { R58 += 1 };
  s0 -> s2 [32, 32] { R58 += 1 };
  s0 -> s1 [33, 65535] { R58 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R58 += 1 };
  s2 -> s1 [0, 65535] { R58 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_5 {
  init s0;
  s0 -> s0 [0, 65535] { R59 += 1, R60 += 1 };
  s0 -> s1 [0, 65535] { R60 += 1, R11 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R60 += 1, R11 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 8] { R62 += 1 };
  s0 -> s0 [0, 65535] { R61 += 1, R62 += 1 };
  s0 -> s2 [9, 13] { R62 += 1 };
  s0 -> s1 [14, 31] { R62 += 1 };
  s0 -> s2 [32, 32] { R62 += 1 };
  s0 -> s1 [33, 65535] { R62 += 1 };
  s1 -> s1 [0, 65535] { R62 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R62 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_7 {
  init s0;
  s0 -> s0 [0, 65535] { R63 += 1, R64 += 1 };
  s0 -> s1 [0, 65535] { R64 += 1, R12 += 1 };
  s1 -> s1 [0, 65535] { R64 += 1, R12 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 70] { R58252 += 1 };
  s0 -> s0 [0, 65535] { R58251 += 1, R58252 += 1 };
  s0 -> s1 [72, 65535] { R58252 += 1 };
  s1 -> s1 [0, 70] { R58252 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [72, 65535] { R58252 += 1 };
  accepting s0, s1;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65535] { R58254 += 1, R39 += 1 };
  s0 -> s0 [0, 65535] { R58253 += 1, R58254 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R58254 += 1, R39 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 71] { R58256 += 1 };
  s0 -> s0 [0, 65535] { R58255 += 1, R58256 += 1 };
  s0 -> s2 [83, 83] { R58256 += 1 };
  s0 -> s1 [84, 65535] { R58256 += 1 };
  s1 -> s1 [0, 71] { R58256 += 1 };
  s1 -> s2 [83, 83] { R58256 += 1 };
  s1 -> s1 [84, 65535] { R58256 += 1 };
  s2 -> s2 [0, 71] { R58256 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [83, 65535] { R58256 += 1 };
  accepting s2;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R58257 += 1, R58258 += 1 };
  s0 -> s1 [0, 65535] { R58258 += 1, R126 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R58258 += 1, R126 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 82] { R58260 += 1 };
  s0 -> s2 [0, 65535] { R58260 += 1, R128 += 1 };
  s0 -> s0 [0, 65535] { R58259 += 1, R58260 += 1 };
  s0 -> s1 [84, 65535] { R58260 += 1 };
  s1 -> s1 [0, 82] { R58260 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s1 [84, 65535] { R58260 += 1 };
  s2 -> s1 [0, 82] { R58260 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R58260 += 1, R128 += 1 };
  s2 -> s1 [84, 65535] { R58260 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 82] { R58262 += 1, R132 += 1 };
  s0 -> s2 [0, 65535] { R58262 += 1, R131 += 1, R132 += 1 };
  s0 -> s0 [0, 65535] { R58261 += 1, R58262 += 1 };
  s0 -> s1 [84, 65535] { R58262 += 1, R132 += 1 };
  s1 -> s1 [0, 82] { R58262 += 1, R132 += 1 };
  s1 -> s1 [0, 65535] { R58262 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [84, 65535] { R58262 += 1, R132 += 1 };
  s2 -> s1 [0, 82] { R58262 += 1, R132 += 1 };
  s2 -> s2 [0, 65535] { R58262 += 1, R131 += 1, R132 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [84, 65535] { R58262 += 1, R132 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R58264 += 1, R137 += 1, R138 += 1 };
  s0 -> s2 [0, 65535] { R58264 += 1, R136 += 1, R137 += 1 };
  s0 -> s0 [0, 65535] { R58263 += 1, R58264 += 1 };
  s1 -> s1 [0, 65535] { R58264 += 1, R137 += 1, R138 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R58264 += 1 };
  s2 -> s1 [0, 65535] { R58264 += 1, R137 += 1, R138 += 1 };
  s2 -> s2 [0, 65535] { R58264 += 1, R136 += 1, R137 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R58264 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 83] { R58266 += 1, R142 += 1 };
  s0 -> s0 [0, 65535] { R58265 += 1, R58266 += 1 };
  s0 -> s2 [0, 65535] { R58266 += 1, R141 += 1, R142 += 1 };
  s0 -> s1 [91, 65535] { R58266 += 1, R142 += 1 };
  s1 -> s1 [0, 83] { R58266 += 1, R142 += 1 };
  s1 -> s1 [0, 65535] { R58266 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [91, 65535] { R58266 += 1, R142 += 1 };
  s2 -> s1 [0, 83] { R58266 += 1, R142 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R58266 += 1, R141 += 1, R142 += 1 };
  s2 -> s1 [91, 65535] { R58266 += 1, R142 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_16 {
  init s0;
  s0 -> s0 [0, 65535] { R58267 += 1, R58268 += 1 };
  s0 -> s1 [0, 65535] { R58268 += 1, R146 += 1, R147 += 1 };
  s0 -> s2 [0, 65535] { R58268 += 1, R147 += 1, R148 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R58268 += 1, R146 += 1, R147 += 1 };
  s1 -> s2 [0, 65535] { R58268 += 1, R147 += 1, R148 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R58268 += 1 };
  s2 -> s2 [0, 65535] { R58268 += 1, R147 += 1, R148 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R58268 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 82] { R58270 += 1, R58250 += 1 };
  s0 -> s1 [0, 65535] { R58270 += 1 };
  s0 -> s0 [0, 65535] { R58269 += 1, R58270 += 1 };
  s0 -> s2 [83, 83] { R58270 += 1, R58250 += 1 };
  s0 -> s3 [83, 83] { R58270 += 1, R58250 += 1 };
  s0 -> s1 [91, 65535] { R58270 += 1, R58250 += 1 };
  s1 -> s1 [0, 82] { R58270 += 1, R58250 += 1 };
  s1 -> s1 [0, 65535] { R58270 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [83, 83] { R58270 += 1, R58250 += 1 };
  s1 -> s3 [83, 83] { R58270 += 1, R58250 += 1 };
  s1 -> s1 [91, 65535] { R58270 += 1, R58250 += 1 };
  s2 -> s2 [0, 65535] { R58270 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 83] { R58270 += 1, R58250 += 1 };
  s3 -> s3 [0, 65535] { R58270 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [91, 65535] { R58270 += 1, R58250 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65535] { R68140 += 1, R40 += 1 };
  s0 -> s0 [0, 65535] { R68139 += 1, R68140 += 1 };
  s1 -> s1 [0, 65535] { R68140 += 1, R40 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 70] { R68142 += 1 };
  s0 -> s0 [0, 65535] { R68141 += 1, R68142 += 1 };
  s0 -> s2 [71, 71] { R68142 += 1 };
  s0 -> s3 [71, 71] { R68142 += 1 };
  s0 -> s1 [84, 65535] { R68142 += 1 };
  s1 -> s1 [0, 70] { R68142 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [71, 71] { R68142 += 1 };
  s1 -> s3 [71, 71] { R68142 += 1 };
  s1 -> s1 [84, 65535] { R68142 += 1 };
  s2 -> s2 [0, 71] { R68142 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [84, 65535] { R68142 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 70] { R68144 += 1, R125 += 1 };
  s0 -> s0 [0, 65535] { R68143 += 1, R68144 += 1 };
  s0 -> s2 [71, 71] { R68144 += 1, R125 += 1 };
  s0 -> s3 [71, 71] { R68144 += 1, R125 += 1 };
  s0 -> s1 [72, 65535] { R68144 += 1, R125 += 1 };
  s1 -> s1 [0, 70] { R68144 += 1, R125 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [71, 71] { R68144 += 1, R125 += 1 };
  s1 -> s3 [71, 71] { R68144 += 1, R125 += 1 };
  s1 -> s1 [72, 65535] { R68144 += 1, R125 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R68144 += 1, R125 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 70] { R68146 += 1, R127 += 1 };
  s0 -> s0 [0, 65535] { R68145 += 1, R68146 += 1 };
  s0 -> s2 [71, 71] { R68146 += 1, R127 += 1 };
  s0 -> s3 [71, 71] { R68146 += 1, R127 += 1 };
  s0 -> s1 [72, 65535] { R68146 += 1, R127 += 1 };
  s1 -> s1 [0, 70] { R68146 += 1, R127 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [71, 71] { R68146 += 1, R127 += 1 };
  s1 -> s3 [71, 71] { R68146 += 1, R127 += 1 };
  s1 -> s1 [72, 65535] { R68146 += 1, R127 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R68146 += 1, R127 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 70] { R68148 += 1, R129 += 1, R130 += 1 };
  s0 -> s0 [0, 65535] { R68147 += 1, R68148 += 1 };
  s0 -> s2 [71, 71] { R68148 += 1, R129 += 1, R130 += 1 };
  s0 -> s3 [71, 71] { R68148 += 1, R129 += 1, R130 += 1 };
  s0 -> s1 [72, 65535] { R68148 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 70] { R68148 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [71, 71] { R68148 += 1, R129 += 1, R130 += 1 };
  s1 -> s3 [71, 71] { R68148 += 1, R129 += 1, R130 += 1 };
  s1 -> s1 [72, 65535] { R68148 += 1, R129 += 1, R130 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R68148 += 1, R129 += 1, R130 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 70] { R68150 += 1, R133 += 1, R134 += 1 };
  s0 -> s0 [0, 65535] { R68149 += 1, R68150 += 1 };
  s0 -> s2 [71, 71] { R68150 += 1, R133 += 1, R134 += 1 };
  s0 -> s3 [71, 71] { R68150 += 1, R133 += 1, R134 += 1 };
  s0 -> s1 [72, 65535] { R68150 += 1, R133 += 1, R134 += 1 };
  s1 -> s1 [0, 70] { R68150 += 1, R133 += 1, R134 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [71, 71] { R68150 += 1, R133 += 1, R134 += 1 };
  s1 -> s3 [71, 71] { R68150 += 1, R133 += 1, R134 += 1 };
  s1 -> s1 [72, 65535] { R68150 += 1, R133 += 1, R134 += 1 };
  s2 -> s2 [0, 65535] { R68150 += 1, R133 += 1, R134 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 70] { R68152 += 1, R139 += 1, R140 += 1 };
  s0 -> s0 [0, 65535] { R68151 += 1, R68152 += 1 };
  s0 -> s2 [71, 71] { R68152 += 1, R139 += 1, R140 += 1 };
  s0 -> s3 [71, 71] { R68152 += 1, R139 += 1, R140 += 1 };
  s0 -> s1 [72, 65535] { R68152 += 1, R139 += 1, R140 += 1 };
  s1 -> s1 [0, 70] { R68152 += 1, R139 += 1, R140 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [71, 71] { R68152 += 1, R139 += 1, R140 += 1 };
  s1 -> s3 [71, 71] { R68152 += 1, R139 += 1, R140 += 1 };
  s1 -> s1 [72, 65535] { R68152 += 1, R139 += 1, R140 += 1 };
  s2 -> s2 [0, 65535];
  s3 -> s3 [0, 65535] { R68152 += 1, R139 += 1, R140 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 70] { R68154 += 1, R143 += 1, R144 += 1 };
  s0 -> s0 [0, 65535] { R68153 += 1, R68154 += 1 };
  s0 -> s2 [71, 71] { R68154 += 1, R143 += 1, R144 += 1 };
  s0 -> s3 [71, 71] { R68154 += 1, R143 += 1, R144 += 1 };
  s0 -> s1 [72, 65535] { R68154 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [0, 70] { R68154 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s2 [71, 71] { R68154 += 1, R143 += 1, R144 += 1 };
  s1 -> s3 [71, 71] { R68154 += 1, R143 += 1, R144 += 1 };
  s1 -> s1 [72, 65535] { R68154 += 1, R143 += 1, R144 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R68154 += 1, R143 += 1, R144 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 70] { R68156 += 1, R58247 += 1, R58248 += 1 };
  s0 -> s2 [0, 70] { R68156 += 1, R58248 += 1 };
  s0 -> s0 [0, 65535] { R68155 += 1, R68156 += 1 };
  s0 -> s3 [71, 71] { R68156 += 1, R58247 += 1, R58248 += 1 };
  s0 -> s4 [71, 71] { R68156 += 1, R58248 += 1 };
  s0 -> s5 [71, 71] { R68156 += 1, R58247 += 1, R58248 += 1 };
  s0 -> s6 [71, 71] { R68156 += 1, R58248 += 1 };
  s0 -> s2 [72, 82] { R68156 += 1, R58248 += 1 };
  s0 -> s1 [72, 65535] { R68156 += 1, R58247 += 1, R58248 += 1 };
  s0 -> s2 [91, 65535] { R68156 += 1, R58248 += 1 };
  s1 -> s1 [0, 70] { R68156 += 1, R58247 += 1, R58248 += 1 };
  s1 -> s2 [0, 70] { R68156 += 1, R58248 += 1 };
  s1 -> s3 [71, 71] { R68156 += 1, R58247 += 1, R58248 += 1 };
  s1 -> s4 [71, 71] { R68156 += 1, R58248 += 1 };
  s1 -> s5 [71, 71] { R68156 += 1, R58247 += 1, R58248 += 1 };
  s1 -> s6 [71, 71] { R68156 += 1, R58248 += 1 };
  s1 -> s2 [72, 82] { R68156 += 1, R58248 += 1 };
  s1 -> s1 [72, 65535] { R68156 += 1, R58247 += 1, R58248 += 1 };
  s1 -> s2 [91, 65535] { R68156 += 1, R58248 += 1 };
  s2 -> s2 [0, 70] { R68156 += 1, R58248 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s4 [71, 71] { R68156 += 1 };
  s2 -> s6 [71, 71] { R68156 += 1 };
  s2 -> s2 [72, 82] { R68156 += 1, R58248 += 1 };
  s2 -> s2 [72, 65535] { R68156 += 1 };
  s2 -> s2 [91, 65535] { R68156 += 1, R58248 += 1 };
  s3 -> s6 [0, 82] { R68156 += 1, R58248 += 1 };
  s3 -> s3 [0, 65535] { R68156 += 1, R58247 += 1, R58248 += 1 };
  s3 -> s6 [91, 65535] { R68156 += 1, R58248 += 1 };
  s4 -> s4 [0, 65535];
  s6 -> s6 [0, 82] { R68156 += 1, R58248 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R68156 += 1 };
  s6 -> s6 [91, 65535] { R68156 += 1, R58248 += 1 };
  s7 -> s7 [0, 65535];
  accepting s2, s4, s6, s7;
};
};
synchronised {  // Automata constraining P88
automaton P88_0 {
  init s0;
  s0 -> s1 [118, 118];
  accepting s1;
};
};
synchronised {  // Automata constraining P22
automaton P22_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining P4
automaton P4_0 {
  init s0;
  s0 -> s1 [103, 103];
  accepting s1;
};
};
synchronised {  // Automata constraining P73
automaton P73_0 {
  init s0;
  s0 -> s1 [115, 115];
  accepting s1;
};
};
synchronised {  // Automata constraining value1
automaton value1_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 60];
  s0 -> s1 [61, 61];
  s0 -> s0 [62, 65535];
  s1 -> s1 [0, 43];
  s1 -> s1 [45, 65535];
  accepting s1;
};
automaton value1_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value1_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R22 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value1_3 {
  init s0;
  s0 -> s1 [0, 64] { R72 += 1 };
  s0 -> s0 [0, 65535] { R71 += 1, R72 += 1 };
  s0 -> s2 [82, 82] { R72 += 1 };
  s0 -> s1 [83, 65535] { R72 += 1 };
  s1 -> s1 [0, 64] { R72 += 1 };
  s1 -> s2 [82, 82] { R72 += 1 };
  s1 -> s1 [83, 65535] { R72 += 1 };
  s2 -> s2 [0, 64] { R72 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [82, 65535] { R72 += 1 };
  accepting s2;
};
automaton value1_4 {
  init s0;
  s0 -> s0 [0, 65535] { R73 += 1, R74 += 1 };
  s0 -> s1 [0, 65535] { R74 += 1, R0 += 1 };
  s1 -> s1 [0, 65535] { R74 += 1, R0 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value1_5 {
  init s0;
  s0 -> s1 [0, 8] { R76 += 1, R42 += 1 };
  s0 -> s2 [0, 65535] { R76 += 1, R41 += 1, R42 += 1 };
  s0 -> s0 [0, 65535] { R75 += 1, R76 += 1 };
  s0 -> s3 [9, 13] { R76 += 1, R42 += 1 };
  s0 -> s1 [14, 31] { R76 += 1, R42 += 1 };
  s0 -> s3 [32, 32] { R76 += 1, R42 += 1 };
  s0 -> s1 [33, 65535] { R76 += 1, R42 += 1 };
  s1 -> s1 [0, 65535] { R76 += 1, R42 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R76 += 1 };
  s2 -> s1 [0, 8] { R76 += 1, R42 += 1 };
  s2 -> s2 [0, 65535] { R76 += 1, R41 += 1, R42 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R76 += 1, R42 += 1 };
  s2 -> s1 [14, 31] { R76 += 1, R42 += 1 };
  s2 -> s3 [32, 32] { R76 += 1, R42 += 1 };
  s2 -> s1 [33, 65535] { R76 += 1, R42 += 1 };
  s3 -> s1 [0, 65535] { R76 += 1, R42 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R76 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value1_6 {
  init s0;
  s0 -> s1 [0, 65535] { R78 += 1, R44 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R77 += 1, R78 += 1 };
  s0 -> s2 [0, 65535] { R78 += 1, R43 += 1, R44 += 1 };
  s1 -> s1 [0, 65535] { R78 += 1, R44 += 1, R7 += 1 };
  s1 -> s4 [0, 65535] { R78 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R78 += 1, R44 += 1, R7 += 1 };
  s2 -> s2 [0, 65535] { R78 += 1, R43 += 1, R44 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R78 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value1_7 {
  init s0;
  s0 -> s1 [0, 8] { R80 += 1, R46 += 1 };
  s0 -> s0 [0, 65535] { R79 += 1, R80 += 1 };
  s0 -> s2 [0, 65535] { R80 += 1, R45 += 1, R46 += 1 };
  s0 -> s3 [9, 13] { R80 += 1, R46 += 1 };
  s0 -> s1 [14, 31] { R80 += 1, R46 += 1 };
  s0 -> s3 [32, 32] { R80 += 1, R46 += 1 };
  s0 -> s1 [33, 65535] { R80 += 1, R46 += 1 };
  s1 -> s1 [0, 65535] { R80 += 1, R46 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R80 += 1 };
  s2 -> s1 [0, 8] { R80 += 1, R46 += 1 };
  s2 -> s2 [0, 65535] { R80 += 1, R45 += 1, R46 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R80 += 1, R46 += 1 };
  s2 -> s1 [14, 31] { R80 += 1, R46 += 1 };
  s2 -> s3 [32, 32] { R80 += 1, R46 += 1 };
  s2 -> s1 [33, 65535] { R80 += 1, R46 += 1 };
  s3 -> s1 [0, 65535] { R80 += 1, R46 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R80 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value1_8 {
  init s0;
  s0 -> s1 [0, 65535] { R82 += 1, R47 += 1, R48 += 1 };
  s0 -> s2 [0, 65535] { R82 += 1, R48 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R81 += 1, R82 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R82 += 1, R47 += 1, R48 += 1 };
  s1 -> s2 [0, 65535] { R82 += 1, R48 += 1, R8 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R82 += 1 };
  s2 -> s2 [0, 65535] { R82 += 1, R48 += 1, R8 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R82 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value1_9 {
  init s0;
  s0 -> s1 [0, 64] { R68220 += 1 };
  s0 -> s0 [0, 65535] { R68219 += 1, R68220 += 1 };
  s0 -> s2 [67, 67] { R68220 += 1 };
  s0 -> s1 [68, 65535] { R68220 += 1 };
  s1 -> s1 [0, 64] { R68220 += 1 };
  s1 -> s2 [67, 67] { R68220 += 1 };
  s1 -> s1 [68, 65535] { R68220 += 1 };
  s2 -> s2 [0, 64] { R68220 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R68220 += 1 };
  accepting s2;
};
automaton value1_10 {
  init s0;
  s0 -> s0 [0, 65535] { R68221 += 1, R68222 += 1 };
  s0 -> s1 [0, 65535] { R68222 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R68222 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value1_11 {
  init s0;
  s0 -> s1 [0, 66] { R68224 += 1 };
  s0 -> s2 [0, 65535] { R68224 += 1, R19 += 1 };
  s0 -> s0 [0, 65535] { R68223 += 1, R68224 += 1 };
  s0 -> s3 [67, 67] { R68224 += 1 };
  s0 -> s1 [68, 65535] { R68224 += 1 };
  s1 -> s1 [0, 66] { R68224 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R68224 += 1 };
  s1 -> s1 [68, 65535] { R68224 += 1 };
  s2 -> s1 [0, 66] { R68224 += 1 };
  s2 -> s2 [0, 65535] { R68224 += 1, R19 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [67, 67] { R68224 += 1 };
  s2 -> s1 [68, 65535] { R68224 += 1 };
  s3 -> s3 [0, 65535] { R68224 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value1_12 {
  init s0;
  s0 -> s1 [0, 8] { R68226 += 1, R50 += 1 };
  s0 -> s2 [0, 65535] { R68226 += 1, R49 += 1, R50 += 1 };
  s0 -> s0 [0, 65535] { R68225 += 1, R68226 += 1 };
  s0 -> s3 [9, 13] { R68226 += 1, R50 += 1 };
  s0 -> s1 [14, 31] { R68226 += 1, R50 += 1 };
  s0 -> s3 [32, 32] { R68226 += 1, R50 += 1 };
  s0 -> s1 [33, 65535] { R68226 += 1, R50 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R68226 += 1, R50 += 1 };
  s1 -> s5 [0, 65535] { R68226 += 1 };
  s2 -> s1 [0, 8] { R68226 += 1, R50 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R68226 += 1, R49 += 1, R50 += 1 };
  s2 -> s3 [9, 13] { R68226 += 1, R50 += 1 };
  s2 -> s1 [14, 31] { R68226 += 1, R50 += 1 };
  s2 -> s3 [32, 32] { R68226 += 1, R50 += 1 };
  s2 -> s1 [33, 65535] { R68226 += 1, R50 += 1 };
  s3 -> s1 [0, 65535] { R68226 += 1, R50 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R68226 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value1_13 {
  init s0;
  s0 -> s1 [0, 65535] { R68228 += 1, R52 += 1, R9 += 1 };
  s0 -> s2 [0, 65535] { R68228 += 1, R51 += 1, R52 += 1 };
  s0 -> s0 [0, 65535] { R68227 += 1, R68228 += 1 };
  s1 -> s4 [0, 65535] { R68228 += 1 };
  s1 -> s1 [0, 65535] { R68228 += 1, R52 += 1, R9 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R68228 += 1, R52 += 1, R9 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R68228 += 1, R51 += 1, R52 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R68228 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value1_14 {
  init s0;
  s0 -> s1 [0, 8] { R68230 += 1, R54 += 1 };
  s0 -> s2 [0, 65535] { R68230 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R68229 += 1, R68230 += 1 };
  s0 -> s3 [9, 13] { R68230 += 1, R54 += 1 };
  s0 -> s1 [14, 31] { R68230 += 1, R54 += 1 };
  s0 -> s3 [32, 32] { R68230 += 1, R54 += 1 };
  s0 -> s1 [33, 65535] { R68230 += 1, R54 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R68230 += 1 };
  s1 -> s1 [0, 65535] { R68230 += 1, R54 += 1 };
  s2 -> s1 [0, 8] { R68230 += 1, R54 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R68230 += 1, R53 += 1, R54 += 1 };
  s2 -> s3 [9, 13] { R68230 += 1, R54 += 1 };
  s2 -> s1 [14, 31] { R68230 += 1, R54 += 1 };
  s2 -> s3 [32, 32] { R68230 += 1, R54 += 1 };
  s2 -> s1 [33, 65535] { R68230 += 1, R54 += 1 };
  s3 -> s1 [0, 65535] { R68230 += 1, R54 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R68230 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value1_15 {
  init s0;
  s0 -> s0 [0, 65535] { R68231 += 1, R68232 += 1 };
  s0 -> s1 [0, 65535] { R68232 += 1, R56 += 1, R10 += 1 };
  s0 -> s2 [0, 65535] { R68232 += 1, R55 += 1, R56 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R68232 += 1, R56 += 1, R10 += 1 };
  s1 -> s4 [0, 65535] { R68232 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R68232 += 1, R56 += 1, R10 += 1 };
  s2 -> s2 [0, 65535] { R68232 += 1, R55 += 1, R56 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R68232 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value1_16 {
  init s0;
  s0 -> s1 [0, 65535] { R68234 += 1, R68122 += 1, R36 += 1 };
  s0 -> s0 [0, 65535] { R68233 += 1, R68234 += 1 };
  s0 -> s2 [0, 65535] { R68234 += 1, R68121 += 1, R68122 += 1 };
  s1 -> s1 [0, 65535] { R68234 += 1, R68122 += 1, R36 += 1 };
  s1 -> s4 [0, 65535] { R68234 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R68234 += 1, R68122 += 1, R36 += 1 };
  s2 -> s2 [0, 65535] { R68234 += 1, R68121 += 1, R68122 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R68234 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value1_17 {
  init s0;
  s0 -> s1 [0, 66] { R68236 += 1, R68124 += 1 };
  s0 -> s0 [0, 65535] { R68235 += 1, R68236 += 1 };
  s0 -> s2 [0, 65535] { R68236 += 1, R68123 += 1, R68124 += 1 };
  s0 -> s3 [67, 67] { R68236 += 1, R68124 += 1 };
  s0 -> s4 [67, 67] { R68236 += 1, R68124 += 1 };
  s0 -> s1 [87, 65535] { R68236 += 1, R68124 += 1 };
  s1 -> s1 [0, 66] { R68236 += 1, R68124 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R68236 += 1 };
  s1 -> s3 [67, 67] { R68236 += 1, R68124 += 1 };
  s1 -> s4 [67, 67] { R68236 += 1, R68124 += 1 };
  s1 -> s1 [87, 65535] { R68236 += 1, R68124 += 1 };
  s2 -> s1 [0, 66] { R68236 += 1, R68124 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R68236 += 1, R68123 += 1, R68124 += 1 };
  s2 -> s3 [67, 67] { R68236 += 1, R68124 += 1 };
  s2 -> s4 [67, 67] { R68236 += 1, R68124 += 1 };
  s2 -> s1 [87, 65535] { R68236 += 1, R68124 += 1 };
  s3 -> s3 [0, 67] { R68236 += 1, R68124 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R68236 += 1 };
  s3 -> s3 [87, 65535] { R68236 += 1, R68124 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R68236 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value1_18 {
  init s0;
  s0 -> s1 [0, 66] { R68238 += 1, R68126 += 1, R97 += 1 };
  s0 -> s2 [0, 65535] { R68238 += 1, R68125 += 1, R68126 += 1 };
  s0 -> s0 [0, 65535] { R68237 += 1, R68238 += 1 };
  s0 -> s3 [67, 67] { R68238 += 1, R68126 += 1, R97 += 1 };
  s0 -> s4 [67, 67] { R68238 += 1, R68126 += 1, R97 += 1 };
  s0 -> s1 [68, 65535] { R68238 += 1, R68126 += 1, R97 += 1 };
  s1 -> s1 [0, 66] { R68238 += 1, R68126 += 1, R97 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R68238 += 1 };
  s1 -> s3 [67, 67] { R68238 += 1, R68126 += 1, R97 += 1 };
  s1 -> s4 [67, 67] { R68238 += 1, R68126 += 1, R97 += 1 };
  s1 -> s1 [68, 65535] { R68238 += 1, R68126 += 1, R97 += 1 };
  s2 -> s1 [0, 66] { R68238 += 1, R68126 += 1, R97 += 1 };
  s2 -> s2 [0, 65535] { R68238 += 1, R68125 += 1, R68126 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R68238 += 1, R68126 += 1, R97 += 1 };
  s2 -> s4 [67, 67] { R68238 += 1, R68126 += 1, R97 += 1 };
  s2 -> s1 [68, 65535] { R68238 += 1, R68126 += 1, R97 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R68238 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R68238 += 1 };
  s4 -> s4 [0, 65535] { R68238 += 1, R68126 += 1, R97 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68238 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_19 {
  init s0;
  s0 -> s1 [0, 66] { R68240 += 1, R68128 += 1, R99 += 1 };
  s0 -> s2 [0, 65535] { R68240 += 1, R68127 += 1, R68128 += 1 };
  s0 -> s0 [0, 65535] { R68239 += 1, R68240 += 1 };
  s0 -> s3 [67, 67] { R68240 += 1, R68128 += 1, R99 += 1 };
  s0 -> s4 [67, 67] { R68240 += 1, R68128 += 1, R99 += 1 };
  s0 -> s1 [68, 65535] { R68240 += 1, R68128 += 1, R99 += 1 };
  s1 -> s1 [0, 66] { R68240 += 1, R68128 += 1, R99 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R68240 += 1 };
  s1 -> s3 [67, 67] { R68240 += 1, R68128 += 1, R99 += 1 };
  s1 -> s4 [67, 67] { R68240 += 1, R68128 += 1, R99 += 1 };
  s1 -> s1 [68, 65535] { R68240 += 1, R68128 += 1, R99 += 1 };
  s2 -> s1 [0, 66] { R68240 += 1, R68128 += 1, R99 += 1 };
  s2 -> s2 [0, 65535] { R68240 += 1, R68127 += 1, R68128 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R68240 += 1, R68128 += 1, R99 += 1 };
  s2 -> s4 [67, 67] { R68240 += 1, R68128 += 1, R99 += 1 };
  s2 -> s1 [68, 65535] { R68240 += 1, R68128 += 1, R99 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R68240 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R68240 += 1, R68128 += 1, R99 += 1 };
  s4 -> s6 [0, 65535] { R68240 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68240 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_20 {
  init s0;
  s0 -> s1 [0, 66] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s0 -> s2 [0, 65535] { R68242 += 1, R68129 += 1, R68130 += 1 };
  s0 -> s0 [0, 65535] { R68241 += 1, R68242 += 1 };
  s0 -> s3 [67, 67] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s0 -> s4 [67, 67] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s0 -> s1 [68, 65535] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [0, 66] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R68242 += 1 };
  s1 -> s3 [67, 67] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s1 -> s4 [67, 67] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s1 -> s1 [68, 65535] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s2 -> s1 [0, 66] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s2 -> s2 [0, 65535] { R68242 += 1, R68129 += 1, R68130 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s2 -> s4 [67, 67] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s2 -> s1 [68, 65535] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s3 -> s6 [0, 65535] { R68242 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R68242 += 1, R68130 += 1, R101 += 1, R102 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R68242 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68242 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_21 {
  init s0;
  s0 -> s1 [0, 66] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s0 -> s2 [0, 65535] { R68244 += 1, R68131 += 1, R68132 += 1 };
  s0 -> s0 [0, 65535] { R68243 += 1, R68244 += 1 };
  s0 -> s3 [67, 67] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s0 -> s4 [67, 67] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s0 -> s1 [68, 65535] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [0, 66] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [0, 65535] { R68244 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s1 -> s4 [67, 67] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s1 -> s1 [68, 65535] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s2 -> s1 [0, 66] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s2 -> s2 [0, 65535] { R68244 += 1, R68131 += 1, R68132 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s2 -> s4 [67, 67] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s2 -> s1 [68, 65535] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R68244 += 1, R68132 += 1, R105 += 1, R106 += 1 };
  s3 -> s6 [0, 65535] { R68244 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R68244 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68244 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_22 {
  init s0;
  s0 -> s1 [0, 66] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s0 -> s0 [0, 65535] { R68245 += 1, R68246 += 1 };
  s0 -> s2 [0, 65535] { R68246 += 1, R68133 += 1, R68134 += 1 };
  s0 -> s3 [67, 67] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s0 -> s4 [67, 67] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s0 -> s1 [68, 65535] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 66] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [0, 65535] { R68246 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s1 -> s4 [67, 67] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s1 -> s1 [68, 65535] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s2 -> s1 [0, 66] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R68246 += 1, R68133 += 1, R68134 += 1 };
  s2 -> s3 [67, 67] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s2 -> s4 [67, 67] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s2 -> s1 [68, 65535] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s3 -> s3 [0, 65535] { R68246 += 1, R68134 += 1, R111 += 1, R112 += 1 };
  s3 -> s6 [0, 65535] { R68246 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R68246 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68246 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_23 {
  init s0;
  s0 -> s1 [0, 66] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s0 -> s0 [0, 65535] { R68247 += 1, R68248 += 1 };
  s0 -> s2 [0, 65535] { R68248 += 1, R68135 += 1, R68136 += 1 };
  s0 -> s3 [67, 67] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s0 -> s4 [67, 67] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s0 -> s1 [68, 65535] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s1 -> s1 [0, 66] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R68248 += 1 };
  s1 -> s3 [67, 67] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s1 -> s4 [67, 67] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s1 -> s1 [68, 65535] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s2 -> s1 [0, 66] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R68248 += 1, R68135 += 1, R68136 += 1 };
  s2 -> s3 [67, 67] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s2 -> s4 [67, 67] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s2 -> s1 [68, 65535] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s3 -> s3 [0, 65535] { R68248 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R68248 += 1, R68136 += 1, R115 += 1, R116 += 1 };
  s4 -> s6 [0, 65535] { R68248 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68248 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_24 {
  init s0;
  s0 -> s1 [0, 66] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s0 -> s0 [0, 65535] { R68249 += 1, R68250 += 1 };
  s0 -> s2 [0, 65535] { R68250 += 1, R68137 += 1, R68138 += 1 };
  s0 -> s3 [67, 67] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s0 -> s4 [67, 67] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s0 -> s1 [68, 65535] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [0, 66] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R68250 += 1 };
  s1 -> s3 [67, 67] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s1 -> s4 [67, 67] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s1 -> s1 [68, 65535] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s2 -> s1 [0, 66] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s2 -> s2 [0, 65535] { R68250 += 1, R68137 += 1, R68138 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s2 -> s4 [67, 67] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s2 -> s1 [68, 65535] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R68250 += 1, R68138 += 1, R121 += 1, R122 += 1 };
  s3 -> s6 [0, 65535] { R68250 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R68250 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68250 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_25 {
  init s0;
  s0 -> s1 [0, 66] { R68252 += 1, R68176 += 1 };
  s0 -> s0 [0, 65535] { R68251 += 1, R68252 += 1 };
  s0 -> s2 [0, 65535] { R68252 += 1, R68175 += 1, R68176 += 1 };
  s0 -> s3 [67, 67] { R68252 += 1, R68176 += 1 };
  s0 -> s1 [68, 65535] { R68252 += 1, R68176 += 1 };
  s1 -> s1 [0, 66] { R68252 += 1, R68176 += 1 };
  s1 -> s3 [67, 67] { R68252 += 1, R68176 += 1 };
  s1 -> s1 [68, 65535] { R68252 += 1, R68176 += 1 };
  s2 -> s1 [0, 66] { R68252 += 1, R68176 += 1 };
  s2 -> s2 [0, 65535] { R68252 += 1, R68175 += 1, R68176 += 1 };
  s2 -> s3 [67, 67] { R68252 += 1, R68176 += 1 };
  s2 -> s1 [68, 65535] { R68252 += 1, R68176 += 1 };
  s3 -> s3 [0, 65535] { R68252 += 1, R68176 += 1 };
  s3 -> s4 [0, 65535] { R68252 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R68252 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value1_26 {
  init s0;
  s0 -> s1 [0, 65535] { R68254 += 1, R68177 += 1, R68178 += 1 };
  s0 -> s0 [0, 65535] { R68253 += 1, R68254 += 1 };
  s0 -> s2 [0, 65535] { R68254 += 1, R68178 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R68254 += 1, R68177 += 1, R68178 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R68254 += 1, R68178 += 1, R2 += 1 };
  s2 -> s3 [0, 65535] { R68254 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R68254 += 1, R68178 += 1, R2 += 1 };
  s3 -> s3 [0, 65535] { R68254 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value1_27 {
  init s0;
  s0 -> s1 [0, 66] { R68256 += 1, R68180 += 1 };
  s0 -> s0 [0, 65535] { R68255 += 1, R68256 += 1 };
  s0 -> s2 [0, 65535] { R68256 += 1, R68180 += 1, R16 += 1 };
  s0 -> s3 [0, 65535] { R68256 += 1, R68179 += 1, R68180 += 1 };
  s0 -> s4 [67, 67] { R68256 += 1, R68180 += 1 };
  s0 -> s1 [68, 65535] { R68256 += 1, R68180 += 1 };
  s1 -> s1 [0, 66] { R68256 += 1, R68180 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R68256 += 1 };
  s1 -> s4 [67, 67] { R68256 += 1, R68180 += 1 };
  s1 -> s1 [68, 65535] { R68256 += 1, R68180 += 1 };
  s2 -> s1 [0, 66] { R68256 += 1, R68180 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R68256 += 1, R68180 += 1, R16 += 1 };
  s2 -> s6 [0, 65535] { R68256 += 1 };
  s2 -> s4 [67, 67] { R68256 += 1, R68180 += 1 };
  s2 -> s1 [68, 65535] { R68256 += 1, R68180 += 1 };
  s3 -> s1 [0, 66] { R68256 += 1, R68180 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R68256 += 1, R68180 += 1, R16 += 1 };
  s3 -> s3 [0, 65535] { R68256 += 1, R68179 += 1, R68180 += 1 };
  s3 -> s4 [67, 67] { R68256 += 1, R68180 += 1 };
  s3 -> s1 [68, 65535] { R68256 += 1, R68180 += 1 };
  s4 -> s4 [0, 65535] { R68256 += 1, R68180 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68256 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value1_28 {
  init s0;
  s0 -> s1 [0, 66] { R68258 += 1, R68182 += 1, R68102 += 1 };
  s0 -> s2 [0, 65535] { R68258 += 1, R68182 += 1, R68101 += 1, R68102 += 1 };
  s0 -> s0 [0, 65535] { R68257 += 1, R68258 += 1 };
  s0 -> s3 [0, 65535] { R68258 += 1, R68181 += 1, R68182 += 1 };
  s0 -> s1 [68, 65535] { R68258 += 1, R68182 += 1, R68102 += 1 };
  s1 -> s1 [0, 66] { R68258 += 1, R68182 += 1, R68102 += 1 };
  s1 -> s5 [0, 65535] { R68258 += 1 };
  s1 -> s1 [0, 65535] { R68258 += 1, R68182 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [68, 65535] { R68258 += 1, R68182 += 1, R68102 += 1 };
  s2 -> s1 [0, 66] { R68258 += 1, R68182 += 1, R68102 += 1 };
  s2 -> s5 [0, 65535] { R68258 += 1 };
  s2 -> s2 [0, 65535] { R68258 += 1, R68182 += 1, R68101 += 1, R68102 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [68, 65535] { R68258 += 1, R68182 += 1, R68102 += 1 };
  s3 -> s1 [0, 66] { R68258 += 1, R68182 += 1, R68102 += 1 };
  s3 -> s2 [0, 65535] { R68258 += 1, R68182 += 1, R68101 += 1, R68102 += 1 };
  s3 -> s3 [0, 65535] { R68258 += 1, R68181 += 1, R68182 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [68, 65535] { R68258 += 1, R68182 += 1, R68102 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R68258 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value1_29 {
  init s0;
  s0 -> s1 [0, 65535] { R68260 += 1, R68184 += 1, R68103 += 1, R68104 += 1 };
  s0 -> s0 [0, 65535] { R68259 += 1, R68260 += 1 };
  s0 -> s2 [0, 65535] { R68260 += 1, R68183 += 1, R68184 += 1 };
  s0 -> s3 [0, 65535] { R68260 += 1, R68184 += 1, R68104 += 1, R34 += 1 };
  s1 -> s1 [0, 65535] { R68260 += 1, R68184 += 1, R68103 += 1, R68104 += 1 };
  s1 -> s4 [0, 65535] { R68260 += 1 };
  s1 -> s3 [0, 65535] { R68260 += 1, R68184 += 1, R68104 += 1, R34 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R68260 += 1, R68184 += 1, R68103 += 1, R68104 += 1 };
  s2 -> s2 [0, 65535] { R68260 += 1, R68183 += 1, R68184 += 1 };
  s2 -> s3 [0, 65535] { R68260 += 1, R68184 += 1, R68104 += 1, R34 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R68260 += 1 };
  s3 -> s5 [0, 65535] { R68260 += 1, R68184 += 1 };
  s3 -> s3 [0, 65535] { R68260 += 1, R68184 += 1, R68104 += 1, R34 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R68260 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s4 [0, 65535] { R68260 += 1 };
  s5 -> s5 [0, 65535] { R68260 += 1, R68184 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_30 {
  init s0;
  s0 -> s1 [0, 67] { R68262 += 1, R68186 += 1, R68106 += 1 };
  s0 -> s0 [0, 65535] { R68261 += 1, R68262 += 1 };
  s0 -> s2 [0, 65535] { R68262 += 1, R68186 += 1, R68105 += 1, R68106 += 1 };
  s0 -> s3 [0, 65535] { R68262 += 1, R68185 += 1, R68186 += 1 };
  s0 -> s1 [86, 65535] { R68262 += 1, R68186 += 1, R68106 += 1 };
  s1 -> s1 [0, 67] { R68262 += 1, R68186 += 1, R68106 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R68262 += 1 };
  s1 -> s1 [0, 65535] { R68262 += 1, R68186 += 1 };
  s1 -> s1 [86, 65535] { R68262 += 1, R68186 += 1, R68106 += 1 };
  s2 -> s1 [0, 67] { R68262 += 1, R68186 += 1, R68106 += 1 };
  s2 -> s2 [0, 65535] { R68262 += 1, R68186 += 1, R68105 += 1, R68106 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R68262 += 1 };
  s2 -> s1 [86, 65535] { R68262 += 1, R68186 += 1, R68106 += 1 };
  s3 -> s1 [0, 67] { R68262 += 1, R68186 += 1, R68106 += 1 };
  s3 -> s2 [0, 65535] { R68262 += 1, R68186 += 1, R68105 += 1, R68106 += 1 };
  s3 -> s3 [0, 65535] { R68262 += 1, R68185 += 1, R68186 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [86, 65535] { R68262 += 1, R68186 += 1, R68106 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R68262 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value1_31 {
  init s0;
  s0 -> s1 [0, 65535] { R68264 += 1, R68187 += 1, R68188 += 1 };
  s0 -> s2 [0, 65535] { R68264 += 1, R68188 += 1, R68107 += 1, R68108 += 1 };
  s0 -> s3 [0, 65535] { R68264 += 1, R68188 += 1, R68108 += 1, R58272 += 1 };
  s0 -> s0 [0, 65535] { R68263 += 1, R68264 += 1 };
  s1 -> s1 [0, 65535] { R68264 += 1, R68187 += 1, R68188 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R68264 += 1, R68188 += 1, R68107 += 1, R68108 += 1 };
  s1 -> s3 [0, 65535] { R68264 += 1, R68188 += 1, R68108 += 1, R58272 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R68264 += 1, R68188 += 1, R68107 += 1, R68108 += 1 };
  s2 -> s6 [0, 65535] { R68264 += 1 };
  s2 -> s3 [0, 65535] { R68264 += 1, R68188 += 1, R68108 += 1, R58272 += 1 };
  s3 -> s4 [0, 65535] { R68264 += 1, R68188 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R68264 += 1 };
  s3 -> s3 [0, 65535] { R68264 += 1, R68188 += 1, R68108 += 1, R58272 += 1 };
  s4 -> s4 [0, 65535] { R68264 += 1, R68188 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R68264 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68264 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_32 {
  init s0;
  s0 -> s1 [0, 85] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s0 -> s2 [0, 65535] { R68266 += 1, R68190 += 1, R68110 += 1, R58274 += 1 };
  s0 -> s3 [0, 65535] { R68266 += 1, R68189 += 1, R68190 += 1 };
  s0 -> s0 [0, 65535] { R68265 += 1, R68266 += 1 };
  s0 -> s4 [0, 65535] { R68266 += 1, R68190 += 1, R68109 += 1, R68110 += 1 };
  s0 -> s1 [87, 65535] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s1 -> s1 [0, 85] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s1 -> s1 [0, 65535] { R68266 += 1, R68190 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R68266 += 1 };
  s1 -> s1 [87, 65535] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s2 -> s1 [0, 85] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s2 -> s2 [0, 65535] { R68266 += 1, R68190 += 1, R68110 += 1, R58274 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R68266 += 1, R68190 += 1 };
  s2 -> s6 [0, 65535] { R68266 += 1 };
  s2 -> s1 [87, 65535] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s3 -> s1 [0, 85] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s3 -> s2 [0, 65535] { R68266 += 1, R68190 += 1, R68110 += 1, R58274 += 1 };
  s3 -> s3 [0, 65535] { R68266 += 1, R68189 += 1, R68190 += 1 };
  s3 -> s4 [0, 65535] { R68266 += 1, R68190 += 1, R68109 += 1, R68110 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [87, 65535] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s4 -> s1 [0, 85] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s4 -> s2 [0, 65535] { R68266 += 1, R68190 += 1, R68110 += 1, R58274 += 1 };
  s4 -> s4 [0, 65535] { R68266 += 1, R68190 += 1, R68109 += 1, R68110 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R68266 += 1 };
  s4 -> s1 [87, 65535] { R68266 += 1, R68190 += 1, R68110 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68266 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R68266 += 1, R68190 += 1 };
  s7 -> s6 [0, 65535] { R68266 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value1_33 {
  init s0;
  s0 -> s1 [0, 85] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s0 -> s0 [0, 65535] { R68267 += 1, R68268 += 1 };
  s0 -> s2 [0, 65535] { R68268 += 1, R68192 += 1, R68111 += 1, R68112 += 1 };
  s0 -> s3 [0, 65535] { R68268 += 1, R68192 += 1, R68112 += 1, R58277 += 1, R58278 += 1 };
  s0 -> s4 [0, 65535] { R68268 += 1, R68191 += 1, R68192 += 1 };
  s0 -> s1 [87, 65535] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s1 -> s1 [0, 85] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s1 -> s1 [0, 65535] { R68268 += 1, R68192 += 1, R68112 += 1 };
  s1 -> s6 [0, 65535] { R68268 += 1, R68192 += 1 };
  s1 -> s7 [0, 65535] { R68268 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [87, 65535] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s2 -> s1 [0, 85] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s2 -> s2 [0, 65535] { R68268 += 1, R68192 += 1, R68111 += 1, R68112 += 1 };
  s2 -> s3 [0, 65535] { R68268 += 1, R68192 += 1, R68112 += 1, R58277 += 1, R58278 += 1 };
  s2 -> s7 [0, 65535] { R68268 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [87, 65535] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s3 -> s1 [0, 85] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s3 -> s3 [0, 65535] { R68268 += 1, R68192 += 1, R68112 += 1, R58277 += 1, R58278 += 1 };
  s3 -> s6 [0, 65535] { R68268 += 1, R68192 += 1 };
  s3 -> s7 [0, 65535] { R68268 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [87, 65535] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s4 -> s1 [0, 85] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s4 -> s2 [0, 65535] { R68268 += 1, R68192 += 1, R68111 += 1, R68112 += 1 };
  s4 -> s3 [0, 65535] { R68268 += 1, R68192 += 1, R68112 += 1, R58277 += 1, R58278 += 1 };
  s4 -> s4 [0, 65535] { R68268 += 1, R68191 += 1, R68192 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [87, 65535] { R68268 += 1, R68192 += 1, R68112 += 1, R58278 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68268 += 1, R68192 += 1 };
  s6 -> s7 [0, 65535] { R68268 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R68268 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value1_34 {
  init s0;
  s0 -> s0 [0, 65535] { R68269 += 1, R68270 += 1 };
  s0 -> s1 [0, 65535] { R68270 += 1, R68194 += 1, R68113 += 1, R68114 += 1 };
  s0 -> s2 [0, 65535] { R68270 += 1, R68194 += 1, R68114 += 1 };
  s0 -> s3 [0, 65535] { R68270 += 1, R68193 += 1, R68194 += 1 };
  s1 -> s6 [0, 65535] { R68270 += 1 };
  s1 -> s1 [0, 65535] { R68270 += 1, R68194 += 1, R68113 += 1, R68114 += 1 };
  s1 -> s2 [0, 65535] { R68270 += 1, R68194 += 1, R68114 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R68270 += 1, R68194 += 1 };
  s2 -> s6 [0, 65535] { R68270 += 1 };
  s2 -> s2 [0, 65535] { R68270 += 1, R68194 += 1, R68114 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R68270 += 1, R68194 += 1, R68113 += 1, R68114 += 1 };
  s3 -> s2 [0, 65535] { R68270 += 1, R68194 += 1, R68114 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R68270 += 1, R68193 += 1, R68194 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R68270 += 1, R68194 += 1 };
  s5 -> s6 [0, 65535] { R68270 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R68270 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_35 {
  init s0;
  s0 -> s1 [0, 86] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s0 -> s2 [0, 65535] { R68272 += 1, R68196 += 1, R68115 += 1, R68116 += 1 };
  s0 -> s3 [0, 65535] { R68272 += 1, R68196 += 1, R68116 += 1, R67891 += 1, R67892 += 1 };
  s0 -> s0 [0, 65535] { R68271 += 1, R68272 += 1 };
  s0 -> s4 [0, 65535] { R68272 += 1, R68195 += 1, R68196 += 1 };
  s0 -> s1 [91, 65535] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s1 -> s1 [0, 86] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s1 -> s1 [0, 65535] { R68272 += 1, R68196 += 1, R68116 += 1 };
  s1 -> s6 [0, 65535] { R68272 += 1, R68196 += 1 };
  s1 -> s7 [0, 65535] { R68272 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [91, 65535] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s2 -> s1 [0, 86] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s2 -> s2 [0, 65535] { R68272 += 1, R68196 += 1, R68115 += 1, R68116 += 1 };
  s2 -> s3 [0, 65535] { R68272 += 1, R68196 += 1, R68116 += 1, R67891 += 1, R67892 += 1 };
  s2 -> s7 [0, 65535] { R68272 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [91, 65535] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s3 -> s1 [0, 86] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s3 -> s3 [0, 65535] { R68272 += 1, R68196 += 1, R68116 += 1, R67891 += 1, R67892 += 1 };
  s3 -> s6 [0, 65535] { R68272 += 1, R68196 += 1 };
  s3 -> s7 [0, 65535] { R68272 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [91, 65535] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s4 -> s1 [0, 86] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s4 -> s2 [0, 65535] { R68272 += 1, R68196 += 1, R68115 += 1, R68116 += 1 };
  s4 -> s3 [0, 65535] { R68272 += 1, R68196 += 1, R68116 += 1, R67891 += 1, R67892 += 1 };
  s4 -> s4 [0, 65535] { R68272 += 1, R68195 += 1, R68196 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [91, 65535] { R68272 += 1, R68196 += 1, R68116 += 1, R67892 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68272 += 1, R68196 += 1 };
  s6 -> s7 [0, 65535] { R68272 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R68272 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value1_36 {
  init s0;
  s0 -> s1 [0, 65535] { R68274 += 1, R68198 += 1, R68117 += 1, R68118 += 1 };
  s0 -> s2 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1, R67896 += 1, R67897 += 1 };
  s0 -> s3 [0, 65535] { R68274 += 1, R68197 += 1, R68198 += 1 };
  s0 -> s0 [0, 65535] { R68273 += 1, R68274 += 1 };
  s0 -> s4 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1, R67897 += 1, R67898 += 1 };
  s1 -> s1 [0, 65535] { R68274 += 1, R68198 += 1, R68117 += 1, R68118 += 1 };
  s1 -> s5 [0, 65535] { R68274 += 1 };
  s1 -> s2 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1, R67896 += 1, R67897 += 1 };
  s1 -> s4 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1, R67897 += 1, R67898 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s5 [0, 65535] { R68274 += 1 };
  s2 -> s2 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1, R67896 += 1, R67897 += 1 };
  s2 -> s4 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1, R67897 += 1, R67898 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R68274 += 1, R68198 += 1 };
  s3 -> s1 [0, 65535] { R68274 += 1, R68198 += 1, R68117 += 1, R68118 += 1 };
  s3 -> s2 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1, R67896 += 1, R67897 += 1 };
  s3 -> s3 [0, 65535] { R68274 += 1, R68197 += 1, R68198 += 1 };
  s3 -> s4 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1, R67897 += 1, R67898 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s5 [0, 65535] { R68274 += 1 };
  s4 -> s4 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1, R67897 += 1, R67898 += 1 };
  s4 -> s6 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R68274 += 1, R68198 += 1 };
  s5 -> s5 [0, 65535] { R68274 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R68274 += 1 };
  s6 -> s6 [0, 65535] { R68274 += 1, R68198 += 1, R68118 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R68274 += 1, R68198 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R68274 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R68274 += 1, R68198 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value1_37 {
  init s0;
  s0 -> s1 [0, 85] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s0 -> s1 [0, 65535] { R68276 += 1, R68200 += 1, R68120 += 1 };
  s0 -> s2 [0, 65535] { R68276 += 1, R68199 += 1, R68200 += 1 };
  s0 -> s0 [0, 65535] { R68275 += 1, R68276 += 1 };
  s0 -> s3 [0, 65535] { R68276 += 1, R68200 += 1, R68119 += 1, R68120 += 1 };
  s0 -> s4 [86, 86] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s0 -> s5 [86, 86] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s0 -> s1 [91, 65535] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s1 -> s1 [0, 85] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s1 -> s6 [0, 65535] { R68276 += 1, R68200 += 1 };
  s1 -> s1 [0, 65535] { R68276 += 1, R68200 += 1, R68120 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R68276 += 1 };
  s1 -> s4 [86, 86] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s1 -> s5 [86, 86] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s1 -> s1 [91, 65535] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s2 -> s1 [0, 85] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s2 -> s1 [0, 65535] { R68276 += 1, R68200 += 1, R68120 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R68276 += 1, R68199 += 1, R68200 += 1 };
  s2 -> s3 [0, 65535] { R68276 += 1, R68200 += 1, R68119 += 1, R68120 += 1 };
  s2 -> s4 [86, 86] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s2 -> s5 [86, 86] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s2 -> s1 [91, 65535] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s3 -> s1 [0, 85] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s3 -> s1 [0, 65535] { R68276 += 1, R68200 += 1, R68120 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R68276 += 1 };
  s3 -> s3 [0, 65535] { R68276 += 1, R68200 += 1, R68119 += 1, R68120 += 1 };
  s3 -> s4 [86, 86] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s3 -> s5 [86, 86] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s3 -> s1 [91, 65535] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s4 -> s4 [0, 86] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s4 -> s4 [0, 65535] { R68276 += 1, R68200 += 1, R68120 += 1 };
  s4 -> s6 [0, 65535] { R68276 += 1, R68200 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R68276 += 1 };
  s4 -> s4 [91, 65535] { R68276 += 1, R68200 += 1, R68120 += 1, R68100 += 1 };
  s5 -> s5 [0, 65535] { R68276 += 1, R68200 += 1, R68120 += 1 };
  s5 -> s6 [0, 65535] { R68276 += 1, R68200 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R68276 += 1 };
  s6 -> s6 [0, 65535] { R68276 += 1, R68200 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R68276 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R68276 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value1_38 {
  init s0;
  s0 -> s1 [0, 65535] { R68278 += 1, R68202 += 1, R68157 += 1, R68158 += 1 };
  s0 -> s2 [0, 65535] { R68278 += 1, R68201 += 1, R68202 += 1 };
  s0 -> s0 [0, 65535] { R68277 += 1, R68278 += 1 };
  s0 -> s3 [0, 65535] { R68278 += 1, R68202 += 1, R68158 += 1, R35 += 1 };
  s1 -> s1 [0, 65535] { R68278 += 1, R68202 += 1, R68157 += 1, R68158 += 1 };
  s1 -> s3 [0, 65535] { R68278 += 1, R68202 += 1, R68158 += 1, R35 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R68278 += 1 };
  s2 -> s1 [0, 65535] { R68278 += 1, R68202 += 1, R68157 += 1, R68158 += 1 };
  s2 -> s2 [0, 65535] { R68278 += 1, R68201 += 1, R68202 += 1 };
  s2 -> s3 [0, 65535] { R68278 += 1, R68202 += 1, R68158 += 1, R35 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R68278 += 1, R68202 += 1 };
  s3 -> s3 [0, 65535] { R68278 += 1, R68202 += 1, R68158 += 1, R35 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R68278 += 1 };
  s4 -> s4 [0, 65535] { R68278 += 1, R68202 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R68278 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R68278 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value1_39 {
  init s0;
  s0 -> s1 [0, 66] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s0 -> s2 [0, 65535] { R68280 += 1, R68203 += 1, R68204 += 1 };
  s0 -> s3 [0, 65535] { R68280 += 1, R68204 += 1, R68159 += 1, R68160 += 1 };
  s0 -> s0 [0, 65535] { R68279 += 1, R68280 += 1 };
  s0 -> s4 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s0 -> s5 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s0 -> s6 [86, 86] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s0 -> s1 [87, 65535] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s1 -> s1 [0, 66] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s1 -> s4 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s1 -> s5 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s1 -> s6 [86, 86] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s1 -> s1 [87, 65535] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s2 -> s1 [0, 66] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s2 -> s2 [0, 65535] { R68280 += 1, R68203 += 1, R68204 += 1 };
  s2 -> s3 [0, 65535] { R68280 += 1, R68204 += 1, R68159 += 1, R68160 += 1 };
  s2 -> s4 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s2 -> s5 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s2 -> s6 [86, 86] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s2 -> s1 [87, 65535] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s3 -> s1 [0, 66] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s3 -> s3 [0, 65535] { R68280 += 1, R68204 += 1, R68159 += 1, R68160 += 1 };
  s3 -> s4 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s3 -> s5 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s3 -> s6 [86, 86] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s3 -> s1 [87, 65535] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s4 -> s4 [0, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s4 -> s9 [86, 86] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s4 -> s4 [87, 65535] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s6 -> s6 [0, 66] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s6 -> s6 [0, 65535] { R68280 += 1, R68204 += 1 };
  s6 -> s7 [0, 65535] { R68280 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s6 -> s10 [67, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s6 -> s6 [86, 65535] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s7 -> s7 [0, 65535] { R68280 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 67] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s9 -> s9 [0, 65535] { R68280 += 1, R68204 += 1 };
  s9 -> s7 [0, 65535] { R68280 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [86, 65535] { R68280 += 1, R68204 += 1, R68160 += 1 };
  s10 -> s7 [0, 65535] { R68280 += 1 };
  s10 -> s10 [0, 65535] { R68280 += 1, R68204 += 1 };
  s10 -> s8 [0, 65535];
  accepting s8, s9, s6, s7, s10;
};
automaton value1_40 {
  init s0;
  s0 -> s1 [0, 66] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s0 -> s2 [0, 65535] { R68282 += 1, R68205 += 1, R68206 += 1 };
  s0 -> s0 [0, 65535] { R68281 += 1, R68282 += 1 };
  s0 -> s3 [0, 65535] { R68282 += 1, R68206 += 1, R68161 += 1, R68162 += 1 };
  s0 -> s4 [67, 67] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s0 -> s5 [67, 67] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s0 -> s1 [68, 65535] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s1 -> s1 [0, 66] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s1 -> s1 [0, 65535] { R68282 += 1, R68206 += 1 };
  s1 -> s7 [0, 65535] { R68282 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [67, 67] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s1 -> s5 [67, 67] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s1 -> s1 [68, 65535] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s2 -> s1 [0, 66] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s2 -> s2 [0, 65535] { R68282 += 1, R68205 += 1, R68206 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s3 [0, 65535] { R68282 += 1, R68206 += 1, R68161 += 1, R68162 += 1 };
  s2 -> s4 [67, 67] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s2 -> s5 [67, 67] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s2 -> s1 [68, 65535] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s3 -> s1 [0, 66] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s3 -> s7 [0, 65535] { R68282 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R68282 += 1, R68206 += 1, R68161 += 1, R68162 += 1 };
  s3 -> s4 [67, 67] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s3 -> s5 [67, 67] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s3 -> s1 [68, 65535] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s4 -> s7 [0, 65535] { R68282 += 1 };
  s4 -> s4 [0, 65535] { R68282 += 1, R68206 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R68282 += 1, R68206 += 1 };
  s5 -> s7 [0, 65535] { R68282 += 1 };
  s5 -> s5 [0, 65535] { R68282 += 1, R68206 += 1, R68162 += 1, R58271 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R68282 += 1, R68206 += 1 };
  s6 -> s7 [0, 65535] { R68282 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R68282 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value1_41 {
  init s0;
  s0 -> s1 [0, 66] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s0 -> s2 [0, 65535] { R68284 += 1, R68207 += 1, R68208 += 1 };
  s0 -> s3 [0, 65535] { R68284 += 1, R68208 += 1, R68163 += 1, R68164 += 1 };
  s0 -> s0 [0, 65535] { R68283 += 1, R68284 += 1 };
  s0 -> s4 [67, 67] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s0 -> s5 [67, 67] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s0 -> s1 [68, 65535] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s1 -> s1 [0, 66] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R68284 += 1, R68208 += 1 };
  s1 -> s8 [0, 65535] { R68284 += 1 };
  s1 -> s4 [67, 67] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s1 -> s5 [67, 67] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s1 -> s1 [68, 65535] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s2 -> s1 [0, 66] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s2 -> s2 [0, 65535] { R68284 += 1, R68207 += 1, R68208 += 1 };
  s2 -> s3 [0, 65535] { R68284 += 1, R68208 += 1, R68163 += 1, R68164 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [67, 67] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s2 -> s5 [67, 67] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s2 -> s1 [68, 65535] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s3 -> s1 [0, 66] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s3 -> s3 [0, 65535] { R68284 += 1, R68208 += 1, R68163 += 1, R68164 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R68284 += 1 };
  s3 -> s4 [67, 67] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s3 -> s5 [67, 67] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s3 -> s1 [68, 65535] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R68284 += 1, R68208 += 1 };
  s4 -> s8 [0, 65535] { R68284 += 1 };
  s5 -> s6 [0, 65535] { R68284 += 1, R68208 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R68284 += 1, R68208 += 1, R68164 += 1, R58273 += 1 };
  s5 -> s8 [0, 65535] { R68284 += 1 };
  s6 -> s6 [0, 65535] { R68284 += 1, R68208 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R68284 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R68284 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value1_42 {
  init s0;
  s0 -> s1 [0, 66] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s0 -> s2 [0, 65535] { R68286 += 1, R68209 += 1, R68210 += 1 };
  s0 -> s0 [0, 65535] { R68285 += 1, R68286 += 1 };
  s0 -> s3 [0, 65535] { R68286 += 1, R68210 += 1, R68165 += 1, R68166 += 1 };
  s0 -> s4 [67, 67] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s0 -> s5 [67, 67] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s0 -> s1 [68, 65535] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s1 -> s1 [0, 66] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s1 -> s1 [0, 65535] { R68286 += 1, R68210 += 1 };
  s1 -> s7 [0, 65535] { R68286 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [67, 67] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s1 -> s5 [67, 67] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s1 -> s1 [68, 65535] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s2 -> s1 [0, 66] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s2 -> s2 [0, 65535] { R68286 += 1, R68209 += 1, R68210 += 1 };
  s2 -> s3 [0, 65535] { R68286 += 1, R68210 += 1, R68165 += 1, R68166 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [67, 67] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s2 -> s5 [67, 67] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s2 -> s1 [68, 65535] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s3 -> s1 [0, 66] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s3 -> s3 [0, 65535] { R68286 += 1, R68210 += 1, R68165 += 1, R68166 += 1 };
  s3 -> s7 [0, 65535] { R68286 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [67, 67] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s3 -> s5 [67, 67] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s3 -> s1 [68, 65535] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s4 -> s4 [0, 65535] { R68286 += 1, R68210 += 1 };
  s4 -> s7 [0, 65535] { R68286 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R68286 += 1, R68210 += 1 };
  s5 -> s7 [0, 65535] { R68286 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R68286 += 1, R68210 += 1, R68166 += 1, R58275 += 1, R58276 += 1 };
  s6 -> s6 [0, 65535] { R68286 += 1, R68210 += 1 };
  s6 -> s7 [0, 65535] { R68286 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R68286 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value1_43 {
  init s0;
  s0 -> s1 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s0 -> s2 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s0 -> s3 [0, 65535] { R68288 += 1, R68211 += 1, R68212 += 1 };
  s0 -> s4 [0, 65535] { R68288 += 1, R68212 += 1, R68167 += 1, R68168 += 1 };
  s0 -> s0 [0, 65535] { R68287 += 1, R68288 += 1 };
  s0 -> s5 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s0 -> s6 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s0 -> s7 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s0 -> s8 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s0 -> s1 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s0 -> s2 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s1 -> s1 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s1 -> s2 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s1 -> s5 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s1 -> s6 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s1 -> s7 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s1 -> s8 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s1 -> s1 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s1 -> s2 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s2 -> s2 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s2 -> s13 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s2 -> s5 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s2 -> s9 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s2 -> s14 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s2 -> s7 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s2 -> s2 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s2 -> s13 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s3 -> s1 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s3 -> s2 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s3 -> s3 [0, 65535] { R68288 += 1, R68211 += 1, R68212 += 1 };
  s3 -> s4 [0, 65535] { R68288 += 1, R68212 += 1, R68167 += 1, R68168 += 1 };
  s3 -> s5 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s3 -> s6 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s3 -> s7 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s3 -> s8 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s3 -> s1 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s3 -> s2 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s4 -> s1 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s4 -> s2 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s4 -> s4 [0, 65535] { R68288 += 1, R68212 += 1, R68167 += 1, R68168 += 1 };
  s4 -> s5 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s4 -> s6 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s4 -> s7 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s4 -> s8 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s4 -> s1 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s4 -> s2 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s6 -> s6 [0, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67883 += 1, R67884 += 1 };
  s6 -> s7 [0, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s7 -> s9 [0, 65535] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s7 -> s7 [0, 65535] { R68288 += 1, R68212 += 1, R68168 += 1, R67884 += 1, R67885 += 1 };
  s9 -> s9 [0, 65535] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s9 -> s10 [0, 65535] { R68288 += 1 };
  s9 -> s11 [0, 65535] { R68288 += 1, R68212 += 1 };
  s9 -> s12 [0, 65535];
  s10 -> s10 [0, 65535] { R68288 += 1 };
  s10 -> s12 [0, 65535];
  s11 -> s10 [0, 65535] { R68288 += 1 };
  s11 -> s11 [0, 65535] { R68288 += 1, R68212 += 1 };
  s11 -> s12 [0, 65535];
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 66] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s13 -> s13 [0, 65535] { R68288 += 1, R68212 += 1 };
  s13 -> s10 [0, 65535] { R68288 += 1 };
  s13 -> s12 [0, 65535];
  s13 -> s9 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s13 -> s14 [67, 67] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s13 -> s13 [68, 65535] { R68288 += 1, R68212 += 1, R68168 += 1 };
  s14 -> s10 [0, 65535] { R68288 += 1 };
  s14 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R68288 += 1, R68212 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value1_44 {
  init s0;
  s0 -> s1 [0, 66] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s0 -> s2 [0, 65535] { R68290 += 1, R68213 += 1, R68214 += 1 };
  s0 -> s3 [0, 65535] { R68290 += 1, R68214 += 1, R68169 += 1, R68170 += 1 };
  s0 -> s0 [0, 65535] { R68289 += 1, R68290 += 1 };
  s0 -> s4 [67, 67] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s0 -> s5 [67, 67] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s0 -> s1 [68, 65535] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s1 -> s1 [0, 66] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s1 -> s1 [0, 65535] { R68290 += 1, R68214 += 1 };
  s1 -> s6 [0, 65535] { R68290 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [67, 67] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s1 -> s5 [67, 67] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s1 -> s1 [68, 65535] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s2 -> s1 [0, 66] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s2 -> s2 [0, 65535] { R68290 += 1, R68213 += 1, R68214 += 1 };
  s2 -> s3 [0, 65535] { R68290 += 1, R68214 += 1, R68169 += 1, R68170 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [67, 67] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s2 -> s5 [67, 67] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s2 -> s1 [68, 65535] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s3 -> s1 [0, 66] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s3 -> s6 [0, 65535] { R68290 += 1 };
  s3 -> s3 [0, 65535] { R68290 += 1, R68214 += 1, R68169 += 1, R68170 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [67, 67] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s3 -> s5 [67, 67] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s3 -> s1 [68, 65535] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s4 -> s6 [0, 65535] { R68290 += 1 };
  s4 -> s8 [0, 65535] { R68290 += 1, R68214 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R68290 += 1, R68214 += 1, R68170 += 1, R67889 += 1, R67890 += 1 };
  s5 -> s6 [0, 65535] { R68290 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R68290 += 1, R68214 += 1 };
  s6 -> s6 [0, 65535] { R68290 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R68290 += 1 };
  s8 -> s8 [0, 65535] { R68290 += 1, R68214 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value1_45 {
  init s0;
  s0 -> s1 [0, 66] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s0 -> s0 [0, 65535] { R68291 += 1, R68292 += 1 };
  s0 -> s2 [0, 65535] { R68292 += 1, R68215 += 1, R68216 += 1 };
  s0 -> s3 [0, 65535] { R68292 += 1, R68216 += 1, R68171 += 1, R68172 += 1 };
  s0 -> s4 [67, 67] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s0 -> s5 [67, 67] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s0 -> s1 [68, 65535] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s1 -> s1 [0, 66] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s1 -> s1 [0, 65535] { R68292 += 1, R68216 += 1 };
  s1 -> s6 [0, 65535] { R68292 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [67, 67] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s1 -> s5 [67, 67] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s1 -> s1 [68, 65535] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s2 -> s1 [0, 66] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s2 -> s2 [0, 65535] { R68292 += 1, R68215 += 1, R68216 += 1 };
  s2 -> s3 [0, 65535] { R68292 += 1, R68216 += 1, R68171 += 1, R68172 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [67, 67] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s2 -> s5 [67, 67] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s2 -> s1 [68, 65535] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s3 -> s1 [0, 66] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s3 -> s3 [0, 65535] { R68292 += 1, R68216 += 1, R68171 += 1, R68172 += 1 };
  s3 -> s6 [0, 65535] { R68292 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [67, 67] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s3 -> s5 [67, 67] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s3 -> s1 [68, 65535] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s4 -> s4 [0, 65535] { R68292 += 1, R68216 += 1, R68172 += 1, R67893 += 1, R67894 += 1 };
  s4 -> s6 [0, 65535] { R68292 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R68292 += 1, R68216 += 1 };
  s5 -> s5 [0, 65535] { R68292 += 1, R68216 += 1 };
  s5 -> s6 [0, 65535] { R68292 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R68292 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R68292 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R68292 += 1, R68216 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value1_46 {
  init s0;
  s0 -> s1 [0, 66] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s0 -> s2 [0, 66] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s0 -> s3 [0, 65535] { R68294 += 1, R68218 += 1, R68173 += 1, R68174 += 1 };
  s0 -> s0 [0, 65535] { R68293 += 1, R68294 += 1 };
  s0 -> s4 [0, 65535] { R68294 += 1, R68217 += 1, R68218 += 1 };
  s0 -> s5 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s0 -> s6 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s0 -> s7 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s0 -> s8 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s0 -> s1 [68, 85] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s0 -> s2 [68, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s0 -> s1 [91, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s1 -> s1 [0, 66] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R68294 += 1, R68218 += 1 };
  s1 -> s11 [0, 65535] { R68294 += 1 };
  s1 -> s5 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1 };
  s1 -> s6 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1 };
  s1 -> s1 [68, 85] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s1 -> s1 [68, 65535] { R68294 += 1, R68218 += 1, R68174 += 1 };
  s1 -> s1 [91, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s2 -> s1 [0, 66] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s2 -> s2 [0, 66] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s2 -> s5 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s2 -> s6 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s2 -> s7 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s2 -> s8 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s2 -> s1 [68, 85] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s2 -> s2 [68, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s2 -> s1 [91, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s3 -> s1 [0, 66] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s3 -> s2 [0, 66] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s3 -> s3 [0, 65535] { R68294 += 1, R68218 += 1, R68173 += 1, R68174 += 1 };
  s3 -> s5 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s3 -> s6 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s3 -> s7 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s3 -> s8 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s3 -> s1 [68, 85] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s3 -> s2 [68, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s3 -> s1 [91, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s4 -> s1 [0, 66] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s4 -> s2 [0, 66] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s4 -> s3 [0, 65535] { R68294 += 1, R68218 += 1, R68173 += 1, R68174 += 1 };
  s4 -> s4 [0, 65535] { R68294 += 1, R68217 += 1, R68218 += 1 };
  s4 -> s5 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s4 -> s6 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s4 -> s7 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s4 -> s8 [67, 67] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s4 -> s1 [68, 85] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s4 -> s2 [68, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s4 -> s1 [91, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R68294 += 1, R68218 += 1 };
  s5 -> s11 [0, 65535] { R68294 += 1 };
  s6 -> s6 [0, 85] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R68294 += 1, R68218 += 1 };
  s6 -> s6 [0, 65535] { R68294 += 1, R68218 += 1, R68174 += 1 };
  s6 -> s11 [0, 65535] { R68294 += 1 };
  s6 -> s6 [91, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s8 -> s6 [0, 85] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s8 -> s8 [0, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68097 += 1, R68098 += 1 };
  s8 -> s6 [91, 65535] { R68294 += 1, R68218 += 1, R68174 += 1, R68098 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R68294 += 1, R68218 += 1 };
  s10 -> s11 [0, 65535] { R68294 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R68294 += 1 };
  accepting s5, s9, s6, s1, s10, s11;
};
};
