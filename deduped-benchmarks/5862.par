// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R4455, R4456, R4457, R4458, R4459, R4460, R4461, R4462, R4463, R4464, R4825, R4826, R4827, R4828, R4829, R4830, R4831, R4832, R4833, R4834, R4835, R4836, R4837, R4838, R4839, R4840, R4841, R4842, R4843, R4844, R4845, R4846, R4847, R4848, R4849, R4850, R4851, R4852, R4853, R4854, R4855, R4856, R4857, R4858, R4859, R4860, R4861, R4862, R4863, R4864, R4865, R4866, R4867, R4868, R4869, R4870, R4871, R4872, R4873, R4874, R4875, R4876, R4877, R4878, R4879, R4880, R4881, R4882, R4883, R4884, R4885, R4886, R4887, R4888, R4889, R4890, R4891, R4892, R4893, R4894, R4895, R4896, R4897, R4898, R4899, R49, R4900, R4901, R4902, R4903, R4904, R4905, R4906, R4907, R4908, R4909, R4910, R4911, R4912, R4913, R4914, R4915, R4916, R4917, R4918, R4919, R4920, R4921, R4922, R4923, R4924, R4925, R4926, R4927, R4928, R4929, R4930, R4931, R4932, R4933, R4934, R4935, R4936, R4937, R4938, R4939, R4940, R4941, R4942, R4943, R4944, R4945, R4946, R4947, R4948, R4949, R4950, R4951, R4952, R4953, R4954, R4955, R4956, R4957, R4958, R4959, R4960, R4961, R4962, R4963, R4964, R4965, R4966, R4967, R4968, R4969, R4970, R4971, R4972, R4973, R4974, R4975, R4976, R4977, R4978, R4979, R4980, R4981, R4982, R4983, R4984, R4985, R4986, R4987, R4988, R4989, R4990, R4991, R4992, R4993, R4994, R4995, R4996, R4997, R4998, R4999, R5, R5000, R5001, R5002, R5003, R5004, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R4930 += 1 };
  s0 -> s0 [0, 65535] { R4929 += 1, R4930 += 1 };
  s0 -> s2 [66, 66] { R4930 += 1 };
  s0 -> s1 [67, 65535] { R4930 += 1 };
  s1 -> s1 [0, 64] { R4930 += 1 };
  s1 -> s2 [66, 66] { R4930 += 1 };
  s1 -> s1 [67, 65535] { R4930 += 1 };
  s2 -> s2 [0, 64] { R4930 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R4930 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R4932 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R4931 += 1, R4932 += 1 };
  s1 -> s1 [0, 65535] { R4932 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R4934 += 1 };
  s0 -> s0 [0, 65535] { R4933 += 1, R4934 += 1 };
  s0 -> s2 [0, 65535] { R4934 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R4934 += 1 };
  s0 -> s1 [67, 65535] { R4934 += 1 };
  s1 -> s1 [0, 65] { R4934 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R4934 += 1 };
  s1 -> s1 [67, 65535] { R4934 += 1 };
  s2 -> s1 [0, 65] { R4934 += 1 };
  s2 -> s2 [0, 65535] { R4934 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R4934 += 1 };
  s2 -> s1 [67, 65535] { R4934 += 1 };
  s3 -> s3 [0, 65535] { R4934 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R4936 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R4936 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R4935 += 1, R4936 += 1 };
  s0 -> s3 [9, 13] { R4936 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R4936 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R4936 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R4936 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R4936 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R4936 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R4936 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R4936 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R4936 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R4936 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R4936 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R4936 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R4936 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4936 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R4938 += 1, R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R4937 += 1, R4938 += 1 };
  s0 -> s2 [0, 65535] { R4938 += 1, R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R4938 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R4938 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4938 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R4938 += 1, R25 += 1, R26 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4938 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R4940 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R4940 += 1, R27 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R4939 += 1, R4940 += 1 };
  s0 -> s3 [9, 13] { R4940 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R4940 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R4940 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R4940 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R4940 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4940 += 1 };
  s2 -> s1 [0, 8] { R4940 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R4940 += 1, R27 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R4940 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R4940 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R4940 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R4940 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R4940 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4940 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R4942 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R4941 += 1, R4942 += 1 };
  s0 -> s2 [0, 65535] { R4942 += 1, R30 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R4942 += 1, R29 += 1, R30 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R4942 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R4942 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4942 += 1, R30 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R4942 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R4944 += 1, R4850 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R4944 += 1, R4849 += 1, R4850 += 1 };
  s0 -> s0 [0, 65535] { R4943 += 1, R4944 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4944 += 1, R4850 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R4944 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4944 += 1, R4850 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R4944 += 1, R4849 += 1, R4850 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4944 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R4946 += 1, R4852 += 1 };
  s0 -> s2 [0, 65535] { R4946 += 1, R4851 += 1, R4852 += 1 };
  s0 -> s0 [0, 65535] { R4945 += 1, R4946 += 1 };
  s0 -> s3 [66, 66] { R4946 += 1, R4852 += 1 };
  s0 -> s4 [66, 66] { R4946 += 1, R4852 += 1 };
  s0 -> s1 [71, 65535] { R4946 += 1, R4852 += 1 };
  s1 -> s1 [0, 65] { R4946 += 1, R4852 += 1 };
  s1 -> s1 [0, 65535] { R4946 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R4946 += 1, R4852 += 1 };
  s1 -> s4 [66, 66] { R4946 += 1, R4852 += 1 };
  s1 -> s1 [71, 65535] { R4946 += 1, R4852 += 1 };
  s2 -> s1 [0, 65] { R4946 += 1, R4852 += 1 };
  s2 -> s2 [0, 65535] { R4946 += 1, R4851 += 1, R4852 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R4946 += 1, R4852 += 1 };
  s2 -> s4 [66, 66] { R4946 += 1, R4852 += 1 };
  s2 -> s1 [71, 65535] { R4946 += 1, R4852 += 1 };
  s3 -> s3 [0, 66] { R4946 += 1, R4852 += 1 };
  s3 -> s3 [0, 65535] { R4946 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [71, 65535] { R4946 += 1, R4852 += 1 };
  s4 -> s4 [0, 65535] { R4946 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R4948 += 1, R4854 += 1, R49 += 1 };
  s0 -> s0 [0, 65535] { R4947 += 1, R4948 += 1 };
  s0 -> s2 [0, 65535] { R4948 += 1, R4853 += 1, R4854 += 1 };
  s0 -> s3 [66, 66] { R4948 += 1, R4854 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R4948 += 1, R4854 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R4948 += 1, R4854 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R4948 += 1, R4854 += 1, R49 += 1 };
  s1 -> s1 [0, 65535] { R4948 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R4948 += 1, R4854 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R4948 += 1, R4854 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R4948 += 1, R4854 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R4948 += 1, R4854 += 1, R49 += 1 };
  s2 -> s2 [0, 65535] { R4948 += 1, R4853 += 1, R4854 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R4948 += 1, R4854 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R4948 += 1, R4854 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R4948 += 1, R4854 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R4948 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4948 += 1, R4854 += 1, R49 += 1 };
  s4 -> s6 [0, 65535] { R4948 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4948 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R4950 += 1, R4856 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R4950 += 1, R4855 += 1, R4856 += 1 };
  s0 -> s0 [0, 65535] { R4949 += 1, R4950 += 1 };
  s0 -> s3 [66, 66] { R4950 += 1, R4856 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R4950 += 1, R4856 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R4950 += 1, R4856 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R4950 += 1, R4856 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R4950 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R4950 += 1, R4856 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R4950 += 1, R4856 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R4950 += 1, R4856 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R4950 += 1, R4856 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R4950 += 1, R4855 += 1, R4856 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R4950 += 1, R4856 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R4950 += 1, R4856 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R4950 += 1, R4856 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R4950 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4950 += 1, R4856 += 1, R51 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4950 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4950 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s0 -> s2 [0, 65535] { R4952 += 1, R4857 += 1, R4858 += 1 };
  s0 -> s0 [0, 65535] { R4951 += 1, R4952 += 1 };
  s0 -> s3 [66, 66] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4952 += 1 };
  s1 -> s3 [66, 66] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R4952 += 1, R4857 += 1, R4858 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R4952 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4952 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4952 += 1, R4858 += 1, R53 += 1, R54 += 1 };
  s5 -> s5 [0, 65535] { R4952 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s0 -> s2 [0, 65535] { R4954 += 1, R4859 += 1, R4860 += 1 };
  s0 -> s0 [0, 65535] { R4953 += 1, R4954 += 1 };
  s0 -> s3 [66, 66] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4954 += 1 };
  s1 -> s3 [66, 66] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R4954 += 1, R4859 += 1, R4860 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R4954 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R4954 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4954 += 1, R4860 += 1, R57 += 1, R58 += 1 };
  s5 -> s5 [0, 65535] { R4954 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s0 -> s0 [0, 65535] { R4955 += 1, R4956 += 1 };
  s0 -> s2 [0, 65535] { R4956 += 1, R4861 += 1, R4862 += 1 };
  s0 -> s3 [66, 66] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4956 += 1 };
  s1 -> s3 [66, 66] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4956 += 1, R4861 += 1, R4862 += 1 };
  s2 -> s3 [66, 66] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4956 += 1 };
  s3 -> s3 [0, 65535] { R4956 += 1, R4862 += 1, R63 += 1, R64 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4956 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4956 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R4957 += 1, R4958 += 1 };
  s0 -> s2 [0, 65535] { R4958 += 1, R4863 += 1, R4864 += 1 };
  s0 -> s3 [66, 66] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4958 += 1 };
  s1 -> s3 [66, 66] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4958 += 1, R4863 += 1, R4864 += 1 };
  s2 -> s3 [66, 66] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4958 += 1, R4864 += 1, R67 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R4958 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R4958 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4958 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R4959 += 1, R4960 += 1 };
  s0 -> s2 [0, 65535] { R4960 += 1, R4865 += 1, R4866 += 1 };
  s0 -> s3 [66, 66] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4960 += 1 };
  s1 -> s3 [66, 66] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4960 += 1, R4865 += 1, R4866 += 1 };
  s2 -> s3 [66, 66] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R4960 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4960 += 1 };
  s4 -> s4 [0, 65535] { R4960 += 1, R4866 += 1, R73 += 1, R74 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4960 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R4962 += 1, R4886 += 1 };
  s0 -> s0 [0, 65535] { R4961 += 1, R4962 += 1 };
  s0 -> s2 [0, 65535] { R4962 += 1, R4885 += 1, R4886 += 1 };
  s0 -> s3 [66, 66] { R4962 += 1, R4886 += 1 };
  s0 -> s1 [67, 65535] { R4962 += 1, R4886 += 1 };
  s1 -> s1 [0, 65] { R4962 += 1, R4886 += 1 };
  s1 -> s3 [66, 66] { R4962 += 1, R4886 += 1 };
  s1 -> s1 [67, 65535] { R4962 += 1, R4886 += 1 };
  s2 -> s1 [0, 65] { R4962 += 1, R4886 += 1 };
  s2 -> s2 [0, 65535] { R4962 += 1, R4885 += 1, R4886 += 1 };
  s2 -> s3 [66, 66] { R4962 += 1, R4886 += 1 };
  s2 -> s1 [67, 65535] { R4962 += 1, R4886 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4962 += 1 };
  s3 -> s3 [0, 65535] { R4962 += 1, R4886 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4962 += 1 };
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s0 [0, 65535] { R4963 += 1, R4964 += 1 };
  s0 -> s1 [0, 65535] { R4964 += 1, R4888 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R4964 += 1, R4887 += 1, R4888 += 1 };
  s1 -> s4 [0, 65535] { R4964 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R4964 += 1, R4888 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R4964 += 1, R4888 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R4964 += 1, R4887 += 1, R4888 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R4964 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R4966 += 1, R4890 += 1 };
  s0 -> s0 [0, 65535] { R4965 += 1, R4966 += 1 };
  s0 -> s2 [0, 65535] { R4966 += 1, R4890 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R4966 += 1, R4889 += 1, R4890 += 1 };
  s0 -> s4 [66, 66] { R4966 += 1, R4890 += 1 };
  s0 -> s1 [67, 65535] { R4966 += 1, R4890 += 1 };
  s1 -> s1 [0, 65] { R4966 += 1, R4890 += 1 };
  s1 -> s1 [0, 65535] { R4966 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [66, 66] { R4966 += 1, R4890 += 1 };
  s1 -> s1 [67, 65535] { R4966 += 1, R4890 += 1 };
  s2 -> s1 [0, 65] { R4966 += 1, R4890 += 1 };
  s2 -> s6 [0, 65535] { R4966 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4966 += 1, R4890 += 1, R11 += 1 };
  s2 -> s4 [66, 66] { R4966 += 1, R4890 += 1 };
  s2 -> s1 [67, 65535] { R4966 += 1, R4890 += 1 };
  s3 -> s1 [0, 65] { R4966 += 1, R4890 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R4966 += 1, R4890 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R4966 += 1, R4889 += 1, R4890 += 1 };
  s3 -> s4 [66, 66] { R4966 += 1, R4890 += 1 };
  s3 -> s1 [67, 65535] { R4966 += 1, R4890 += 1 };
  s4 -> s4 [0, 65535] { R4966 += 1, R4890 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4966 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R4968 += 1, R4892 += 1, R4830 += 1 };
  s0 -> s2 [0, 65535] { R4968 += 1, R4891 += 1, R4892 += 1 };
  s0 -> s3 [0, 65535] { R4968 += 1, R4892 += 1, R4829 += 1, R4830 += 1 };
  s0 -> s0 [0, 65535] { R4967 += 1, R4968 += 1 };
  s0 -> s1 [67, 65535] { R4968 += 1, R4892 += 1, R4830 += 1 };
  s1 -> s1 [0, 65] { R4968 += 1, R4892 += 1, R4830 += 1 };
  s1 -> s1 [0, 65535] { R4968 += 1, R4892 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4968 += 1 };
  s1 -> s1 [67, 65535] { R4968 += 1, R4892 += 1, R4830 += 1 };
  s2 -> s1 [0, 65] { R4968 += 1, R4892 += 1, R4830 += 1 };
  s2 -> s2 [0, 65535] { R4968 += 1, R4891 += 1, R4892 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R4968 += 1, R4892 += 1, R4829 += 1, R4830 += 1 };
  s2 -> s1 [67, 65535] { R4968 += 1, R4892 += 1, R4830 += 1 };
  s3 -> s1 [0, 65] { R4968 += 1, R4892 += 1, R4830 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4968 += 1 };
  s3 -> s3 [0, 65535] { R4968 += 1, R4892 += 1, R4829 += 1, R4830 += 1 };
  s3 -> s1 [67, 65535] { R4968 += 1, R4892 += 1, R4830 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4968 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R4970 += 1, R4894 += 1, R4832 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R4970 += 1, R4894 += 1, R4831 += 1, R4832 += 1 };
  s0 -> s0 [0, 65535] { R4969 += 1, R4970 += 1 };
  s0 -> s3 [0, 65535] { R4970 += 1, R4893 += 1, R4894 += 1 };
  s1 -> s1 [0, 65535] { R4970 += 1, R4894 += 1, R4832 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4970 += 1 };
  s1 -> s6 [0, 65535] { R4970 += 1, R4894 += 1 };
  s2 -> s1 [0, 65535] { R4970 += 1, R4894 += 1, R4832 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4970 += 1, R4894 += 1, R4831 += 1, R4832 += 1 };
  s2 -> s5 [0, 65535] { R4970 += 1 };
  s3 -> s1 [0, 65535] { R4970 += 1, R4894 += 1, R4832 += 1, R20 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4970 += 1, R4894 += 1, R4831 += 1, R4832 += 1 };
  s3 -> s3 [0, 65535] { R4970 += 1, R4893 += 1, R4894 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4970 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4970 += 1 };
  s6 -> s6 [0, 65535] { R4970 += 1, R4894 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R4972 += 1, R4896 += 1, R4834 += 1 };
  s0 -> s0 [0, 65535] { R4971 += 1, R4972 += 1 };
  s0 -> s2 [0, 65535] { R4972 += 1, R4895 += 1, R4896 += 1 };
  s0 -> s3 [0, 65535] { R4972 += 1, R4896 += 1, R4833 += 1, R4834 += 1 };
  s0 -> s1 [70, 65535] { R4972 += 1, R4896 += 1, R4834 += 1 };
  s1 -> s1 [0, 66] { R4972 += 1, R4896 += 1, R4834 += 1 };
  s1 -> s4 [0, 65535] { R4972 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4972 += 1, R4896 += 1 };
  s1 -> s1 [70, 65535] { R4972 += 1, R4896 += 1, R4834 += 1 };
  s2 -> s1 [0, 66] { R4972 += 1, R4896 += 1, R4834 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R4972 += 1, R4895 += 1, R4896 += 1 };
  s2 -> s3 [0, 65535] { R4972 += 1, R4896 += 1, R4833 += 1, R4834 += 1 };
  s2 -> s1 [70, 65535] { R4972 += 1, R4896 += 1, R4834 += 1 };
  s3 -> s1 [0, 66] { R4972 += 1, R4896 += 1, R4834 += 1 };
  s3 -> s4 [0, 65535] { R4972 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4972 += 1, R4896 += 1, R4833 += 1, R4834 += 1 };
  s3 -> s1 [70, 65535] { R4972 += 1, R4896 += 1, R4834 += 1 };
  s4 -> s4 [0, 65535] { R4972 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R4974 += 1, R4898 += 1, R4835 += 1, R4836 += 1 };
  s0 -> s0 [0, 65535] { R4973 += 1, R4974 += 1 };
  s0 -> s2 [0, 65535] { R4974 += 1, R4897 += 1, R4898 += 1 };
  s0 -> s3 [0, 65535] { R4974 += 1, R4898 += 1, R4836 += 1, R78 += 1 };
  s1 -> s1 [0, 65535] { R4974 += 1, R4898 += 1, R4835 += 1, R4836 += 1 };
  s1 -> s4 [0, 65535] { R4974 += 1 };
  s1 -> s3 [0, 65535] { R4974 += 1, R4898 += 1, R4836 += 1, R78 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R4974 += 1, R4898 += 1, R4835 += 1, R4836 += 1 };
  s2 -> s2 [0, 65535] { R4974 += 1, R4897 += 1, R4898 += 1 };
  s2 -> s3 [0, 65535] { R4974 += 1, R4898 += 1, R4836 += 1, R78 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R4974 += 1 };
  s3 -> s3 [0, 65535] { R4974 += 1, R4898 += 1, R4836 += 1, R78 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R4974 += 1, R4898 += 1 };
  s4 -> s4 [0, 65535] { R4974 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R4974 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4974 += 1, R4898 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s0 -> s2 [0, 65535] { R4976 += 1, R4899 += 1, R4900 += 1 };
  s0 -> s0 [0, 65535] { R4975 += 1, R4976 += 1 };
  s0 -> s3 [0, 65535] { R4976 += 1, R4900 += 1, R4838 += 1, R80 += 1 };
  s0 -> s4 [0, 65535] { R4976 += 1, R4900 += 1, R4837 += 1, R4838 += 1 };
  s0 -> s1 [71, 65535] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s1 -> s1 [0, 69] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R4976 += 1, R4900 += 1 };
  s1 -> s6 [0, 65535] { R4976 += 1 };
  s1 -> s1 [71, 65535] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s2 -> s1 [0, 69] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s2 -> s2 [0, 65535] { R4976 += 1, R4899 += 1, R4900 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R4976 += 1, R4900 += 1, R4838 += 1, R80 += 1 };
  s2 -> s4 [0, 65535] { R4976 += 1, R4900 += 1, R4837 += 1, R4838 += 1 };
  s2 -> s1 [71, 65535] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s3 -> s1 [0, 69] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s3 -> s7 [0, 65535] { R4976 += 1, R4900 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4976 += 1, R4900 += 1, R4838 += 1, R80 += 1 };
  s3 -> s6 [0, 65535] { R4976 += 1 };
  s3 -> s1 [71, 65535] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s4 -> s1 [0, 69] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R4976 += 1, R4900 += 1, R4838 += 1, R80 += 1 };
  s4 -> s6 [0, 65535] { R4976 += 1 };
  s4 -> s4 [0, 65535] { R4976 += 1, R4900 += 1, R4837 += 1, R4838 += 1 };
  s4 -> s1 [71, 65535] { R4976 += 1, R4900 += 1, R4838 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4976 += 1 };
  s7 -> s7 [0, 65535] { R4976 += 1, R4900 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R4976 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R4977 += 1, R4978 += 1 };
  s0 -> s2 [0, 65535] { R4978 += 1, R4902 += 1, R4839 += 1, R4840 += 1 };
  s0 -> s3 [0, 65535] { R4978 += 1, R4901 += 1, R4902 += 1 };
  s0 -> s4 [0, 65535] { R4978 += 1, R4902 += 1, R4840 += 1, R83 += 1, R84 += 1 };
  s0 -> s1 [71, 65535] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R4978 += 1, R4902 += 1 };
  s1 -> s7 [0, 65535] { R4978 += 1 };
  s1 -> s1 [0, 65535] { R4978 += 1, R4902 += 1, R4840 += 1 };
  s1 -> s1 [71, 65535] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s2 -> s2 [0, 65535] { R4978 += 1, R4902 += 1, R4839 += 1, R4840 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R4978 += 1 };
  s2 -> s4 [0, 65535] { R4978 += 1, R4902 += 1, R4840 += 1, R83 += 1, R84 += 1 };
  s2 -> s1 [71, 65535] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s3 -> s2 [0, 65535] { R4978 += 1, R4902 += 1, R4839 += 1, R4840 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R4978 += 1, R4901 += 1, R4902 += 1 };
  s3 -> s4 [0, 65535] { R4978 += 1, R4902 += 1, R4840 += 1, R83 += 1, R84 += 1 };
  s3 -> s1 [71, 65535] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R4978 += 1, R4902 += 1 };
  s4 -> s7 [0, 65535] { R4978 += 1 };
  s4 -> s4 [0, 65535] { R4978 += 1, R4902 += 1, R4840 += 1, R83 += 1, R84 += 1 };
  s4 -> s1 [71, 65535] { R4978 += 1, R4902 += 1, R4840 += 1, R84 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4978 += 1, R4902 += 1 };
  s6 -> s7 [0, 65535] { R4978 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4978 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1, R88 += 1, R89 += 1 };
  s0 -> s0 [0, 65535] { R4979 += 1, R4980 += 1 };
  s0 -> s2 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1, R89 += 1, R90 += 1 };
  s0 -> s3 [0, 65535] { R4980 += 1, R4904 += 1, R4841 += 1, R4842 += 1 };
  s0 -> s4 [0, 65535] { R4980 += 1, R4903 += 1, R4904 += 1 };
  s1 -> s1 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1, R88 += 1, R89 += 1 };
  s1 -> s8 [0, 65535] { R4980 += 1, R4904 += 1 };
  s1 -> s2 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1, R89 += 1, R90 += 1 };
  s1 -> s6 [0, 65535] { R4980 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1 };
  s2 -> s8 [0, 65535] { R4980 += 1, R4904 += 1 };
  s2 -> s2 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1, R89 += 1, R90 += 1 };
  s2 -> s6 [0, 65535] { R4980 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1, R88 += 1, R89 += 1 };
  s3 -> s2 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1, R89 += 1, R90 += 1 };
  s3 -> s6 [0, 65535] { R4980 += 1 };
  s3 -> s3 [0, 65535] { R4980 += 1, R4904 += 1, R4841 += 1, R4842 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1, R88 += 1, R89 += 1 };
  s4 -> s2 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1, R89 += 1, R90 += 1 };
  s4 -> s3 [0, 65535] { R4980 += 1, R4904 += 1, R4841 += 1, R4842 += 1 };
  s4 -> s4 [0, 65535] { R4980 += 1, R4903 += 1, R4904 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R4980 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R4980 += 1, R4904 += 1, R4842 += 1 };
  s7 -> s8 [0, 65535] { R4980 += 1, R4904 += 1 };
  s7 -> s6 [0, 65535] { R4980 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R4980 += 1, R4904 += 1 };
  s8 -> s6 [0, 65535] { R4980 += 1 };
  s8 -> s5 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s0 -> s2 [0, 65535] { R4982 += 1, R4905 += 1, R4906 += 1 };
  s0 -> s0 [0, 65535] { R4981 += 1, R4982 += 1 };
  s0 -> s3 [0, 65535] { R4982 += 1, R4906 += 1, R4843 += 1, R4844 += 1 };
  s0 -> s4 [0, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4457 += 1, R4458 += 1 };
  s0 -> s5 [82, 82] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s0 -> s1 [83, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s1 -> s1 [0, 70] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s1 -> s5 [82, 82] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s1 -> s1 [83, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s2 -> s1 [0, 70] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s2 -> s2 [0, 65535] { R4982 += 1, R4905 += 1, R4906 += 1 };
  s2 -> s3 [0, 65535] { R4982 += 1, R4906 += 1, R4843 += 1, R4844 += 1 };
  s2 -> s4 [0, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4457 += 1, R4458 += 1 };
  s2 -> s5 [82, 82] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s2 -> s1 [83, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s3 -> s1 [0, 70] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s3 -> s3 [0, 65535] { R4982 += 1, R4906 += 1, R4843 += 1, R4844 += 1 };
  s3 -> s4 [0, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4457 += 1, R4458 += 1 };
  s3 -> s5 [82, 82] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s3 -> s1 [83, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s4 -> s1 [0, 70] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s4 -> s4 [0, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4457 += 1, R4458 += 1 };
  s4 -> s5 [82, 82] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s4 -> s1 [83, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s5 -> s5 [0, 70] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4982 += 1 };
  s5 -> s8 [0, 65535] { R4982 += 1, R4906 += 1 };
  s5 -> s5 [0, 65535] { R4982 += 1, R4906 += 1, R4844 += 1 };
  s5 -> s5 [82, 65535] { R4982 += 1, R4906 += 1, R4844 += 1, R4458 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4982 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R4982 += 1 };
  s8 -> s8 [0, 65535] { R4982 += 1, R4906 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R4984 += 1, R4908 += 1, R4845 += 1, R4846 += 1 };
  s0 -> s0 [0, 65535] { R4983 += 1, R4984 += 1 };
  s0 -> s2 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1, R4462 += 1, R4463 += 1 };
  s0 -> s3 [0, 65535] { R4984 += 1, R4907 += 1, R4908 += 1 };
  s0 -> s4 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1, R4463 += 1, R4464 += 1 };
  s1 -> s1 [0, 65535] { R4984 += 1, R4908 += 1, R4845 += 1, R4846 += 1 };
  s1 -> s6 [0, 65535] { R4984 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s2 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1, R4462 += 1, R4463 += 1 };
  s1 -> s4 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1, R4463 += 1, R4464 += 1 };
  s2 -> s6 [0, 65535] { R4984 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R4984 += 1, R4908 += 1 };
  s2 -> s2 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1, R4462 += 1, R4463 += 1 };
  s2 -> s4 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1, R4463 += 1, R4464 += 1 };
  s3 -> s1 [0, 65535] { R4984 += 1, R4908 += 1, R4845 += 1, R4846 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s2 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1, R4462 += 1, R4463 += 1 };
  s3 -> s3 [0, 65535] { R4984 += 1, R4907 += 1, R4908 += 1 };
  s3 -> s4 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1, R4463 += 1, R4464 += 1 };
  s4 -> s5 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1 };
  s4 -> s6 [0, 65535] { R4984 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R4984 += 1, R4908 += 1 };
  s4 -> s4 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1, R4463 += 1, R4464 += 1 };
  s5 -> s5 [0, 65535] { R4984 += 1, R4908 += 1, R4846 += 1 };
  s5 -> s6 [0, 65535] { R4984 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R4984 += 1, R4908 += 1 };
  s6 -> s6 [0, 65535] { R4984 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R4984 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R4984 += 1, R4908 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 70] { R4986 += 1, R4910 += 1, R4848 += 1, R4828 += 1 };
  s0 -> s2 [0, 65535] { R4986 += 1, R4910 += 1, R4847 += 1, R4848 += 1 };
  s0 -> s0 [0, 65535] { R4985 += 1, R4986 += 1 };
  s0 -> s3 [0, 65535] { R4986 += 1, R4909 += 1, R4910 += 1 };
  s0 -> s1 [0, 65535] { R4986 += 1, R4910 += 1, R4848 += 1 };
  s0 -> s1 [83, 65535] { R4986 += 1, R4910 += 1, R4848 += 1, R4828 += 1 };
  s1 -> s1 [0, 70] { R4986 += 1, R4910 += 1, R4848 += 1, R4828 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R4986 += 1 };
  s1 -> s6 [0, 65535] { R4986 += 1, R4910 += 1 };
  s1 -> s1 [0, 65535] { R4986 += 1, R4910 += 1, R4848 += 1 };
  s1 -> s1 [83, 65535] { R4986 += 1, R4910 += 1, R4848 += 1, R4828 += 1 };
  s2 -> s1 [0, 70] { R4986 += 1, R4910 += 1, R4848 += 1, R4828 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4986 += 1, R4910 += 1, R4847 += 1, R4848 += 1 };
  s2 -> s5 [0, 65535] { R4986 += 1 };
  s2 -> s1 [0, 65535] { R4986 += 1, R4910 += 1, R4848 += 1 };
  s2 -> s1 [83, 65535] { R4986 += 1, R4910 += 1, R4848 += 1, R4828 += 1 };
  s3 -> s1 [0, 70] { R4986 += 1, R4910 += 1, R4848 += 1, R4828 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R4986 += 1, R4910 += 1, R4847 += 1, R4848 += 1 };
  s3 -> s3 [0, 65535] { R4986 += 1, R4909 += 1, R4910 += 1 };
  s3 -> s1 [0, 65535] { R4986 += 1, R4910 += 1, R4848 += 1 };
  s3 -> s1 [83, 65535] { R4986 += 1, R4910 += 1, R4848 += 1, R4828 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4986 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R4986 += 1 };
  s6 -> s6 [0, 65535] { R4986 += 1, R4910 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R4988 += 1, R4912 += 1, R4867 += 1, R4868 += 1 };
  s0 -> s0 [0, 65535] { R4987 += 1, R4988 += 1 };
  s0 -> s2 [0, 65535] { R4988 += 1, R4911 += 1, R4912 += 1 };
  s0 -> s3 [0, 65535] { R4988 += 1, R4912 += 1, R4868 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R4988 += 1, R4912 += 1, R4867 += 1, R4868 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R4988 += 1 };
  s1 -> s3 [0, 65535] { R4988 += 1, R4912 += 1, R4868 += 1, R21 += 1 };
  s2 -> s1 [0, 65535] { R4988 += 1, R4912 += 1, R4867 += 1, R4868 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R4988 += 1, R4911 += 1, R4912 += 1 };
  s2 -> s3 [0, 65535] { R4988 += 1, R4912 += 1, R4868 += 1, R21 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R4988 += 1, R4912 += 1 };
  s3 -> s6 [0, 65535] { R4988 += 1 };
  s3 -> s3 [0, 65535] { R4988 += 1, R4912 += 1, R4868 += 1, R21 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R4988 += 1, R4912 += 1 };
  s5 -> s6 [0, 65535] { R4988 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R4988 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s0 -> s2 [0, 65535] { R4990 += 1, R4914 += 1, R4869 += 1, R4870 += 1 };
  s0 -> s0 [0, 65535] { R4989 += 1, R4990 += 1 };
  s0 -> s3 [0, 65535] { R4990 += 1, R4913 += 1, R4914 += 1 };
  s0 -> s4 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s0 -> s5 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s0 -> s6 [70, 70] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s0 -> s1 [71, 65535] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s1 -> s1 [0, 65] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s1 -> s4 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s1 -> s5 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s1 -> s6 [70, 70] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s1 -> s1 [71, 65535] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s2 -> s1 [0, 65] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s2 -> s2 [0, 65535] { R4990 += 1, R4914 += 1, R4869 += 1, R4870 += 1 };
  s2 -> s4 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s2 -> s5 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s2 -> s6 [70, 70] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s2 -> s1 [71, 65535] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s3 -> s1 [0, 65] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s3 -> s2 [0, 65535] { R4990 += 1, R4914 += 1, R4869 += 1, R4870 += 1 };
  s3 -> s3 [0, 65535] { R4990 += 1, R4913 += 1, R4914 += 1 };
  s3 -> s4 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s3 -> s5 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s3 -> s6 [70, 70] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s3 -> s1 [71, 65535] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s5 -> s5 [0, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s5 -> s10 [70, 70] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s5 -> s5 [71, 65535] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s6 -> s6 [0, 65] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s6 -> s6 [0, 65535] { R4990 += 1, R4914 += 1 };
  s6 -> s7 [0, 65535] { R4990 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s6 -> s10 [66, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s6 -> s6 [70, 65535] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s7 -> s7 [0, 65535] { R4990 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R4990 += 1, R4914 += 1 };
  s9 -> s7 [0, 65535] { R4990 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s10 [0, 66] { R4990 += 1, R4914 += 1, R4870 += 1 };
  s10 -> s7 [0, 65535] { R4990 += 1 };
  s10 -> s10 [0, 65535] { R4990 += 1, R4914 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [70, 65535] { R4990 += 1, R4914 += 1, R4870 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R4992 += 1, R4916 += 1, R4871 += 1, R4872 += 1 };
  s0 -> s3 [0, 65535] { R4992 += 1, R4915 += 1, R4916 += 1 };
  s0 -> s0 [0, 65535] { R4991 += 1, R4992 += 1 };
  s0 -> s4 [66, 66] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s1 -> s1 [0, 65535] { R4992 += 1, R4916 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R4992 += 1 };
  s1 -> s4 [66, 66] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s2 -> s2 [0, 65535] { R4992 += 1, R4916 += 1, R4871 += 1, R4872 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R4992 += 1 };
  s2 -> s4 [66, 66] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s3 -> s2 [0, 65535] { R4992 += 1, R4916 += 1, R4871 += 1, R4872 += 1 };
  s3 -> s3 [0, 65535] { R4992 += 1, R4915 += 1, R4916 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [66, 66] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R4992 += 1 };
  s4 -> s8 [0, 65535] { R4992 += 1, R4916 += 1 };
  s4 -> s4 [0, 65535] { R4992 += 1, R4916 += 1, R4872 += 1, R77 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R4992 += 1 };
  s5 -> s5 [0, 65535] { R4992 += 1, R4916 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4992 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R4992 += 1 };
  s8 -> s8 [0, 65535] { R4992 += 1, R4916 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R4994 += 1, R4918 += 1, R4873 += 1, R4874 += 1 };
  s0 -> s3 [0, 65535] { R4994 += 1, R4917 += 1, R4918 += 1 };
  s0 -> s0 [0, 65535] { R4993 += 1, R4994 += 1 };
  s0 -> s4 [66, 66] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s1 -> s6 [0, 65535] { R4994 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R4994 += 1, R4918 += 1 };
  s1 -> s4 [66, 66] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R4994 += 1, R4918 += 1, R4873 += 1, R4874 += 1 };
  s2 -> s6 [0, 65535] { R4994 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [66, 66] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s3 -> s2 [0, 65535] { R4994 += 1, R4918 += 1, R4873 += 1, R4874 += 1 };
  s3 -> s3 [0, 65535] { R4994 += 1, R4917 += 1, R4918 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [66, 66] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s4 -> s6 [0, 65535] { R4994 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R4994 += 1, R4918 += 1 };
  s5 -> s6 [0, 65535] { R4994 += 1 };
  s5 -> s7 [0, 65535] { R4994 += 1, R4918 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R4994 += 1, R4918 += 1, R4874 += 1, R79 += 1 };
  s6 -> s6 [0, 65535] { R4994 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R4994 += 1 };
  s7 -> s7 [0, 65535] { R4994 += 1, R4918 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R4996 += 1, R4919 += 1, R4920 += 1 };
  s0 -> s0 [0, 65535] { R4995 += 1, R4996 += 1 };
  s0 -> s3 [0, 65535] { R4996 += 1, R4920 += 1, R4875 += 1, R4876 += 1 };
  s0 -> s4 [66, 66] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R4996 += 1, R4920 += 1 };
  s1 -> s7 [0, 65535] { R4996 += 1 };
  s1 -> s4 [66, 66] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R4996 += 1, R4919 += 1, R4920 += 1 };
  s2 -> s3 [0, 65535] { R4996 += 1, R4920 += 1, R4875 += 1, R4876 += 1 };
  s2 -> s4 [66, 66] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R4996 += 1, R4920 += 1, R4875 += 1, R4876 += 1 };
  s3 -> s7 [0, 65535] { R4996 += 1 };
  s3 -> s4 [66, 66] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R4996 += 1, R4920 += 1, R4876 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R4996 += 1, R4920 += 1 };
  s4 -> s7 [0, 65535] { R4996 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R4996 += 1, R4920 += 1 };
  s5 -> s7 [0, 65535] { R4996 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R4996 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R4996 += 1, R4920 += 1 };
  s8 -> s7 [0, 65535] { R4996 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s0 -> s2 [0, 65535] { R4998 += 1, R4921 += 1, R4922 += 1 };
  s0 -> s3 [0, 65535] { R4998 += 1, R4922 += 1, R4877 += 1, R4878 += 1 };
  s0 -> s0 [0, 65535] { R4997 += 1, R4998 += 1 };
  s0 -> s4 [66, 66] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s0 -> s5 [66, 66] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s0 -> s1 [67, 65535] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65535] { R4998 += 1, R4922 += 1 };
  s1 -> s7 [0, 65535] { R4998 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [66, 66] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s1 -> s5 [66, 66] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [67, 65535] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [0, 65] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s2 -> s2 [0, 65535] { R4998 += 1, R4921 += 1, R4922 += 1 };
  s2 -> s3 [0, 65535] { R4998 += 1, R4922 += 1, R4877 += 1, R4878 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [66, 66] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s2 -> s5 [66, 66] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [67, 65535] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [0, 65] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R4998 += 1, R4922 += 1, R4877 += 1, R4878 += 1 };
  s3 -> s7 [0, 65535] { R4998 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [66, 66] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s3 -> s5 [66, 66] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [67, 65535] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s4 -> s4 [0, 65535] { R4998 += 1, R4922 += 1 };
  s4 -> s7 [0, 65535] { R4998 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R4998 += 1, R4922 += 1 };
  s5 -> s7 [0, 65535] { R4998 += 1 };
  s5 -> s5 [0, 65535] { R4998 += 1, R4922 += 1, R4878 += 1, R85 += 1, R86 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R4998 += 1, R4922 += 1 };
  s6 -> s7 [0, 65535] { R4998 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R4998 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s0 -> s2 [0, 65535] { R5000 += 1, R4924 += 1, R4879 += 1, R4880 += 1 };
  s0 -> s3 [0, 65535] { R5000 += 1, R4923 += 1, R4924 += 1 };
  s0 -> s0 [0, 65535] { R4999 += 1, R5000 += 1 };
  s0 -> s4 [66, 66] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s0 -> s5 [66, 66] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s0 -> s1 [67, 65535] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s1 -> s1 [0, 65] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5000 += 1 };
  s1 -> s1 [0, 65535] { R5000 += 1, R4924 += 1 };
  s1 -> s4 [66, 66] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s1 -> s5 [66, 66] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s1 -> s1 [67, 65535] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s2 -> s1 [0, 65] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s2 -> s2 [0, 65535] { R5000 += 1, R4924 += 1, R4879 += 1, R4880 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R5000 += 1 };
  s2 -> s4 [66, 66] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s2 -> s5 [66, 66] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s2 -> s1 [67, 65535] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s3 -> s1 [0, 65] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s3 -> s2 [0, 65535] { R5000 += 1, R4924 += 1, R4879 += 1, R4880 += 1 };
  s3 -> s3 [0, 65535] { R5000 += 1, R4923 += 1, R4924 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [66, 66] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s3 -> s5 [66, 66] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s3 -> s1 [67, 65535] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s4 -> s4 [0, 65535] { R5000 += 1, R4924 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5000 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5000 += 1 };
  s5 -> s5 [0, 65535] { R5000 += 1, R4924 += 1, R4880 += 1, R4455 += 1, R4456 += 1 };
  s5 -> s8 [0, 65535] { R5000 += 1, R4924 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5000 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5000 += 1 };
  s8 -> s8 [0, 65535] { R5000 += 1, R4924 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s0 -> s0 [0, 65535] { R5001 += 1, R5002 += 1 };
  s0 -> s2 [0, 65535] { R5002 += 1, R4925 += 1, R4926 += 1 };
  s0 -> s3 [0, 65535] { R5002 += 1, R4926 += 1, R4881 += 1, R4882 += 1 };
  s0 -> s4 [66, 66] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s0 -> s5 [66, 66] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s0 -> s1 [67, 65535] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s1 -> s1 [0, 65] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s1 -> s6 [0, 65535] { R5002 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R5002 += 1, R4926 += 1 };
  s1 -> s4 [66, 66] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s1 -> s5 [66, 66] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s1 -> s1 [67, 65535] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s2 -> s1 [0, 65] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R5002 += 1, R4925 += 1, R4926 += 1 };
  s2 -> s3 [0, 65535] { R5002 += 1, R4926 += 1, R4881 += 1, R4882 += 1 };
  s2 -> s4 [66, 66] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s2 -> s5 [66, 66] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s2 -> s1 [67, 65535] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s3 -> s1 [0, 65] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s3 -> s6 [0, 65535] { R5002 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R5002 += 1, R4926 += 1, R4881 += 1, R4882 += 1 };
  s3 -> s4 [66, 66] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s3 -> s5 [66, 66] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s3 -> s1 [67, 65535] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s4 -> s8 [0, 65535] { R5002 += 1, R4926 += 1 };
  s4 -> s6 [0, 65535] { R5002 += 1 };
  s4 -> s4 [0, 65535] { R5002 += 1, R4926 += 1, R4882 += 1, R4459 += 1, R4460 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R5002 += 1 };
  s5 -> s5 [0, 65535] { R5002 += 1, R4926 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R5002 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5002 += 1, R4926 += 1 };
  s8 -> s6 [0, 65535] { R5002 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s0 -> s2 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s0 -> s3 [0, 65535] { R5004 += 1, R4928 += 1, R4883 += 1, R4884 += 1 };
  s0 -> s0 [0, 65535] { R5003 += 1, R5004 += 1 };
  s0 -> s4 [0, 65535] { R5004 += 1, R4927 += 1, R4928 += 1 };
  s0 -> s5 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s0 -> s6 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s0 -> s7 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s0 -> s8 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s0 -> s1 [67, 69] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s0 -> s2 [67, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s0 -> s9 [70, 70] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s0 -> s1 [83, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s1 -> s1 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s1 -> s5 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1 };
  s1 -> s6 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1 };
  s1 -> s1 [67, 69] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s1 -> s1 [67, 65535] { R5004 += 1, R4928 += 1, R4884 += 1 };
  s1 -> s9 [70, 70] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s1 -> s1 [83, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s2 -> s1 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s2 -> s2 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s2 -> s5 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s2 -> s6 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s2 -> s7 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s2 -> s8 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s2 -> s1 [67, 69] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s2 -> s2 [67, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s2 -> s9 [70, 70] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s2 -> s1 [83, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s3 -> s1 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s3 -> s2 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s3 -> s3 [0, 65535] { R5004 += 1, R4928 += 1, R4883 += 1, R4884 += 1 };
  s3 -> s5 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s3 -> s6 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s3 -> s7 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s3 -> s8 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s3 -> s1 [67, 69] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s3 -> s2 [67, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s3 -> s9 [70, 70] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s3 -> s1 [83, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s4 -> s1 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s4 -> s2 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s4 -> s3 [0, 65535] { R5004 += 1, R4928 += 1, R4883 += 1, R4884 += 1 };
  s4 -> s4 [0, 65535] { R5004 += 1, R4927 += 1, R4928 += 1 };
  s4 -> s5 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s4 -> s6 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s4 -> s7 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s4 -> s8 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s4 -> s1 [67, 69] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s4 -> s2 [67, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s4 -> s9 [70, 70] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s4 -> s1 [83, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s6 -> s6 [0, 69] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s6 -> s6 [0, 65535] { R5004 += 1, R4928 += 1, R4884 += 1 };
  s6 -> s12 [70, 70] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s6 -> s6 [83, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s8 -> s6 [0, 69] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s8 -> s8 [0, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4825 += 1, R4826 += 1 };
  s8 -> s12 [70, 70] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s8 -> s6 [83, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s9 -> s9 [0, 65] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s9 -> s10 [0, 65535] { R5004 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R5004 += 1, R4928 += 1 };
  s9 -> s12 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1 };
  s9 -> s13 [66, 66] { R5004 += 1, R4928 += 1, R4884 += 1 };
  s9 -> s9 [67, 70] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s9 -> s9 [67, 65535] { R5004 += 1, R4928 += 1, R4884 += 1 };
  s9 -> s9 [83, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s10 -> s10 [0, 65535] { R5004 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 70] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s12 -> s10 [0, 65535] { R5004 += 1 };
  s12 -> s14 [0, 65535] { R5004 += 1, R4928 += 1 };
  s12 -> s12 [0, 65535] { R5004 += 1, R4928 += 1, R4884 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s12 [83, 65535] { R5004 += 1, R4928 += 1, R4884 += 1, R4826 += 1 };
  s13 -> s10 [0, 65535] { R5004 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R5004 += 1, R4928 += 1 };
  s14 -> s10 [0, 65535] { R5004 += 1 };
  s14 -> s14 [0, 65535] { R5004 += 1, R4928 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R1 = R4844 && R2 = R4928 && R3 - R5004 = 1 && R23 - R4928 = -1 && R24 = R4928 && R25 - R4928 = -1 && R26 = R4928 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R5004 && R32 - R5004 = 1 && R33 = R5004 && R34 - R5004 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R4458 + -1*R4456 - R64 = 0 && R63 + R4457 + R4455 = 0 && R4843 = 0 && R4869 = 0 && R4870 = 0 && R4883 = 0 && R4884 = 0 && R4885 = 0 && R4886 = R4928 && R4887 = 0 && R4888 = R4928 && R4889 = 0 && R4890 = R4928 && R4891 = 0 && R4892 = R4928 && R4893 = 0 && R4894 = R4928 && R4895 = 0 && R4896 = R4928 && R4897 = 0 && R4898 = R4928 && R4899 = 0 && R4900 = R4928 && R4901 = 0 && R4902 = R4928 && R4903 = 0 && R4904 = R4928 && R4905 = 0 && R4906 = R4928 && R4907 = 0 && R4908 = R4928 && R4909 = 0 && R4910 = R4928 && R4911 = 0 && R4912 = R4928 && R4913 = 0 && R4914 = R4928 && R4915 = 0 && R4916 = R4928 && R4917 = 0 && R4918 = R4928 && R4919 = 0 && R4920 = R4928 && R4921 = 0 && R4922 = R4928 && R4923 = 0 && R4924 = R4928 && R4925 = 0 && R4926 = R4928 && R4927 = 0 && R4929 = 0 && R4930 = R5004 && R4931 = 0 && R4932 = R5004 && R4933 = 0 && R4934 = R5004 && R4935 = 0 && R4936 = R5004 && R4937 = 0 && R4938 = R5004 && R4939 = 0 && R4940 = R5004 && R4941 = 0 && R4942 = R5004 && R4943 = 0 && R4944 = R5004 && R4945 = 0 && R4946 = R5004 && R4947 = 0 && R4948 = R5004 && R4949 = 0 && R4950 = R5004 && R4951 = 0 && R4952 = R5004 && R4953 = 0 && R4954 = R5004 && R4955 = 0 && R4956 = R5004 && R4957 = 0 && R4958 = R5004 && R4959 = 0 && R4960 = R5004 && R4961 = 0 && R4962 = R5004 && R4963 = 0 && R4964 = R5004 && R4965 = 0 && R4966 = R5004 && R4967 = 0 && R4968 = R5004 && R4969 = 0 && R4970 = R5004 && R4971 = 0 && R4972 = R5004 && R4973 = 0 && R4974 = R5004 && R4975 = 0 && R4976 = R5004 && R4977 = 0 && R4978 = R5004 && R4979 = 0 && R4980 = R5004 && R4981 = 0 && R4982 = R5004 && R4983 = 0 && R4984 = R5004 && R4985 = 0 && R4986 = R5004 && R4987 = 0 && R4988 = R5004 && R4989 = 0 && R4990 = R5004 && R4991 = 0 && R4992 = R5004 && R4993 = 0 && R4994 = R5004 && R4995 = 0 && R4996 = R5004 && R4997 = 0 && R4998 = R5004 && R4999 = 0 && R5000 = R5004 && R5001 = 0 && R5002 = R5004 && R5003 = 0 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R4458 + -1*R4456 - R64 < 1 && -1 < R4844 && 0 < R4928 && -1 < R5004 && (R59 + R90 + R87 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R4458 + -1*R4456 - R64 = 0 || R64 + R4458 + R4456 < 1) && (R53 + R83 + R81 = 0 || R64 + R4458 + R4456 < 1))) && (R59 + R90 + R87 != 0 || ((R57 + R88 + R85 != 0 || R58 + R89 + R86 + -1*R4458 + -1*R4456 - R64 = 0 || R64 + R4458 + R4456 < 1) && (R57 + R88 + R85 = 0 || R64 + R4458 + R4456 < 1))) && (R4829 != 0 || R4830 = R4844 || (R20 = 0 && R4844 = 0)) && (R4831 != 0 || R4832 = R4844 || (R20 = 0 && R4844 = 0)) && (R4833 != 0 || R4834 = R4844 || (R20 = 0 && R4844 = 0)) && (R4835 != 0 || R4836 = R4844 || (R20 = 0 && R4844 = 0)) && (R4837 != 0 || R4838 = R4844 || (R20 = 0 && R4844 = 0)) && (R4839 != 0 || R4840 = R4844 || (R20 = 0 && R4844 = 0)) && (R4841 != 0 || R4842 = R4844 || (R20 = 0 && R4844 = 0)) && (R4845 != 0 || R4844 = R4846 || (R20 = 0 && R4844 = 0)) && (R4847 != 0 || R4844 = R4848 || (R20 = 0 && R4844 = 0)) && (R21 = 0 || (R4867 = 0 && R4868 = 0)) && (R21 = 0 || (R4871 = 0 && R4872 = 0)) && (R21 = 0 || (R4873 = 0 && R4874 = 0)) && (R21 = 0 || (R4875 = 0 && R4876 = 0)) && (R21 = 0 || (R4877 = 0 && R4878 = 0)) && (R21 = 0 || (R4879 = 0 && R4880 = 0)) && (R21 = 0 || (R4881 = 0 && R4882 = 0)) && (R22 = 0 || (R4849 = 0 && R4850 = 0)) && (R22 = 0 || (R4851 = 0 && R4852 = 0)) && (R22 = 0 || (R4853 = 0 && R4854 = 0)) && (R22 = 0 || (R4855 = 0 && R4856 = 0)) && (R22 = 0 || (R4857 = 0 && R4858 = 0)) && (R22 = 0 || (R4859 = 0 && R4860 = 0)) && (R22 = 0 || (R4861 = 0 && R4862 = 0)) && (R22 = 0 || (R4863 = 0 && R4864 = 0)) && (R22 = 0 || (R4865 = 0 && R4866 = 0)) && (R59 + R90 + R87 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R4458 + -1*R4456 - R64 = 0)) && (R59 + R90 + R87 = 0 || (R57 + R88 + R85 = 0 && R58 + R89 + R86 + -1*R4458 + -1*R4456 - R64 = 0)) && (R69 + R4464 + R4461 = 0 || (R67 + R4462 + R4459 = 0 && R68 + R4463 + R4460 = 0)) && (R69 + R4464 + R4461 = 0 || (R73 + R4827 + R4825 = 0 && R74 + R4828 + R4826 = 0)) && (R4829 = 0 || (R20 = 0 && R4844 = 0)) && (R4831 = 0 || (R20 = 0 && R4844 = 0)) && (R4833 = 0 || (R20 = 0 && R4844 = 0)) && (R4835 = 0 || (R20 = 0 && R4844 = 0)) && (R4837 = 0 || (R20 = 0 && R4844 = 0)) && (R4839 = 0 || (R20 = 0 && R4844 = 0)) && (R4841 = 0 || (R20 = 0 && R4844 = 0)) && (R4845 = 0 || (R20 = 0 && R4844 = 0)) && (R4847 = 0 || (R20 = 0 && R4844 = 0));
// End of Parikh automata intersection problem
