// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11007, R11008, R11009, R11010, R12463, R12464, R12465, R12466, R12467, R12468, R13009, R13010, R13011, R13012, R13013, R13014, R13015, R13016, R13017, R13018, R13019, R13020, R13021, R13022, R13023, R13024, R13025, R13026, R13027, R13028, R13029, R13030, R13031, R13032, R13033, R13034, R13035, R13036, R13037, R13038, R13039, R13040, R13041, R13042, R13043, R13044, R13045, R13046, R13047, R13048, R13049, R13050, R13051, R13052, R13053, R13054, R13055, R13056, R13057, R13058, R13059, R13060, R13061, R13062, R13063, R13064, R13065, R13066, R13067, R13068, R13069, R13070, R13071, R13072, R13073, R13074, R13075, R13076, R13077, R13078, R13079, R13080, R13081, R13082, R13083, R13084, R13085, R13086, R13087, R13088, R13089, R13090, R13091, R13092, R13093, R13094, R13095, R13096, R13097, R13098, R13099, R13100, R13101, R13102, R13103, R13104, R13105, R13106, R13107, R13108, R13109, R13110, R13111, R13112, R13113, R13114, R13115, R13116, R13117, R13118, R13119, R13120, R13121, R13122, R13123, R13124, R13125, R13126, R13127, R13128, R13129, R13130, R13131, R13132, R13133, R13134, R13135, R13136, R13137, R13138, R13139, R13140, R13141, R13142, R13143, R13144, R13145, R13146, R13147, R13148, R13149, R13150, R13151, R13152, R13153, R13154, R13155, R13156, R13157, R13158, R13159, R13160, R13161, R13162, R13163, R13164, R13165, R13166, R13167, R13168, R13169, R13170, R13171, R13172, R13173, R13174, R13175, R13176, R13177, R13178, R13179, R13180, R13181, R13182, R13183, R13184, R13185, R13186, R13187, R13188, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R6637, R6638, R6639, R6640, R6641, R6642, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R13114 += 1 };
  s0 -> s0 [0, 65535] { R13113 += 1, R13114 += 1 };
  s0 -> s2 [66, 66] { R13114 += 1 };
  s0 -> s1 [67, 65535] { R13114 += 1 };
  s1 -> s1 [0, 64] { R13114 += 1 };
  s1 -> s2 [66, 66] { R13114 += 1 };
  s1 -> s1 [67, 65535] { R13114 += 1 };
  s2 -> s2 [0, 64] { R13114 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R13114 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R13116 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R13115 += 1, R13116 += 1 };
  s1 -> s1 [0, 65535] { R13116 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R13118 += 1 };
  s0 -> s0 [0, 65535] { R13117 += 1, R13118 += 1 };
  s0 -> s2 [0, 65535] { R13118 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R13118 += 1 };
  s0 -> s1 [67, 65535] { R13118 += 1 };
  s1 -> s1 [0, 65] { R13118 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R13118 += 1 };
  s1 -> s1 [67, 65535] { R13118 += 1 };
  s2 -> s1 [0, 65] { R13118 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13118 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R13118 += 1 };
  s2 -> s1 [67, 65535] { R13118 += 1 };
  s3 -> s3 [0, 65535] { R13118 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R13120 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R13119 += 1, R13120 += 1 };
  s0 -> s2 [0, 65535] { R13120 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R13120 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R13120 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R13120 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R13120 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R13120 += 1 };
  s1 -> s1 [0, 65535] { R13120 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R13120 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13120 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R13120 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R13120 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R13120 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R13120 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R13120 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13120 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R13121 += 1, R13122 += 1 };
  s0 -> s1 [0, 65535] { R13122 += 1, R25 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R13122 += 1, R26 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R13122 += 1, R25 += 1, R26 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13122 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535] { R13122 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13122 += 1, R26 += 1, R4 += 1 };
  s3 -> s3 [0, 65535] { R13122 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R13124 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R13123 += 1, R13124 += 1 };
  s0 -> s2 [0, 65535] { R13124 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R13124 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R13124 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R13124 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R13124 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R13124 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13124 += 1, R28 += 1 };
  s2 -> s1 [0, 8] { R13124 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13124 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R13124 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R13124 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R13124 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R13124 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R13124 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13124 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R13126 += 1, R29 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R13126 += 1, R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R13125 += 1, R13126 += 1 };
  s1 -> s1 [0, 65535] { R13126 += 1, R29 += 1, R30 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13126 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R13126 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13126 += 1, R30 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R13126 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s0 [0, 65535] { R13127 += 1, R13128 += 1 };
  s0 -> s1 [0, 65535] { R13128 += 1, R13034 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R13128 += 1, R13033 += 1, R13034 += 1 };
  s1 -> s1 [0, 65535] { R13128 += 1, R13034 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R13128 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13128 += 1, R13034 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R13128 += 1, R13033 += 1, R13034 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13128 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R13130 += 1, R13036 += 1 };
  s0 -> s2 [0, 65535] { R13130 += 1, R13035 += 1, R13036 += 1 };
  s0 -> s0 [0, 65535] { R13129 += 1, R13130 += 1 };
  s0 -> s3 [66, 66] { R13130 += 1, R13036 += 1 };
  s0 -> s4 [66, 66] { R13130 += 1, R13036 += 1 };
  s0 -> s1 [71, 65535] { R13130 += 1, R13036 += 1 };
  s1 -> s1 [0, 65] { R13130 += 1, R13036 += 1 };
  s1 -> s1 [0, 65535] { R13130 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13130 += 1, R13036 += 1 };
  s1 -> s4 [66, 66] { R13130 += 1, R13036 += 1 };
  s1 -> s1 [71, 65535] { R13130 += 1, R13036 += 1 };
  s2 -> s1 [0, 65] { R13130 += 1, R13036 += 1 };
  s2 -> s2 [0, 65535] { R13130 += 1, R13035 += 1, R13036 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13130 += 1, R13036 += 1 };
  s2 -> s4 [66, 66] { R13130 += 1, R13036 += 1 };
  s2 -> s1 [71, 65535] { R13130 += 1, R13036 += 1 };
  s3 -> s3 [0, 65535] { R13130 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R13130 += 1, R13036 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13130 += 1 };
  s4 -> s4 [71, 65535] { R13130 += 1, R13036 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R13132 += 1, R13038 += 1, R49 += 1 };
  s0 -> s0 [0, 65535] { R13131 += 1, R13132 += 1 };
  s0 -> s2 [0, 65535] { R13132 += 1, R13037 += 1, R13038 += 1 };
  s0 -> s3 [66, 66] { R13132 += 1, R13038 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R13132 += 1, R13038 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R13132 += 1, R13038 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R13132 += 1, R13038 += 1, R49 += 1 };
  s1 -> s1 [0, 65535] { R13132 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R13132 += 1, R13038 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R13132 += 1, R13038 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R13132 += 1, R13038 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R13132 += 1, R13038 += 1, R49 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13132 += 1, R13037 += 1, R13038 += 1 };
  s2 -> s3 [66, 66] { R13132 += 1, R13038 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R13132 += 1, R13038 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R13132 += 1, R13038 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R13132 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R13132 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13132 += 1, R13038 += 1, R49 += 1 };
  s5 -> s5 [0, 65535] { R13132 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R13134 += 1, R13040 += 1, R51 += 1 };
  s0 -> s0 [0, 65535] { R13133 += 1, R13134 += 1 };
  s0 -> s2 [0, 65535] { R13134 += 1, R13039 += 1, R13040 += 1 };
  s0 -> s3 [66, 66] { R13134 += 1, R13040 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R13134 += 1, R13040 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R13134 += 1, R13040 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R13134 += 1, R13040 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R13134 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13134 += 1, R13040 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R13134 += 1, R13040 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R13134 += 1, R13040 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R13134 += 1, R13040 += 1, R51 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13134 += 1, R13039 += 1, R13040 += 1 };
  s2 -> s3 [66, 66] { R13134 += 1, R13040 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R13134 += 1, R13040 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R13134 += 1, R13040 += 1, R51 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13134 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13134 += 1 };
  s4 -> s4 [0, 65535] { R13134 += 1, R13040 += 1, R51 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13134 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s0 -> s2 [0, 65535] { R13136 += 1, R13041 += 1, R13042 += 1 };
  s0 -> s0 [0, 65535] { R13135 += 1, R13136 += 1 };
  s0 -> s3 [66, 66] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535] { R13136 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R13136 += 1, R13041 += 1, R13042 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R13136 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13136 += 1, R13042 += 1, R53 += 1, R54 += 1 };
  s4 -> s5 [0, 65535] { R13136 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13136 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R13137 += 1, R13138 += 1 };
  s0 -> s2 [0, 65535] { R13138 += 1, R13043 += 1, R13044 += 1 };
  s0 -> s3 [66, 66] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13138 += 1 };
  s1 -> s3 [66, 66] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13138 += 1, R13043 += 1, R13044 += 1 };
  s2 -> s3 [66, 66] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R13138 += 1, R13044 += 1, R57 += 1, R58 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13138 += 1 };
  s4 -> s4 [0, 65535] { R13138 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13138 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s0 -> s0 [0, 65535] { R13139 += 1, R13140 += 1 };
  s0 -> s2 [0, 65535] { R13140 += 1, R13045 += 1, R13046 += 1 };
  s0 -> s3 [66, 66] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65535] { R13140 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13140 += 1, R13045 += 1, R13046 += 1 };
  s2 -> s3 [66, 66] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13140 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13140 += 1, R13046 += 1, R63 += 1, R64 += 1 };
  s4 -> s6 [0, 65535] { R13140 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13140 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R13141 += 1, R13142 += 1 };
  s0 -> s2 [0, 65535] { R13142 += 1, R13047 += 1, R13048 += 1 };
  s0 -> s3 [66, 66] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R13142 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R13142 += 1, R13047 += 1, R13048 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R13142 += 1, R13048 += 1, R67 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R13142 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13142 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13142 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R13143 += 1, R13144 += 1 };
  s0 -> s2 [0, 65535] { R13144 += 1, R13049 += 1, R13050 += 1 };
  s0 -> s3 [66, 66] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535] { R13144 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R13144 += 1, R13049 += 1, R13050 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R13144 += 1, R13050 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13144 += 1 };
  s4 -> s4 [0, 65535] { R13144 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13144 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R13146 += 1, R13070 += 1 };
  s0 -> s0 [0, 65535] { R13145 += 1, R13146 += 1 };
  s0 -> s2 [0, 65535] { R13146 += 1, R13069 += 1, R13070 += 1 };
  s0 -> s3 [66, 66] { R13146 += 1, R13070 += 1 };
  s0 -> s1 [67, 65535] { R13146 += 1, R13070 += 1 };
  s1 -> s1 [0, 65] { R13146 += 1, R13070 += 1 };
  s1 -> s3 [66, 66] { R13146 += 1, R13070 += 1 };
  s1 -> s1 [67, 65535] { R13146 += 1, R13070 += 1 };
  s2 -> s1 [0, 65] { R13146 += 1, R13070 += 1 };
  s2 -> s2 [0, 65535] { R13146 += 1, R13069 += 1, R13070 += 1 };
  s2 -> s3 [66, 66] { R13146 += 1, R13070 += 1 };
  s2 -> s1 [67, 65535] { R13146 += 1, R13070 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13146 += 1, R13070 += 1 };
  s3 -> s5 [0, 65535] { R13146 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13146 += 1 };
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R13148 += 1, R13072 += 1, R1 += 1 };
  s0 -> s0 [0, 65535] { R13147 += 1, R13148 += 1 };
  s0 -> s2 [0, 65535] { R13148 += 1, R13071 += 1, R13072 += 1 };
  s1 -> s1 [0, 65535] { R13148 += 1, R13072 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R13148 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13148 += 1, R13072 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R13148 += 1, R13071 += 1, R13072 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13148 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R13150 += 1, R13074 += 1 };
  s0 -> s2 [0, 65535] { R13150 += 1, R13073 += 1, R13074 += 1 };
  s0 -> s3 [0, 65535] { R13150 += 1, R13074 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R13149 += 1, R13150 += 1 };
  s0 -> s4 [66, 66] { R13150 += 1, R13074 += 1 };
  s0 -> s1 [67, 65535] { R13150 += 1, R13074 += 1 };
  s1 -> s1 [0, 65] { R13150 += 1, R13074 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R13150 += 1 };
  s1 -> s4 [66, 66] { R13150 += 1, R13074 += 1 };
  s1 -> s1 [67, 65535] { R13150 += 1, R13074 += 1 };
  s2 -> s1 [0, 65] { R13150 += 1, R13074 += 1 };
  s2 -> s2 [0, 65535] { R13150 += 1, R13073 += 1, R13074 += 1 };
  s2 -> s3 [0, 65535] { R13150 += 1, R13074 += 1, R11 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R13150 += 1, R13074 += 1 };
  s2 -> s1 [67, 65535] { R13150 += 1, R13074 += 1 };
  s3 -> s1 [0, 65] { R13150 += 1, R13074 += 1 };
  s3 -> s5 [0, 65535] { R13150 += 1 };
  s3 -> s3 [0, 65535] { R13150 += 1, R13074 += 1, R11 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [66, 66] { R13150 += 1, R13074 += 1 };
  s3 -> s1 [67, 65535] { R13150 += 1, R13074 += 1 };
  s4 -> s4 [0, 65535] { R13150 += 1, R13074 += 1 };
  s5 -> s5 [0, 65535] { R13150 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R13152 += 1, R13076 += 1, R13014 += 1 };
  s0 -> s2 [0, 65535] { R13152 += 1, R13075 += 1, R13076 += 1 };
  s0 -> s3 [0, 65535] { R13152 += 1, R13076 += 1, R13013 += 1, R13014 += 1 };
  s0 -> s0 [0, 65535] { R13151 += 1, R13152 += 1 };
  s0 -> s1 [67, 65535] { R13152 += 1, R13076 += 1, R13014 += 1 };
  s1 -> s1 [0, 65] { R13152 += 1, R13076 += 1, R13014 += 1 };
  s1 -> s1 [0, 65535] { R13152 += 1, R13076 += 1 };
  s1 -> s4 [0, 65535] { R13152 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [67, 65535] { R13152 += 1, R13076 += 1, R13014 += 1 };
  s2 -> s1 [0, 65] { R13152 += 1, R13076 += 1, R13014 += 1 };
  s2 -> s2 [0, 65535] { R13152 += 1, R13075 += 1, R13076 += 1 };
  s2 -> s3 [0, 65535] { R13152 += 1, R13076 += 1, R13013 += 1, R13014 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [67, 65535] { R13152 += 1, R13076 += 1, R13014 += 1 };
  s3 -> s1 [0, 65] { R13152 += 1, R13076 += 1, R13014 += 1 };
  s3 -> s4 [0, 65535] { R13152 += 1 };
  s3 -> s3 [0, 65535] { R13152 += 1, R13076 += 1, R13013 += 1, R13014 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [67, 65535] { R13152 += 1, R13076 += 1, R13014 += 1 };
  s4 -> s4 [0, 65535] { R13152 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R13154 += 1, R13077 += 1, R13078 += 1 };
  s0 -> s2 [0, 65535] { R13154 += 1, R13078 += 1, R13015 += 1, R13016 += 1 };
  s0 -> s3 [0, 65535] { R13154 += 1, R13078 += 1, R13016 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R13153 += 1, R13154 += 1 };
  s1 -> s1 [0, 65535] { R13154 += 1, R13077 += 1, R13078 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13154 += 1, R13078 += 1, R13015 += 1, R13016 += 1 };
  s1 -> s3 [0, 65535] { R13154 += 1, R13078 += 1, R13016 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13154 += 1, R13078 += 1, R13015 += 1, R13016 += 1 };
  s2 -> s3 [0, 65535] { R13154 += 1, R13078 += 1, R13016 += 1, R20 += 1 };
  s2 -> s6 [0, 65535] { R13154 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13154 += 1, R13078 += 1 };
  s3 -> s3 [0, 65535] { R13154 += 1, R13078 += 1, R13016 += 1, R20 += 1 };
  s3 -> s6 [0, 65535] { R13154 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13154 += 1, R13078 += 1 };
  s5 -> s6 [0, 65535] { R13154 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13154 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R13156 += 1, R13080 += 1, R13018 += 1 };
  s0 -> s2 [0, 65535] { R13156 += 1, R13080 += 1, R13017 += 1, R13018 += 1 };
  s0 -> s3 [0, 65535] { R13156 += 1, R13079 += 1, R13080 += 1 };
  s0 -> s0 [0, 65535] { R13155 += 1, R13156 += 1 };
  s0 -> s1 [70, 65535] { R13156 += 1, R13080 += 1, R13018 += 1 };
  s1 -> s1 [0, 66] { R13156 += 1, R13080 += 1, R13018 += 1 };
  s1 -> s5 [0, 65535] { R13156 += 1 };
  s1 -> s1 [0, 65535] { R13156 += 1, R13080 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [70, 65535] { R13156 += 1, R13080 += 1, R13018 += 1 };
  s2 -> s1 [0, 66] { R13156 += 1, R13080 += 1, R13018 += 1 };
  s2 -> s5 [0, 65535] { R13156 += 1 };
  s2 -> s2 [0, 65535] { R13156 += 1, R13080 += 1, R13017 += 1, R13018 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [70, 65535] { R13156 += 1, R13080 += 1, R13018 += 1 };
  s3 -> s1 [0, 66] { R13156 += 1, R13080 += 1, R13018 += 1 };
  s3 -> s2 [0, 65535] { R13156 += 1, R13080 += 1, R13017 += 1, R13018 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13156 += 1, R13079 += 1, R13080 += 1 };
  s3 -> s1 [70, 65535] { R13156 += 1, R13080 += 1, R13018 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13156 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R13158 += 1, R13082 += 1, R13019 += 1, R13020 += 1 };
  s0 -> s2 [0, 65535] { R13158 += 1, R13082 += 1, R13020 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R13157 += 1, R13158 += 1 };
  s0 -> s3 [0, 65535] { R13158 += 1, R13081 += 1, R13082 += 1 };
  s1 -> s1 [0, 65535] { R13158 += 1, R13082 += 1, R13019 += 1, R13020 += 1 };
  s1 -> s2 [0, 65535] { R13158 += 1, R13082 += 1, R13020 += 1, R78 += 1 };
  s1 -> s5 [0, 65535] { R13158 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13158 += 1, R13082 += 1, R13020 += 1, R78 += 1 };
  s2 -> s5 [0, 65535] { R13158 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R13158 += 1, R13082 += 1 };
  s3 -> s1 [0, 65535] { R13158 += 1, R13082 += 1, R13019 += 1, R13020 += 1 };
  s3 -> s2 [0, 65535] { R13158 += 1, R13082 += 1, R13020 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13158 += 1, R13081 += 1, R13082 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13158 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13158 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13158 += 1, R13082 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s0 -> s2 [0, 65535] { R13160 += 1, R13084 += 1, R13022 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R13159 += 1, R13160 += 1 };
  s0 -> s3 [0, 65535] { R13160 += 1, R13083 += 1, R13084 += 1 };
  s0 -> s4 [0, 65535] { R13160 += 1, R13084 += 1, R13021 += 1, R13022 += 1 };
  s0 -> s1 [71, 65535] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s1 -> s1 [0, 69] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s1 -> s5 [0, 65535] { R13160 += 1 };
  s1 -> s1 [0, 65535] { R13160 += 1, R13084 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s2 -> s1 [0, 69] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s2 -> s5 [0, 65535] { R13160 += 1 };
  s2 -> s2 [0, 65535] { R13160 += 1, R13084 += 1, R13022 += 1, R80 += 1 };
  s2 -> s7 [0, 65535] { R13160 += 1, R13084 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [71, 65535] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s3 -> s1 [0, 69] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s3 -> s2 [0, 65535] { R13160 += 1, R13084 += 1, R13022 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R13160 += 1, R13083 += 1, R13084 += 1 };
  s3 -> s4 [0, 65535] { R13160 += 1, R13084 += 1, R13021 += 1, R13022 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [71, 65535] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s4 -> s1 [0, 69] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s4 -> s5 [0, 65535] { R13160 += 1 };
  s4 -> s2 [0, 65535] { R13160 += 1, R13084 += 1, R13022 += 1, R80 += 1 };
  s4 -> s4 [0, 65535] { R13160 += 1, R13084 += 1, R13021 += 1, R13022 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [71, 65535] { R13160 += 1, R13084 += 1, R13022 += 1 };
  s5 -> s5 [0, 65535] { R13160 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R13160 += 1 };
  s7 -> s7 [0, 65535] { R13160 += 1, R13084 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R13162 += 1, R13086 += 1, R13024 += 1, R83 += 1, R84 += 1 };
  s0 -> s3 [0, 65535] { R13162 += 1, R13085 += 1, R13086 += 1 };
  s0 -> s4 [0, 65535] { R13162 += 1, R13086 += 1, R13023 += 1, R13024 += 1 };
  s0 -> s0 [0, 65535] { R13161 += 1, R13162 += 1 };
  s0 -> s1 [71, 65535] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s1 -> s7 [0, 65535] { R13162 += 1, R13086 += 1 };
  s1 -> s1 [0, 65535] { R13162 += 1, R13086 += 1, R13024 += 1 };
  s1 -> s5 [0, 65535] { R13162 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s2 -> s7 [0, 65535] { R13162 += 1, R13086 += 1 };
  s2 -> s2 [0, 65535] { R13162 += 1, R13086 += 1, R13024 += 1, R83 += 1, R84 += 1 };
  s2 -> s5 [0, 65535] { R13162 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [71, 65535] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s3 -> s2 [0, 65535] { R13162 += 1, R13086 += 1, R13024 += 1, R83 += 1, R84 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13162 += 1, R13085 += 1, R13086 += 1 };
  s3 -> s4 [0, 65535] { R13162 += 1, R13086 += 1, R13023 += 1, R13024 += 1 };
  s3 -> s1 [71, 65535] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s4 -> s2 [0, 65535] { R13162 += 1, R13086 += 1, R13024 += 1, R83 += 1, R84 += 1 };
  s4 -> s5 [0, 65535] { R13162 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R13162 += 1, R13086 += 1, R13023 += 1, R13024 += 1 };
  s4 -> s1 [71, 65535] { R13162 += 1, R13086 += 1, R13024 += 1, R84 += 1 };
  s5 -> s5 [0, 65535] { R13162 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13162 += 1, R13086 += 1 };
  s7 -> s5 [0, 65535] { R13162 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R13164 += 1, R13088 += 1, R13026 += 1, R6641 += 1, R6642 += 1 };
  s0 -> s2 [0, 65535] { R13164 += 1, R13088 += 1, R13026 += 1 };
  s0 -> s3 [0, 65535] { R13164 += 1, R13087 += 1, R13088 += 1 };
  s0 -> s4 [0, 65535] { R13164 += 1, R13088 += 1, R13025 += 1, R13026 += 1 };
  s0 -> s0 [0, 65535] { R13163 += 1, R13164 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13164 += 1, R13088 += 1, R13026 += 1, R6641 += 1, R6642 += 1 };
  s1 -> s2 [0, 65535] { R13164 += 1, R13088 += 1, R13026 += 1 };
  s1 -> s7 [0, 65535] { R13164 += 1, R13088 += 1 };
  s1 -> s6 [0, 65535] { R13164 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13164 += 1, R13088 += 1, R13026 += 1 };
  s2 -> s7 [0, 65535] { R13164 += 1, R13088 += 1 };
  s2 -> s6 [0, 65535] { R13164 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R13164 += 1, R13088 += 1, R13026 += 1, R6641 += 1, R6642 += 1 };
  s3 -> s2 [0, 65535] { R13164 += 1, R13088 += 1, R13026 += 1 };
  s3 -> s3 [0, 65535] { R13164 += 1, R13087 += 1, R13088 += 1 };
  s3 -> s4 [0, 65535] { R13164 += 1, R13088 += 1, R13025 += 1, R13026 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R13164 += 1, R13088 += 1, R13026 += 1, R6641 += 1, R6642 += 1 };
  s4 -> s2 [0, 65535] { R13164 += 1, R13088 += 1, R13026 += 1 };
  s4 -> s6 [0, 65535] { R13164 += 1 };
  s4 -> s4 [0, 65535] { R13164 += 1, R13088 += 1, R13025 += 1, R13026 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13164 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R13164 += 1, R13088 += 1 };
  s7 -> s6 [0, 65535] { R13164 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s0 -> s2 [0, 65535] { R13166 += 1, R13089 += 1, R13090 += 1 };
  s0 -> s3 [0, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11009 += 1, R11010 += 1 };
  s0 -> s4 [0, 65535] { R13166 += 1, R13090 += 1, R13027 += 1, R13028 += 1 };
  s0 -> s0 [0, 65535] { R13165 += 1, R13166 += 1 };
  s0 -> s5 [82, 82] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s0 -> s1 [83, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s1 -> s1 [0, 70] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s1 -> s5 [82, 82] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s1 -> s1 [83, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s2 -> s1 [0, 70] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s2 -> s2 [0, 65535] { R13166 += 1, R13089 += 1, R13090 += 1 };
  s2 -> s3 [0, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11009 += 1, R11010 += 1 };
  s2 -> s4 [0, 65535] { R13166 += 1, R13090 += 1, R13027 += 1, R13028 += 1 };
  s2 -> s5 [82, 82] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s2 -> s1 [83, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s3 -> s1 [0, 70] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s3 -> s3 [0, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11009 += 1, R11010 += 1 };
  s3 -> s5 [82, 82] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s3 -> s1 [83, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s4 -> s1 [0, 70] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s4 -> s3 [0, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11009 += 1, R11010 += 1 };
  s4 -> s4 [0, 65535] { R13166 += 1, R13090 += 1, R13027 += 1, R13028 += 1 };
  s4 -> s5 [82, 82] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s4 -> s1 [83, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s5 -> s5 [0, 70] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s5 -> s6 [0, 65535] { R13166 += 1 };
  s5 -> s7 [0, 65535] { R13166 += 1, R13090 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R13166 += 1, R13090 += 1, R13028 += 1 };
  s5 -> s5 [82, 65535] { R13166 += 1, R13090 += 1, R13028 += 1, R11010 += 1 };
  s6 -> s6 [0, 65535] { R13166 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R13166 += 1 };
  s7 -> s7 [0, 65535] { R13166 += 1, R13090 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R13168 += 1, R13092 += 1, R13029 += 1, R13030 += 1 };
  s0 -> s2 [0, 65535] { R13168 += 1, R13092 += 1, R13030 += 1 };
  s0 -> s0 [0, 65535] { R13167 += 1, R13168 += 1 };
  s0 -> s3 [0, 65535] { R13168 += 1, R13091 += 1, R13092 += 1 };
  s1 -> s1 [0, 65535] { R13168 += 1, R13092 += 1, R13029 += 1, R13030 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13168 += 1, R13092 += 1, R13030 += 1 };
  s1 -> s6 [0, 65535] { R13168 += 1 };
  s2 -> s5 [0, 65535] { R13168 += 1, R13092 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13168 += 1, R13092 += 1, R13030 += 1 };
  s2 -> s6 [0, 65535] { R13168 += 1 };
  s3 -> s1 [0, 65535] { R13168 += 1, R13092 += 1, R13029 += 1, R13030 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13168 += 1, R13092 += 1, R13030 += 1 };
  s3 -> s3 [0, 65535] { R13168 += 1, R13091 += 1, R13092 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13168 += 1, R13092 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R13168 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13168 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65535] { R13170 += 1, R13094 += 1, R13031 += 1, R13032 += 1 };
  s0 -> s2 [0, 65535] { R13170 += 1, R13094 += 1, R13032 += 1 };
  s0 -> s0 [0, 65535] { R13169 += 1, R13170 += 1 };
  s0 -> s3 [0, 65535] { R13170 += 1, R13093 += 1, R13094 += 1 };
  s1 -> s5 [0, 65535] { R13170 += 1 };
  s1 -> s1 [0, 65535] { R13170 += 1, R13094 += 1, R13031 += 1, R13032 += 1 };
  s1 -> s2 [0, 65535] { R13170 += 1, R13094 += 1, R13032 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R13170 += 1 };
  s2 -> s2 [0, 65535] { R13170 += 1, R13094 += 1, R13032 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R13170 += 1, R13094 += 1 };
  s3 -> s1 [0, 65535] { R13170 += 1, R13094 += 1, R13031 += 1, R13032 += 1 };
  s3 -> s2 [0, 65535] { R13170 += 1, R13094 += 1, R13032 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R13170 += 1, R13093 += 1, R13094 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13170 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R13170 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13170 += 1, R13094 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R13172 += 1, R13095 += 1, R13096 += 1 };
  s0 -> s2 [0, 65535] { R13172 += 1, R13096 += 1, R13052 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R13171 += 1, R13172 += 1 };
  s0 -> s3 [0, 65535] { R13172 += 1, R13096 += 1, R13051 += 1, R13052 += 1 };
  s1 -> s1 [0, 65535] { R13172 += 1, R13095 += 1, R13096 += 1 };
  s1 -> s2 [0, 65535] { R13172 += 1, R13096 += 1, R13052 += 1, R21 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R13172 += 1, R13096 += 1, R13051 += 1, R13052 += 1 };
  s2 -> s4 [0, 65535] { R13172 += 1 };
  s2 -> s6 [0, 65535] { R13172 += 1, R13096 += 1 };
  s2 -> s2 [0, 65535] { R13172 += 1, R13096 += 1, R13052 += 1, R21 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R13172 += 1 };
  s3 -> s2 [0, 65535] { R13172 += 1, R13096 += 1, R13052 += 1, R21 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13172 += 1, R13096 += 1, R13051 += 1, R13052 += 1 };
  s4 -> s4 [0, 65535] { R13172 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R13172 += 1 };
  s6 -> s6 [0, 65535] { R13172 += 1, R13096 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s0 -> s2 [0, 65535] { R13174 += 1, R13098 += 1, R13053 += 1, R13054 += 1 };
  s0 -> s0 [0, 65535] { R13173 += 1, R13174 += 1 };
  s0 -> s3 [0, 65535] { R13174 += 1, R13097 += 1, R13098 += 1 };
  s0 -> s4 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s0 -> s5 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s0 -> s6 [70, 70] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s0 -> s1 [71, 65535] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s1 -> s1 [0, 65] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s1 -> s4 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s1 -> s5 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s1 -> s6 [70, 70] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s1 -> s1 [71, 65535] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s2 -> s1 [0, 65] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s2 -> s2 [0, 65535] { R13174 += 1, R13098 += 1, R13053 += 1, R13054 += 1 };
  s2 -> s4 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s2 -> s5 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s2 -> s6 [70, 70] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s2 -> s1 [71, 65535] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s3 -> s1 [0, 65] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s3 -> s2 [0, 65535] { R13174 += 1, R13098 += 1, R13053 += 1, R13054 += 1 };
  s3 -> s3 [0, 65535] { R13174 += 1, R13097 += 1, R13098 += 1 };
  s3 -> s4 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s3 -> s5 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s3 -> s6 [70, 70] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s3 -> s1 [71, 65535] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s5 -> s5 [0, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s5 -> s10 [70, 70] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s5 -> s5 [71, 65535] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s6 -> s6 [0, 65] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R13174 += 1 };
  s6 -> s6 [0, 65535] { R13174 += 1, R13098 += 1 };
  s6 -> s9 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s6 -> s10 [66, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s6 -> s6 [70, 65535] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R13174 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R13174 += 1, R13098 += 1 };
  s9 -> s8 [0, 65535] { R13174 += 1 };
  s10 -> s10 [0, 66] { R13174 += 1, R13098 += 1, R13054 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R13174 += 1 };
  s10 -> s10 [0, 65535] { R13174 += 1, R13098 += 1 };
  s10 -> s10 [70, 65535] { R13174 += 1, R13098 += 1, R13054 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R13176 += 1, R13099 += 1, R13100 += 1 };
  s0 -> s0 [0, 65535] { R13175 += 1, R13176 += 1 };
  s0 -> s3 [0, 65535] { R13176 += 1, R13100 += 1, R13055 += 1, R13056 += 1 };
  s0 -> s4 [66, 66] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R13176 += 1, R13100 += 1 };
  s1 -> s7 [0, 65535] { R13176 += 1 };
  s1 -> s4 [66, 66] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13176 += 1, R13099 += 1, R13100 += 1 };
  s2 -> s3 [0, 65535] { R13176 += 1, R13100 += 1, R13055 += 1, R13056 += 1 };
  s2 -> s4 [66, 66] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R13176 += 1 };
  s3 -> s3 [0, 65535] { R13176 += 1, R13100 += 1, R13055 += 1, R13056 += 1 };
  s3 -> s4 [66, 66] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s4 -> s4 [0, 65535] { R13176 += 1, R13100 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R13176 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13176 += 1 };
  s5 -> s5 [0, 65535] { R13176 += 1, R13100 += 1, R13056 += 1, R77 += 1 };
  s5 -> s8 [0, 65535] { R13176 += 1, R13100 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13176 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R13176 += 1 };
  s8 -> s8 [0, 65535] { R13176 += 1, R13100 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R13178 += 1, R13101 += 1, R13102 += 1 };
  s0 -> s0 [0, 65535] { R13177 += 1, R13178 += 1 };
  s0 -> s3 [0, 65535] { R13178 += 1, R13102 += 1, R13057 += 1, R13058 += 1 };
  s0 -> s4 [66, 66] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13178 += 1 };
  s1 -> s1 [0, 65535] { R13178 += 1, R13102 += 1 };
  s1 -> s4 [66, 66] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13178 += 1, R13101 += 1, R13102 += 1 };
  s2 -> s3 [0, 65535] { R13178 += 1, R13102 += 1, R13057 += 1, R13058 += 1 };
  s2 -> s4 [66, 66] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R13178 += 1 };
  s3 -> s3 [0, 65535] { R13178 += 1, R13102 += 1, R13057 += 1, R13058 += 1 };
  s3 -> s4 [66, 66] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R13178 += 1 };
  s4 -> s8 [0, 65535] { R13178 += 1, R13102 += 1 };
  s4 -> s4 [0, 65535] { R13178 += 1, R13102 += 1, R13058 += 1, R79 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13178 += 1 };
  s5 -> s5 [0, 65535] { R13178 += 1, R13102 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13178 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R13178 += 1 };
  s8 -> s8 [0, 65535] { R13178 += 1, R13102 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R13180 += 1, R13103 += 1, R13104 += 1 };
  s0 -> s3 [0, 65535] { R13180 += 1, R13104 += 1, R13059 += 1, R13060 += 1 };
  s0 -> s0 [0, 65535] { R13179 += 1, R13180 += 1 };
  s0 -> s4 [66, 66] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535] { R13180 += 1, R13104 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13180 += 1 };
  s1 -> s4 [66, 66] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R13180 += 1, R13103 += 1, R13104 += 1 };
  s2 -> s3 [0, 65535] { R13180 += 1, R13104 += 1, R13059 += 1, R13060 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535] { R13180 += 1, R13104 += 1, R13059 += 1, R13060 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R13180 += 1 };
  s3 -> s4 [66, 66] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R13180 += 1, R13104 += 1 };
  s4 -> s4 [0, 65535] { R13180 += 1, R13104 += 1, R13060 += 1, R81 += 1, R82 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R13180 += 1 };
  s5 -> s5 [0, 65535] { R13180 += 1, R13104 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13180 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13180 += 1 };
  s8 -> s8 [0, 65535] { R13180 += 1, R13104 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R13180 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s2 [0, 65] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s3 [0, 65535] { R13182 += 1, R13105 += 1, R13106 += 1 };
  s0 -> s4 [0, 65535] { R13182 += 1, R13106 += 1, R13061 += 1, R13062 += 1 };
  s0 -> s0 [0, 65535] { R13181 += 1, R13182 += 1 };
  s0 -> s5 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s6 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s7 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s8 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s1 [67, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s2 [67, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s1 [0, 65] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R13182 += 1, R13106 += 1 };
  s1 -> s10 [0, 65535] { R13182 += 1 };
  s1 -> s5 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s7 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s1 [67, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s1 [0, 65] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [0, 65] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s5 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s6 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s7 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s8 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s1 [67, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [67, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s1 [0, 65] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s2 [0, 65] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s3 [0, 65535] { R13182 += 1, R13105 += 1, R13106 += 1 };
  s3 -> s4 [0, 65535] { R13182 += 1, R13106 += 1, R13061 += 1, R13062 += 1 };
  s3 -> s5 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s6 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s7 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s8 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s1 [67, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s2 [67, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s1 [0, 65] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s2 [0, 65] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s4 [0, 65535] { R13182 += 1, R13106 += 1, R13061 += 1, R13062 += 1 };
  s4 -> s5 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s6 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s7 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s8 [66, 66] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s1 [67, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s2 [67, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s5 -> s5 [0, 65535] { R13182 += 1, R13106 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R13182 += 1 };
  s6 -> s6 [0, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6637 += 1, R6638 += 1 };
  s6 -> s7 [0, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R13182 += 1, R13106 += 1, R13062 += 1, R6638 += 1, R6639 += 1 };
  s7 -> s10 [0, 65535] { R13182 += 1 };
  s7 -> s11 [0, 65535] { R13182 += 1, R13106 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R13182 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s10 [0, 65535] { R13182 += 1 };
  s11 -> s11 [0, 65535] { R13182 += 1, R13106 += 1 };
  accepting s5, s9, s1, s7, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s0 [0, 65535] { R13183 += 1, R13184 += 1 };
  s0 -> s2 [0, 65535] { R13184 += 1, R13107 += 1, R13108 += 1 };
  s0 -> s3 [0, 65535] { R13184 += 1, R13108 += 1, R13063 += 1, R13064 += 1 };
  s0 -> s4 [66, 66] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s5 [66, 66] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s1 [67, 65535] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s1 -> s1 [0, 65] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s1 -> s1 [0, 65535] { R13184 += 1, R13108 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13184 += 1 };
  s1 -> s4 [66, 66] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s1 -> s5 [66, 66] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s1 -> s1 [67, 65535] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s1 [0, 65] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R13184 += 1, R13107 += 1, R13108 += 1 };
  s2 -> s3 [0, 65535] { R13184 += 1, R13108 += 1, R13063 += 1, R13064 += 1 };
  s2 -> s4 [66, 66] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s5 [66, 66] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s1 [67, 65535] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s1 [0, 65] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R13184 += 1 };
  s3 -> s3 [0, 65535] { R13184 += 1, R13108 += 1, R13063 += 1, R13064 += 1 };
  s3 -> s4 [66, 66] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s5 [66, 66] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s1 [67, 65535] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s8 [0, 65535] { R13184 += 1, R13108 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R13184 += 1 };
  s4 -> s4 [0, 65535] { R13184 += 1, R13108 += 1, R13064 += 1, R11007 += 1, R11008 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13184 += 1 };
  s5 -> s5 [0, 65535] { R13184 += 1, R13108 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13184 += 1 };
  s8 -> s8 [0, 65535] { R13184 += 1, R13108 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R13184 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s0 -> s2 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s0 -> s0 [0, 65535] { R13185 += 1, R13186 += 1 };
  s0 -> s3 [0, 65535] { R13186 += 1, R13110 += 1, R13065 += 1, R13066 += 1 };
  s0 -> s4 [0, 65535] { R13186 += 1, R13109 += 1, R13110 += 1 };
  s0 -> s5 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s0 -> s6 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s0 -> s7 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s0 -> s8 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s0 -> s1 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s0 -> s2 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s1 -> s1 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s1 -> s13 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s1 -> s9 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s1 -> s5 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s1 -> s7 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s1 -> s14 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s1 -> s1 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s1 -> s13 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s2 -> s1 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s2 -> s2 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s2 -> s5 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s2 -> s6 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s2 -> s7 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s2 -> s8 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s2 -> s1 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s2 -> s2 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s3 -> s1 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s3 -> s2 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s3 -> s3 [0, 65535] { R13186 += 1, R13110 += 1, R13065 += 1, R13066 += 1 };
  s3 -> s5 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s3 -> s6 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s3 -> s7 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s3 -> s8 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s3 -> s1 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s3 -> s2 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s4 -> s1 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s4 -> s2 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s4 -> s3 [0, 65535] { R13186 += 1, R13110 += 1, R13065 += 1, R13066 += 1 };
  s4 -> s4 [0, 65535] { R13186 += 1, R13109 += 1, R13110 += 1 };
  s4 -> s5 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s4 -> s6 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s4 -> s7 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s4 -> s8 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s4 -> s1 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s4 -> s2 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s7 -> s9 [0, 65535] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s7 -> s7 [0, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s8 -> s7 [0, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12464 += 1, R12465 += 1 };
  s8 -> s8 [0, 65535] { R13186 += 1, R13110 += 1, R13066 += 1, R12463 += 1, R12464 += 1 };
  s9 -> s9 [0, 65535] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s9 -> s10 [0, 65535] { R13186 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R13186 += 1, R13110 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R13186 += 1 };
  s11 -> s11 [0, 65535];
  s12 -> s11 [0, 65535];
  s12 -> s10 [0, 65535] { R13186 += 1 };
  s12 -> s12 [0, 65535] { R13186 += 1, R13110 += 1 };
  s13 -> s13 [0, 65] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s10 [0, 65535] { R13186 += 1 };
  s13 -> s13 [0, 65535] { R13186 += 1, R13110 += 1 };
  s13 -> s9 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s13 -> s14 [66, 66] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s13 -> s13 [67, 65535] { R13186 += 1, R13110 += 1, R13066 += 1 };
  s14 -> s11 [0, 65535];
  s14 -> s10 [0, 65535] { R13186 += 1 };
  s14 -> s14 [0, 65535] { R13186 += 1, R13110 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s0 -> s2 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s0 -> s3 [0, 65535] { R13188 += 1, R13112 += 1, R13067 += 1, R13068 += 1 };
  s0 -> s0 [0, 65535] { R13187 += 1, R13188 += 1 };
  s0 -> s4 [0, 65535] { R13188 += 1, R13111 += 1, R13112 += 1 };
  s0 -> s5 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s0 -> s6 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s0 -> s7 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s0 -> s8 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s0 -> s2 [67, 69] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s0 -> s1 [67, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s0 -> s9 [70, 70] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s0 -> s2 [83, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s1 -> s1 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s1 -> s2 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s1 -> s5 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s1 -> s6 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s1 -> s7 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s1 -> s8 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s1 -> s2 [67, 69] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s1 -> s1 [67, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s1 -> s9 [70, 70] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s1 -> s2 [83, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s2 -> s2 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s2 -> s6 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1 };
  s2 -> s8 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1 };
  s2 -> s2 [67, 69] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s2 -> s2 [67, 65535] { R13188 += 1, R13112 += 1, R13068 += 1 };
  s2 -> s9 [70, 70] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s2 -> s2 [83, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s3 -> s1 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s3 -> s2 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s3 -> s3 [0, 65535] { R13188 += 1, R13112 += 1, R13067 += 1, R13068 += 1 };
  s3 -> s5 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s3 -> s6 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s3 -> s7 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s3 -> s8 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s3 -> s2 [67, 69] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s3 -> s1 [67, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s3 -> s9 [70, 70] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s3 -> s2 [83, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s4 -> s1 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s4 -> s2 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s4 -> s3 [0, 65535] { R13188 += 1, R13112 += 1, R13067 += 1, R13068 += 1 };
  s4 -> s4 [0, 65535] { R13188 += 1, R13111 += 1, R13112 += 1 };
  s4 -> s5 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s4 -> s6 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s4 -> s7 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s4 -> s8 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s4 -> s2 [67, 69] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s4 -> s1 [67, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s4 -> s9 [70, 70] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s4 -> s2 [83, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s5 -> s6 [0, 69] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s5 -> s5 [0, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13009 += 1, R13010 += 1 };
  s5 -> s12 [70, 70] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s5 -> s6 [83, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s6 -> s6 [0, 69] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s6 -> s6 [0, 65535] { R13188 += 1, R13112 += 1, R13068 += 1 };
  s6 -> s12 [70, 70] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s6 -> s6 [83, 65535] { R13188 += 1, R13112 += 1, R13068 += 1, R13010 += 1 };
  s9 -> s9 [0, 65] { R13188 += 1, R13112 += 1, R13068 += 1 };
  s9 -> s9 [0, 65535] { R13188 += 1, R13112 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R13188 += 1 };
  s9 -> s12 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1 };
  s9 -> s13 [66, 66] { R13188 += 1, R13112 += 1, R13068 += 1 };
  s9 -> s9 [67, 65535] { R13188 += 1, R13112 += 1, R13068 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R13188 += 1 };
  s12 -> s14 [0, 65535] { R13188 += 1, R13112 += 1 };
  s12 -> s12 [0, 65535] { R13188 += 1, R13112 += 1, R13068 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R13188 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R13188 += 1 };
  s13 -> s13 [0, 65535] { R13188 += 1, R13112 += 1 };
  s14 -> s14 [0, 65535] { R13188 += 1, R13112 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R13188 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R1 = R13028 && R2 = R13112 && R3 - R13188 = 1 && R23 - R13112 = -1 && R24 = R13112 && R25 - R13112 = -1 && R26 = R13112 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R13188 && R32 - R13188 = 1 && R33 = R13188 && R34 - R13188 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R11010 + -1*R11008 - R64 = 0 && R63 + R11009 + R11007 = 0 && R13027 = 0 && R13053 = 0 && R13054 = 0 && R13061 = 0 && R13062 = 0 && R13065 = 0 && R13066 = 0 && R13067 = 0 && R13068 = 0 && R13069 = 0 && R13070 = R13112 && R13071 = 0 && R13072 = R13112 && R13073 = 0 && R13074 = R13112 && R13075 = 0 && R13076 = R13112 && R13077 = 0 && R13078 = R13112 && R13079 = 0 && R13080 = R13112 && R13081 = 0 && R13082 = R13112 && R13083 = 0 && R13084 = R13112 && R13085 = 0 && R13086 = R13112 && R13087 = 0 && R13088 = R13112 && R13089 = 0 && R13090 = R13112 && R13091 = 0 && R13092 = R13112 && R13093 = 0 && R13094 = R13112 && R13095 = 0 && R13096 = R13112 && R13097 = 0 && R13098 = R13112 && R13099 = 0 && R13100 = R13112 && R13101 = 0 && R13102 = R13112 && R13103 = 0 && R13104 = R13112 && R13105 = 0 && R13106 = R13112 && R13107 = 0 && R13108 = R13112 && R13109 = 0 && R13110 = R13112 && R13111 = 0 && R13113 = 0 && R13114 = R13188 && R13115 = 0 && R13116 = R13188 && R13117 = 0 && R13118 = R13188 && R13119 = 0 && R13120 = R13188 && R13121 = 0 && R13122 = R13188 && R13123 = 0 && R13124 = R13188 && R13125 = 0 && R13126 = R13188 && R13127 = 0 && R13128 = R13188 && R13129 = 0 && R13130 = R13188 && R13131 = 0 && R13132 = R13188 && R13133 = 0 && R13134 = R13188 && R13135 = 0 && R13136 = R13188 && R13137 = 0 && R13138 = R13188 && R13139 = 0 && R13140 = R13188 && R13141 = 0 && R13142 = R13188 && R13143 = 0 && R13144 = R13188 && R13145 = 0 && R13146 = R13188 && R13147 = 0 && R13148 = R13188 && R13149 = 0 && R13150 = R13188 && R13151 = 0 && R13152 = R13188 && R13153 = 0 && R13154 = R13188 && R13155 = 0 && R13156 = R13188 && R13157 = 0 && R13158 = R13188 && R13159 = 0 && R13160 = R13188 && R13161 = 0 && R13162 = R13188 && R13163 = 0 && R13164 = R13188 && R13165 = 0 && R13166 = R13188 && R13167 = 0 && R13168 = R13188 && R13169 = 0 && R13170 = R13188 && R13171 = 0 && R13172 = R13188 && R13173 = 0 && R13174 = R13188 && R13175 = 0 && R13176 = R13188 && R13177 = 0 && R13178 = R13188 && R13179 = 0 && R13180 = R13188 && R13181 = 0 && R13182 = R13188 && R13183 = 0 && R13184 = R13188 && R13185 = 0 && R13186 = R13188 && R13187 = 0 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R11010 + -1*R11008 - R64 < 1 && -1 < R13028 && 0 < R13112 && -1 < R13188 && (R59 + R6642 + R6639 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R11010 + -1*R11008 - R64 = 0 || R64 + R11010 + R11008 < 1) && (R53 + R83 + R81 = 0 || R64 + R11010 + R11008 < 1))) && (R59 + R6642 + R6639 != 0 || ((R57 + R6640 + R6637 != 0 || R58 + R6641 + R6638 + -1*R11010 + -1*R11008 - R64 = 0 || R64 + R11010 + R11008 < 1) && (R57 + R6640 + R6637 = 0 || R64 + R11010 + R11008 < 1))) && (R13013 != 0 || R13014 = R13028 || (R20 = 0 && R13028 = 0)) && (R13015 != 0 || R13016 = R13028 || (R20 = 0 && R13028 = 0)) && (R13017 != 0 || R13018 = R13028 || (R20 = 0 && R13028 = 0)) && (R13019 != 0 || R13020 = R13028 || (R20 = 0 && R13028 = 0)) && (R13021 != 0 || R13022 = R13028 || (R20 = 0 && R13028 = 0)) && (R13023 != 0 || R13024 = R13028 || (R20 = 0 && R13028 = 0)) && (R13025 != 0 || R13026 = R13028 || (R20 = 0 && R13028 = 0)) && (R13029 != 0 || R13028 = R13030 || (R20 = 0 && R13028 = 0)) && (R13031 != 0 || R13028 = R13032 || (R20 = 0 && R13028 = 0)) && (R21 = 0 || (R13051 = 0 && R13052 = 0)) && (R21 = 0 || (R13055 = 0 && R13056 = 0)) && (R21 = 0 || (R13057 = 0 && R13058 = 0)) && (R21 = 0 || (R13059 = 0 && R13060 = 0)) && (R21 = 0 || (R13063 = 0 && R13064 = 0)) && (R22 = 0 || (R13033 = 0 && R13034 = 0)) && (R22 = 0 || (R13035 = 0 && R13036 = 0)) && (R22 = 0 || (R13037 = 0 && R13038 = 0)) && (R22 = 0 || (R13039 = 0 && R13040 = 0)) && (R22 = 0 || (R13041 = 0 && R13042 = 0)) && (R22 = 0 || (R13043 = 0 && R13044 = 0)) && (R22 = 0 || (R13045 = 0 && R13046 = 0)) && (R22 = 0 || (R13047 = 0 && R13048 = 0)) && (R22 = 0 || (R13049 = 0 && R13050 = 0)) && (R59 + R6642 + R6639 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R11010 + -1*R11008 - R64 = 0)) && (R59 + R6642 + R6639 = 0 || (R57 + R6640 + R6637 = 0 && R58 + R6641 + R6638 + -1*R11010 + -1*R11008 - R64 = 0)) && (R69 + R12468 + R12465 = 0 || (R67 + R12466 + R12463 = 0 && R68 + R12467 + R12464 = 0)) && (R69 + R12468 + R12465 = 0 || (R73 + R13011 + R13009 = 0 && R74 + R13012 + R13010 = 0)) && (R13013 = 0 || (R20 = 0 && R13028 = 0)) && (R13015 = 0 || (R20 = 0 && R13028 = 0)) && (R13017 = 0 || (R20 = 0 && R13028 = 0)) && (R13019 = 0 || (R20 = 0 && R13028 = 0)) && (R13021 = 0 || (R20 = 0 && R13028 = 0)) && (R13023 = 0 || (R20 = 0 && R13028 = 0)) && (R13025 = 0 || (R20 = 0 && R13028 = 0)) && (R13029 = 0 || (R20 = 0 && R13028 = 0)) && (R13031 = 0 || (R20 = 0 && R13028 = 0));
// End of Parikh automata intersection problem
