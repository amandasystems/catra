// Parikh automata intersection problem, generated by OSTRICH+
counter int R14, R17, R1759, R1760, R1761, R1762, R1763, R1764, R1765, R1766, R1767, R1768, R1769, R1770, R1771, R1772, R1773, R1774, R1775, R1776, R1777, R1778, R1779, R1780, R1781, R1782, R1783, R1784, R1785, R1786, R1787, R1788, R1789, R1790, R1791, R1792, R1793, R1794, R1795, R1796, R1797, R1798, R1799, R1800, R1801, R1802, R1803, R1804, R1805, R1806, R1807, R1808, R1809, R1810, R1811, R1812, R1813, R1814, R1815, R1816, R1817, R1818, R1819, R1820, R1821, R1822, R1823, R1824, R1825, R1826, R1827, R1828, R1829, R1830, R1831, R1832, R1833, R1834, R1835, R1836, R1837, R1838, R1839, R1840, R1841, R1842, R1843, R1844, R1845, R1846, R1847, R1848, R1849, R1850, R1851, R1852, R1853, R1854, R1855, R1856, R1857, R1858, R1859, R1860, R1861, R1862, R1863, R1864, R1865, R1866, R1867, R1868, R1869, R1870, R1871, R1872, R1873, R1874, R1875, R1876, R1877, R1878, R1879, R1880, R1881, R1882, R1883, R1884, R1885, R1886, R1887, R1888, R1889, R1890, R1891, R1892, R1893, R1894, R1895, R1896, R2, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R5, R6, R7, R857, R858, R859, R860, R861, R862, R863, R864, R865, R866, R867, R868, R869, R870, R871, R872, R873, R874, R875, R876, R877, R878, R879, R880, R881, R882, R883, R884, R885, R886, R887, R888, R889, R890, R891, R892, R893, R894, R895, R896, R897, R898, R899, R900, R901, R902, R903, R904, R905, R906, R907, R908, R909, R910, R911, R912, R913, R914, R915, R916, R917, R918, R919, R920, R921, R922;
synchronised {  // Automata constraining P33
automaton P33_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining P48
automaton P48_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [9, 9] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R1826 += 1 };
  s0 -> s0 [0, 65535] { R1825 += 1, R1826 += 1 };
  s0 -> s2 [67, 67] { R1826 += 1 };
  s0 -> s1 [68, 65535] { R1826 += 1 };
  s1 -> s1 [0, 64] { R1826 += 1 };
  s1 -> s2 [67, 67] { R1826 += 1 };
  s1 -> s1 [68, 65535] { R1826 += 1 };
  s2 -> s2 [0, 64] { R1826 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R1826 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R1827 += 1, R1828 += 1 };
  s0 -> s1 [0, 65535] { R1828 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R1828 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R1830 += 1 };
  s0 -> s2 [0, 65535] { R1830 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R1829 += 1, R1830 += 1 };
  s0 -> s3 [67, 67] { R1830 += 1 };
  s0 -> s1 [68, 65535] { R1830 += 1 };
  s1 -> s1 [0, 66] { R1830 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R1830 += 1 };
  s1 -> s1 [68, 65535] { R1830 += 1 };
  s2 -> s1 [0, 66] { R1830 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1830 += 1, R14 += 1 };
  s2 -> s3 [67, 67] { R1830 += 1 };
  s2 -> s1 [68, 65535] { R1830 += 1 };
  s3 -> s3 [0, 65535] { R1830 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R1832 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R1832 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R1831 += 1, R1832 += 1 };
  s0 -> s3 [9, 13] { R1832 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R1832 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R1832 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R1832 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1832 += 1 };
  s1 -> s1 [0, 65535] { R1832 += 1, R24 += 1 };
  s2 -> s1 [0, 8] { R1832 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R1832 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R1832 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R1832 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R1832 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R1832 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R1832 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1832 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R1834 += 1, R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R1833 += 1, R1834 += 1 };
  s0 -> s2 [0, 65535] { R1834 += 1, R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R1834 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R1834 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1834 += 1, R26 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R1834 += 1, R25 += 1, R26 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1834 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R1836 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R1835 += 1, R1836 += 1 };
  s0 -> s2 [0, 65535] { R1836 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R1836 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R1836 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R1836 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R1836 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1836 += 1 };
  s1 -> s1 [0, 65535] { R1836 += 1, R28 += 1 };
  s2 -> s1 [0, 8] { R1836 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1836 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R1836 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R1836 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R1836 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R1836 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R1836 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1836 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R1838 += 1, R30 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R1837 += 1, R1838 += 1 };
  s0 -> s2 [0, 65535] { R1838 += 1, R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R1838 += 1, R30 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1838 += 1 };
  s2 -> s1 [0, 65535] { R1838 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1838 += 1, R29 += 1, R30 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1838 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R1840 += 1, R1768 += 1 };
  s0 -> s0 [0, 65535] { R1839 += 1, R1840 += 1 };
  s0 -> s2 [0, 65535] { R1840 += 1, R1767 += 1, R1768 += 1 };
  s0 -> s1 [68, 65535] { R1840 += 1, R1768 += 1 };
  s1 -> s1 [0, 66] { R1840 += 1, R1768 += 1 };
  s1 -> s1 [0, 65535] { R1840 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [68, 65535] { R1840 += 1, R1768 += 1 };
  s2 -> s1 [0, 66] { R1840 += 1, R1768 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1840 += 1, R1767 += 1, R1768 += 1 };
  s2 -> s1 [68, 65535] { R1840 += 1, R1768 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R1842 += 1, R1770 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R1841 += 1, R1842 += 1 };
  s0 -> s2 [0, 65535] { R1842 += 1, R1769 += 1, R1770 += 1 };
  s1 -> s1 [0, 65535] { R1842 += 1, R1770 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1842 += 1 };
  s2 -> s1 [0, 65535] { R1842 += 1, R1770 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R1842 += 1, R1769 += 1, R1770 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1842 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R1844 += 1, R1772 += 1 };
  s0 -> s2 [0, 65535] { R1844 += 1, R1771 += 1, R1772 += 1 };
  s0 -> s0 [0, 65535] { R1843 += 1, R1844 += 1 };
  s0 -> s1 [70, 65535] { R1844 += 1, R1772 += 1 };
  s1 -> s1 [0, 67] { R1844 += 1, R1772 += 1 };
  s1 -> s1 [0, 65535] { R1844 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [70, 65535] { R1844 += 1, R1772 += 1 };
  s2 -> s1 [0, 67] { R1844 += 1, R1772 += 1 };
  s2 -> s2 [0, 65535] { R1844 += 1, R1771 += 1, R1772 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [70, 65535] { R1844 += 1, R1772 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65535] { R1846 += 1, R1773 += 1, R1774 += 1 };
  s0 -> s0 [0, 65535] { R1845 += 1, R1846 += 1 };
  s0 -> s2 [0, 65535] { R1846 += 1, R1774 += 1, R858 += 1 };
  s1 -> s1 [0, 65535] { R1846 += 1, R1773 += 1, R1774 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1846 += 1, R1774 += 1, R858 += 1 };
  s2 -> s3 [0, 65535] { R1846 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1846 += 1, R1774 += 1, R858 += 1 };
  s3 -> s3 [0, 65535] { R1846 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R1848 += 1, R1776 += 1 };
  s0 -> s0 [0, 65535] { R1847 += 1, R1848 += 1 };
  s0 -> s2 [0, 65535] { R1848 += 1, R1775 += 1, R1776 += 1 };
  s0 -> s3 [0, 65535] { R1848 += 1, R1776 += 1, R860 += 1 };
  s0 -> s1 [71, 65535] { R1848 += 1, R1776 += 1 };
  s1 -> s1 [0, 69] { R1848 += 1, R1776 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1848 += 1 };
  s1 -> s1 [71, 65535] { R1848 += 1, R1776 += 1 };
  s2 -> s1 [0, 69] { R1848 += 1, R1776 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1848 += 1, R1775 += 1, R1776 += 1 };
  s2 -> s3 [0, 65535] { R1848 += 1, R1776 += 1, R860 += 1 };
  s2 -> s1 [71, 65535] { R1848 += 1, R1776 += 1 };
  s3 -> s1 [0, 69] { R1848 += 1, R1776 += 1 };
  s3 -> s4 [0, 65535] { R1848 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1848 += 1, R1776 += 1, R860 += 1 };
  s3 -> s1 [71, 65535] { R1848 += 1, R1776 += 1 };
  s4 -> s4 [0, 65535] { R1848 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R1850 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s2 [0, 65535] { R1850 += 1, R1778 += 1, R865 += 1, R866 += 1 };
  s0 -> s3 [0, 65535] { R1850 += 1, R1778 += 1, R864 += 1, R865 += 1 };
  s0 -> s0 [0, 65535] { R1849 += 1, R1850 += 1 };
  s1 -> s1 [0, 65535] { R1850 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s2 [0, 65535] { R1850 += 1, R1778 += 1, R865 += 1, R866 += 1 };
  s1 -> s3 [0, 65535] { R1850 += 1, R1778 += 1, R864 += 1, R865 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1850 += 1, R1778 += 1, R865 += 1, R866 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R1850 += 1, R1778 += 1 };
  s2 -> s5 [0, 65535] { R1850 += 1 };
  s3 -> s2 [0, 65535] { R1850 += 1, R1778 += 1, R865 += 1, R866 += 1 };
  s3 -> s3 [0, 65535] { R1850 += 1, R1778 += 1, R864 += 1, R865 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1850 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1850 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1850 += 1, R1778 += 1 };
  s6 -> s5 [0, 65535] { R1850 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R1852 += 1, R1780 += 1, R870 += 1 };
  s0 -> s2 [0, 65535] { R1852 += 1, R1779 += 1, R1780 += 1 };
  s0 -> s3 [0, 65535] { R1852 += 1, R1780 += 1, R869 += 1, R870 += 1 };
  s0 -> s0 [0, 65535] { R1851 += 1, R1852 += 1 };
  s0 -> s4 [70, 70] { R1852 += 1, R1780 += 1, R870 += 1 };
  s0 -> s5 [70, 70] { R1852 += 1, R1780 += 1, R870 += 1 };
  s0 -> s1 [74, 65535] { R1852 += 1, R1780 += 1, R870 += 1 };
  s1 -> s1 [0, 69] { R1852 += 1, R1780 += 1, R870 += 1 };
  s1 -> s6 [0, 65535] { R1852 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R1852 += 1, R1780 += 1 };
  s1 -> s4 [70, 70] { R1852 += 1, R1780 += 1, R870 += 1 };
  s1 -> s5 [70, 70] { R1852 += 1, R1780 += 1, R870 += 1 };
  s1 -> s1 [74, 65535] { R1852 += 1, R1780 += 1, R870 += 1 };
  s2 -> s1 [0, 69] { R1852 += 1, R1780 += 1, R870 += 1 };
  s2 -> s2 [0, 65535] { R1852 += 1, R1779 += 1, R1780 += 1 };
  s2 -> s3 [0, 65535] { R1852 += 1, R1780 += 1, R869 += 1, R870 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R1852 += 1, R1780 += 1, R870 += 1 };
  s2 -> s5 [70, 70] { R1852 += 1, R1780 += 1, R870 += 1 };
  s2 -> s1 [74, 65535] { R1852 += 1, R1780 += 1, R870 += 1 };
  s3 -> s1 [0, 69] { R1852 += 1, R1780 += 1, R870 += 1 };
  s3 -> s6 [0, 65535] { R1852 += 1 };
  s3 -> s3 [0, 65535] { R1852 += 1, R1780 += 1, R869 += 1, R870 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [70, 70] { R1852 += 1, R1780 += 1, R870 += 1 };
  s3 -> s5 [70, 70] { R1852 += 1, R1780 += 1, R870 += 1 };
  s3 -> s1 [74, 65535] { R1852 += 1, R1780 += 1, R870 += 1 };
  s4 -> s6 [0, 65535] { R1852 += 1 };
  s4 -> s4 [0, 65535] { R1852 += 1, R1780 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 70] { R1852 += 1, R1780 += 1, R870 += 1 };
  s5 -> s6 [0, 65535] { R1852 += 1 };
  s5 -> s5 [0, 65535] { R1852 += 1, R1780 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [74, 65535] { R1852 += 1, R1780 += 1, R870 += 1 };
  s6 -> s6 [0, 65535] { R1852 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R1854 += 1, R1782 += 1, R874 += 1 };
  s0 -> s0 [0, 65535] { R1853 += 1, R1854 += 1 };
  s0 -> s2 [0, 65535] { R1854 += 1, R1782 += 1, R873 += 1, R874 += 1 };
  s0 -> s3 [0, 65535] { R1854 += 1, R1781 += 1, R1782 += 1 };
  s0 -> s4 [70, 70] { R1854 += 1, R1782 += 1, R874 += 1 };
  s0 -> s1 [71, 65535] { R1854 += 1, R1782 += 1, R874 += 1 };
  s1 -> s1 [0, 69] { R1854 += 1, R1782 += 1, R874 += 1 };
  s1 -> s4 [70, 70] { R1854 += 1, R1782 += 1, R874 += 1 };
  s1 -> s1 [71, 65535] { R1854 += 1, R1782 += 1, R874 += 1 };
  s2 -> s1 [0, 69] { R1854 += 1, R1782 += 1, R874 += 1 };
  s2 -> s2 [0, 65535] { R1854 += 1, R1782 += 1, R873 += 1, R874 += 1 };
  s2 -> s4 [70, 70] { R1854 += 1, R1782 += 1, R874 += 1 };
  s2 -> s1 [71, 65535] { R1854 += 1, R1782 += 1, R874 += 1 };
  s3 -> s1 [0, 69] { R1854 += 1, R1782 += 1, R874 += 1 };
  s3 -> s2 [0, 65535] { R1854 += 1, R1782 += 1, R873 += 1, R874 += 1 };
  s3 -> s3 [0, 65535] { R1854 += 1, R1781 += 1, R1782 += 1 };
  s3 -> s4 [70, 70] { R1854 += 1, R1782 += 1, R874 += 1 };
  s3 -> s1 [71, 65535] { R1854 += 1, R1782 += 1, R874 += 1 };
  s4 -> s5 [0, 65535] { R1854 += 1, R1782 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1854 += 1, R1782 += 1, R874 += 1 };
  s4 -> s7 [0, 65535] { R1854 += 1 };
  s5 -> s5 [0, 65535] { R1854 += 1, R1782 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1854 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1854 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R1856 += 1, R1784 += 1, R879 += 1, R880 += 1 };
  s0 -> s2 [0, 65535] { R1856 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s3 [0, 65535] { R1856 += 1, R1784 += 1, R878 += 1, R879 += 1 };
  s0 -> s0 [0, 65535] { R1855 += 1, R1856 += 1 };
  s1 -> s6 [0, 65535] { R1856 += 1, R1784 += 1 };
  s1 -> s4 [0, 65535] { R1856 += 1 };
  s1 -> s1 [0, 65535] { R1856 += 1, R1784 += 1, R879 += 1, R880 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R1856 += 1, R1784 += 1, R879 += 1, R880 += 1 };
  s2 -> s2 [0, 65535] { R1856 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s3 [0, 65535] { R1856 += 1, R1784 += 1, R878 += 1, R879 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R1856 += 1 };
  s3 -> s1 [0, 65535] { R1856 += 1, R1784 += 1, R879 += 1, R880 += 1 };
  s3 -> s3 [0, 65535] { R1856 += 1, R1784 += 1, R878 += 1, R879 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1856 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1856 += 1, R1784 += 1 };
  s6 -> s4 [0, 65535] { R1856 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R1858 += 1, R1786 += 1, R885 += 1 };
  s0 -> s2 [0, 65535] { R1858 += 1, R1786 += 1, R884 += 1, R885 += 1 };
  s0 -> s0 [0, 65535] { R1857 += 1, R1858 += 1 };
  s0 -> s3 [0, 65535] { R1858 += 1, R1786 += 1, R885 += 1, R886 += 1 };
  s0 -> s4 [0, 65535] { R1858 += 1, R1785 += 1, R1786 += 1 };
  s0 -> s1 [71, 65535] { R1858 += 1, R1786 += 1, R885 += 1 };
  s1 -> s1 [0, 69] { R1858 += 1, R1786 += 1, R885 += 1 };
  s1 -> s1 [0, 65535] { R1858 += 1, R1786 += 1 };
  s1 -> s7 [0, 65535] { R1858 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [71, 65535] { R1858 += 1, R1786 += 1, R885 += 1 };
  s2 -> s1 [0, 69] { R1858 += 1, R1786 += 1, R885 += 1 };
  s2 -> s2 [0, 65535] { R1858 += 1, R1786 += 1, R884 += 1, R885 += 1 };
  s2 -> s7 [0, 65535] { R1858 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R1858 += 1, R1786 += 1, R885 += 1, R886 += 1 };
  s2 -> s1 [71, 65535] { R1858 += 1, R1786 += 1, R885 += 1 };
  s3 -> s1 [0, 69] { R1858 += 1, R1786 += 1, R885 += 1 };
  s3 -> s6 [0, 65535] { R1858 += 1, R1786 += 1 };
  s3 -> s7 [0, 65535] { R1858 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1858 += 1, R1786 += 1, R885 += 1, R886 += 1 };
  s3 -> s1 [71, 65535] { R1858 += 1, R1786 += 1, R885 += 1 };
  s4 -> s1 [0, 69] { R1858 += 1, R1786 += 1, R885 += 1 };
  s4 -> s2 [0, 65535] { R1858 += 1, R1786 += 1, R884 += 1, R885 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R1858 += 1, R1786 += 1, R885 += 1, R886 += 1 };
  s4 -> s4 [0, 65535] { R1858 += 1, R1785 += 1, R1786 += 1 };
  s4 -> s1 [71, 65535] { R1858 += 1, R1786 += 1, R885 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1858 += 1, R1786 += 1 };
  s6 -> s7 [0, 65535] { R1858 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1858 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s0 -> s0 [0, 65535] { R1859 += 1, R1860 += 1 };
  s0 -> s2 [0, 65535] { R1860 += 1, R1788 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s0 -> s3 [0, 65535] { R1860 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s4 [0, 65535] { R1860 += 1, R1788 += 1, R891 += 1, R892 += 1 };
  s0 -> s1 [71, 65535] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s1 -> s1 [0, 69] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s1 -> s1 [0, 65535] { R1860 += 1, R1788 += 1, R892 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1860 += 1 };
  s1 -> s7 [0, 65535] { R1860 += 1, R1788 += 1 };
  s1 -> s1 [71, 65535] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s2 -> s1 [0, 69] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s2 -> s2 [0, 65535] { R1860 += 1, R1788 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R1860 += 1 };
  s2 -> s7 [0, 65535] { R1860 += 1, R1788 += 1 };
  s2 -> s1 [71, 65535] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s3 -> s1 [0, 69] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s3 -> s2 [0, 65535] { R1860 += 1, R1788 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1860 += 1, R1787 += 1, R1788 += 1 };
  s3 -> s4 [0, 65535] { R1860 += 1, R1788 += 1, R891 += 1, R892 += 1 };
  s3 -> s1 [71, 65535] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s4 -> s1 [0, 69] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s4 -> s2 [0, 65535] { R1860 += 1, R1788 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1860 += 1 };
  s4 -> s4 [0, 65535] { R1860 += 1, R1788 += 1, R891 += 1, R892 += 1 };
  s4 -> s1 [71, 65535] { R1860 += 1, R1788 += 1, R892 += 1, R894 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1860 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1860 += 1 };
  s7 -> s7 [0, 65535] { R1860 += 1, R1788 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s0 -> s2 [0, 65535] { R1862 += 1, R1789 += 1, R1790 += 1 };
  s0 -> s3 [0, 65535] { R1862 += 1, R1790 += 1, R900 += 1, R901 += 1 };
  s0 -> s4 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s0 -> s0 [0, 65535] { R1861 += 1, R1862 += 1 };
  s1 -> s1 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s1 -> s5 [0, 65535] { R1862 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s1 -> s7 [0, 65535] { R1862 += 1, R1790 += 1 };
  s2 -> s1 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s2 -> s2 [0, 65535] { R1862 += 1, R1789 += 1, R1790 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R1862 += 1, R1790 += 1, R900 += 1, R901 += 1 };
  s2 -> s4 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s3 -> s1 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s3 -> s5 [0, 65535] { R1862 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1862 += 1, R1790 += 1, R900 += 1, R901 += 1 };
  s3 -> s4 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s4 -> s5 [0, 65535] { R1862 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s4 -> s7 [0, 65535] { R1862 += 1, R1790 += 1 };
  s4 -> s8 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1 };
  s5 -> s5 [0, 65535] { R1862 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R1862 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1862 += 1, R1790 += 1 };
  s8 -> s5 [0, 65535] { R1862 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R1862 += 1, R1790 += 1 };
  s8 -> s8 [0, 65535] { R1862 += 1, R1790 += 1, R901 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 70] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s0 -> s0 [0, 65535] { R1863 += 1, R1864 += 1 };
  s0 -> s2 [0, 65535] { R1864 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s3 [0, 65535] { R1864 += 1, R1792 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s0 -> s4 [0, 65535] { R1864 += 1, R1792 += 1, R909 += 1, R910 += 1 };
  s0 -> s1 [73, 65535] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s1 -> s1 [0, 70] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s1 -> s1 [0, 65535] { R1864 += 1, R1792 += 1, R910 += 1 };
  s1 -> s7 [0, 65535] { R1864 += 1, R1792 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1864 += 1 };
  s1 -> s1 [73, 65535] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s2 -> s1 [0, 70] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s2 -> s2 [0, 65535] { R1864 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s3 [0, 65535] { R1864 += 1, R1792 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R1864 += 1, R1792 += 1, R909 += 1, R910 += 1 };
  s2 -> s1 [73, 65535] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s3 -> s1 [0, 70] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s3 -> s3 [0, 65535] { R1864 += 1, R1792 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s3 -> s7 [0, 65535] { R1864 += 1, R1792 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1864 += 1 };
  s3 -> s1 [73, 65535] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s4 -> s1 [0, 70] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s4 -> s3 [0, 65535] { R1864 += 1, R1792 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1864 += 1 };
  s4 -> s4 [0, 65535] { R1864 += 1, R1792 += 1, R909 += 1, R910 += 1 };
  s4 -> s1 [73, 65535] { R1864 += 1, R1792 += 1, R910 += 1, R912 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1864 += 1 };
  s7 -> s7 [0, 65535] { R1864 += 1, R1792 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1864 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s0 -> s2 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s0 -> s3 [0, 65535] { R1866 += 1, R1794 += 1, R918 += 1, R919 += 1 };
  s0 -> s4 [0, 65535] { R1866 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s0 [0, 65535] { R1865 += 1, R1866 += 1 };
  s1 -> s1 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s8 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1 };
  s1 -> s6 [0, 65535] { R1866 += 1 };
  s1 -> s7 [0, 65535] { R1866 += 1, R1794 += 1 };
  s2 -> s1 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s2 -> s2 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R1866 += 1 };
  s2 -> s7 [0, 65535] { R1866 += 1, R1794 += 1 };
  s3 -> s1 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s3 -> s2 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s3 -> s3 [0, 65535] { R1866 += 1, R1794 += 1, R918 += 1, R919 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1866 += 1 };
  s4 -> s1 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s4 -> s2 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s4 -> s3 [0, 65535] { R1866 += 1, R1794 += 1, R918 += 1, R919 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1866 += 1, R1793 += 1, R1794 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1866 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1866 += 1 };
  s7 -> s7 [0, 65535] { R1866 += 1, R1794 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R1866 += 1, R1794 += 1, R919 += 1 };
  s8 -> s6 [0, 65535] { R1866 += 1 };
  s8 -> s7 [0, 65535] { R1866 += 1, R1794 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 70] { R1868 += 1, R1796 += 1, R1764 += 1, R1766 += 1 };
  s0 -> s2 [0, 65535] { R1868 += 1, R1796 += 1 };
  s0 -> s1 [0, 65535] { R1868 += 1, R1796 += 1, R1764 += 1 };
  s0 -> s3 [0, 65535] { R1868 += 1, R1795 += 1, R1796 += 1 };
  s0 -> s0 [0, 65535] { R1867 += 1, R1868 += 1 };
  s0 -> s1 [73, 65535] { R1868 += 1, R1796 += 1, R1764 += 1, R1766 += 1 };
  s1 -> s1 [0, 70] { R1868 += 1, R1796 += 1, R1764 += 1, R1766 += 1 };
  s1 -> s5 [0, 65535] { R1868 += 1 };
  s1 -> s2 [0, 65535] { R1868 += 1, R1796 += 1 };
  s1 -> s1 [0, 65535] { R1868 += 1, R1796 += 1, R1764 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [73, 65535] { R1868 += 1, R1796 += 1, R1764 += 1, R1766 += 1 };
  s2 -> s5 [0, 65535] { R1868 += 1 };
  s2 -> s2 [0, 65535] { R1868 += 1, R1796 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 70] { R1868 += 1, R1796 += 1, R1764 += 1, R1766 += 1 };
  s3 -> s2 [0, 65535] { R1868 += 1, R1796 += 1 };
  s3 -> s1 [0, 65535] { R1868 += 1, R1796 += 1, R1764 += 1 };
  s3 -> s3 [0, 65535] { R1868 += 1, R1795 += 1, R1796 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [73, 65535] { R1868 += 1, R1796 += 1, R1764 += 1, R1766 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1868 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R1869 += 1, R1870 += 1 };
  s0 -> s1 [0, 65535] { R1870 += 1, R1798 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R1870 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s1 [0, 65535] { R1870 += 1, R1798 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R1870 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1870 += 1, R1798 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R1870 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1870 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 66] { R1872 += 1, R1800 += 1 };
  s0 -> s0 [0, 65535] { R1871 += 1, R1872 += 1 };
  s0 -> s2 [0, 65535] { R1872 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s3 [67, 67] { R1872 += 1, R1800 += 1 };
  s0 -> s4 [67, 67] { R1872 += 1, R1800 += 1 };
  s0 -> s5 [70, 70] { R1872 += 1, R1800 += 1 };
  s0 -> s1 [71, 65535] { R1872 += 1, R1800 += 1 };
  s1 -> s1 [0, 66] { R1872 += 1, R1800 += 1 };
  s1 -> s3 [67, 67] { R1872 += 1, R1800 += 1 };
  s1 -> s4 [67, 67] { R1872 += 1, R1800 += 1 };
  s1 -> s5 [70, 70] { R1872 += 1, R1800 += 1 };
  s1 -> s1 [71, 65535] { R1872 += 1, R1800 += 1 };
  s2 -> s1 [0, 66] { R1872 += 1, R1800 += 1 };
  s2 -> s2 [0, 65535] { R1872 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s3 [67, 67] { R1872 += 1, R1800 += 1 };
  s2 -> s4 [67, 67] { R1872 += 1, R1800 += 1 };
  s2 -> s5 [70, 70] { R1872 += 1, R1800 += 1 };
  s2 -> s1 [71, 65535] { R1872 += 1, R1800 += 1 };
  s3 -> s3 [0, 67] { R1872 += 1, R1800 += 1 };
  s3 -> s7 [70, 70] { R1872 += 1, R1800 += 1 };
  s3 -> s3 [71, 65535] { R1872 += 1, R1800 += 1 };
  s5 -> s5 [0, 66] { R1872 += 1, R1800 += 1 };
  s5 -> s5 [0, 65535] { R1872 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [67, 67] { R1872 += 1, R1800 += 1 };
  s5 -> s8 [67, 67] { R1872 += 1, R1800 += 1 };
  s5 -> s5 [70, 65535] { R1872 += 1, R1800 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 67] { R1872 += 1, R1800 += 1 };
  s7 -> s7 [0, 65535] { R1872 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [70, 65535] { R1872 += 1, R1800 += 1 };
  s8 -> s8 [0, 65535] { R1872 += 1 };
  s8 -> s6 [0, 65535];
  accepting s5, s6, s7, s8;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 66] { R1874 += 1, R1802 += 1, R857 += 1 };
  s0 -> s0 [0, 65535] { R1873 += 1, R1874 += 1 };
  s0 -> s2 [0, 65535] { R1874 += 1, R1801 += 1, R1802 += 1 };
  s0 -> s3 [67, 67] { R1874 += 1, R1802 += 1, R857 += 1 };
  s0 -> s4 [67, 67] { R1874 += 1, R1802 += 1, R857 += 1 };
  s0 -> s1 [68, 65535] { R1874 += 1, R1802 += 1, R857 += 1 };
  s1 -> s1 [0, 66] { R1874 += 1, R1802 += 1, R857 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1874 += 1 };
  s1 -> s3 [67, 67] { R1874 += 1, R1802 += 1, R857 += 1 };
  s1 -> s4 [67, 67] { R1874 += 1, R1802 += 1, R857 += 1 };
  s1 -> s1 [68, 65535] { R1874 += 1, R1802 += 1, R857 += 1 };
  s2 -> s1 [0, 66] { R1874 += 1, R1802 += 1, R857 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1874 += 1, R1801 += 1, R1802 += 1 };
  s2 -> s3 [67, 67] { R1874 += 1, R1802 += 1, R857 += 1 };
  s2 -> s4 [67, 67] { R1874 += 1, R1802 += 1, R857 += 1 };
  s2 -> s1 [68, 65535] { R1874 += 1, R1802 += 1, R857 += 1 };
  s3 -> s3 [0, 65535] { R1874 += 1, R1802 += 1, R857 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1874 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1874 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1874 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 66] { R1876 += 1, R1804 += 1, R859 += 1 };
  s0 -> s2 [0, 65535] { R1876 += 1, R1803 += 1, R1804 += 1 };
  s0 -> s0 [0, 65535] { R1875 += 1, R1876 += 1 };
  s0 -> s3 [67, 67] { R1876 += 1, R1804 += 1, R859 += 1 };
  s0 -> s4 [67, 67] { R1876 += 1, R1804 += 1, R859 += 1 };
  s0 -> s1 [68, 65535] { R1876 += 1, R1804 += 1, R859 += 1 };
  s1 -> s1 [0, 66] { R1876 += 1, R1804 += 1, R859 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1876 += 1 };
  s1 -> s3 [67, 67] { R1876 += 1, R1804 += 1, R859 += 1 };
  s1 -> s4 [67, 67] { R1876 += 1, R1804 += 1, R859 += 1 };
  s1 -> s1 [68, 65535] { R1876 += 1, R1804 += 1, R859 += 1 };
  s2 -> s1 [0, 66] { R1876 += 1, R1804 += 1, R859 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1876 += 1, R1803 += 1, R1804 += 1 };
  s2 -> s3 [67, 67] { R1876 += 1, R1804 += 1, R859 += 1 };
  s2 -> s4 [67, 67] { R1876 += 1, R1804 += 1, R859 += 1 };
  s2 -> s1 [68, 65535] { R1876 += 1, R1804 += 1, R859 += 1 };
  s3 -> s3 [0, 65535] { R1876 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1876 += 1 };
  s4 -> s4 [0, 65535] { R1876 += 1, R1804 += 1, R859 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1876 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 66] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s0 -> s2 [0, 65535] { R1878 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s0 [0, 65535] { R1877 += 1, R1878 += 1 };
  s0 -> s3 [67, 67] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s0 -> s4 [67, 67] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s0 -> s1 [68, 65535] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s1 -> s1 [0, 66] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s1 -> s1 [0, 65535] { R1878 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s1 -> s4 [67, 67] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s1 -> s1 [68, 65535] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s2 -> s1 [0, 66] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s2 -> s2 [0, 65535] { R1878 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s2 -> s4 [67, 67] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s2 -> s1 [68, 65535] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s3 -> s3 [0, 65535] { R1878 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1878 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1878 += 1, R1806 += 1, R861 += 1, R862 += 1 };
  s5 -> s5 [0, 65535] { R1878 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 66] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s0 -> s0 [0, 65535] { R1879 += 1, R1880 += 1 };
  s0 -> s2 [0, 65535] { R1880 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s3 [67, 67] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s0 -> s4 [67, 67] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s0 -> s1 [68, 65535] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s1 -> s1 [0, 66] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s1 -> s1 [0, 65535] { R1880 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s1 -> s4 [67, 67] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s1 -> s1 [68, 65535] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s2 -> s1 [0, 66] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s2 -> s2 [0, 65535] { R1880 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s2 -> s4 [67, 67] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s2 -> s1 [68, 65535] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s3 -> s3 [0, 65535] { R1880 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1880 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1880 += 1, R1808 += 1, R867 += 1, R868 += 1 };
  s5 -> s5 [0, 65535] { R1880 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 66] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s0 -> s0 [0, 65535] { R1881 += 1, R1882 += 1 };
  s0 -> s2 [0, 65535] { R1882 += 1, R1809 += 1, R1810 += 1 };
  s0 -> s3 [67, 67] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s0 -> s4 [67, 67] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s0 -> s1 [68, 65535] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s1 -> s1 [0, 66] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1882 += 1 };
  s1 -> s3 [67, 67] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s1 -> s4 [67, 67] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s1 -> s1 [68, 65535] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s2 -> s1 [0, 66] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1882 += 1, R1809 += 1, R1810 += 1 };
  s2 -> s3 [67, 67] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s2 -> s4 [67, 67] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s2 -> s1 [68, 65535] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1882 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1882 += 1, R1810 += 1, R871 += 1, R872 += 1 };
  s4 -> s6 [0, 65535] { R1882 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1882 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 66] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s0 -> s2 [0, 65535] { R1884 += 1, R1811 += 1, R1812 += 1 };
  s0 -> s0 [0, 65535] { R1883 += 1, R1884 += 1 };
  s0 -> s3 [67, 67] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s0 -> s4 [67, 67] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s0 -> s1 [68, 65535] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s1 -> s1 [0, 66] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s1 -> s1 [0, 65535] { R1884 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s1 -> s4 [67, 67] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s1 -> s1 [68, 65535] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s2 -> s1 [0, 66] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s2 -> s2 [0, 65535] { R1884 += 1, R1811 += 1, R1812 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s2 -> s4 [67, 67] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s2 -> s1 [68, 65535] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s3 -> s3 [0, 65535] { R1884 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1884 += 1 };
  s4 -> s4 [0, 65535] { R1884 += 1, R1812 += 1, R875 += 1, R876 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1884 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 66] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s0 -> s0 [0, 65535] { R1885 += 1, R1886 += 1 };
  s0 -> s2 [0, 65535] { R1886 += 1, R1813 += 1, R1814 += 1 };
  s0 -> s3 [67, 67] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s0 -> s4 [67, 67] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s0 -> s1 [68, 65535] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s1 -> s1 [0, 66] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s1 -> s1 [0, 65535] { R1886 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s1 -> s4 [67, 67] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s1 -> s1 [68, 65535] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s2 -> s1 [0, 66] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s2 -> s2 [0, 65535] { R1886 += 1, R1813 += 1, R1814 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s2 -> s4 [67, 67] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s2 -> s1 [68, 65535] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s3 -> s3 [0, 65535] { R1886 += 1, R1814 += 1, R881 += 1, R882 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1886 += 1 };
  s4 -> s4 [0, 65535] { R1886 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1886 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 66] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s0 -> s2 [0, 65535] { R1888 += 1, R1815 += 1, R1816 += 1 };
  s0 -> s0 [0, 65535] { R1887 += 1, R1888 += 1 };
  s0 -> s3 [67, 67] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s0 -> s4 [67, 67] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s0 -> s1 [68, 65535] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s1 -> s1 [0, 66] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s1 -> s1 [0, 65535] { R1888 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s1 -> s4 [67, 67] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s1 -> s1 [68, 65535] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s2 -> s1 [0, 66] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s2 -> s2 [0, 65535] { R1888 += 1, R1815 += 1, R1816 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s2 -> s4 [67, 67] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s2 -> s1 [68, 65535] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s3 -> s3 [0, 65535] { R1888 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1888 += 1 };
  s4 -> s4 [0, 65535] { R1888 += 1, R1816 += 1, R887 += 1, R888 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1888 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 66] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s0 -> s0 [0, 65535] { R1889 += 1, R1890 += 1 };
  s0 -> s2 [0, 65535] { R1890 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s3 [67, 67] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s0 -> s4 [67, 67] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s0 -> s1 [68, 65535] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s1 -> s1 [0, 66] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s1 -> s1 [0, 65535] { R1890 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s1 -> s4 [67, 67] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s1 -> s1 [68, 65535] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s2 -> s1 [0, 66] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1890 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s3 [67, 67] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s2 -> s4 [67, 67] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s2 -> s1 [68, 65535] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s3 -> s3 [0, 65535] { R1890 += 1, R1818 += 1, R895 += 1, R896 += 1 };
  s3 -> s6 [0, 65535] { R1890 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1890 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1890 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 66] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s0 -> s0 [0, 65535] { R1891 += 1, R1892 += 1 };
  s0 -> s2 [0, 65535] { R1892 += 1, R1819 += 1, R1820 += 1 };
  s0 -> s3 [67, 67] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s0 -> s4 [67, 67] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s0 -> s1 [68, 65535] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s1 -> s1 [0, 66] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s1 -> s1 [0, 65535] { R1892 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s1 -> s4 [67, 67] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s1 -> s1 [68, 65535] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s2 -> s1 [0, 66] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1892 += 1, R1819 += 1, R1820 += 1 };
  s2 -> s3 [67, 67] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s2 -> s4 [67, 67] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s2 -> s1 [68, 65535] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s3 -> s6 [0, 65535] { R1892 += 1 };
  s3 -> s3 [0, 65535] { R1892 += 1, R1820 += 1, R905 += 1, R906 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1892 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1892 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 66] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s0 -> s2 [0, 65535] { R1894 += 1, R1821 += 1, R1822 += 1 };
  s0 -> s0 [0, 65535] { R1893 += 1, R1894 += 1 };
  s0 -> s3 [67, 67] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s0 -> s4 [67, 67] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s0 -> s1 [68, 65535] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s1 -> s1 [0, 66] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s1 -> s1 [0, 65535] { R1894 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s1 -> s4 [67, 67] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s1 -> s1 [68, 65535] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s2 -> s1 [0, 66] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s2 -> s2 [0, 65535] { R1894 += 1, R1821 += 1, R1822 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s2 -> s4 [67, 67] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s2 -> s1 [68, 65535] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s3 -> s6 [0, 65535] { R1894 += 1 };
  s3 -> s3 [0, 65535] { R1894 += 1, R1822 += 1, R913 += 1, R914 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1894 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1894 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s0 -> s2 [0, 66] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s0 -> s3 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s0 -> s4 [0, 65535] { R1896 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s0 [0, 65535] { R1895 += 1, R1896 += 1 };
  s0 -> s5 [67, 67] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s0 -> s6 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s0 -> s7 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s0 -> s8 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s0 -> s9 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s0 -> s10 [67, 67] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s0 -> s3 [68, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s0 -> s1 [68, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s0 -> s2 [68, 65535] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s0 -> s11 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s0 -> s12 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s0 -> s3 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s1 -> s1 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s1 -> s3 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s1 -> s6 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s1 -> s7 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s1 -> s8 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s1 -> s9 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s1 -> s3 [68, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s1 -> s1 [68, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s1 -> s11 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s1 -> s12 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s1 -> s3 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s2 -> s1 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s2 -> s2 [0, 66] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s2 -> s3 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s2 -> s5 [67, 67] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s2 -> s6 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s2 -> s7 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s2 -> s8 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s2 -> s9 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s2 -> s10 [67, 67] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s2 -> s3 [68, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s2 -> s1 [68, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s2 -> s2 [68, 65535] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s2 -> s11 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s2 -> s12 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s2 -> s3 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s3 -> s3 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s3 -> s6 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s3 -> s8 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s3 -> s3 [68, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s3 -> s11 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s3 -> s12 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s3 -> s3 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s4 -> s1 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s4 -> s2 [0, 66] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s4 -> s3 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s4 -> s4 [0, 65535] { R1896 += 1, R1823 += 1, R1824 += 1 };
  s4 -> s5 [67, 67] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s4 -> s6 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s4 -> s7 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s4 -> s8 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s4 -> s9 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s4 -> s10 [67, 67] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s4 -> s3 [68, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s4 -> s1 [68, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s4 -> s2 [68, 65535] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s4 -> s11 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s4 -> s12 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s4 -> s3 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s6 -> s6 [0, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s6 -> s20 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s6 -> s13 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s6 -> s6 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s7 -> s6 [0, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s7 -> s7 [0, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s7 -> s20 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s7 -> s13 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s7 -> s6 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s10 -> s6 [0, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s10 -> s7 [0, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1761 += 1, R1762 += 1 };
  s10 -> s10 [0, 65535] { R1896 += 1, R1824 += 1, R1759 += 1, R1760 += 1 };
  s10 -> s20 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s10 -> s13 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s10 -> s6 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s11 -> s11 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s11 -> s20 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s11 -> s21 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s11 -> s11 [68, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s11 -> s15 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s11 -> s11 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s12 -> s12 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s12 -> s13 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1 };
  s12 -> s14 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1 };
  s12 -> s12 [68, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s12 -> s12 [68, 65535] { R1896 += 1, R1824 += 1, R1760 += 1 };
  s12 -> s15 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s12 -> s12 [73, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s13 -> s13 [0, 69] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s13 -> s13 [0, 65535] { R1896 += 1, R1824 += 1, R1760 += 1 };
  s13 -> s17 [70, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s13 -> s13 [73, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s15 -> s15 [0, 66] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s15 -> s15 [0, 65535] { R1896 += 1 };
  s15 -> s16 [0, 65535];
  s15 -> s17 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1 };
  s15 -> s18 [67, 67] { R1896 += 1, R1824 += 1, R1760 += 1 };
  s15 -> s15 [68, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s15 -> s15 [68, 65535] { R1896 += 1, R1824 += 1, R1760 += 1 };
  s15 -> s15 [73, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s16 -> s16 [0, 65535];
  s17 -> s17 [0, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s17 -> s17 [0, 65535] { R1896 += 1, R1824 += 1, R1760 += 1 };
  s17 -> s19 [0, 65535] { R1896 += 1 };
  s17 -> s16 [0, 65535];
  s17 -> s17 [73, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s18 -> s18 [0, 65535] { R1896 += 1 };
  s18 -> s16 [0, 65535];
  s19 -> s19 [0, 65535] { R1896 += 1 };
  s19 -> s16 [0, 65535];
  s20 -> s20 [0, 70] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s20 -> s17 [73, 73] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  s20 -> s20 [74, 65535] { R1896 += 1, R1824 += 1, R1760 += 1, R1762 += 1 };
  accepting s17, s16, s19, s18, s15;
};
};
constraint R2 = R1796 && R3 - R1896 = 1 && R23 - R1796 = -1 && R24 = R1796 && R25 - R1796 = -1 && R26 = R1796 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R1896 && R32 - R1896 = 1 && R33 = R1896 && R34 - R1896 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R858 + R857 + -1*R1764 + -1*R1760 = 0 && R873 + R871 = 0 && R874 + R872 + -1*R1764 + -1*R1760 = 0 && R1763 + R1759 = 0 && R1765 + R1761 = 0 && R1766 + R1762 = 0 && R1767 = 0 && R1768 = R1796 && R1769 = 0 && R1770 = R1796 && R1771 = 0 && R1772 = R1796 && R1773 = 0 && R1774 = R1796 && R1775 = 0 && R1776 = R1796 && R1777 = 0 && R1778 = R1796 && R1779 = 0 && R1780 = R1796 && R1781 = 0 && R1782 = R1796 && R1783 = 0 && R1784 = R1796 && R1785 = 0 && R1786 = R1796 && R1787 = 0 && R1788 = R1796 && R1789 = 0 && R1790 = R1796 && R1791 = 0 && R1792 = R1796 && R1793 = 0 && R1794 = R1796 && R1795 = 0 && R1799 = 0 && R1800 = 0 && R1823 = 0 && R1824 = 0 && R1825 = 0 && R1826 = R1896 && R1827 = 0 && R1828 = R1896 && R1829 = 0 && R1830 = R1896 && R1831 = 0 && R1832 = R1896 && R1833 = 0 && R1834 = R1896 && R1835 = 0 && R1836 = R1896 && R1837 = 0 && R1838 = R1896 && R1839 = 0 && R1840 = R1896 && R1841 = 0 && R1842 = R1896 && R1843 = 0 && R1844 = R1896 && R1845 = 0 && R1846 = R1896 && R1847 = 0 && R1848 = R1896 && R1849 = 0 && R1850 = R1896 && R1851 = 0 && R1852 = R1896 && R1853 = 0 && R1854 = R1896 && R1855 = 0 && R1856 = R1896 && R1857 = 0 && R1858 = R1896 && R1859 = 0 && R1860 = R1896 && R1861 = 0 && R1862 = R1896 && R1863 = 0 && R1864 = R1896 && R1865 = 0 && R1866 = R1896 && R1867 = 0 && R1868 = R1896 && R1869 = 0 && R1870 = R1896 && R1871 = 0 && R1872 = R1896 && R1873 = 0 && R1874 = R1896 && R1875 = 0 && R1876 = R1896 && R1877 = 0 && R1878 = R1896 && R1879 = 0 && R1880 = R1896 && R1881 = 0 && R1882 = R1896 && R1883 = 0 && R1884 = R1896 && R1885 = 0 && R1886 = R1896 && R1887 = 0 && R1888 = R1896 && R1889 = 0 && R1890 = R1896 && R1891 = 0 && R1892 = R1896 && R1893 = 0 && R1894 = R1896 && R1895 = 0 && R14 < 1 && R17 < 1 && R860 + R859 < 1 && -1*R880 + -1*R877 < 1 && R886 + R883 < 1 && -1*R1764 + -1*R1760 < 1 && 0 < R1796 && -1 < R1896 && (R878 + R875 != 0 || R879 + R876 + -1*R1764 + -1*R1760 = 0 || R880 + R877 < 1) && (R880 + R877 != 0 || R904 + R899 = 0 || (R893 + R889 = 0 && R894 + R890 = 0)) && (R880 + R877 != 0 || R904 + R899 = 0 || (R902 + R897 = 0 && R903 + R898 = 0)) && (R880 + R877 != 0 || R904 + R899 = 0 || (R911 + R907 = 0 && R912 + R908 = 0)) && (R880 + R877 != 0 || ((R878 + R875 != 0 || R879 + R876 + -1*R1764 + -1*R1760 = 0 || R1764 + R1760 < 1) && (R878 + R875 = 0 || R1764 + R1760 < 1))) && (R884 + R881 != 0 || R885 + R882 + -1*R1764 + -1*R1760 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R891 + R887 != 0 || R892 + R888 + -1*R1764 + -1*R1760 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R893 + R889 != 0 || R880 + R877 + -1*R894 + -1*R890 = 0 || R880 + R877 < 1) && (R900 + R895 != 0 || R901 + R896 + -1*R1764 + -1*R1760 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R902 + R897 != 0 || R880 + R877 + -1*R903 + -1*R898 = 0 || R880 + R877 < 1) && (R909 + R905 != 0 || R910 + R906 + -1*R1764 + -1*R1760 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R911 + R907 != 0 || R880 + R877 + -1*R912 + -1*R908 = 0 || R880 + R877 < 1) && (R918 + R913 != 0 || R919 + R914 + -1*R1764 + -1*R1760 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R22 = 0 || (R1797 = 0 && R1798 = 0)) && (R22 = 0 || (R1801 = 0 && R1802 = 0)) && (R22 = 0 || (R1803 = 0 && R1804 = 0)) && (R22 = 0 || (R1805 = 0 && R1806 = 0)) && (R22 = 0 || (R1807 = 0 && R1808 = 0)) && (R22 = 0 || (R1809 = 0 && R1810 = 0)) && (R22 = 0 || (R1811 = 0 && R1812 = 0)) && (R22 = 0 || (R1813 = 0 && R1814 = 0)) && (R22 = 0 || (R1815 = 0 && R1816 = 0)) && (R22 = 0 || (R1817 = 0 && R1818 = 0)) && (R22 = 0 || (R1819 = 0 && R1820 = 0)) && (R22 = 0 || (R1821 = 0 && R1822 = 0)) && (R866 + R863 = 0 || (R864 + R861 = 0 && R865 + R862 = 0)) && (R866 + R863 = 0 || (R869 + R867 = 0 && R870 + R868 = 0)) && (R878 + R875 = 0 || R880 + R877 < 1) && (R884 + R881 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R891 + R887 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R893 + R889 = 0 || R880 + R877 < 1) && (R900 + R895 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R902 + R897 = 0 || R880 + R877 < 1) && (R909 + R905 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R911 + R907 = 0 || R880 + R877 < 1) && (R918 + R913 = 0 || (R880 + R877 = 0 && R1764 + R1760 = 0)) && (R922 + R917 = 0 || (R920 + R915 = 0 && R921 + R916 = 0));
// End of Parikh automata intersection problem
