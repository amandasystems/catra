// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R1187, R1188, R1189, R1190, R1191, R1192, R1193, R1194, R1195, R1196, R1197, R1198, R1199, R1200, R1201, R1202, R1203, R1204, R1205, R1206, R1207, R1208, R1209, R1210, R1211, R1212, R1213, R1214, R1215, R1216, R1217, R1218, R1219, R1220, R1221, R1222, R1223, R1224, R1225, R1226, R1227, R1228, R1229, R1230, R1231, R1232, R1233, R1234, R1235, R1236, R1237, R1238, R1239, R1240, R1241, R1242, R1243, R1244, R1245, R1246, R1247, R1248, R1249, R1250, R1251, R1252, R1253, R1254, R1255, R1256, R1257, R1258, R1259, R1260, R1261, R1262, R1263, R1264, R1265, R1266, R1267, R1268, R1269, R1270, R1271, R1272, R1273, R1274, R1275, R1276, R1277, R1278, R1279, R1280, R1281, R1282, R1283, R1284, R1285, R1286, R1287, R1288, R1289, R1290, R1291, R1292, R1293, R1294, R1295, R1296, R1297, R1298, R1299, R1300, R1301, R1302, R1303, R1304, R1305, R1306, R1307, R1308, R1309, R1310, R1311, R1312, R1313, R1314, R1315, R1316, R1317, R1318, R1319, R1320, R1321, R1322, R1323, R1324, R1325, R1326, R1327, R1328, R1329, R1330, R1331, R1332, R1333, R1334, R1335, R1336, R1337, R1338, R1339, R1340, R1341, R1342, R1343, R1344, R1345, R1346, R1347, R1348, R1349, R1350, R1351, R1352, R1353, R1354, R1355, R1356, R1357, R1358, R1359, R1360, R1361, R1362, R1363, R1364, R1365, R1366, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R821, R822, R823, R824, R825, R826, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R1292 += 1 };
  s0 -> s0 [0, 65535] { R1291 += 1, R1292 += 1 };
  s0 -> s2 [66, 66] { R1292 += 1 };
  s0 -> s1 [67, 65535] { R1292 += 1 };
  s1 -> s1 [0, 64] { R1292 += 1 };
  s1 -> s2 [66, 66] { R1292 += 1 };
  s1 -> s1 [67, 65535] { R1292 += 1 };
  s2 -> s2 [0, 64] { R1292 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R1292 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R1293 += 1, R1294 += 1 };
  s0 -> s1 [0, 65535] { R1294 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R1294 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R1296 += 1 };
  s0 -> s2 [0, 65535] { R1296 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R1295 += 1, R1296 += 1 };
  s0 -> s3 [66, 66] { R1296 += 1 };
  s0 -> s1 [67, 65535] { R1296 += 1 };
  s1 -> s1 [0, 65] { R1296 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R1296 += 1 };
  s1 -> s1 [67, 65535] { R1296 += 1 };
  s2 -> s1 [0, 65] { R1296 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1296 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R1296 += 1 };
  s2 -> s1 [67, 65535] { R1296 += 1 };
  s3 -> s3 [0, 65535] { R1296 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R1298 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R1297 += 1, R1298 += 1 };
  s0 -> s2 [0, 65535] { R1298 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R1298 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R1298 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R1298 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R1298 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R1298 += 1 };
  s1 -> s1 [0, 65535] { R1298 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R1298 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R1298 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R1298 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R1298 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R1298 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R1298 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R1298 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1298 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R1299 += 1, R1300 += 1 };
  s0 -> s1 [0, 65535] { R1300 += 1, R26 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R1300 += 1, R25 += 1, R26 += 1 };
  s1 -> s4 [0, 65535] { R1300 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1300 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1300 += 1, R26 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R1300 += 1, R25 += 1, R26 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1300 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R1302 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R1301 += 1, R1302 += 1 };
  s0 -> s2 [0, 65535] { R1302 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R1302 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R1302 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R1302 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R1302 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R1302 += 1 };
  s1 -> s1 [0, 65535] { R1302 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R1302 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R1302 += 1, R27 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R1302 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R1302 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R1302 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R1302 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R1302 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1302 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R1303 += 1, R1304 += 1 };
  s0 -> s1 [0, 65535] { R1304 += 1, R30 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R1304 += 1, R29 += 1, R30 += 1 };
  s1 -> s1 [0, 65535] { R1304 += 1, R30 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1304 += 1 };
  s2 -> s1 [0, 65535] { R1304 += 1, R30 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R1304 += 1, R29 += 1, R30 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1304 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R1306 += 1, R1211 += 1, R1212 += 1 };
  s0 -> s2 [0, 65535] { R1306 += 1, R1212 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R1305 += 1, R1306 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1306 += 1, R1211 += 1, R1212 += 1 };
  s1 -> s2 [0, 65535] { R1306 += 1, R1212 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1306 += 1, R1212 += 1, R22 += 1 };
  s2 -> s4 [0, 65535] { R1306 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1306 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R1308 += 1, R1214 += 1 };
  s0 -> s2 [0, 65535] { R1308 += 1, R1213 += 1, R1214 += 1 };
  s0 -> s0 [0, 65535] { R1307 += 1, R1308 += 1 };
  s0 -> s3 [66, 66] { R1308 += 1, R1214 += 1 };
  s0 -> s4 [66, 66] { R1308 += 1, R1214 += 1 };
  s0 -> s1 [71, 65535] { R1308 += 1, R1214 += 1 };
  s1 -> s1 [0, 65] { R1308 += 1, R1214 += 1 };
  s1 -> s1 [0, 65535] { R1308 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R1308 += 1, R1214 += 1 };
  s1 -> s4 [66, 66] { R1308 += 1, R1214 += 1 };
  s1 -> s1 [71, 65535] { R1308 += 1, R1214 += 1 };
  s2 -> s1 [0, 65] { R1308 += 1, R1214 += 1 };
  s2 -> s2 [0, 65535] { R1308 += 1, R1213 += 1, R1214 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R1308 += 1, R1214 += 1 };
  s2 -> s4 [66, 66] { R1308 += 1, R1214 += 1 };
  s2 -> s1 [71, 65535] { R1308 += 1, R1214 += 1 };
  s3 -> s3 [0, 65535] { R1308 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R1308 += 1, R1214 += 1 };
  s4 -> s4 [0, 65535] { R1308 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [71, 65535] { R1308 += 1, R1214 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R1310 += 1, R1216 += 1, R49 += 1 };
  s0 -> s2 [0, 65535] { R1310 += 1, R1215 += 1, R1216 += 1 };
  s0 -> s0 [0, 65535] { R1309 += 1, R1310 += 1 };
  s0 -> s3 [66, 66] { R1310 += 1, R1216 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R1310 += 1, R1216 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R1310 += 1, R1216 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R1310 += 1, R1216 += 1, R49 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1310 += 1 };
  s1 -> s3 [66, 66] { R1310 += 1, R1216 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R1310 += 1, R1216 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R1310 += 1, R1216 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R1310 += 1, R1216 += 1, R49 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R1310 += 1, R1215 += 1, R1216 += 1 };
  s2 -> s3 [66, 66] { R1310 += 1, R1216 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R1310 += 1, R1216 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R1310 += 1, R1216 += 1, R49 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1310 += 1 };
  s4 -> s5 [0, 65535] { R1310 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1310 += 1, R1216 += 1, R49 += 1 };
  s5 -> s5 [0, 65535] { R1310 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R1312 += 1, R1218 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R1312 += 1, R1217 += 1, R1218 += 1 };
  s0 -> s0 [0, 65535] { R1311 += 1, R1312 += 1 };
  s0 -> s3 [66, 66] { R1312 += 1, R1218 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R1312 += 1, R1218 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R1312 += 1, R1218 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R1312 += 1, R1218 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R1312 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R1312 += 1, R1218 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R1312 += 1, R1218 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R1312 += 1, R1218 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R1312 += 1, R1218 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R1312 += 1, R1217 += 1, R1218 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R1312 += 1, R1218 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R1312 += 1, R1218 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R1312 += 1, R1218 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R1312 += 1, R1218 += 1, R51 += 1 };
  s3 -> s6 [0, 65535] { R1312 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1312 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1312 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s0 -> s2 [0, 65535] { R1314 += 1, R1219 += 1, R1220 += 1 };
  s0 -> s0 [0, 65535] { R1313 += 1, R1314 += 1 };
  s0 -> s3 [66, 66] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535] { R1314 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1314 += 1, R1219 += 1, R1220 += 1 };
  s2 -> s3 [66, 66] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R1314 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1314 += 1, R1220 += 1, R53 += 1, R54 += 1 };
  s4 -> s6 [0, 65535] { R1314 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1314 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s0 -> s2 [0, 65535] { R1316 += 1, R1221 += 1, R1222 += 1 };
  s0 -> s0 [0, 65535] { R1315 += 1, R1316 += 1 };
  s0 -> s3 [66, 66] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R1316 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R1316 += 1, R1221 += 1, R1222 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R1316 += 1, R1222 += 1, R57 += 1, R58 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1316 += 1 };
  s4 -> s4 [0, 65535] { R1316 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1316 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s0 -> s2 [0, 65535] { R1318 += 1, R1223 += 1, R1224 += 1 };
  s0 -> s0 [0, 65535] { R1317 += 1, R1318 += 1 };
  s0 -> s3 [66, 66] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1318 += 1 };
  s1 -> s3 [66, 66] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R1318 += 1, R1223 += 1, R1224 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s3 -> s3 [0, 65535] { R1318 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1318 += 1, R1224 += 1, R63 += 1, R64 += 1 };
  s4 -> s6 [0, 65535] { R1318 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1318 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R1320 += 1, R1225 += 1, R1226 += 1 };
  s0 -> s0 [0, 65535] { R1319 += 1, R1320 += 1 };
  s0 -> s3 [66, 66] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R1320 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R1320 += 1, R1225 += 1, R1226 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1320 += 1, R1226 += 1, R67 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R1320 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1320 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1320 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R1321 += 1, R1322 += 1 };
  s0 -> s2 [0, 65535] { R1322 += 1, R1227 += 1, R1228 += 1 };
  s0 -> s3 [66, 66] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1322 += 1 };
  s1 -> s3 [66, 66] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1322 += 1, R1227 += 1, R1228 += 1 };
  s2 -> s3 [66, 66] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1322 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1322 += 1 };
  s4 -> s4 [0, 65535] { R1322 += 1, R1228 += 1, R73 += 1, R74 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1322 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R1324 += 1, R1248 += 1 };
  s0 -> s2 [0, 65535] { R1324 += 1, R1247 += 1, R1248 += 1 };
  s0 -> s0 [0, 65535] { R1323 += 1, R1324 += 1 };
  s0 -> s3 [66, 66] { R1324 += 1, R1248 += 1 };
  s0 -> s1 [67, 65535] { R1324 += 1, R1248 += 1 };
  s1 -> s1 [0, 65] { R1324 += 1, R1248 += 1 };
  s1 -> s3 [66, 66] { R1324 += 1, R1248 += 1 };
  s1 -> s1 [67, 65535] { R1324 += 1, R1248 += 1 };
  s2 -> s1 [0, 65] { R1324 += 1, R1248 += 1 };
  s2 -> s2 [0, 65535] { R1324 += 1, R1247 += 1, R1248 += 1 };
  s2 -> s3 [66, 66] { R1324 += 1, R1248 += 1 };
  s2 -> s1 [67, 65535] { R1324 += 1, R1248 += 1 };
  s3 -> s3 [0, 65535] { R1324 += 1, R1248 += 1 };
  s3 -> s4 [0, 65535] { R1324 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1324 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R1326 += 1, R1249 += 1, R1250 += 1 };
  s0 -> s0 [0, 65535] { R1325 += 1, R1326 += 1 };
  s0 -> s2 [0, 65535] { R1326 += 1, R1250 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R1326 += 1, R1249 += 1, R1250 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R1326 += 1, R1250 += 1, R1 += 1 };
  s2 -> s3 [0, 65535] { R1326 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1326 += 1, R1250 += 1, R1 += 1 };
  s3 -> s3 [0, 65535] { R1326 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R1328 += 1, R1252 += 1 };
  s0 -> s2 [0, 65535] { R1328 += 1, R1252 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R1328 += 1, R1251 += 1, R1252 += 1 };
  s0 -> s0 [0, 65535] { R1327 += 1, R1328 += 1 };
  s0 -> s4 [66, 66] { R1328 += 1, R1252 += 1 };
  s0 -> s1 [67, 65535] { R1328 += 1, R1252 += 1 };
  s1 -> s1 [0, 65] { R1328 += 1, R1252 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1328 += 1 };
  s1 -> s4 [66, 66] { R1328 += 1, R1252 += 1 };
  s1 -> s1 [67, 65535] { R1328 += 1, R1252 += 1 };
  s2 -> s1 [0, 65] { R1328 += 1, R1252 += 1 };
  s2 -> s6 [0, 65535] { R1328 += 1 };
  s2 -> s2 [0, 65535] { R1328 += 1, R1252 += 1, R11 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [66, 66] { R1328 += 1, R1252 += 1 };
  s2 -> s1 [67, 65535] { R1328 += 1, R1252 += 1 };
  s3 -> s1 [0, 65] { R1328 += 1, R1252 += 1 };
  s3 -> s2 [0, 65535] { R1328 += 1, R1252 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R1328 += 1, R1251 += 1, R1252 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [66, 66] { R1328 += 1, R1252 += 1 };
  s3 -> s1 [67, 65535] { R1328 += 1, R1252 += 1 };
  s4 -> s4 [0, 65535] { R1328 += 1, R1252 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1328 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R1330 += 1, R1254 += 1, R1192 += 1 };
  s0 -> s2 [0, 65535] { R1330 += 1, R1253 += 1, R1254 += 1 };
  s0 -> s3 [0, 65535] { R1330 += 1, R1254 += 1, R1191 += 1, R1192 += 1 };
  s0 -> s0 [0, 65535] { R1329 += 1, R1330 += 1 };
  s0 -> s1 [67, 65535] { R1330 += 1, R1254 += 1, R1192 += 1 };
  s1 -> s1 [0, 65] { R1330 += 1, R1254 += 1, R1192 += 1 };
  s1 -> s1 [0, 65535] { R1330 += 1, R1254 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1330 += 1 };
  s1 -> s1 [67, 65535] { R1330 += 1, R1254 += 1, R1192 += 1 };
  s2 -> s1 [0, 65] { R1330 += 1, R1254 += 1, R1192 += 1 };
  s2 -> s2 [0, 65535] { R1330 += 1, R1253 += 1, R1254 += 1 };
  s2 -> s3 [0, 65535] { R1330 += 1, R1254 += 1, R1191 += 1, R1192 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [67, 65535] { R1330 += 1, R1254 += 1, R1192 += 1 };
  s3 -> s1 [0, 65] { R1330 += 1, R1254 += 1, R1192 += 1 };
  s3 -> s3 [0, 65535] { R1330 += 1, R1254 += 1, R1191 += 1, R1192 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1330 += 1 };
  s3 -> s1 [67, 65535] { R1330 += 1, R1254 += 1, R1192 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1330 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R1332 += 1, R1256 += 1, R1194 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R1332 += 1, R1255 += 1, R1256 += 1 };
  s0 -> s3 [0, 65535] { R1332 += 1, R1256 += 1, R1193 += 1, R1194 += 1 };
  s0 -> s0 [0, 65535] { R1331 += 1, R1332 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R1332 += 1, R1256 += 1 };
  s1 -> s1 [0, 65535] { R1332 += 1, R1256 += 1, R1194 += 1, R20 += 1 };
  s1 -> s5 [0, 65535] { R1332 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1332 += 1, R1256 += 1, R1194 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R1332 += 1, R1255 += 1, R1256 += 1 };
  s2 -> s3 [0, 65535] { R1332 += 1, R1256 += 1, R1193 += 1, R1194 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1332 += 1, R1256 += 1, R1194 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R1332 += 1, R1256 += 1, R1193 += 1, R1194 += 1 };
  s3 -> s5 [0, 65535] { R1332 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1332 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R1332 += 1, R1256 += 1 };
  s6 -> s5 [0, 65535] { R1332 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R1334 += 1, R1258 += 1, R1196 += 1 };
  s0 -> s0 [0, 65535] { R1333 += 1, R1334 += 1 };
  s0 -> s2 [0, 65535] { R1334 += 1, R1257 += 1, R1258 += 1 };
  s0 -> s3 [0, 65535] { R1334 += 1, R1258 += 1, R1195 += 1, R1196 += 1 };
  s0 -> s1 [70, 65535] { R1334 += 1, R1258 += 1, R1196 += 1 };
  s1 -> s1 [0, 66] { R1334 += 1, R1258 += 1, R1196 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1334 += 1, R1258 += 1 };
  s1 -> s5 [0, 65535] { R1334 += 1 };
  s1 -> s1 [70, 65535] { R1334 += 1, R1258 += 1, R1196 += 1 };
  s2 -> s1 [0, 66] { R1334 += 1, R1258 += 1, R1196 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1334 += 1, R1257 += 1, R1258 += 1 };
  s2 -> s3 [0, 65535] { R1334 += 1, R1258 += 1, R1195 += 1, R1196 += 1 };
  s2 -> s1 [70, 65535] { R1334 += 1, R1258 += 1, R1196 += 1 };
  s3 -> s1 [0, 66] { R1334 += 1, R1258 += 1, R1196 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1334 += 1, R1258 += 1, R1195 += 1, R1196 += 1 };
  s3 -> s5 [0, 65535] { R1334 += 1 };
  s3 -> s1 [70, 65535] { R1334 += 1, R1258 += 1, R1196 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1334 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R1336 += 1, R1260 += 1, R1197 += 1, R1198 += 1 };
  s0 -> s2 [0, 65535] { R1336 += 1, R1260 += 1, R1198 += 1, R78 += 1 };
  s0 -> s0 [0, 65535] { R1335 += 1, R1336 += 1 };
  s0 -> s3 [0, 65535] { R1336 += 1, R1259 += 1, R1260 += 1 };
  s1 -> s1 [0, 65535] { R1336 += 1, R1260 += 1, R1197 += 1, R1198 += 1 };
  s1 -> s5 [0, 65535] { R1336 += 1 };
  s1 -> s2 [0, 65535] { R1336 += 1, R1260 += 1, R1198 += 1, R78 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1336 += 1 };
  s2 -> s2 [0, 65535] { R1336 += 1, R1260 += 1, R1198 += 1, R78 += 1 };
  s2 -> s6 [0, 65535] { R1336 += 1, R1260 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1336 += 1, R1260 += 1, R1197 += 1, R1198 += 1 };
  s3 -> s2 [0, 65535] { R1336 += 1, R1260 += 1, R1198 += 1, R78 += 1 };
  s3 -> s3 [0, 65535] { R1336 += 1, R1259 += 1, R1260 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1336 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1336 += 1 };
  s6 -> s6 [0, 65535] { R1336 += 1, R1260 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s0 -> s2 [0, 65535] { R1338 += 1, R1262 += 1, R1200 += 1, R80 += 1 };
  s0 -> s3 [0, 65535] { R1338 += 1, R1261 += 1, R1262 += 1 };
  s0 -> s0 [0, 65535] { R1337 += 1, R1338 += 1 };
  s0 -> s4 [0, 65535] { R1338 += 1, R1262 += 1, R1199 += 1, R1200 += 1 };
  s0 -> s1 [71, 65535] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s1 -> s1 [0, 69] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s1 -> s1 [0, 65535] { R1338 += 1, R1262 += 1 };
  s1 -> s5 [0, 65535] { R1338 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s2 -> s1 [0, 69] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s2 -> s2 [0, 65535] { R1338 += 1, R1262 += 1, R1200 += 1, R80 += 1 };
  s2 -> s5 [0, 65535] { R1338 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R1338 += 1, R1262 += 1 };
  s2 -> s1 [71, 65535] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s3 -> s1 [0, 69] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s3 -> s2 [0, 65535] { R1338 += 1, R1262 += 1, R1200 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R1338 += 1, R1261 += 1, R1262 += 1 };
  s3 -> s4 [0, 65535] { R1338 += 1, R1262 += 1, R1199 += 1, R1200 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [71, 65535] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s4 -> s1 [0, 69] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s4 -> s2 [0, 65535] { R1338 += 1, R1262 += 1, R1200 += 1, R80 += 1 };
  s4 -> s5 [0, 65535] { R1338 += 1 };
  s4 -> s4 [0, 65535] { R1338 += 1, R1262 += 1, R1199 += 1, R1200 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [71, 65535] { R1338 += 1, R1262 += 1, R1200 += 1 };
  s5 -> s5 [0, 65535] { R1338 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R1338 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1338 += 1, R1262 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R1340 += 1, R1264 += 1, R1202 += 1, R83 += 1, R84 += 1 };
  s0 -> s3 [0, 65535] { R1340 += 1, R1263 += 1, R1264 += 1 };
  s0 -> s4 [0, 65535] { R1340 += 1, R1264 += 1, R1201 += 1, R1202 += 1 };
  s0 -> s0 [0, 65535] { R1339 += 1, R1340 += 1 };
  s0 -> s1 [71, 65535] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R1340 += 1, R1264 += 1, R1202 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1340 += 1 };
  s1 -> s7 [0, 65535] { R1340 += 1, R1264 += 1 };
  s1 -> s1 [71, 65535] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1340 += 1, R1264 += 1, R1202 += 1, R83 += 1, R84 += 1 };
  s2 -> s6 [0, 65535] { R1340 += 1 };
  s2 -> s7 [0, 65535] { R1340 += 1, R1264 += 1 };
  s2 -> s1 [71, 65535] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R1340 += 1, R1264 += 1, R1202 += 1, R83 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R1340 += 1, R1263 += 1, R1264 += 1 };
  s3 -> s4 [0, 65535] { R1340 += 1, R1264 += 1, R1201 += 1, R1202 += 1 };
  s3 -> s1 [71, 65535] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R1340 += 1, R1264 += 1, R1202 += 1, R83 += 1, R84 += 1 };
  s4 -> s4 [0, 65535] { R1340 += 1, R1264 += 1, R1201 += 1, R1202 += 1 };
  s4 -> s6 [0, 65535] { R1340 += 1 };
  s4 -> s1 [71, 65535] { R1340 += 1, R1264 += 1, R1202 += 1, R84 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1340 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1340 += 1 };
  s7 -> s7 [0, 65535] { R1340 += 1, R1264 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R1342 += 1, R1265 += 1, R1266 += 1 };
  s0 -> s2 [0, 65535] { R1342 += 1, R1266 += 1, R1203 += 1, R1204 += 1 };
  s0 -> s0 [0, 65535] { R1341 += 1, R1342 += 1 };
  s0 -> s3 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1, R88 += 1, R89 += 1 };
  s0 -> s4 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1, R89 += 1, R90 += 1 };
  s1 -> s1 [0, 65535] { R1342 += 1, R1265 += 1, R1266 += 1 };
  s1 -> s2 [0, 65535] { R1342 += 1, R1266 += 1, R1203 += 1, R1204 += 1 };
  s1 -> s3 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1, R88 += 1, R89 += 1 };
  s1 -> s4 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1, R89 += 1, R90 += 1 };
  s1 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R1342 += 1, R1266 += 1, R1203 += 1, R1204 += 1 };
  s2 -> s3 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1, R88 += 1, R89 += 1 };
  s2 -> s4 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1, R89 += 1, R90 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s7 [0, 65535] { R1342 += 1 };
  s3 -> s3 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1, R88 += 1, R89 += 1 };
  s3 -> s4 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1, R89 += 1, R90 += 1 };
  s3 -> s6 [0, 65535] { R1342 += 1, R1266 += 1 };
  s3 -> s7 [0, 65535] { R1342 += 1 };
  s3 -> s8 [0, 65535];
  s4 -> s5 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1 };
  s4 -> s4 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1, R89 += 1, R90 += 1 };
  s4 -> s6 [0, 65535] { R1342 += 1, R1266 += 1 };
  s4 -> s7 [0, 65535] { R1342 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R1342 += 1, R1266 += 1, R1204 += 1 };
  s5 -> s6 [0, 65535] { R1342 += 1, R1266 += 1 };
  s5 -> s7 [0, 65535] { R1342 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R1342 += 1, R1266 += 1 };
  s6 -> s7 [0, 65535] { R1342 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R1342 += 1 };
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R1344 += 1, R1268 += 1, R1206 += 1, R94 += 1 };
  s0 -> s1 [0, 65535] { R1344 += 1, R1268 += 1, R1206 += 1 };
  s0 -> s0 [0, 65535] { R1343 += 1, R1344 += 1 };
  s0 -> s2 [0, 65535] { R1344 += 1, R1268 += 1, R1205 += 1, R1206 += 1 };
  s0 -> s3 [0, 65535] { R1344 += 1, R1267 += 1, R1268 += 1 };
  s0 -> s1 [84, 65535] { R1344 += 1, R1268 += 1, R1206 += 1, R94 += 1 };
  s1 -> s1 [0, 70] { R1344 += 1, R1268 += 1, R1206 += 1, R94 += 1 };
  s1 -> s1 [0, 65535] { R1344 += 1, R1268 += 1, R1206 += 1 };
  s1 -> s5 [0, 65535] { R1344 += 1 };
  s1 -> s6 [0, 65535] { R1344 += 1, R1268 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [84, 65535] { R1344 += 1, R1268 += 1, R1206 += 1, R94 += 1 };
  s2 -> s1 [0, 70] { R1344 += 1, R1268 += 1, R1206 += 1, R94 += 1 };
  s2 -> s1 [0, 65535] { R1344 += 1, R1268 += 1, R1206 += 1 };
  s2 -> s5 [0, 65535] { R1344 += 1 };
  s2 -> s2 [0, 65535] { R1344 += 1, R1268 += 1, R1205 += 1, R1206 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [84, 65535] { R1344 += 1, R1268 += 1, R1206 += 1, R94 += 1 };
  s3 -> s1 [0, 70] { R1344 += 1, R1268 += 1, R1206 += 1, R94 += 1 };
  s3 -> s1 [0, 65535] { R1344 += 1, R1268 += 1, R1206 += 1 };
  s3 -> s2 [0, 65535] { R1344 += 1, R1268 += 1, R1205 += 1, R1206 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1344 += 1, R1267 += 1, R1268 += 1 };
  s3 -> s1 [84, 65535] { R1344 += 1, R1268 += 1, R1206 += 1, R94 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1344 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1344 += 1 };
  s6 -> s6 [0, 65535] { R1344 += 1, R1268 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R1346 += 1, R1269 += 1, R1270 += 1 };
  s0 -> s2 [0, 65535] { R1346 += 1, R1270 += 1, R1208 += 1 };
  s0 -> s0 [0, 65535] { R1345 += 1, R1346 += 1 };
  s0 -> s3 [0, 65535] { R1346 += 1, R1270 += 1, R1208 += 1, R825 += 1, R826 += 1 };
  s0 -> s4 [0, 65535] { R1346 += 1, R1270 += 1, R1207 += 1, R1208 += 1 };
  s1 -> s1 [0, 65535] { R1346 += 1, R1269 += 1, R1270 += 1 };
  s1 -> s2 [0, 65535] { R1346 += 1, R1270 += 1, R1208 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R1346 += 1, R1270 += 1, R1208 += 1, R825 += 1, R826 += 1 };
  s1 -> s4 [0, 65535] { R1346 += 1, R1270 += 1, R1207 += 1, R1208 += 1 };
  s2 -> s5 [0, 65535] { R1346 += 1 };
  s2 -> s2 [0, 65535] { R1346 += 1, R1270 += 1, R1208 += 1 };
  s2 -> s7 [0, 65535] { R1346 += 1, R1270 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s5 [0, 65535] { R1346 += 1 };
  s3 -> s2 [0, 65535] { R1346 += 1, R1270 += 1, R1208 += 1 };
  s3 -> s7 [0, 65535] { R1346 += 1, R1270 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1346 += 1, R1270 += 1, R1208 += 1, R825 += 1, R826 += 1 };
  s4 -> s5 [0, 65535] { R1346 += 1 };
  s4 -> s2 [0, 65535] { R1346 += 1, R1270 += 1, R1208 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R1346 += 1, R1270 += 1, R1208 += 1, R825 += 1, R826 += 1 };
  s4 -> s4 [0, 65535] { R1346 += 1, R1270 += 1, R1207 += 1, R1208 += 1 };
  s5 -> s5 [0, 65535] { R1346 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R1346 += 1 };
  s7 -> s7 [0, 65535] { R1346 += 1, R1270 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65535] { R1348 += 1, R1272 += 1, R1210 += 1 };
  s0 -> s2 [0, 65535] { R1348 += 1, R1272 += 1, R1209 += 1, R1210 += 1 };
  s0 -> s3 [0, 65535] { R1348 += 1, R1271 += 1, R1272 += 1 };
  s0 -> s0 [0, 65535] { R1347 += 1, R1348 += 1 };
  s1 -> s1 [0, 65535] { R1348 += 1, R1272 += 1, R1210 += 1 };
  s1 -> s6 [0, 65535] { R1348 += 1, R1272 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1348 += 1 };
  s2 -> s1 [0, 65535] { R1348 += 1, R1272 += 1, R1210 += 1 };
  s2 -> s2 [0, 65535] { R1348 += 1, R1272 += 1, R1209 += 1, R1210 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R1348 += 1 };
  s3 -> s1 [0, 65535] { R1348 += 1, R1272 += 1, R1210 += 1 };
  s3 -> s2 [0, 65535] { R1348 += 1, R1272 += 1, R1209 += 1, R1210 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R1348 += 1, R1271 += 1, R1272 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1348 += 1 };
  s6 -> s6 [0, 65535] { R1348 += 1, R1272 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1348 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R1350 += 1, R1274 += 1, R1230 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R1350 += 1, R1273 += 1, R1274 += 1 };
  s0 -> s0 [0, 65535] { R1349 += 1, R1350 += 1 };
  s0 -> s3 [0, 65535] { R1350 += 1, R1274 += 1, R1229 += 1, R1230 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1350 += 1, R1274 += 1, R1230 += 1, R21 += 1 };
  s1 -> s5 [0, 65535] { R1350 += 1 };
  s1 -> s6 [0, 65535] { R1350 += 1, R1274 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R1350 += 1, R1274 += 1, R1230 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R1350 += 1, R1273 += 1, R1274 += 1 };
  s2 -> s3 [0, 65535] { R1350 += 1, R1274 += 1, R1229 += 1, R1230 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R1350 += 1, R1274 += 1, R1230 += 1, R21 += 1 };
  s3 -> s5 [0, 65535] { R1350 += 1 };
  s3 -> s3 [0, 65535] { R1350 += 1, R1274 += 1, R1229 += 1, R1230 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1350 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R1350 += 1 };
  s6 -> s6 [0, 65535] { R1350 += 1, R1274 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s0 -> s2 [0, 65535] { R1352 += 1, R1276 += 1, R1231 += 1, R1232 += 1 };
  s0 -> s0 [0, 65535] { R1351 += 1, R1352 += 1 };
  s0 -> s3 [0, 65535] { R1352 += 1, R1275 += 1, R1276 += 1 };
  s0 -> s4 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s0 -> s5 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s0 -> s6 [70, 70] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s0 -> s1 [71, 65535] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s1 -> s1 [0, 65] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s1 -> s4 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s1 -> s5 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s1 -> s6 [70, 70] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s1 -> s1 [71, 65535] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s2 -> s1 [0, 65] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s2 -> s2 [0, 65535] { R1352 += 1, R1276 += 1, R1231 += 1, R1232 += 1 };
  s2 -> s4 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s2 -> s5 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s2 -> s6 [70, 70] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s2 -> s1 [71, 65535] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s3 -> s1 [0, 65] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s3 -> s2 [0, 65535] { R1352 += 1, R1276 += 1, R1231 += 1, R1232 += 1 };
  s3 -> s3 [0, 65535] { R1352 += 1, R1275 += 1, R1276 += 1 };
  s3 -> s4 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s3 -> s5 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s3 -> s6 [70, 70] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s3 -> s1 [71, 65535] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s4 -> s4 [0, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s4 -> s10 [70, 70] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s4 -> s4 [71, 65535] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s6 -> s6 [0, 65] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s6 -> s7 [0, 65535] { R1352 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R1352 += 1, R1276 += 1 };
  s6 -> s9 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s6 -> s10 [66, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s6 -> s6 [70, 65535] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s7 -> s7 [0, 65535] { R1352 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R1352 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R1352 += 1, R1276 += 1 };
  s10 -> s10 [0, 66] { R1352 += 1, R1276 += 1, R1232 += 1 };
  s10 -> s7 [0, 65535] { R1352 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [0, 65535] { R1352 += 1, R1276 += 1 };
  s10 -> s10 [70, 65535] { R1352 += 1, R1276 += 1, R1232 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R1353 += 1, R1354 += 1 };
  s0 -> s2 [0, 65535] { R1354 += 1, R1278 += 1, R1233 += 1, R1234 += 1 };
  s0 -> s3 [0, 65535] { R1354 += 1, R1277 += 1, R1278 += 1 };
  s0 -> s4 [66, 66] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s1 -> s6 [0, 65535] { R1354 += 1 };
  s1 -> s1 [0, 65535] { R1354 += 1, R1278 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s2 -> s6 [0, 65535] { R1354 += 1 };
  s2 -> s2 [0, 65535] { R1354 += 1, R1278 += 1, R1233 += 1, R1234 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s3 -> s2 [0, 65535] { R1354 += 1, R1278 += 1, R1233 += 1, R1234 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R1354 += 1, R1277 += 1, R1278 += 1 };
  s3 -> s4 [66, 66] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s4 -> s6 [0, 65535] { R1354 += 1 };
  s4 -> s4 [0, 65535] { R1354 += 1, R1278 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R1354 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R1354 += 1, R1278 += 1 };
  s5 -> s5 [0, 65535] { R1354 += 1, R1278 += 1, R1234 += 1, R77 += 1 };
  s6 -> s6 [0, 65535] { R1354 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R1354 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1354 += 1, R1278 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s0 -> s0 [0, 65535] { R1355 += 1, R1356 += 1 };
  s0 -> s2 [0, 65535] { R1356 += 1, R1280 += 1, R1235 += 1, R1236 += 1 };
  s0 -> s3 [0, 65535] { R1356 += 1, R1279 += 1, R1280 += 1 };
  s0 -> s4 [66, 66] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s1 -> s1 [0, 65535] { R1356 += 1, R1280 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R1356 += 1 };
  s1 -> s4 [66, 66] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R1356 += 1, R1280 += 1, R1235 += 1, R1236 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R1356 += 1 };
  s2 -> s4 [66, 66] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s3 -> s2 [0, 65535] { R1356 += 1, R1280 += 1, R1235 += 1, R1236 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R1356 += 1, R1279 += 1, R1280 += 1 };
  s3 -> s4 [66, 66] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R1356 += 1, R1280 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R1356 += 1 };
  s5 -> s6 [0, 65535] { R1356 += 1, R1280 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R1356 += 1 };
  s5 -> s5 [0, 65535] { R1356 += 1, R1280 += 1, R1236 += 1, R79 += 1 };
  s6 -> s6 [0, 65535] { R1356 += 1, R1280 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R1356 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1356 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R1358 += 1, R1281 += 1, R1282 += 1 };
  s0 -> s0 [0, 65535] { R1357 += 1, R1358 += 1 };
  s0 -> s3 [0, 65535] { R1358 += 1, R1282 += 1, R1237 += 1, R1238 += 1 };
  s0 -> s4 [66, 66] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s1 -> s6 [0, 65535] { R1358 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R1358 += 1, R1282 += 1 };
  s1 -> s4 [66, 66] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R1358 += 1, R1281 += 1, R1282 += 1 };
  s2 -> s3 [0, 65535] { R1358 += 1, R1282 += 1, R1237 += 1, R1238 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535] { R1358 += 1, R1282 += 1, R1237 += 1, R1238 += 1 };
  s3 -> s6 [0, 65535] { R1358 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535] { R1358 += 1, R1282 += 1, R1238 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R1358 += 1, R1282 += 1 };
  s4 -> s6 [0, 65535] { R1358 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R1358 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R1358 += 1, R1282 += 1 };
  s6 -> s6 [0, 65535] { R1358 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1358 += 1, R1282 += 1 };
  s8 -> s6 [0, 65535] { R1358 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R1359 += 1, R1360 += 1 };
  s0 -> s2 [0, 65535] { R1360 += 1, R1284 += 1, R1239 += 1, R1240 += 1 };
  s0 -> s3 [0, 65535] { R1360 += 1, R1283 += 1, R1284 += 1 };
  s0 -> s4 [66, 66] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s0 -> s5 [66, 66] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s0 -> s1 [67, 65535] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s1 -> s6 [0, 65535] { R1360 += 1 };
  s1 -> s1 [0, 65535] { R1360 += 1, R1284 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s1 -> s5 [66, 66] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [67, 65535] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [0, 65] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s2 -> s6 [0, 65535] { R1360 += 1 };
  s2 -> s2 [0, 65535] { R1360 += 1, R1284 += 1, R1239 += 1, R1240 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s2 -> s5 [66, 66] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [67, 65535] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [0, 65] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s3 -> s2 [0, 65535] { R1360 += 1, R1284 += 1, R1239 += 1, R1240 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R1360 += 1, R1283 += 1, R1284 += 1 };
  s3 -> s4 [66, 66] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s3 -> s5 [66, 66] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [67, 65535] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s4 -> s8 [0, 65535] { R1360 += 1, R1284 += 1 };
  s4 -> s4 [0, 65535] { R1360 += 1, R1284 += 1, R1240 += 1, R85 += 1, R86 += 1 };
  s4 -> s6 [0, 65535] { R1360 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R1360 += 1, R1284 += 1 };
  s5 -> s6 [0, 65535] { R1360 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R1360 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R1360 += 1, R1284 += 1 };
  s8 -> s6 [0, 65535] { R1360 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s0 -> s0 [0, 65535] { R1361 += 1, R1362 += 1 };
  s0 -> s3 [0, 65535] { R1362 += 1, R1286 += 1, R1241 += 1, R1242 += 1 };
  s0 -> s4 [0, 65535] { R1362 += 1, R1285 += 1, R1286 += 1 };
  s0 -> s5 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s0 -> s6 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s0 -> s7 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s0 -> s8 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s0 -> s2 [67, 70] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s0 -> s1 [67, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s0 -> s9 [84, 84] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s0 -> s2 [85, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s1 -> s1 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s1 -> s2 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s1 -> s5 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s1 -> s6 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s1 -> s7 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s1 -> s8 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s1 -> s2 [67, 70] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s1 -> s1 [67, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s1 -> s9 [84, 84] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s1 -> s2 [85, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s2 -> s2 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s2 -> s5 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s2 -> s7 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s2 -> s2 [67, 70] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s2 -> s9 [84, 84] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s2 -> s2 [85, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s3 -> s1 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s3 -> s2 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s3 -> s3 [0, 65535] { R1362 += 1, R1286 += 1, R1241 += 1, R1242 += 1 };
  s3 -> s5 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s3 -> s6 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s3 -> s7 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s3 -> s8 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s3 -> s2 [67, 70] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s3 -> s1 [67, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s3 -> s9 [84, 84] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s3 -> s2 [85, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s4 -> s1 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s4 -> s2 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s4 -> s3 [0, 65535] { R1362 += 1, R1286 += 1, R1241 += 1, R1242 += 1 };
  s4 -> s4 [0, 65535] { R1362 += 1, R1285 += 1, R1286 += 1 };
  s4 -> s5 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s4 -> s6 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s4 -> s7 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s4 -> s8 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s4 -> s2 [67, 70] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s4 -> s1 [67, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s4 -> s9 [84, 84] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s4 -> s2 [85, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s6 -> s7 [0, 70] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s6 -> s6 [0, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R91 += 1, R92 += 1 };
  s6 -> s12 [84, 84] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s6 -> s7 [85, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s7 -> s7 [0, 70] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s7 -> s12 [84, 84] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s7 -> s7 [85, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s9 -> s9 [0, 65] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s9 -> s9 [0, 65535] { R1362 += 1, R1286 += 1 };
  s9 -> s10 [0, 65535] { R1362 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1 };
  s9 -> s13 [66, 66] { R1362 += 1, R1286 += 1, R1242 += 1 };
  s9 -> s9 [67, 70] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s9 -> s9 [67, 65535] { R1362 += 1, R1286 += 1, R1242 += 1 };
  s9 -> s9 [84, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s10 -> s10 [0, 65535] { R1362 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 70] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s12 -> s10 [0, 65535] { R1362 += 1 };
  s12 -> s14 [0, 65535] { R1362 += 1, R1286 += 1 };
  s12 -> s12 [0, 65535] { R1362 += 1, R1286 += 1, R1242 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s12 [84, 65535] { R1362 += 1, R1286 += 1, R1242 += 1, R92 += 1 };
  s13 -> s10 [0, 65535] { R1362 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R1362 += 1, R1286 += 1 };
  s14 -> s10 [0, 65535] { R1362 += 1 };
  s14 -> s14 [0, 65535] { R1362 += 1, R1286 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s0 -> s2 [0, 65] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s0 -> s3 [0, 65535] { R1364 += 1, R1287 += 1, R1288 += 1 };
  s0 -> s0 [0, 65535] { R1363 += 1, R1364 += 1 };
  s0 -> s4 [0, 65535] { R1364 += 1, R1288 += 1, R1243 += 1, R1244 += 1 };
  s0 -> s5 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s0 -> s6 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s0 -> s7 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s0 -> s8 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s0 -> s1 [67, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s0 -> s2 [67, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s1 -> s1 [0, 65] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s1 -> s1 [0, 65535] { R1364 += 1, R1288 += 1 };
  s1 -> s9 [0, 65535] { R1364 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s6 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s1 -> s7 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s1 -> s1 [67, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s2 -> s1 [0, 65] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s2 -> s2 [0, 65] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s2 -> s5 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s2 -> s6 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s2 -> s7 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s2 -> s8 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s2 -> s1 [67, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s2 -> s2 [67, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s3 -> s1 [0, 65] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s3 -> s2 [0, 65] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s3 -> s3 [0, 65535] { R1364 += 1, R1287 += 1, R1288 += 1 };
  s3 -> s4 [0, 65535] { R1364 += 1, R1288 += 1, R1243 += 1, R1244 += 1 };
  s3 -> s5 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s3 -> s6 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s3 -> s7 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s3 -> s8 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s3 -> s1 [67, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s3 -> s2 [67, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s4 -> s1 [0, 65] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s4 -> s2 [0, 65] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s4 -> s4 [0, 65535] { R1364 += 1, R1288 += 1, R1243 += 1, R1244 += 1 };
  s4 -> s5 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s4 -> s6 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s4 -> s7 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s4 -> s8 [66, 66] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s4 -> s1 [67, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s4 -> s2 [67, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s5 -> s5 [0, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R821 += 1, R822 += 1 };
  s5 -> s6 [0, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s6 -> s11 [0, 65535] { R1364 += 1, R1288 += 1 };
  s6 -> s6 [0, 65535] { R1364 += 1, R1288 += 1, R1244 += 1, R822 += 1, R823 += 1 };
  s6 -> s9 [0, 65535] { R1364 += 1 };
  s6 -> s10 [0, 65535];
  s7 -> s9 [0, 65535] { R1364 += 1 };
  s7 -> s10 [0, 65535];
  s7 -> s7 [0, 65535] { R1364 += 1, R1288 += 1 };
  s9 -> s9 [0, 65535] { R1364 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R1364 += 1, R1288 += 1 };
  s11 -> s9 [0, 65535] { R1364 += 1 };
  s11 -> s10 [0, 65535];
  accepting s9, s6, s1, s7, s10, s11;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s0 -> s2 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s0 -> s3 [0, 65535] { R1366 += 1, R1289 += 1, R1290 += 1 };
  s0 -> s4 [0, 65535] { R1366 += 1, R1290 += 1, R1245 += 1, R1246 += 1 };
  s0 -> s0 [0, 65535] { R1365 += 1, R1366 += 1 };
  s0 -> s5 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s0 -> s6 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s0 -> s7 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s0 -> s8 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s0 -> s2 [67, 69] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s0 -> s1 [67, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s0 -> s9 [70, 70] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s0 -> s2 [85, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s1 -> s1 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s1 -> s2 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s1 -> s5 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s1 -> s6 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s1 -> s7 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s1 -> s8 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s1 -> s2 [67, 69] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s1 -> s1 [67, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s1 -> s9 [70, 70] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s1 -> s2 [85, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s2 -> s2 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s2 -> s5 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1 };
  s2 -> s6 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1 };
  s2 -> s2 [67, 69] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s2 -> s2 [67, 65535] { R1366 += 1, R1290 += 1, R1246 += 1 };
  s2 -> s9 [70, 70] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s2 -> s2 [85, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s3 -> s1 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s3 -> s2 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s3 -> s3 [0, 65535] { R1366 += 1, R1289 += 1, R1290 += 1 };
  s3 -> s4 [0, 65535] { R1366 += 1, R1290 += 1, R1245 += 1, R1246 += 1 };
  s3 -> s5 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s3 -> s6 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s3 -> s7 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s3 -> s8 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s3 -> s2 [67, 69] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s3 -> s1 [67, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s3 -> s9 [70, 70] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s3 -> s2 [85, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s4 -> s1 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s4 -> s2 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s4 -> s4 [0, 65535] { R1366 += 1, R1290 += 1, R1245 += 1, R1246 += 1 };
  s4 -> s5 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s4 -> s6 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s4 -> s7 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s4 -> s8 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s4 -> s2 [67, 69] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s4 -> s1 [67, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s4 -> s9 [70, 70] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s4 -> s2 [85, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s5 -> s5 [0, 69] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s5 -> s5 [0, 65535] { R1366 += 1, R1290 += 1, R1246 += 1 };
  s5 -> s13 [70, 70] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s5 -> s5 [85, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s8 -> s5 [0, 69] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s8 -> s8 [0, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1187 += 1, R1188 += 1 };
  s8 -> s13 [70, 70] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s8 -> s5 [85, 65535] { R1366 += 1, R1290 += 1, R1246 += 1, R1188 += 1 };
  s9 -> s9 [0, 65] { R1366 += 1, R1290 += 1, R1246 += 1 };
  s9 -> s10 [0, 65535] { R1366 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R1366 += 1, R1290 += 1 };
  s9 -> s12 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1 };
  s9 -> s13 [66, 66] { R1366 += 1, R1290 += 1, R1246 += 1 };
  s9 -> s9 [67, 65535] { R1366 += 1, R1290 += 1, R1246 += 1 };
  s10 -> s10 [0, 65535] { R1366 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s10 [0, 65535] { R1366 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R1366 += 1, R1290 += 1 };
  s13 -> s10 [0, 65535] { R1366 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R1366 += 1, R1290 += 1, R1246 += 1 };
  s13 -> s14 [0, 65535] { R1366 += 1, R1290 += 1 };
  s14 -> s10 [0, 65535] { R1366 += 1 };
  s14 -> s11 [0, 65535];
  s14 -> s14 [0, 65535] { R1366 += 1, R1290 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R1290 && R3 - R1366 = 1 && R23 - R1290 = -1 && R24 = R1290 && R25 - R1290 = -1 && R26 = R1290 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R1366 && R32 - R1366 = 1 && R33 = R1366 && R34 - R1366 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R94 + -1*R92 - R64 = 0 && R63 + R93 + R91 = 0 && R1231 = 0 && R1232 = 0 && R1241 = 0 && R1242 = 0 && R1243 = 0 && R1244 = 0 && R1245 = 0 && R1246 = 0 && R1247 = 0 && R1248 = R1290 && R1249 = 0 && R1250 = R1290 && R1251 = 0 && R1252 = R1290 && R1253 = 0 && R1254 = R1290 && R1255 = 0 && R1256 = R1290 && R1257 = 0 && R1258 = R1290 && R1259 = 0 && R1260 = R1290 && R1261 = 0 && R1262 = R1290 && R1263 = 0 && R1264 = R1290 && R1265 = 0 && R1266 = R1290 && R1267 = 0 && R1268 = R1290 && R1269 = 0 && R1270 = R1290 && R1271 = 0 && R1272 = R1290 && R1273 = 0 && R1274 = R1290 && R1275 = 0 && R1276 = R1290 && R1277 = 0 && R1278 = R1290 && R1279 = 0 && R1280 = R1290 && R1281 = 0 && R1282 = R1290 && R1283 = 0 && R1284 = R1290 && R1285 = 0 && R1286 = R1290 && R1287 = 0 && R1288 = R1290 && R1289 = 0 && R1291 = 0 && R1292 = R1366 && R1293 = 0 && R1294 = R1366 && R1295 = 0 && R1296 = R1366 && R1297 = 0 && R1298 = R1366 && R1299 = 0 && R1300 = R1366 && R1301 = 0 && R1302 = R1366 && R1303 = 0 && R1304 = R1366 && R1305 = 0 && R1306 = R1366 && R1307 = 0 && R1308 = R1366 && R1309 = 0 && R1310 = R1366 && R1311 = 0 && R1312 = R1366 && R1313 = 0 && R1314 = R1366 && R1315 = 0 && R1316 = R1366 && R1317 = 0 && R1318 = R1366 && R1319 = 0 && R1320 = R1366 && R1321 = 0 && R1322 = R1366 && R1323 = 0 && R1324 = R1366 && R1325 = 0 && R1326 = R1366 && R1327 = 0 && R1328 = R1366 && R1329 = 0 && R1330 = R1366 && R1331 = 0 && R1332 = R1366 && R1333 = 0 && R1334 = R1366 && R1335 = 0 && R1336 = R1366 && R1337 = 0 && R1338 = R1366 && R1339 = 0 && R1340 = R1366 && R1341 = 0 && R1342 = R1366 && R1343 = 0 && R1344 = R1366 && R1345 = 0 && R1346 = R1366 && R1347 = 0 && R1348 = R1366 && R1349 = 0 && R1350 = R1366 && R1351 = 0 && R1352 = R1366 && R1353 = 0 && R1354 = R1366 && R1355 = 0 && R1356 = R1366 && R1357 = 0 && R1358 = R1366 && R1359 = 0 && R1360 = R1366 && R1361 = 0 && R1362 = R1366 && R1363 = 0 && R1364 = R1366 && R1365 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R94 + -1*R92 - R64 < 1 && 0 < R1290 && -1 < R1366 && (R1 != 0 || R20 = 0 || (R1191 = 0 && R1192 = 0)) && (R1 != 0 || R20 = 0 || (R1193 = 0 && R1194 = 0)) && (R1 != 0 || R20 = 0 || (R1195 = 0 && R1196 = 0)) && (R1 != 0 || R20 = 0 || (R1197 = 0 && R1198 = 0)) && (R1 != 0 || R20 = 0 || (R1199 = 0 && R1200 = 0)) && (R1 != 0 || R20 = 0 || (R1201 = 0 && R1202 = 0)) && (R1 != 0 || R20 = 0 || (R1203 = 0 && R1204 = 0)) && (R1 != 0 || R20 = 0 || (R1205 = 0 && R1206 = 0)) && (R1 != 0 || R20 = 0 || (R1207 = 0 && R1208 = 0)) && (R1 != 0 || R20 = 0 || (R1209 = 0 && R1210 = 0)) && (R59 + R90 + R87 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R94 + -1*R92 - R64 = 0 || R64 + R94 + R92 < 1) && (R53 + R83 + R81 = 0 || R64 + R94 + R92 < 1))) && (R59 + R90 + R87 != 0 || ((R57 + R88 + R85 != 0 || R58 + R89 + R86 + -1*R94 + -1*R92 - R64 = 0 || R64 + R94 + R92 < 1) && (R57 + R88 + R85 = 0 || R64 + R94 + R92 < 1))) && (R1191 != 0 || R1 = R1192 || R1 < 1) && (R1193 != 0 || R1 = R1194 || R1 < 1) && (R1195 != 0 || R1 = R1196 || R1 < 1) && (R1197 != 0 || R1 = R1198 || R1 < 1) && (R1199 != 0 || R1 = R1200 || R1 < 1) && (R1201 != 0 || R1 = R1202 || R1 < 1) && (R1203 != 0 || R1 = R1204 || R1 < 1) && (R1205 != 0 || R1 = R1206 || R1 < 1) && (R1207 != 0 || R1 = R1208 || R1 < 1) && (R1209 != 0 || R1 = R1210 || R1 < 1) && (R21 = 0 || (R1229 = 0 && R1230 = 0)) && (R21 = 0 || (R1233 = 0 && R1234 = 0)) && (R21 = 0 || (R1235 = 0 && R1236 = 0)) && (R21 = 0 || (R1237 = 0 && R1238 = 0)) && (R21 = 0 || (R1239 = 0 && R1240 = 0)) && (R22 = 0 || (R1211 = 0 && R1212 = 0)) && (R22 = 0 || (R1213 = 0 && R1214 = 0)) && (R22 = 0 || (R1215 = 0 && R1216 = 0)) && (R22 = 0 || (R1217 = 0 && R1218 = 0)) && (R22 = 0 || (R1219 = 0 && R1220 = 0)) && (R22 = 0 || (R1221 = 0 && R1222 = 0)) && (R22 = 0 || (R1223 = 0 && R1224 = 0)) && (R22 = 0 || (R1225 = 0 && R1226 = 0)) && (R22 = 0 || (R1227 = 0 && R1228 = 0)) && (R59 + R90 + R87 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R94 + -1*R92 - R64 = 0)) && (R59 + R90 + R87 = 0 || (R57 + R88 + R85 = 0 && R58 + R89 + R86 + -1*R94 + -1*R92 - R64 = 0)) && (R69 + R826 + R823 = 0 || (R67 + R824 + R821 = 0 && R68 + R825 + R822 = 0)) && (R69 + R826 + R823 = 0 || (R73 + R1189 + R1187 = 0 && R74 + R1190 + R1188 = 0)) && (R1191 = 0 || R1 < 1) && (R1193 = 0 || R1 < 1) && (R1195 = 0 || R1 < 1) && (R1197 = 0 || R1 < 1) && (R1199 = 0 || R1 < 1) && (R1201 = 0 || R1 < 1) && (R1203 = 0 || R1 < 1) && (R1205 = 0 || R1 < 1) && (R1207 = 0 || R1 < 1) && (R1209 = 0 || R1 < 1);
// End of Parikh automata intersection problem
