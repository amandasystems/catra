// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R6637, R6638, R6639, R6640, R6641, R6642, R6643, R6644, R6645, R6646, R67, R68, R69, R7, R73, R7373, R7374, R7375, R7376, R7377, R7378, R74, R77, R7739, R7740, R7741, R7742, R7743, R7744, R7745, R7746, R7747, R7748, R7749, R7750, R7751, R7752, R7753, R7754, R7755, R7756, R7757, R7758, R7759, R7760, R7761, R7762, R7763, R7764, R7765, R7766, R7767, R7768, R7769, R7770, R7771, R7772, R7773, R7774, R7775, R7776, R7777, R7778, R7779, R7780, R7781, R7782, R7783, R7784, R7785, R7786, R7787, R7788, R7789, R7790, R7791, R7792, R7793, R7794, R7795, R7796, R7797, R7798, R7799, R78, R7800, R7801, R7802, R7803, R7804, R7805, R7806, R7807, R7808, R7809, R7810, R7811, R7812, R7813, R7814, R7815, R7816, R7817, R7818, R7819, R7820, R7821, R7822, R7823, R7824, R7825, R7826, R7827, R7828, R7829, R7830, R7831, R7832, R7833, R7834, R7835, R7836, R7837, R7838, R7839, R7840, R7841, R7842, R7843, R7844, R7845, R7846, R7847, R7848, R7849, R7850, R7851, R7852, R7853, R7854, R7855, R7856, R7857, R7858, R7859, R7860, R7861, R7862, R7863, R7864, R7865, R7866, R7867, R7868, R7869, R7870, R7871, R7872, R7873, R7874, R7875, R7876, R7877, R7878, R7879, R7880, R7881, R7882, R7883, R7884, R7885, R7886, R7887, R7888, R7889, R7890, R7891, R7892, R7893, R7894, R7895, R7896, R7897, R7898, R7899, R79, R7900, R7901, R7902, R7903, R7904, R7905, R7906, R7907, R7908, R7909, R7910, R7911, R7912, R7913, R7914, R7915, R7916, R7917, R7918, R80, R81, R82, R83, R84;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R7844 += 1 };
  s0 -> s0 [0, 65535] { R7843 += 1, R7844 += 1 };
  s0 -> s2 [66, 66] { R7844 += 1 };
  s0 -> s1 [67, 65535] { R7844 += 1 };
  s1 -> s1 [0, 64] { R7844 += 1 };
  s1 -> s2 [66, 66] { R7844 += 1 };
  s1 -> s1 [67, 65535] { R7844 += 1 };
  s2 -> s2 [0, 64] { R7844 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R7844 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R7845 += 1, R7846 += 1 };
  s0 -> s1 [0, 65535] { R7846 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R7846 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R7848 += 1 };
  s0 -> s2 [0, 65535] { R7848 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R7847 += 1, R7848 += 1 };
  s0 -> s3 [66, 66] { R7848 += 1 };
  s0 -> s1 [67, 65535] { R7848 += 1 };
  s1 -> s1 [0, 65] { R7848 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R7848 += 1 };
  s1 -> s1 [67, 65535] { R7848 += 1 };
  s2 -> s1 [0, 65] { R7848 += 1 };
  s2 -> s2 [0, 65535] { R7848 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R7848 += 1 };
  s2 -> s1 [67, 65535] { R7848 += 1 };
  s3 -> s3 [0, 65535] { R7848 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R7850 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R7849 += 1, R7850 += 1 };
  s0 -> s2 [0, 65535] { R7850 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R7850 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R7850 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R7850 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R7850 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R7850 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R7850 += 1 };
  s2 -> s1 [0, 8] { R7850 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R7850 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R7850 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R7850 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R7850 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R7850 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R7850 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7850 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R7852 += 1, R25 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R7852 += 1, R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R7851 += 1, R7852 += 1 };
  s1 -> s1 [0, 65535] { R7852 += 1, R25 += 1, R26 += 1 };
  s1 -> s2 [0, 65535] { R7852 += 1, R26 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7852 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R7852 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7852 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R7854 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R7854 += 1, R27 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R7853 += 1, R7854 += 1 };
  s0 -> s3 [9, 13] { R7854 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R7854 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R7854 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R7854 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R7854 += 1 };
  s1 -> s1 [0, 65535] { R7854 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R7854 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R7854 += 1, R27 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R7854 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R7854 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R7854 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R7854 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R7854 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7854 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R7856 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R7855 += 1, R7856 += 1 };
  s0 -> s2 [0, 65535] { R7856 += 1, R30 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R7856 += 1, R29 += 1, R30 += 1 };
  s1 -> s2 [0, 65535] { R7856 += 1, R30 += 1, R5 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R7856 += 1 };
  s2 -> s2 [0, 65535] { R7856 += 1, R30 += 1, R5 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7856 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s0 [0, 65535] { R7857 += 1, R7858 += 1 };
  s0 -> s1 [0, 65535] { R7858 += 1, R7764 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R7858 += 1, R7763 += 1, R7764 += 1 };
  s1 -> s4 [0, 65535] { R7858 += 1 };
  s1 -> s1 [0, 65535] { R7858 += 1, R7764 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R7858 += 1, R7764 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7858 += 1, R7763 += 1, R7764 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7858 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R7860 += 1, R7766 += 1 };
  s0 -> s0 [0, 65535] { R7859 += 1, R7860 += 1 };
  s0 -> s2 [0, 65535] { R7860 += 1, R7765 += 1, R7766 += 1 };
  s0 -> s3 [66, 66] { R7860 += 1, R7766 += 1 };
  s0 -> s4 [66, 66] { R7860 += 1, R7766 += 1 };
  s0 -> s1 [71, 65535] { R7860 += 1, R7766 += 1 };
  s1 -> s1 [0, 65] { R7860 += 1, R7766 += 1 };
  s1 -> s1 [0, 65535] { R7860 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R7860 += 1, R7766 += 1 };
  s1 -> s4 [66, 66] { R7860 += 1, R7766 += 1 };
  s1 -> s1 [71, 65535] { R7860 += 1, R7766 += 1 };
  s2 -> s1 [0, 65] { R7860 += 1, R7766 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7860 += 1, R7765 += 1, R7766 += 1 };
  s2 -> s3 [66, 66] { R7860 += 1, R7766 += 1 };
  s2 -> s4 [66, 66] { R7860 += 1, R7766 += 1 };
  s2 -> s1 [71, 65535] { R7860 += 1, R7766 += 1 };
  s3 -> s3 [0, 66] { R7860 += 1, R7766 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7860 += 1 };
  s3 -> s3 [71, 65535] { R7860 += 1, R7766 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7860 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R7862 += 1, R7768 += 1, R49 += 1 };
  s0 -> s2 [0, 65535] { R7862 += 1, R7767 += 1, R7768 += 1 };
  s0 -> s0 [0, 65535] { R7861 += 1, R7862 += 1 };
  s0 -> s3 [66, 66] { R7862 += 1, R7768 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R7862 += 1, R7768 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R7862 += 1, R7768 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R7862 += 1, R7768 += 1, R49 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7862 += 1 };
  s1 -> s3 [66, 66] { R7862 += 1, R7768 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R7862 += 1, R7768 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R7862 += 1, R7768 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R7862 += 1, R7768 += 1, R49 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7862 += 1, R7767 += 1, R7768 += 1 };
  s2 -> s3 [66, 66] { R7862 += 1, R7768 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R7862 += 1, R7768 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R7862 += 1, R7768 += 1, R49 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7862 += 1, R7768 += 1, R49 += 1 };
  s3 -> s6 [0, 65535] { R7862 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7862 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7862 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R7864 += 1, R7770 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R7864 += 1, R7769 += 1, R7770 += 1 };
  s0 -> s0 [0, 65535] { R7863 += 1, R7864 += 1 };
  s0 -> s3 [66, 66] { R7864 += 1, R7770 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R7864 += 1, R7770 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R7864 += 1, R7770 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R7864 += 1, R7770 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R7864 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R7864 += 1, R7770 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R7864 += 1, R7770 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R7864 += 1, R7770 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R7864 += 1, R7770 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R7864 += 1, R7769 += 1, R7770 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R7864 += 1, R7770 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R7864 += 1, R7770 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R7864 += 1, R7770 += 1, R51 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R7864 += 1 };
  s4 -> s5 [0, 65535] { R7864 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7864 += 1, R7770 += 1, R51 += 1 };
  s5 -> s5 [0, 65535] { R7864 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s0 -> s2 [0, 65535] { R7866 += 1, R7771 += 1, R7772 += 1 };
  s0 -> s0 [0, 65535] { R7865 += 1, R7866 += 1 };
  s0 -> s3 [66, 66] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7866 += 1 };
  s1 -> s3 [66, 66] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7866 += 1, R7771 += 1, R7772 += 1 };
  s2 -> s3 [66, 66] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R7866 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R7866 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7866 += 1, R7772 += 1, R53 += 1, R54 += 1 };
  s5 -> s5 [0, 65535] { R7866 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R7867 += 1, R7868 += 1 };
  s0 -> s2 [0, 65535] { R7868 += 1, R7773 += 1, R7774 += 1 };
  s0 -> s3 [66, 66] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7868 += 1 };
  s1 -> s3 [66, 66] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R7868 += 1, R7773 += 1, R7774 += 1 };
  s2 -> s3 [66, 66] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R7868 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R7868 += 1 };
  s4 -> s4 [0, 65535] { R7868 += 1, R7774 += 1, R57 += 1, R58 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7868 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s0 -> s2 [0, 65535] { R7870 += 1, R7775 += 1, R7776 += 1 };
  s0 -> s0 [0, 65535] { R7869 += 1, R7870 += 1 };
  s0 -> s3 [66, 66] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R7870 += 1 };
  s1 -> s3 [66, 66] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R7870 += 1, R7775 += 1, R7776 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s3 -> s3 [0, 65535] { R7870 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R7870 += 1 };
  s4 -> s4 [0, 65535] { R7870 += 1, R7776 += 1, R63 += 1, R64 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R7870 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R7872 += 1, R7777 += 1, R7778 += 1 };
  s0 -> s0 [0, 65535] { R7871 += 1, R7872 += 1 };
  s0 -> s3 [66, 66] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R7872 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R7872 += 1, R7777 += 1, R7778 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R7872 += 1, R7778 += 1, R67 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R7872 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7872 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7872 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s0 -> s2 [0, 65535] { R7874 += 1, R7779 += 1, R7780 += 1 };
  s0 -> s0 [0, 65535] { R7873 += 1, R7874 += 1 };
  s0 -> s3 [66, 66] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7874 += 1 };
  s1 -> s3 [66, 66] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7874 += 1, R7779 += 1, R7780 += 1 };
  s2 -> s3 [66, 66] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R7874 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7874 += 1, R7780 += 1, R73 += 1, R74 += 1 };
  s4 -> s6 [0, 65535] { R7874 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7874 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R7876 += 1, R7800 += 1 };
  s0 -> s0 [0, 65535] { R7875 += 1, R7876 += 1 };
  s0 -> s2 [0, 65535] { R7876 += 1, R7799 += 1, R7800 += 1 };
  s0 -> s3 [66, 66] { R7876 += 1, R7800 += 1 };
  s0 -> s1 [67, 65535] { R7876 += 1, R7800 += 1 };
  s1 -> s1 [0, 65] { R7876 += 1, R7800 += 1 };
  s1 -> s3 [66, 66] { R7876 += 1, R7800 += 1 };
  s1 -> s1 [67, 65535] { R7876 += 1, R7800 += 1 };
  s2 -> s1 [0, 65] { R7876 += 1, R7800 += 1 };
  s2 -> s2 [0, 65535] { R7876 += 1, R7799 += 1, R7800 += 1 };
  s2 -> s3 [66, 66] { R7876 += 1, R7800 += 1 };
  s2 -> s1 [67, 65535] { R7876 += 1, R7800 += 1 };
  s3 -> s3 [0, 65535] { R7876 += 1, R7800 += 1 };
  s3 -> s4 [0, 65535] { R7876 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R7876 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s0 [0, 65535] { R7877 += 1, R7878 += 1 };
  s0 -> s1 [0, 65535] { R7878 += 1, R7801 += 1, R7802 += 1 };
  s0 -> s2 [0, 65535] { R7878 += 1, R7802 += 1, R1 += 1 };
  s1 -> s1 [0, 65535] { R7878 += 1, R7801 += 1, R7802 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R7878 += 1, R7802 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R7878 += 1, R7802 += 1, R1 += 1 };
  s2 -> s4 [0, 65535] { R7878 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R7878 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R7880 += 1, R7804 += 1 };
  s0 -> s0 [0, 65535] { R7879 += 1, R7880 += 1 };
  s0 -> s2 [0, 65535] { R7880 += 1, R7803 += 1, R7804 += 1 };
  s0 -> s3 [0, 65535] { R7880 += 1, R7804 += 1, R11 += 1 };
  s0 -> s4 [66, 66] { R7880 += 1, R7804 += 1 };
  s0 -> s1 [67, 65535] { R7880 += 1, R7804 += 1 };
  s1 -> s1 [0, 65] { R7880 += 1, R7804 += 1 };
  s1 -> s1 [0, 65535] { R7880 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [66, 66] { R7880 += 1, R7804 += 1 };
  s1 -> s1 [67, 65535] { R7880 += 1, R7804 += 1 };
  s2 -> s1 [0, 65] { R7880 += 1, R7804 += 1 };
  s2 -> s2 [0, 65535] { R7880 += 1, R7803 += 1, R7804 += 1 };
  s2 -> s3 [0, 65535] { R7880 += 1, R7804 += 1, R11 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R7880 += 1, R7804 += 1 };
  s2 -> s1 [67, 65535] { R7880 += 1, R7804 += 1 };
  s3 -> s1 [0, 65] { R7880 += 1, R7804 += 1 };
  s3 -> s5 [0, 65535] { R7880 += 1 };
  s3 -> s3 [0, 65535] { R7880 += 1, R7804 += 1, R11 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [66, 66] { R7880 += 1, R7804 += 1 };
  s3 -> s1 [67, 65535] { R7880 += 1, R7804 += 1 };
  s4 -> s4 [0, 65535] { R7880 += 1, R7804 += 1 };
  s5 -> s5 [0, 65535] { R7880 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R7882 += 1, R7806 += 1, R7744 += 1 };
  s0 -> s0 [0, 65535] { R7881 += 1, R7882 += 1 };
  s0 -> s2 [0, 65535] { R7882 += 1, R7805 += 1, R7806 += 1 };
  s0 -> s3 [0, 65535] { R7882 += 1, R7806 += 1, R7743 += 1, R7744 += 1 };
  s0 -> s1 [67, 65535] { R7882 += 1, R7806 += 1, R7744 += 1 };
  s1 -> s1 [0, 65] { R7882 += 1, R7806 += 1, R7744 += 1 };
  s1 -> s1 [0, 65535] { R7882 += 1, R7806 += 1 };
  s1 -> s4 [0, 65535] { R7882 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [67, 65535] { R7882 += 1, R7806 += 1, R7744 += 1 };
  s2 -> s1 [0, 65] { R7882 += 1, R7806 += 1, R7744 += 1 };
  s2 -> s2 [0, 65535] { R7882 += 1, R7805 += 1, R7806 += 1 };
  s2 -> s3 [0, 65535] { R7882 += 1, R7806 += 1, R7743 += 1, R7744 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [67, 65535] { R7882 += 1, R7806 += 1, R7744 += 1 };
  s3 -> s1 [0, 65] { R7882 += 1, R7806 += 1, R7744 += 1 };
  s3 -> s3 [0, 65535] { R7882 += 1, R7806 += 1, R7743 += 1, R7744 += 1 };
  s3 -> s4 [0, 65535] { R7882 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [67, 65535] { R7882 += 1, R7806 += 1, R7744 += 1 };
  s4 -> s4 [0, 65535] { R7882 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R7884 += 1, R7808 += 1, R7746 += 1, R20 += 1 };
  s0 -> s2 [0, 65535] { R7884 += 1, R7808 += 1, R7745 += 1, R7746 += 1 };
  s0 -> s3 [0, 65535] { R7884 += 1, R7807 += 1, R7808 += 1 };
  s0 -> s0 [0, 65535] { R7883 += 1, R7884 += 1 };
  s1 -> s6 [0, 65535] { R7884 += 1, R7808 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R7884 += 1 };
  s1 -> s1 [0, 65535] { R7884 += 1, R7808 += 1, R7746 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R7884 += 1 };
  s2 -> s1 [0, 65535] { R7884 += 1, R7808 += 1, R7746 += 1, R20 += 1 };
  s2 -> s2 [0, 65535] { R7884 += 1, R7808 += 1, R7745 += 1, R7746 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R7884 += 1, R7808 += 1, R7746 += 1, R20 += 1 };
  s3 -> s2 [0, 65535] { R7884 += 1, R7808 += 1, R7745 += 1, R7746 += 1 };
  s3 -> s3 [0, 65535] { R7884 += 1, R7807 += 1, R7808 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7884 += 1 };
  s6 -> s6 [0, 65535] { R7884 += 1, R7808 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7884 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R7886 += 1, R7810 += 1, R7748 += 1 };
  s0 -> s2 [0, 65535] { R7886 += 1, R7809 += 1, R7810 += 1 };
  s0 -> s0 [0, 65535] { R7885 += 1, R7886 += 1 };
  s0 -> s3 [0, 65535] { R7886 += 1, R7810 += 1, R7747 += 1, R7748 += 1 };
  s0 -> s1 [70, 65535] { R7886 += 1, R7810 += 1, R7748 += 1 };
  s1 -> s1 [0, 66] { R7886 += 1, R7810 += 1, R7748 += 1 };
  s1 -> s1 [0, 65535] { R7886 += 1, R7810 += 1 };
  s1 -> s4 [0, 65535] { R7886 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [70, 65535] { R7886 += 1, R7810 += 1, R7748 += 1 };
  s2 -> s1 [0, 66] { R7886 += 1, R7810 += 1, R7748 += 1 };
  s2 -> s2 [0, 65535] { R7886 += 1, R7809 += 1, R7810 += 1 };
  s2 -> s3 [0, 65535] { R7886 += 1, R7810 += 1, R7747 += 1, R7748 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [70, 65535] { R7886 += 1, R7810 += 1, R7748 += 1 };
  s3 -> s1 [0, 66] { R7886 += 1, R7810 += 1, R7748 += 1 };
  s3 -> s3 [0, 65535] { R7886 += 1, R7810 += 1, R7747 += 1, R7748 += 1 };
  s3 -> s4 [0, 65535] { R7886 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [70, 65535] { R7886 += 1, R7810 += 1, R7748 += 1 };
  s4 -> s4 [0, 65535] { R7886 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R7888 += 1, R7812 += 1, R7750 += 1, R78 += 1 };
  s0 -> s2 [0, 65535] { R7888 += 1, R7811 += 1, R7812 += 1 };
  s0 -> s0 [0, 65535] { R7887 += 1, R7888 += 1 };
  s0 -> s3 [0, 65535] { R7888 += 1, R7812 += 1, R7749 += 1, R7750 += 1 };
  s1 -> s6 [0, 65535] { R7888 += 1, R7812 += 1 };
  s1 -> s1 [0, 65535] { R7888 += 1, R7812 += 1, R7750 += 1, R78 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R7888 += 1 };
  s2 -> s1 [0, 65535] { R7888 += 1, R7812 += 1, R7750 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R7888 += 1, R7811 += 1, R7812 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R7888 += 1, R7812 += 1, R7749 += 1, R7750 += 1 };
  s3 -> s1 [0, 65535] { R7888 += 1, R7812 += 1, R7750 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R7888 += 1 };
  s3 -> s3 [0, 65535] { R7888 += 1, R7812 += 1, R7749 += 1, R7750 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7888 += 1 };
  s6 -> s6 [0, 65535] { R7888 += 1, R7812 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7888 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s0 -> s2 [0, 65535] { R7890 += 1, R7813 += 1, R7814 += 1 };
  s0 -> s3 [0, 65535] { R7890 += 1, R7814 += 1, R7752 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R7889 += 1, R7890 += 1 };
  s0 -> s4 [0, 65535] { R7890 += 1, R7814 += 1, R7751 += 1, R7752 += 1 };
  s0 -> s1 [71, 65535] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s1 -> s1 [0, 69] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s1 -> s5 [0, 65535] { R7890 += 1 };
  s1 -> s1 [0, 65535] { R7890 += 1, R7814 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s2 -> s1 [0, 69] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s2 -> s2 [0, 65535] { R7890 += 1, R7813 += 1, R7814 += 1 };
  s2 -> s3 [0, 65535] { R7890 += 1, R7814 += 1, R7752 += 1, R80 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R7890 += 1, R7814 += 1, R7751 += 1, R7752 += 1 };
  s2 -> s1 [71, 65535] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s3 -> s1 [0, 69] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s3 -> s3 [0, 65535] { R7890 += 1, R7814 += 1, R7752 += 1, R80 += 1 };
  s3 -> s5 [0, 65535] { R7890 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R7890 += 1, R7814 += 1 };
  s3 -> s1 [71, 65535] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s4 -> s1 [0, 69] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s4 -> s3 [0, 65535] { R7890 += 1, R7814 += 1, R7752 += 1, R80 += 1 };
  s4 -> s5 [0, 65535] { R7890 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R7890 += 1, R7814 += 1, R7751 += 1, R7752 += 1 };
  s4 -> s1 [71, 65535] { R7890 += 1, R7814 += 1, R7752 += 1 };
  s5 -> s5 [0, 65535] { R7890 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R7890 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R7890 += 1, R7814 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R7891 += 1, R7892 += 1 };
  s0 -> s2 [0, 65535] { R7892 += 1, R7815 += 1, R7816 += 1 };
  s0 -> s3 [0, 65535] { R7892 += 1, R7816 += 1, R7754 += 1, R83 += 1, R84 += 1 };
  s0 -> s4 [0, 65535] { R7892 += 1, R7816 += 1, R7753 += 1, R7754 += 1 };
  s0 -> s1 [71, 65535] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7892 += 1, R7816 += 1, R7754 += 1 };
  s1 -> s6 [0, 65535] { R7892 += 1 };
  s1 -> s7 [0, 65535] { R7892 += 1, R7816 += 1 };
  s1 -> s1 [71, 65535] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R7892 += 1, R7815 += 1, R7816 += 1 };
  s2 -> s3 [0, 65535] { R7892 += 1, R7816 += 1, R7754 += 1, R83 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R7892 += 1, R7816 += 1, R7753 += 1, R7754 += 1 };
  s2 -> s1 [71, 65535] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7892 += 1 };
  s3 -> s3 [0, 65535] { R7892 += 1, R7816 += 1, R7754 += 1, R83 += 1, R84 += 1 };
  s3 -> s7 [0, 65535] { R7892 += 1, R7816 += 1 };
  s3 -> s1 [71, 65535] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R7892 += 1 };
  s4 -> s3 [0, 65535] { R7892 += 1, R7816 += 1, R7754 += 1, R83 += 1, R84 += 1 };
  s4 -> s4 [0, 65535] { R7892 += 1, R7816 += 1, R7753 += 1, R7754 += 1 };
  s4 -> s1 [71, 65535] { R7892 += 1, R7816 += 1, R7754 += 1, R84 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7892 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7892 += 1 };
  s7 -> s7 [0, 65535] { R7892 += 1, R7816 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R7894 += 1, R7818 += 1, R7755 += 1, R7756 += 1 };
  s0 -> s2 [0, 65535] { R7894 += 1, R7818 += 1, R7756 += 1 };
  s0 -> s3 [0, 65535] { R7894 += 1, R7818 += 1, R7756 += 1, R6641 += 1, R6642 += 1 };
  s0 -> s4 [0, 65535] { R7894 += 1, R7817 += 1, R7818 += 1 };
  s0 -> s0 [0, 65535] { R7893 += 1, R7894 += 1 };
  s1 -> s1 [0, 65535] { R7894 += 1, R7818 += 1, R7755 += 1, R7756 += 1 };
  s1 -> s2 [0, 65535] { R7894 += 1, R7818 += 1, R7756 += 1 };
  s1 -> s3 [0, 65535] { R7894 += 1, R7818 += 1, R7756 += 1, R6641 += 1, R6642 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R7894 += 1 };
  s2 -> s2 [0, 65535] { R7894 += 1, R7818 += 1, R7756 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R7894 += 1, R7818 += 1 };
  s2 -> s7 [0, 65535] { R7894 += 1 };
  s3 -> s2 [0, 65535] { R7894 += 1, R7818 += 1, R7756 += 1 };
  s3 -> s3 [0, 65535] { R7894 += 1, R7818 += 1, R7756 += 1, R6641 += 1, R6642 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R7894 += 1, R7818 += 1 };
  s3 -> s7 [0, 65535] { R7894 += 1 };
  s4 -> s1 [0, 65535] { R7894 += 1, R7818 += 1, R7755 += 1, R7756 += 1 };
  s4 -> s2 [0, 65535] { R7894 += 1, R7818 += 1, R7756 += 1 };
  s4 -> s3 [0, 65535] { R7894 += 1, R7818 += 1, R7756 += 1, R6641 += 1, R6642 += 1 };
  s4 -> s4 [0, 65535] { R7894 += 1, R7817 += 1, R7818 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7894 += 1, R7818 += 1 };
  s6 -> s7 [0, 65535] { R7894 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R7894 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R7896 += 1, R7820 += 1, R7758 += 1, R6646 += 1 };
  s0 -> s2 [0, 65535] { R7896 += 1, R7820 += 1, R7757 += 1, R7758 += 1 };
  s0 -> s0 [0, 65535] { R7895 += 1, R7896 += 1 };
  s0 -> s3 [0, 65535] { R7896 += 1, R7819 += 1, R7820 += 1 };
  s0 -> s1 [0, 65535] { R7896 += 1, R7820 += 1, R7758 += 1 };
  s0 -> s1 [74, 65535] { R7896 += 1, R7820 += 1, R7758 += 1, R6646 += 1 };
  s1 -> s1 [0, 70] { R7896 += 1, R7820 += 1, R7758 += 1, R6646 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R7896 += 1 };
  s1 -> s1 [0, 65535] { R7896 += 1, R7820 += 1, R7758 += 1 };
  s1 -> s6 [0, 65535] { R7896 += 1, R7820 += 1 };
  s1 -> s1 [74, 65535] { R7896 += 1, R7820 += 1, R7758 += 1, R6646 += 1 };
  s2 -> s1 [0, 70] { R7896 += 1, R7820 += 1, R7758 += 1, R6646 += 1 };
  s2 -> s2 [0, 65535] { R7896 += 1, R7820 += 1, R7757 += 1, R7758 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R7896 += 1 };
  s2 -> s1 [0, 65535] { R7896 += 1, R7820 += 1, R7758 += 1 };
  s2 -> s1 [74, 65535] { R7896 += 1, R7820 += 1, R7758 += 1, R6646 += 1 };
  s3 -> s1 [0, 70] { R7896 += 1, R7820 += 1, R7758 += 1, R6646 += 1 };
  s3 -> s2 [0, 65535] { R7896 += 1, R7820 += 1, R7757 += 1, R7758 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R7896 += 1, R7819 += 1, R7820 += 1 };
  s3 -> s1 [0, 65535] { R7896 += 1, R7820 += 1, R7758 += 1 };
  s3 -> s1 [74, 65535] { R7896 += 1, R7820 += 1, R7758 += 1, R6646 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R7896 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R7896 += 1 };
  s6 -> s6 [0, 65535] { R7896 += 1, R7820 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R7898 += 1, R7822 += 1, R7760 += 1, R7377 += 1, R7378 += 1 };
  s0 -> s2 [0, 65535] { R7898 += 1, R7822 += 1, R7760 += 1 };
  s0 -> s0 [0, 65535] { R7897 += 1, R7898 += 1 };
  s0 -> s3 [0, 65535] { R7898 += 1, R7822 += 1, R7759 += 1, R7760 += 1 };
  s0 -> s4 [0, 65535] { R7898 += 1, R7821 += 1, R7822 += 1 };
  s1 -> s1 [0, 65535] { R7898 += 1, R7822 += 1, R7760 += 1, R7377 += 1, R7378 += 1 };
  s1 -> s2 [0, 65535] { R7898 += 1, R7822 += 1, R7760 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R7898 += 1 };
  s1 -> s7 [0, 65535] { R7898 += 1, R7822 += 1 };
  s2 -> s2 [0, 65535] { R7898 += 1, R7822 += 1, R7760 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R7898 += 1 };
  s2 -> s7 [0, 65535] { R7898 += 1, R7822 += 1 };
  s3 -> s1 [0, 65535] { R7898 += 1, R7822 += 1, R7760 += 1, R7377 += 1, R7378 += 1 };
  s3 -> s2 [0, 65535] { R7898 += 1, R7822 += 1, R7760 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R7898 += 1, R7822 += 1, R7759 += 1, R7760 += 1 };
  s3 -> s6 [0, 65535] { R7898 += 1 };
  s4 -> s1 [0, 65535] { R7898 += 1, R7822 += 1, R7760 += 1, R7377 += 1, R7378 += 1 };
  s4 -> s2 [0, 65535] { R7898 += 1, R7822 += 1, R7760 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R7898 += 1, R7822 += 1, R7759 += 1, R7760 += 1 };
  s4 -> s4 [0, 65535] { R7898 += 1, R7821 += 1, R7822 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7898 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R7898 += 1 };
  s7 -> s7 [0, 65535] { R7898 += 1, R7822 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 70] { R7900 += 1, R7824 += 1, R7762 += 1, R7742 += 1 };
  s0 -> s1 [0, 65535] { R7900 += 1, R7824 += 1, R7762 += 1 };
  s0 -> s2 [0, 65535] { R7900 += 1, R7823 += 1, R7824 += 1 };
  s0 -> s3 [0, 65535] { R7900 += 1, R7824 += 1, R7761 += 1, R7762 += 1 };
  s0 -> s0 [0, 65535] { R7899 += 1, R7900 += 1 };
  s0 -> s1 [75, 65535] { R7900 += 1, R7824 += 1, R7762 += 1, R7742 += 1 };
  s1 -> s1 [0, 70] { R7900 += 1, R7824 += 1, R7762 += 1, R7742 += 1 };
  s1 -> s1 [0, 65535] { R7900 += 1, R7824 += 1, R7762 += 1 };
  s1 -> s4 [0, 65535] { R7900 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R7900 += 1, R7824 += 1 };
  s1 -> s1 [75, 65535] { R7900 += 1, R7824 += 1, R7762 += 1, R7742 += 1 };
  s2 -> s1 [0, 70] { R7900 += 1, R7824 += 1, R7762 += 1, R7742 += 1 };
  s2 -> s1 [0, 65535] { R7900 += 1, R7824 += 1, R7762 += 1 };
  s2 -> s2 [0, 65535] { R7900 += 1, R7823 += 1, R7824 += 1 };
  s2 -> s3 [0, 65535] { R7900 += 1, R7824 += 1, R7761 += 1, R7762 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [75, 65535] { R7900 += 1, R7824 += 1, R7762 += 1, R7742 += 1 };
  s3 -> s1 [0, 70] { R7900 += 1, R7824 += 1, R7762 += 1, R7742 += 1 };
  s3 -> s1 [0, 65535] { R7900 += 1, R7824 += 1, R7762 += 1 };
  s3 -> s3 [0, 65535] { R7900 += 1, R7824 += 1, R7761 += 1, R7762 += 1 };
  s3 -> s4 [0, 65535] { R7900 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [75, 65535] { R7900 += 1, R7824 += 1, R7762 += 1, R7742 += 1 };
  s4 -> s4 [0, 65535] { R7900 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R7900 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R7900 += 1, R7824 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R7901 += 1, R7902 += 1 };
  s0 -> s1 [0, 65535] { R7902 += 1, R7826 += 1, R7782 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R7902 += 1, R7825 += 1, R7826 += 1 };
  s0 -> s3 [0, 65535] { R7902 += 1, R7826 += 1, R7781 += 1, R7782 += 1 };
  s1 -> s4 [0, 65535] { R7902 += 1 };
  s1 -> s6 [0, 65535] { R7902 += 1, R7826 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R7902 += 1, R7826 += 1, R7782 += 1, R21 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R7902 += 1, R7826 += 1, R7782 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R7902 += 1, R7825 += 1, R7826 += 1 };
  s2 -> s3 [0, 65535] { R7902 += 1, R7826 += 1, R7781 += 1, R7782 += 1 };
  s3 -> s4 [0, 65535] { R7902 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R7902 += 1, R7826 += 1, R7782 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R7902 += 1, R7826 += 1, R7781 += 1, R7782 += 1 };
  s4 -> s4 [0, 65535] { R7902 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R7902 += 1 };
  s6 -> s6 [0, 65535] { R7902 += 1, R7826 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s0 -> s2 [0, 65535] { R7904 += 1, R7828 += 1, R7783 += 1, R7784 += 1 };
  s0 -> s3 [0, 65535] { R7904 += 1, R7827 += 1, R7828 += 1 };
  s0 -> s0 [0, 65535] { R7903 += 1, R7904 += 1 };
  s0 -> s4 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s0 -> s5 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s0 -> s6 [70, 70] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s0 -> s1 [71, 65535] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s1 -> s1 [0, 65] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s1 -> s4 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s1 -> s5 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s1 -> s6 [70, 70] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s1 -> s1 [71, 65535] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s2 -> s1 [0, 65] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s2 -> s2 [0, 65535] { R7904 += 1, R7828 += 1, R7783 += 1, R7784 += 1 };
  s2 -> s4 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s2 -> s5 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s2 -> s6 [70, 70] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s2 -> s1 [71, 65535] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s3 -> s1 [0, 65] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s3 -> s2 [0, 65535] { R7904 += 1, R7828 += 1, R7783 += 1, R7784 += 1 };
  s3 -> s3 [0, 65535] { R7904 += 1, R7827 += 1, R7828 += 1 };
  s3 -> s4 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s3 -> s5 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s3 -> s6 [70, 70] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s3 -> s1 [71, 65535] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s5 -> s5 [0, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s5 -> s9 [70, 70] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s5 -> s5 [71, 65535] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s6 -> s6 [0, 65] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R7904 += 1 };
  s6 -> s6 [0, 65535] { R7904 += 1, R7828 += 1 };
  s6 -> s9 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s6 -> s10 [66, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s6 -> s6 [70, 65535] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R7904 += 1 };
  s9 -> s9 [0, 66] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R7904 += 1 };
  s9 -> s9 [0, 65535] { R7904 += 1, R7828 += 1 };
  s9 -> s9 [70, 65535] { R7904 += 1, R7828 += 1, R7784 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R7904 += 1 };
  s10 -> s10 [0, 65535] { R7904 += 1, R7828 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R7906 += 1, R7829 += 1, R7830 += 1 };
  s0 -> s0 [0, 65535] { R7905 += 1, R7906 += 1 };
  s0 -> s3 [0, 65535] { R7906 += 1, R7830 += 1, R7785 += 1, R7786 += 1 };
  s0 -> s4 [66, 66] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s1 -> s1 [0, 65535] { R7906 += 1, R7830 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R7906 += 1 };
  s1 -> s4 [66, 66] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R7906 += 1, R7829 += 1, R7830 += 1 };
  s2 -> s3 [0, 65535] { R7906 += 1, R7830 += 1, R7785 += 1, R7786 += 1 };
  s2 -> s4 [66, 66] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R7906 += 1 };
  s3 -> s3 [0, 65535] { R7906 += 1, R7830 += 1, R7785 += 1, R7786 += 1 };
  s3 -> s4 [66, 66] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R7906 += 1 };
  s4 -> s4 [0, 65535] { R7906 += 1, R7830 += 1 };
  s5 -> s6 [0, 65535] { R7906 += 1, R7830 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R7906 += 1 };
  s5 -> s5 [0, 65535] { R7906 += 1, R7830 += 1, R7786 += 1, R77 += 1 };
  s6 -> s6 [0, 65535] { R7906 += 1, R7830 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R7906 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R7906 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R7908 += 1, R7831 += 1, R7832 += 1 };
  s0 -> s0 [0, 65535] { R7907 += 1, R7908 += 1 };
  s0 -> s3 [0, 65535] { R7908 += 1, R7832 += 1, R7787 += 1, R7788 += 1 };
  s0 -> s4 [66, 66] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s1 -> s7 [0, 65535] { R7908 += 1 };
  s1 -> s1 [0, 65535] { R7908 += 1, R7832 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [66, 66] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R7908 += 1, R7831 += 1, R7832 += 1 };
  s2 -> s3 [0, 65535] { R7908 += 1, R7832 += 1, R7787 += 1, R7788 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [66, 66] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s3 -> s3 [0, 65535] { R7908 += 1, R7832 += 1, R7787 += 1, R7788 += 1 };
  s3 -> s7 [0, 65535] { R7908 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [66, 66] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R7908 += 1, R7832 += 1 };
  s4 -> s7 [0, 65535] { R7908 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R7908 += 1, R7832 += 1 };
  s5 -> s7 [0, 65535] { R7908 += 1 };
  s5 -> s5 [0, 65535] { R7908 += 1, R7832 += 1, R7788 += 1, R79 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R7908 += 1, R7832 += 1 };
  s6 -> s7 [0, 65535] { R7908 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R7908 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R7910 += 1, R7834 += 1, R7789 += 1, R7790 += 1 };
  s0 -> s0 [0, 65535] { R7909 += 1, R7910 += 1 };
  s0 -> s3 [0, 65535] { R7910 += 1, R7833 += 1, R7834 += 1 };
  s0 -> s4 [66, 66] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s1 -> s7 [0, 65535] { R7910 += 1 };
  s1 -> s1 [0, 65535] { R7910 += 1, R7834 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [66, 66] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R7910 += 1, R7834 += 1, R7789 += 1, R7790 += 1 };
  s2 -> s7 [0, 65535] { R7910 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [66, 66] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s3 -> s2 [0, 65535] { R7910 += 1, R7834 += 1, R7789 += 1, R7790 += 1 };
  s3 -> s3 [0, 65535] { R7910 += 1, R7833 += 1, R7834 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [66, 66] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535] { R7910 += 1, R7834 += 1 };
  s4 -> s7 [0, 65535] { R7910 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R7910 += 1, R7834 += 1 };
  s5 -> s7 [0, 65535] { R7910 += 1 };
  s5 -> s5 [0, 65535] { R7910 += 1, R7834 += 1, R7790 += 1, R81 += 1, R82 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R7910 += 1, R7834 += 1 };
  s6 -> s7 [0, 65535] { R7910 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R7910 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s2 [0, 65] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s3 [0, 65535] { R7912 += 1, R7835 += 1, R7836 += 1 };
  s0 -> s4 [0, 65535] { R7912 += 1, R7836 += 1, R7791 += 1, R7792 += 1 };
  s0 -> s0 [0, 65535] { R7911 += 1, R7912 += 1 };
  s0 -> s5 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s6 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s7 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s8 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s1 [67, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s2 [67, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s1 [0, 65] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s1 [0, 65535] { R7912 += 1, R7836 += 1 };
  s1 -> s9 [0, 65535] { R7912 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s7 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s8 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s1 [67, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s1 [0, 65] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [0, 65] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s5 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s6 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s7 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s8 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s1 [67, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [67, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s1 [0, 65] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s2 [0, 65] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s3 [0, 65535] { R7912 += 1, R7835 += 1, R7836 += 1 };
  s3 -> s4 [0, 65535] { R7912 += 1, R7836 += 1, R7791 += 1, R7792 += 1 };
  s3 -> s5 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s6 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s7 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s8 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s1 [67, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s2 [67, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s1 [0, 65] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s2 [0, 65] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s4 [0, 65535] { R7912 += 1, R7836 += 1, R7791 += 1, R7792 += 1 };
  s4 -> s5 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s6 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s7 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s8 [66, 66] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s1 [67, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s2 [67, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s5 -> s5 [0, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6637 += 1, R6638 += 1 };
  s5 -> s7 [0, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s7 -> s7 [0, 65535] { R7912 += 1, R7836 += 1, R7792 += 1, R6638 += 1, R6639 += 1 };
  s7 -> s9 [0, 65535] { R7912 += 1 };
  s7 -> s10 [0, 65535];
  s7 -> s11 [0, 65535] { R7912 += 1, R7836 += 1 };
  s8 -> s8 [0, 65535] { R7912 += 1, R7836 += 1 };
  s8 -> s9 [0, 65535] { R7912 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R7912 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  s11 -> s9 [0, 65535] { R7912 += 1 };
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R7912 += 1, R7836 += 1 };
  accepting s8, s9, s1, s7, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s0 -> s2 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s0 -> s3 [0, 65535] { R7914 += 1, R7838 += 1, R7793 += 1, R7794 += 1 };
  s0 -> s0 [0, 65535] { R7913 += 1, R7914 += 1 };
  s0 -> s4 [0, 65535] { R7914 += 1, R7837 += 1, R7838 += 1 };
  s0 -> s5 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s0 -> s6 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s0 -> s7 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s0 -> s8 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s0 -> s2 [67, 70] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s0 -> s1 [67, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s0 -> s9 [74, 74] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s0 -> s2 [75, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s1 -> s1 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s1 -> s2 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s1 -> s5 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s1 -> s6 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s1 -> s7 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s1 -> s8 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s1 -> s2 [67, 70] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s1 -> s1 [67, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s1 -> s9 [74, 74] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s1 -> s2 [75, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s2 -> s2 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s2 -> s5 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s2 -> s7 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s2 -> s2 [67, 70] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s2 -> s9 [74, 74] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s2 -> s2 [75, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s3 -> s1 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s3 -> s2 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s3 -> s3 [0, 65535] { R7914 += 1, R7838 += 1, R7793 += 1, R7794 += 1 };
  s3 -> s5 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s3 -> s6 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s3 -> s7 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s3 -> s8 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s3 -> s2 [67, 70] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s3 -> s1 [67, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s3 -> s9 [74, 74] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s3 -> s2 [75, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s4 -> s1 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s4 -> s2 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s4 -> s3 [0, 65535] { R7914 += 1, R7838 += 1, R7793 += 1, R7794 += 1 };
  s4 -> s4 [0, 65535] { R7914 += 1, R7837 += 1, R7838 += 1 };
  s4 -> s5 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s4 -> s6 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s4 -> s7 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s4 -> s8 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s4 -> s2 [67, 70] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s4 -> s1 [67, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s4 -> s9 [74, 74] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s4 -> s2 [75, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s5 -> s5 [0, 70] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s5 -> s12 [74, 74] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s5 -> s5 [75, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s8 -> s5 [0, 70] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s8 -> s8 [0, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6643 += 1, R6644 += 1 };
  s8 -> s12 [74, 74] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s8 -> s5 [75, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s9 -> s9 [0, 65] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s9 -> s9 [0, 65535] { R7914 += 1, R7838 += 1 };
  s9 -> s10 [0, 65535] { R7914 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1 };
  s9 -> s13 [66, 66] { R7914 += 1, R7838 += 1, R7794 += 1 };
  s9 -> s9 [67, 70] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s9 -> s9 [67, 65535] { R7914 += 1, R7838 += 1, R7794 += 1 };
  s9 -> s9 [74, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s10 -> s10 [0, 65535] { R7914 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 70] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s12 -> s12 [0, 65535] { R7914 += 1, R7838 += 1, R7794 += 1 };
  s12 -> s10 [0, 65535] { R7914 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s14 [0, 65535] { R7914 += 1, R7838 += 1 };
  s12 -> s12 [74, 65535] { R7914 += 1, R7838 += 1, R7794 += 1, R6644 += 1 };
  s13 -> s13 [0, 65535] { R7914 += 1, R7838 += 1 };
  s13 -> s10 [0, 65535] { R7914 += 1 };
  s13 -> s11 [0, 65535];
  s14 -> s10 [0, 65535] { R7914 += 1 };
  s14 -> s11 [0, 65535];
  s14 -> s14 [0, 65535] { R7914 += 1, R7838 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s0 -> s2 [0, 65] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s0 -> s3 [0, 65535] { R7916 += 1, R7839 += 1, R7840 += 1 };
  s0 -> s4 [0, 65535] { R7916 += 1, R7840 += 1, R7795 += 1, R7796 += 1 };
  s0 -> s0 [0, 65535] { R7915 += 1, R7916 += 1 };
  s0 -> s5 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s0 -> s6 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s0 -> s7 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s0 -> s8 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s0 -> s1 [67, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s0 -> s2 [67, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s1 -> s1 [0, 65] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s1 -> s2 [0, 65] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s1 -> s5 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s1 -> s6 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s1 -> s7 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s1 -> s8 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s1 -> s1 [67, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s1 -> s2 [67, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s2 -> s2 [0, 65] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s2 [0, 65535] { R7916 += 1, R7840 += 1 };
  s2 -> s11 [0, 65535] { R7916 += 1 };
  s2 -> s5 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s2 -> s6 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s2 -> s2 [67, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s3 -> s1 [0, 65] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s3 -> s2 [0, 65] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s3 -> s3 [0, 65535] { R7916 += 1, R7839 += 1, R7840 += 1 };
  s3 -> s4 [0, 65535] { R7916 += 1, R7840 += 1, R7795 += 1, R7796 += 1 };
  s3 -> s5 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s3 -> s6 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s3 -> s7 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s3 -> s8 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s3 -> s1 [67, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s3 -> s2 [67, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s4 -> s1 [0, 65] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s4 -> s2 [0, 65] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s4 -> s4 [0, 65535] { R7916 += 1, R7840 += 1, R7795 += 1, R7796 += 1 };
  s4 -> s5 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s4 -> s6 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s4 -> s7 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s4 -> s8 [66, 66] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s4 -> s1 [67, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s4 -> s2 [67, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s5 -> s5 [0, 65535] { R7916 += 1, R7840 += 1 };
  s5 -> s10 [0, 65535];
  s5 -> s11 [0, 65535] { R7916 += 1 };
  s6 -> s9 [0, 65535] { R7916 += 1, R7840 += 1 };
  s6 -> s6 [0, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s11 [0, 65535] { R7916 += 1 };
  s8 -> s6 [0, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7374 += 1, R7375 += 1 };
  s8 -> s8 [0, 65535] { R7916 += 1, R7840 += 1, R7796 += 1, R7373 += 1, R7374 += 1 };
  s9 -> s9 [0, 65535] { R7916 += 1, R7840 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R7916 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R7916 += 1 };
  accepting s5, s2, s9, s6, s10, s11;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s0 -> s2 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s0 -> s0 [0, 65535] { R7917 += 1, R7918 += 1 };
  s0 -> s3 [0, 65535] { R7918 += 1, R7842 += 1, R7797 += 1, R7798 += 1 };
  s0 -> s4 [0, 65535] { R7918 += 1, R7841 += 1, R7842 += 1 };
  s0 -> s5 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s0 -> s6 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s0 -> s7 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s0 -> s8 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s0 -> s2 [67, 69] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s0 -> s1 [67, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s0 -> s9 [70, 70] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s0 -> s2 [75, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s1 -> s1 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s1 -> s2 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s1 -> s5 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s1 -> s6 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s1 -> s7 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s1 -> s8 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s1 -> s2 [67, 69] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s1 -> s1 [67, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s1 -> s9 [70, 70] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s1 -> s2 [75, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s2 -> s2 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s2 -> s5 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1 };
  s2 -> s6 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1 };
  s2 -> s2 [67, 69] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s2 -> s2 [67, 65535] { R7918 += 1, R7842 += 1, R7798 += 1 };
  s2 -> s9 [70, 70] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s2 -> s2 [75, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s3 -> s1 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s3 -> s2 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s3 -> s3 [0, 65535] { R7918 += 1, R7842 += 1, R7797 += 1, R7798 += 1 };
  s3 -> s5 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s3 -> s6 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s3 -> s7 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s3 -> s8 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s3 -> s2 [67, 69] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s3 -> s1 [67, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s3 -> s9 [70, 70] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s3 -> s2 [75, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s4 -> s1 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s4 -> s2 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s4 -> s3 [0, 65535] { R7918 += 1, R7842 += 1, R7797 += 1, R7798 += 1 };
  s4 -> s4 [0, 65535] { R7918 += 1, R7841 += 1, R7842 += 1 };
  s4 -> s5 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s4 -> s6 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s4 -> s7 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s4 -> s8 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s4 -> s2 [67, 69] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s4 -> s1 [67, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s4 -> s9 [70, 70] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s4 -> s2 [75, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s6 -> s6 [0, 69] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s6 -> s6 [0, 65535] { R7918 += 1, R7842 += 1, R7798 += 1 };
  s6 -> s12 [70, 70] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s6 -> s6 [75, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s7 -> s6 [0, 69] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s7 -> s7 [0, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7739 += 1, R7740 += 1 };
  s7 -> s12 [70, 70] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s7 -> s6 [75, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s9 -> s9 [0, 65] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R7918 += 1, R7842 += 1 };
  s9 -> s11 [0, 65535] { R7918 += 1 };
  s9 -> s12 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1 };
  s9 -> s13 [66, 66] { R7918 += 1, R7842 += 1, R7798 += 1 };
  s9 -> s9 [67, 70] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s9 -> s9 [67, 65535] { R7918 += 1, R7842 += 1, R7798 += 1 };
  s9 -> s9 [75, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R7918 += 1 };
  s12 -> s12 [0, 70] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R7918 += 1, R7842 += 1, R7798 += 1 };
  s12 -> s11 [0, 65535] { R7918 += 1 };
  s12 -> s14 [0, 65535] { R7918 += 1, R7842 += 1 };
  s12 -> s12 [75, 65535] { R7918 += 1, R7842 += 1, R7798 += 1, R7740 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R7918 += 1 };
  s13 -> s13 [0, 65535] { R7918 += 1, R7842 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R7918 += 1 };
  s14 -> s14 [0, 65535] { R7918 += 1, R7842 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R7842 && R3 - R7918 = 1 && R23 - R7842 = -1 && R24 = R7842 && R25 - R7842 = -1 && R26 = R7842 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R7918 && R32 - R7918 = 1 && R33 = R7918 && R34 - R7918 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R6646 + -1*R6644 - R64 = 0 && R63 + R6645 + R6643 = 0 && R7783 = 0 && R7784 = 0 && R7791 = 0 && R7792 = 0 && R7793 = 0 && R7794 = 0 && R7795 = 0 && R7796 = 0 && R7797 = 0 && R7798 = 0 && R7799 = 0 && R7800 = R7842 && R7801 = 0 && R7802 = R7842 && R7803 = 0 && R7804 = R7842 && R7805 = 0 && R7806 = R7842 && R7807 = 0 && R7808 = R7842 && R7809 = 0 && R7810 = R7842 && R7811 = 0 && R7812 = R7842 && R7813 = 0 && R7814 = R7842 && R7815 = 0 && R7816 = R7842 && R7817 = 0 && R7818 = R7842 && R7819 = 0 && R7820 = R7842 && R7821 = 0 && R7822 = R7842 && R7823 = 0 && R7824 = R7842 && R7825 = 0 && R7826 = R7842 && R7827 = 0 && R7828 = R7842 && R7829 = 0 && R7830 = R7842 && R7831 = 0 && R7832 = R7842 && R7833 = 0 && R7834 = R7842 && R7835 = 0 && R7836 = R7842 && R7837 = 0 && R7838 = R7842 && R7839 = 0 && R7840 = R7842 && R7841 = 0 && R7843 = 0 && R7844 = R7918 && R7845 = 0 && R7846 = R7918 && R7847 = 0 && R7848 = R7918 && R7849 = 0 && R7850 = R7918 && R7851 = 0 && R7852 = R7918 && R7853 = 0 && R7854 = R7918 && R7855 = 0 && R7856 = R7918 && R7857 = 0 && R7858 = R7918 && R7859 = 0 && R7860 = R7918 && R7861 = 0 && R7862 = R7918 && R7863 = 0 && R7864 = R7918 && R7865 = 0 && R7866 = R7918 && R7867 = 0 && R7868 = R7918 && R7869 = 0 && R7870 = R7918 && R7871 = 0 && R7872 = R7918 && R7873 = 0 && R7874 = R7918 && R7875 = 0 && R7876 = R7918 && R7877 = 0 && R7878 = R7918 && R7879 = 0 && R7880 = R7918 && R7881 = 0 && R7882 = R7918 && R7883 = 0 && R7884 = R7918 && R7885 = 0 && R7886 = R7918 && R7887 = 0 && R7888 = R7918 && R7889 = 0 && R7890 = R7918 && R7891 = 0 && R7892 = R7918 && R7893 = 0 && R7894 = R7918 && R7895 = 0 && R7896 = R7918 && R7897 = 0 && R7898 = R7918 && R7899 = 0 && R7900 = R7918 && R7901 = 0 && R7902 = R7918 && R7903 = 0 && R7904 = R7918 && R7905 = 0 && R7906 = R7918 && R7907 = 0 && R7908 = R7918 && R7909 = 0 && R7910 = R7918 && R7911 = 0 && R7912 = R7918 && R7913 = 0 && R7914 = R7918 && R7915 = 0 && R7916 = R7918 && R7917 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R6646 + -1*R6644 - R64 < 1 && 0 < R7842 && -1 < R7918 && (R1 != 0 || R20 = 0 || (R7743 = 0 && R7744 = 0)) && (R1 != 0 || R20 = 0 || (R7745 = 0 && R7746 = 0)) && (R1 != 0 || R20 = 0 || (R7747 = 0 && R7748 = 0)) && (R1 != 0 || R20 = 0 || (R7749 = 0 && R7750 = 0)) && (R1 != 0 || R20 = 0 || (R7751 = 0 && R7752 = 0)) && (R1 != 0 || R20 = 0 || (R7753 = 0 && R7754 = 0)) && (R1 != 0 || R20 = 0 || (R7755 = 0 && R7756 = 0)) && (R1 != 0 || R20 = 0 || (R7757 = 0 && R7758 = 0)) && (R1 != 0 || R20 = 0 || (R7759 = 0 && R7760 = 0)) && (R1 != 0 || R20 = 0 || (R7761 = 0 && R7762 = 0)) && (R59 + R6642 + R6639 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R6646 + -1*R6644 - R64 = 0 || R64 + R6646 + R6644 < 1) && (R53 + R83 + R81 = 0 || R64 + R6646 + R6644 < 1))) && (R59 + R6642 + R6639 != 0 || ((R57 + R6640 + R6637 != 0 || R58 + R6641 + R6638 + -1*R6646 + -1*R6644 - R64 = 0 || R64 + R6646 + R6644 < 1) && (R57 + R6640 + R6637 = 0 || R64 + R6646 + R6644 < 1))) && (R7743 != 0 || R1 = R7744 || R1 < 1) && (R7745 != 0 || R1 = R7746 || R1 < 1) && (R7747 != 0 || R1 = R7748 || R1 < 1) && (R7749 != 0 || R1 = R7750 || R1 < 1) && (R7751 != 0 || R1 = R7752 || R1 < 1) && (R7753 != 0 || R1 = R7754 || R1 < 1) && (R7755 != 0 || R1 = R7756 || R1 < 1) && (R7757 != 0 || R1 = R7758 || R1 < 1) && (R7759 != 0 || R1 = R7760 || R1 < 1) && (R7761 != 0 || R1 = R7762 || R1 < 1) && (R21 = 0 || (R7781 = 0 && R7782 = 0)) && (R21 = 0 || (R7785 = 0 && R7786 = 0)) && (R21 = 0 || (R7787 = 0 && R7788 = 0)) && (R21 = 0 || (R7789 = 0 && R7790 = 0)) && (R22 = 0 || (R7763 = 0 && R7764 = 0)) && (R22 = 0 || (R7765 = 0 && R7766 = 0)) && (R22 = 0 || (R7767 = 0 && R7768 = 0)) && (R22 = 0 || (R7769 = 0 && R7770 = 0)) && (R22 = 0 || (R7771 = 0 && R7772 = 0)) && (R22 = 0 || (R7773 = 0 && R7774 = 0)) && (R22 = 0 || (R7775 = 0 && R7776 = 0)) && (R22 = 0 || (R7777 = 0 && R7778 = 0)) && (R22 = 0 || (R7779 = 0 && R7780 = 0)) && (R59 + R6642 + R6639 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R6646 + -1*R6644 - R64 = 0)) && (R59 + R6642 + R6639 = 0 || (R57 + R6640 + R6637 = 0 && R58 + R6641 + R6638 + -1*R6646 + -1*R6644 - R64 = 0)) && (R69 + R7378 + R7375 = 0 || (R67 + R7376 + R7373 = 0 && R68 + R7377 + R7374 = 0)) && (R69 + R7378 + R7375 = 0 || (R73 + R7741 + R7739 = 0 && R74 + R7742 + R7740 = 0)) && (R7743 = 0 || R1 < 1) && (R7745 = 0 || R1 < 1) && (R7747 = 0 || R1 < 1) && (R7749 = 0 || R1 < 1) && (R7751 = 0 || R1 < 1) && (R7753 = 0 || R1 < 1) && (R7755 = 0 || R1 < 1) && (R7757 = 0 || R1 < 1) && (R7759 = 0 || R1 < 1) && (R7761 = 0 || R1 < 1);
// End of Parikh automata intersection problem
