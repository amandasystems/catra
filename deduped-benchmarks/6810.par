// Parikh automata intersection problem, generated by OSTRICH+
counter int R1330, R1331, R1332, R1333, R1334, R1335, R1336, R1337, R1338, R1339, R1340, R1341, R1342, R1343, R1344, R1345, R1346, R1347, R1348, R1349, R1350, R1351, R1352, R1353, R1354, R1355, R1356, R1357, R1358, R1359, R1360, R1361, R1362, R1363, R1364, R1365, R1366, R1367, R1368, R1369, R1370, R1371, R1372, R1373, R1374, R1375, R1376, R1377, R1378, R1379, R1380, R1381, R1382, R1383, R1384, R1385, R1386, R1387, R1388, R1389, R1390, R1391, R1392, R1393, R1394, R1395, R1396, R1397, R1398, R1399, R1400, R1401, R1402, R1403, R1404, R1405, R1406, R1407, R1408, R1409, R1410, R1411, R1412, R1413, R1414, R1415, R1416, R1417, R1418, R1419, R1420, R1421, R1422, R1423, R1424, R1425, R1426, R1427, R1428, R1429, R1430, R1431, R1432, R1433, R1434, R1435, R1436, R1437, R1438, R1439, R1440, R1441, R1442, R1443, R1444, R1445, R1446, R1447, R1448, R1449, R1450, R1451, R1452, R1453, R1454, R1455, R1456, R1457, R1458, R1459, R1460, R1461, R1462, R1463, R1464, R1465, R1466, R1467, R1468, R1469, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R1477, R1478, R1479, R1480, R1481, R1482, R1483, R1484, R1485, R1486, R1487, R1488, R1489, R1490, R1491, R1492, R1493, R1494, R1495, R1496, R1497, R1498, R1499, R18, R21, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R39, R4, R40, R41, R42, R43, R4884, R4885, R4886, R4887, R4888, R4889, R4890, R4891, R4892, R4893, R4894, R4895, R4896, R4897, R4898, R4899, R4900, R4901, R4902, R4903, R4904, R4905, R4906, R4907, R4908, R4909, R4910, R4911, R4912, R4913, R4914, R4915, R4916, R4917, R4918, R4919, R4920, R4921, R4922, R4923, R4924, R4925, R4926, R4927, R4928, R4929, R4930, R4931, R4932, R4933, R4934, R4935, R4936, R4937, R4938, R4939, R4940, R4941, R4942, R4943, R4944, R4945, R4946, R4947, R4948, R4949, R4950, R4951, R4952, R4953, R4954, R4955, R4956, R4957, R4958, R4959, R4960, R4961, R4962, R4963, R4964, R4965, R4966, R4967, R4968, R4969, R4970, R4971, R4972, R4973, R4974, R4975, R4976, R4977, R4978, R4979, R4980, R4981, R4982, R4983, R4984, R4985, R4986, R4987, R4988, R4989, R4990, R4991, R4992, R4993, R4994, R4995, R4996, R4997, R4998, R4999, R5, R5000, R5001, R5002, R5003, R5004, R5005, R5006, R5007, R5008, R5009, R5010, R5011, R5012, R5013, R5014, R5015, R5016, R5017, R5018, R5019, R5020, R5021, R5022, R5023, R5024, R5025, R5026, R5027, R5028, R5029, R5030, R5031, R5032, R5033, R5034, R5035, R5036, R5037, R5038, R5039, R5040, R5041, R5042, R5043, R5044, R5045, R5046, R5047, R5048, R5049, R5050, R5051, R5052, R5053, R5054, R5055, R5056, R5057, R5058, R5059, R5060, R5061, R5062, R5063, R5064, R5065, R5066, R5067, R5068, R5069, R5070, R5071, R5072, R5073, R5074, R5075, R5076, R5077, R5078, R5079, R5080, R5081, R5082, R5083, R5084, R5085, R5086, R5087, R5088, R5089, R5090, R5091, R5092, R5093, R5094, R5095, R5096, R5097, R5098, R5099, R5100, R5101, R5102, R5103, R5104, R5105, R5106, R5107, R5108, R5109, R5110, R5111, R5112, R5113, R5114, R5115, R5116, R5117, R5118, R5119, R5120, R5121, R5122, R5123, R5124, R5125, R5126, R5127, R5128, R5129, R5130, R5131, R5132, R5133, R5134, R5135, R6, R7, R8;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining P44
automaton P44_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s0 -> s1 [9, 9] { R37 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R38 += 1, R39 += 1 };
  s1 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R41 += 1 };
  s0 -> s0 [0, 65535] { R40 += 1, R41 += 1 };
  s0 -> s2 [9, 13] { R41 += 1 };
  s0 -> s1 [14, 31] { R41 += 1 };
  s0 -> s2 [32, 32] { R41 += 1 };
  s0 -> s1 [33, 65535] { R41 += 1 };
  s1 -> s1 [0, 65535] { R41 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R41 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R5017 += 1 };
  s0 -> s0 [0, 65535] { R5016 += 1, R5017 += 1 };
  s0 -> s2 [67, 67] { R5017 += 1 };
  s0 -> s1 [68, 65535] { R5017 += 1 };
  s1 -> s1 [0, 64] { R5017 += 1 };
  s1 -> s2 [67, 67] { R5017 += 1 };
  s1 -> s1 [68, 65535] { R5017 += 1 };
  s2 -> s2 [0, 64] { R5017 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R5017 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R5019 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R5018 += 1, R5019 += 1 };
  s1 -> s1 [0, 65535] { R5019 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R5021 += 1 };
  s0 -> s0 [0, 65535] { R5020 += 1, R5021 += 1 };
  s0 -> s2 [0, 65535] { R5021 += 1, R18 += 1 };
  s0 -> s3 [67, 67] { R5021 += 1 };
  s0 -> s1 [68, 65535] { R5021 += 1 };
  s1 -> s1 [0, 66] { R5021 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R5021 += 1 };
  s1 -> s1 [68, 65535] { R5021 += 1 };
  s2 -> s1 [0, 66] { R5021 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5021 += 1, R18 += 1 };
  s2 -> s3 [67, 67] { R5021 += 1 };
  s2 -> s1 [68, 65535] { R5021 += 1 };
  s3 -> s3 [0, 65535] { R5021 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R5023 += 1, R29 += 1 };
  s0 -> s0 [0, 65535] { R5022 += 1, R5023 += 1 };
  s0 -> s2 [0, 65535] { R5023 += 1, R28 += 1, R29 += 1 };
  s0 -> s3 [9, 13] { R5023 += 1, R29 += 1 };
  s0 -> s1 [14, 31] { R5023 += 1, R29 += 1 };
  s0 -> s3 [32, 32] { R5023 += 1, R29 += 1 };
  s0 -> s1 [33, 65535] { R5023 += 1, R29 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R5023 += 1 };
  s1 -> s1 [0, 65535] { R5023 += 1, R29 += 1 };
  s2 -> s1 [0, 8] { R5023 += 1, R29 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R5023 += 1, R28 += 1, R29 += 1 };
  s2 -> s3 [9, 13] { R5023 += 1, R29 += 1 };
  s2 -> s1 [14, 31] { R5023 += 1, R29 += 1 };
  s2 -> s3 [32, 32] { R5023 += 1, R29 += 1 };
  s2 -> s1 [33, 65535] { R5023 += 1, R29 += 1 };
  s3 -> s1 [0, 65535] { R5023 += 1, R29 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5023 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R5025 += 1, R31 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R5024 += 1, R5025 += 1 };
  s0 -> s2 [0, 65535] { R5025 += 1, R30 += 1, R31 += 1 };
  s1 -> s4 [0, 65535] { R5025 += 1 };
  s1 -> s1 [0, 65535] { R5025 += 1, R31 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5025 += 1, R31 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5025 += 1, R30 += 1, R31 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5025 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R5027 += 1, R33 += 1 };
  s0 -> s2 [0, 65535] { R5027 += 1, R32 += 1, R33 += 1 };
  s0 -> s0 [0, 65535] { R5026 += 1, R5027 += 1 };
  s0 -> s3 [9, 13] { R5027 += 1, R33 += 1 };
  s0 -> s1 [14, 31] { R5027 += 1, R33 += 1 };
  s0 -> s3 [32, 32] { R5027 += 1, R33 += 1 };
  s0 -> s1 [33, 65535] { R5027 += 1, R33 += 1 };
  s1 -> s1 [0, 65535] { R5027 += 1, R33 += 1 };
  s1 -> s5 [0, 65535] { R5027 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R5027 += 1, R33 += 1 };
  s2 -> s2 [0, 65535] { R5027 += 1, R32 += 1, R33 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R5027 += 1, R33 += 1 };
  s2 -> s1 [14, 31] { R5027 += 1, R33 += 1 };
  s2 -> s3 [32, 32] { R5027 += 1, R33 += 1 };
  s2 -> s1 [33, 65535] { R5027 += 1, R33 += 1 };
  s3 -> s1 [0, 65535] { R5027 += 1, R33 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5027 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R5029 += 1, R35 += 1, R6 += 1 };
  s0 -> s2 [0, 65535] { R5029 += 1, R34 += 1, R35 += 1 };
  s0 -> s0 [0, 65535] { R5028 += 1, R5029 += 1 };
  s1 -> s1 [0, 65535] { R5029 += 1, R35 += 1, R6 += 1 };
  s1 -> s4 [0, 65535] { R5029 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5029 += 1, R35 += 1, R6 += 1 };
  s2 -> s2 [0, 65535] { R5029 += 1, R34 += 1, R35 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5029 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R5031 += 1, R4911 += 1 };
  s0 -> s2 [0, 65535] { R5031 += 1, R4910 += 1, R4911 += 1 };
  s0 -> s0 [0, 65535] { R5030 += 1, R5031 += 1 };
  s0 -> s1 [68, 65535] { R5031 += 1, R4911 += 1 };
  s1 -> s1 [0, 66] { R5031 += 1, R4911 += 1 };
  s1 -> s1 [0, 65535] { R5031 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [68, 65535] { R5031 += 1, R4911 += 1 };
  s2 -> s1 [0, 66] { R5031 += 1, R4911 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5031 += 1, R4910 += 1, R4911 += 1 };
  s2 -> s1 [68, 65535] { R5031 += 1, R4911 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R5033 += 1, R4913 += 1, R26 += 1 };
  s0 -> s0 [0, 65535] { R5032 += 1, R5033 += 1 };
  s0 -> s2 [0, 65535] { R5033 += 1, R4912 += 1, R4913 += 1 };
  s1 -> s1 [0, 65535] { R5033 += 1, R4913 += 1, R26 += 1 };
  s1 -> s4 [0, 65535] { R5033 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5033 += 1, R4913 += 1, R26 += 1 };
  s2 -> s2 [0, 65535] { R5033 += 1, R4912 += 1, R4913 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5033 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R5035 += 1, R4915 += 1 };
  s0 -> s0 [0, 65535] { R5034 += 1, R5035 += 1 };
  s0 -> s2 [0, 65535] { R5035 += 1, R4914 += 1, R4915 += 1 };
  s0 -> s1 [70, 65535] { R5035 += 1, R4915 += 1 };
  s1 -> s1 [0, 67] { R5035 += 1, R4915 += 1 };
  s1 -> s1 [0, 65535] { R5035 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [70, 65535] { R5035 += 1, R4915 += 1 };
  s2 -> s1 [0, 67] { R5035 += 1, R4915 += 1 };
  s2 -> s2 [0, 65535] { R5035 += 1, R4914 += 1, R4915 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [70, 65535] { R5035 += 1, R4915 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65535] { R5037 += 1, R4917 += 1, R1331 += 1 };
  s0 -> s2 [0, 65535] { R5037 += 1, R4916 += 1, R4917 += 1 };
  s0 -> s0 [0, 65535] { R5036 += 1, R5037 += 1 };
  s1 -> s1 [0, 65535] { R5037 += 1, R4917 += 1, R1331 += 1 };
  s1 -> s4 [0, 65535] { R5037 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R5037 += 1, R4917 += 1, R1331 += 1 };
  s2 -> s2 [0, 65535] { R5037 += 1, R4916 += 1, R4917 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5037 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R5039 += 1, R4919 += 1 };
  s0 -> s2 [0, 65535] { R5039 += 1, R4919 += 1, R1333 += 1 };
  s0 -> s3 [0, 65535] { R5039 += 1, R4918 += 1, R4919 += 1 };
  s0 -> s0 [0, 65535] { R5038 += 1, R5039 += 1 };
  s0 -> s1 [71, 65535] { R5039 += 1, R4919 += 1 };
  s1 -> s1 [0, 69] { R5039 += 1, R4919 += 1 };
  s1 -> s1 [0, 65535] { R5039 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [71, 65535] { R5039 += 1, R4919 += 1 };
  s2 -> s1 [0, 69] { R5039 += 1, R4919 += 1 };
  s2 -> s2 [0, 65535] { R5039 += 1, R4919 += 1, R1333 += 1 };
  s2 -> s5 [0, 65535] { R5039 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [71, 65535] { R5039 += 1, R4919 += 1 };
  s3 -> s1 [0, 69] { R5039 += 1, R4919 += 1 };
  s3 -> s2 [0, 65535] { R5039 += 1, R4919 += 1, R1333 += 1 };
  s3 -> s3 [0, 65535] { R5039 += 1, R4918 += 1, R4919 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [71, 65535] { R5039 += 1, R4919 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5039 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R5041 += 1, R4920 += 1, R4921 += 1 };
  s0 -> s0 [0, 65535] { R5040 += 1, R5041 += 1 };
  s0 -> s2 [0, 65535] { R5041 += 1, R4921 += 1, R1337 += 1, R1338 += 1 };
  s0 -> s3 [0, 65535] { R5041 += 1, R4921 += 1, R1338 += 1, R1339 += 1 };
  s1 -> s1 [0, 65535] { R5041 += 1, R4920 += 1, R4921 += 1 };
  s1 -> s2 [0, 65535] { R5041 += 1, R4921 += 1, R1337 += 1, R1338 += 1 };
  s1 -> s3 [0, 65535] { R5041 += 1, R4921 += 1, R1338 += 1, R1339 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5041 += 1, R4921 += 1, R1337 += 1, R1338 += 1 };
  s2 -> s3 [0, 65535] { R5041 += 1, R4921 += 1, R1338 += 1, R1339 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R5041 += 1 };
  s3 -> s3 [0, 65535] { R5041 += 1, R4921 += 1, R1338 += 1, R1339 += 1 };
  s3 -> s4 [0, 65535] { R5041 += 1, R4921 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5041 += 1 };
  s4 -> s4 [0, 65535] { R5041 += 1, R4921 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5041 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5041 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s0 -> s2 [0, 65535] { R5043 += 1, R4923 += 1, R1342 += 1, R1343 += 1 };
  s0 -> s0 [0, 65535] { R5042 += 1, R5043 += 1 };
  s0 -> s3 [0, 65535] { R5043 += 1, R4922 += 1, R4923 += 1 };
  s0 -> s4 [70, 70] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s0 -> s5 [70, 70] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s0 -> s1 [77, 65535] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s1 -> s1 [0, 69] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s1 -> s6 [0, 65535] { R5043 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R5043 += 1, R4923 += 1 };
  s1 -> s4 [70, 70] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s1 -> s5 [70, 70] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s1 -> s1 [77, 65535] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s2 -> s1 [0, 69] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s2 -> s2 [0, 65535] { R5043 += 1, R4923 += 1, R1342 += 1, R1343 += 1 };
  s2 -> s6 [0, 65535] { R5043 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s2 -> s5 [70, 70] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s2 -> s1 [77, 65535] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s3 -> s1 [0, 69] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s3 -> s2 [0, 65535] { R5043 += 1, R4923 += 1, R1342 += 1, R1343 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R5043 += 1, R4922 += 1, R4923 += 1 };
  s3 -> s4 [70, 70] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s3 -> s5 [70, 70] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s3 -> s1 [77, 65535] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s4 -> s6 [0, 65535] { R5043 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R5043 += 1, R4923 += 1 };
  s5 -> s5 [0, 70] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s5 -> s6 [0, 65535] { R5043 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5043 += 1, R4923 += 1 };
  s5 -> s5 [77, 65535] { R5043 += 1, R4923 += 1, R1343 += 1 };
  s6 -> s6 [0, 65535] { R5043 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s0 [0, 65535] { R5044 += 1, R5045 += 1 };
  s0 -> s2 [0, 65535] { R5045 += 1, R4925 += 1, R1347 += 1, R1348 += 1 };
  s0 -> s3 [0, 65535] { R5045 += 1, R4924 += 1, R4925 += 1 };
  s0 -> s4 [70, 70] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s5 [70, 70] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s1 [71, 65535] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [0, 69] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5045 += 1, R4925 += 1 };
  s1 -> s7 [0, 65535] { R5045 += 1 };
  s1 -> s4 [70, 70] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s5 [70, 70] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [71, 65535] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [0, 69] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5045 += 1, R4925 += 1, R1347 += 1, R1348 += 1 };
  s2 -> s7 [0, 65535] { R5045 += 1 };
  s2 -> s4 [70, 70] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s5 [70, 70] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [71, 65535] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [0, 69] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R5045 += 1, R4925 += 1, R1347 += 1, R1348 += 1 };
  s3 -> s3 [0, 65535] { R5045 += 1, R4924 += 1, R4925 += 1 };
  s3 -> s4 [70, 70] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s5 [70, 70] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [71, 65535] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5045 += 1, R4925 += 1 };
  s4 -> s7 [0, 65535] { R5045 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5045 += 1, R4925 += 1, R1348 += 1, R1349 += 1 };
  s5 -> s7 [0, 65535] { R5045 += 1 };
  s5 -> s8 [0, 65535] { R5045 += 1, R4925 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5045 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5045 += 1 };
  s8 -> s8 [0, 65535] { R5045 += 1, R4925 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s0 [0, 65535] { R5046 += 1, R5047 += 1 };
  s0 -> s2 [0, 65535] { R5047 += 1, R4927 += 1, R1353 += 1, R1354 += 1 };
  s0 -> s3 [0, 65535] { R5047 += 1, R4926 += 1, R4927 += 1 };
  s0 -> s4 [70, 70] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s5 [70, 70] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s1 [71, 65535] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [0, 69] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R5047 += 1 };
  s1 -> s1 [0, 65535] { R5047 += 1, R4927 += 1 };
  s1 -> s4 [70, 70] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s5 [70, 70] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [71, 65535] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [0, 69] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5047 += 1, R4927 += 1, R1353 += 1, R1354 += 1 };
  s2 -> s8 [0, 65535] { R5047 += 1 };
  s2 -> s4 [70, 70] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s5 [70, 70] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [71, 65535] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [0, 69] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R5047 += 1, R4927 += 1, R1353 += 1, R1354 += 1 };
  s3 -> s3 [0, 65535] { R5047 += 1, R4926 += 1, R4927 += 1 };
  s3 -> s4 [70, 70] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s5 [70, 70] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [71, 65535] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5047 += 1, R4927 += 1 };
  s4 -> s8 [0, 65535] { R5047 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5047 += 1, R4927 += 1 };
  s5 -> s5 [0, 65535] { R5047 += 1, R4927 += 1, R1354 += 1, R1355 += 1 };
  s5 -> s8 [0, 65535] { R5047 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5047 += 1, R4927 += 1 };
  s7 -> s8 [0, 65535] { R5047 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5047 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s2 [0, 65535] { R5049 += 1, R4928 += 1, R4929 += 1 };
  s0 -> s0 [0, 65535] { R5048 += 1, R5049 += 1 };
  s0 -> s3 [0, 65535] { R5049 += 1, R4929 += 1, R1360 += 1, R1361 += 1 };
  s0 -> s4 [70, 70] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s5 [70, 70] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s1 [71, 65535] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [0, 69] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s6 [0, 65535] { R5049 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R5049 += 1, R4929 += 1 };
  s1 -> s4 [70, 70] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s5 [70, 70] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [71, 65535] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [0, 69] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R5049 += 1, R4928 += 1, R4929 += 1 };
  s2 -> s3 [0, 65535] { R5049 += 1, R4929 += 1, R1360 += 1, R1361 += 1 };
  s2 -> s4 [70, 70] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s5 [70, 70] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [71, 65535] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [0, 69] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s6 [0, 65535] { R5049 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R5049 += 1, R4929 += 1, R1360 += 1, R1361 += 1 };
  s3 -> s4 [70, 70] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s5 [70, 70] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [71, 65535] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s4 -> s6 [0, 65535] { R5049 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R5049 += 1, R4929 += 1 };
  s5 -> s6 [0, 65535] { R5049 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5049 += 1, R4929 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s5 -> s8 [0, 65535] { R5049 += 1, R4929 += 1 };
  s6 -> s6 [0, 65535] { R5049 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R5049 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5049 += 1, R4929 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s0 [0, 65535] { R5050 += 1, R5051 += 1 };
  s0 -> s2 [0, 65535] { R5051 += 1, R4931 += 1, R1369 += 1, R1370 += 1 };
  s0 -> s3 [0, 65535] { R5051 += 1, R4930 += 1, R4931 += 1 };
  s0 -> s4 [70, 70] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s5 [70, 70] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s1 [71, 65535] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [0, 69] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s6 [0, 65535] { R5051 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R5051 += 1, R4931 += 1 };
  s1 -> s4 [70, 70] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s5 [70, 70] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [71, 65535] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [0, 69] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s6 [0, 65535] { R5051 += 1 };
  s2 -> s2 [0, 65535] { R5051 += 1, R4931 += 1, R1369 += 1, R1370 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s5 [70, 70] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [71, 65535] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [0, 69] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s2 [0, 65535] { R5051 += 1, R4931 += 1, R1369 += 1, R1370 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R5051 += 1, R4930 += 1, R4931 += 1 };
  s3 -> s4 [70, 70] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s5 [70, 70] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [71, 65535] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s4 -> s8 [0, 65535] { R5051 += 1, R4931 += 1 };
  s4 -> s6 [0, 65535] { R5051 += 1 };
  s4 -> s4 [0, 65535] { R5051 += 1, R4931 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R5051 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5051 += 1, R4931 += 1 };
  s6 -> s6 [0, 65535] { R5051 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5051 += 1, R4931 += 1 };
  s8 -> s6 [0, 65535] { R5051 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s0 -> s0 [0, 65535] { R5052 += 1, R5053 += 1 };
  s0 -> s2 [0, 65535] { R5053 += 1, R4932 += 1, R4933 += 1 };
  s0 -> s3 [0, 65535] { R5053 += 1, R4933 += 1, R1376 += 1, R1377 += 1 };
  s0 -> s4 [70, 70] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s0 -> s1 [71, 65535] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s1 -> s1 [0, 69] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s1 -> s4 [70, 70] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s1 -> s1 [71, 65535] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s2 -> s1 [0, 69] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s2 -> s2 [0, 65535] { R5053 += 1, R4932 += 1, R4933 += 1 };
  s2 -> s3 [0, 65535] { R5053 += 1, R4933 += 1, R1376 += 1, R1377 += 1 };
  s2 -> s4 [70, 70] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s2 -> s1 [71, 65535] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s3 -> s1 [0, 69] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s3 -> s3 [0, 65535] { R5053 += 1, R4933 += 1, R1376 += 1, R1377 += 1 };
  s3 -> s4 [70, 70] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s3 -> s1 [71, 65535] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s4 -> s5 [0, 65535] { R5053 += 1, R4933 += 1 };
  s4 -> s6 [0, 65535] { R5053 += 1 };
  s4 -> s4 [0, 65535] { R5053 += 1, R4933 += 1, R1377 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R5053 += 1, R4933 += 1 };
  s5 -> s6 [0, 65535] { R5053 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R5053 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R5055 += 1, R4935 += 1, R1382 += 1, R1383 += 1 };
  s0 -> s0 [0, 65535] { R5054 += 1, R5055 += 1 };
  s0 -> s2 [0, 65535] { R5055 += 1, R4935 += 1, R1381 += 1, R1382 += 1 };
  s0 -> s3 [0, 65535] { R5055 += 1, R4934 += 1, R4935 += 1 };
  s1 -> s5 [0, 65535] { R5055 += 1 };
  s1 -> s6 [0, 65535] { R5055 += 1, R4935 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R5055 += 1, R4935 += 1, R1382 += 1, R1383 += 1 };
  s2 -> s5 [0, 65535] { R5055 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R5055 += 1, R4935 += 1, R1382 += 1, R1383 += 1 };
  s2 -> s2 [0, 65535] { R5055 += 1, R4935 += 1, R1381 += 1, R1382 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R5055 += 1, R4935 += 1, R1382 += 1, R1383 += 1 };
  s3 -> s2 [0, 65535] { R5055 += 1, R4935 += 1, R1381 += 1, R1382 += 1 };
  s3 -> s3 [0, 65535] { R5055 += 1, R4934 += 1, R4935 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R5055 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R5055 += 1 };
  s6 -> s6 [0, 65535] { R5055 += 1, R4935 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s0 -> s2 [0, 65535] { R5057 += 1, R4936 += 1, R4937 += 1 };
  s0 -> s0 [0, 65535] { R5056 += 1, R5057 += 1 };
  s0 -> s3 [0, 65535] { R5057 += 1, R4937 += 1, R1388 += 1, R1389 += 1 };
  s0 -> s4 [0, 65535] { R5057 += 1, R4937 += 1, R1387 += 1, R1388 += 1 };
  s0 -> s1 [71, 65535] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s1 -> s1 [0, 69] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5057 += 1, R4937 += 1 };
  s1 -> s6 [0, 65535] { R5057 += 1 };
  s1 -> s1 [71, 65535] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s2 -> s1 [0, 69] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s2 -> s2 [0, 65535] { R5057 += 1, R4936 += 1, R4937 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R5057 += 1, R4937 += 1, R1388 += 1, R1389 += 1 };
  s2 -> s4 [0, 65535] { R5057 += 1, R4937 += 1, R1387 += 1, R1388 += 1 };
  s2 -> s1 [71, 65535] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s3 -> s1 [0, 69] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5057 += 1 };
  s3 -> s3 [0, 65535] { R5057 += 1, R4937 += 1, R1388 += 1, R1389 += 1 };
  s3 -> s7 [0, 65535] { R5057 += 1, R4937 += 1 };
  s3 -> s1 [71, 65535] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s4 -> s1 [0, 69] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5057 += 1 };
  s4 -> s3 [0, 65535] { R5057 += 1, R4937 += 1, R1388 += 1, R1389 += 1 };
  s4 -> s4 [0, 65535] { R5057 += 1, R4937 += 1, R1387 += 1, R1388 += 1 };
  s4 -> s1 [71, 65535] { R5057 += 1, R4937 += 1, R1388 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5057 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5057 += 1 };
  s7 -> s7 [0, 65535] { R5057 += 1, R4937 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s0 -> s2 [0, 65535] { R5059 += 1, R4938 += 1, R4939 += 1 };
  s0 -> s3 [0, 65535] { R5059 += 1, R4939 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s0 -> s4 [0, 65535] { R5059 += 1, R4939 += 1, R1394 += 1, R1395 += 1 };
  s0 -> s0 [0, 65535] { R5058 += 1, R5059 += 1 };
  s0 -> s1 [71, 65535] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s1 [0, 69] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s7 [0, 65535] { R5059 += 1, R4939 += 1 };
  s1 -> s6 [0, 65535] { R5059 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5059 += 1, R4939 += 1, R1395 += 1 };
  s1 -> s1 [71, 65535] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s1 [0, 69] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s2 [0, 65535] { R5059 += 1, R4938 += 1, R4939 += 1 };
  s2 -> s3 [0, 65535] { R5059 += 1, R4939 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R5059 += 1, R4939 += 1, R1394 += 1, R1395 += 1 };
  s2 -> s1 [71, 65535] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s1 [0, 69] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s3 [0, 65535] { R5059 += 1, R4939 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s3 -> s7 [0, 65535] { R5059 += 1, R4939 += 1 };
  s3 -> s6 [0, 65535] { R5059 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [71, 65535] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s1 [0, 69] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s3 [0, 65535] { R5059 += 1, R4939 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5059 += 1 };
  s4 -> s4 [0, 65535] { R5059 += 1, R4939 += 1, R1394 += 1, R1395 += 1 };
  s4 -> s1 [71, 65535] { R5059 += 1, R4939 += 1, R1395 += 1, R1397 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5059 += 1 };
  s7 -> s7 [0, 65535] { R5059 += 1, R4939 += 1 };
  s7 -> s6 [0, 65535] { R5059 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s0 -> s2 [0, 65535] { R5061 += 1, R4941 += 1, R1403 += 1, R1404 += 1 };
  s0 -> s0 [0, 65535] { R5060 += 1, R5061 += 1 };
  s0 -> s3 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s0 -> s4 [0, 65535] { R5061 += 1, R4940 += 1, R4941 += 1 };
  s1 -> s6 [0, 65535] { R5061 += 1 };
  s1 -> s1 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s8 [0, 65535] { R5061 += 1, R4941 += 1 };
  s1 -> s3 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s2 -> s6 [0, 65535] { R5061 += 1 };
  s2 -> s1 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s2 -> s2 [0, 65535] { R5061 += 1, R4941 += 1, R1403 += 1, R1404 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s3 -> s6 [0, 65535] { R5061 += 1 };
  s3 -> s7 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s8 [0, 65535] { R5061 += 1, R4941 += 1 };
  s3 -> s3 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s4 -> s1 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s4 -> s2 [0, 65535] { R5061 += 1, R4941 += 1, R1403 += 1, R1404 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s4 -> s4 [0, 65535] { R5061 += 1, R4940 += 1, R4941 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5061 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5061 += 1 };
  s7 -> s7 [0, 65535] { R5061 += 1, R4941 += 1, R1404 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s8 [0, 65535] { R5061 += 1, R4941 += 1 };
  s8 -> s6 [0, 65535] { R5061 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R5061 += 1, R4941 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 70] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s0 -> s2 [0, 65535] { R5063 += 1, R4943 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s0 -> s0 [0, 65535] { R5062 += 1, R5063 += 1 };
  s0 -> s3 [0, 65535] { R5063 += 1, R4943 += 1, R1412 += 1, R1413 += 1 };
  s0 -> s4 [0, 65535] { R5063 += 1, R4942 += 1, R4943 += 1 };
  s0 -> s1 [76, 65535] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s1 [0, 70] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s6 [0, 65535] { R5063 += 1 };
  s1 -> s7 [0, 65535] { R5063 += 1, R4943 += 1 };
  s1 -> s1 [0, 65535] { R5063 += 1, R4943 += 1, R1413 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [76, 65535] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s1 [0, 70] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s6 [0, 65535] { R5063 += 1 };
  s2 -> s7 [0, 65535] { R5063 += 1, R4943 += 1 };
  s2 -> s2 [0, 65535] { R5063 += 1, R4943 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [76, 65535] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s1 [0, 70] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s6 [0, 65535] { R5063 += 1 };
  s3 -> s2 [0, 65535] { R5063 += 1, R4943 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5063 += 1, R4943 += 1, R1412 += 1, R1413 += 1 };
  s3 -> s1 [76, 65535] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s1 [0, 70] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s2 [0, 65535] { R5063 += 1, R4943 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R5063 += 1, R4943 += 1, R1412 += 1, R1413 += 1 };
  s4 -> s4 [0, 65535] { R5063 += 1, R4942 += 1, R4943 += 1 };
  s4 -> s1 [76, 65535] { R5063 += 1, R4943 += 1, R1413 += 1, R1415 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5063 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5063 += 1 };
  s7 -> s7 [0, 65535] { R5063 += 1, R4943 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s0 -> s2 [0, 65535] { R5065 += 1, R4945 += 1, R1421 += 1, R1422 += 1 };
  s0 -> s0 [0, 65535] { R5064 += 1, R5065 += 1 };
  s0 -> s3 [0, 65535] { R5065 += 1, R4944 += 1, R4945 += 1 };
  s0 -> s4 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s1 -> s5 [0, 65535] { R5065 += 1 };
  s1 -> s1 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5065 += 1, R4945 += 1 };
  s1 -> s8 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1 };
  s2 -> s5 [0, 65535] { R5065 += 1 };
  s2 -> s1 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s2 -> s2 [0, 65535] { R5065 += 1, R4945 += 1, R1421 += 1, R1422 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s3 -> s1 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s3 -> s2 [0, 65535] { R5065 += 1, R4945 += 1, R1421 += 1, R1422 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5065 += 1, R4944 += 1, R4945 += 1 };
  s3 -> s4 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s4 -> s5 [0, 65535] { R5065 += 1 };
  s4 -> s1 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5065 += 1, R4945 += 1 };
  s4 -> s4 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s5 -> s5 [0, 65535] { R5065 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R5065 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5065 += 1, R4945 += 1 };
  s8 -> s5 [0, 65535] { R5065 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5065 += 1, R4945 += 1 };
  s8 -> s8 [0, 65535] { R5065 += 1, R4945 += 1, R1422 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 75] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s0 -> s0 [0, 65535] { R5066 += 1, R5067 += 1 };
  s0 -> s2 [0, 65535] { R5067 += 1, R4946 += 1, R4947 += 1 };
  s0 -> s3 [0, 65535] { R5067 += 1, R4947 += 1, R1431 += 1, R1432 += 1 };
  s0 -> s4 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s0 -> s5 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s0 -> s1 [77, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s1 [0, 75] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R5067 += 1 };
  s1 -> s1 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1 };
  s1 -> s9 [0, 65535] { R5067 += 1, R4947 += 1 };
  s1 -> s1 [77, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s1 [0, 75] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s2 [0, 65535] { R5067 += 1, R4946 += 1, R4947 += 1 };
  s2 -> s3 [0, 65535] { R5067 += 1, R4947 += 1, R1431 += 1, R1432 += 1 };
  s2 -> s4 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s2 -> s5 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [77, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s1 [0, 75] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s7 [0, 65535] { R5067 += 1 };
  s3 -> s3 [0, 65535] { R5067 += 1, R4947 += 1, R1431 += 1, R1432 += 1 };
  s3 -> s4 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s3 -> s5 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [77, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s1 [0, 75] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5067 += 1 };
  s4 -> s4 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s4 -> s5 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s4 -> s9 [0, 65535] { R5067 += 1, R4947 += 1 };
  s4 -> s1 [77, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s1 [0, 75] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5067 += 1 };
  s5 -> s8 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1 };
  s5 -> s5 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s5 -> s9 [0, 65535] { R5067 += 1, R4947 += 1 };
  s5 -> s1 [77, 65535] { R5067 += 1, R4947 += 1, R1432 += 1, R1434 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5067 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5067 += 1 };
  s8 -> s8 [0, 65535] { R5067 += 1, R4947 += 1, R1432 += 1 };
  s8 -> s9 [0, 65535] { R5067 += 1, R4947 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R5067 += 1 };
  s9 -> s9 [0, 65535] { R5067 += 1, R4947 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R5069 += 1, R4949 += 1, R1442 += 1, R1443 += 1 };
  s0 -> s2 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s0 -> s3 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s0 -> s4 [0, 65535] { R5069 += 1, R4948 += 1, R4949 += 1 };
  s0 -> s0 [0, 65535] { R5068 += 1, R5069 += 1 };
  s0 -> s5 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1 };
  s1 -> s1 [0, 65535] { R5069 += 1, R4949 += 1, R1442 += 1, R1443 += 1 };
  s1 -> s2 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s1 -> s3 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s1 -> s8 [0, 65535] { R5069 += 1 };
  s1 -> s5 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s2 -> s3 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s2 -> s8 [0, 65535] { R5069 += 1 };
  s2 -> s5 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1 };
  s2 -> s9 [0, 65535] { R5069 += 1, R4949 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1 };
  s3 -> s3 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s3 -> s8 [0, 65535] { R5069 += 1 };
  s3 -> s5 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1 };
  s3 -> s9 [0, 65535] { R5069 += 1, R4949 += 1 };
  s4 -> s1 [0, 65535] { R5069 += 1, R4949 += 1, R1442 += 1, R1443 += 1 };
  s4 -> s2 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s4 -> s3 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s4 -> s4 [0, 65535] { R5069 += 1, R4948 += 1, R4949 += 1 };
  s4 -> s5 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1 };
  s5 -> s8 [0, 65535] { R5069 += 1 };
  s5 -> s5 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1, R1445 += 1 };
  s5 -> s9 [0, 65535] { R5069 += 1, R4949 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5069 += 1, R4949 += 1, R1443 += 1 };
  s7 -> s8 [0, 65535] { R5069 += 1 };
  s7 -> s9 [0, 65535] { R5069 += 1, R4949 += 1 };
  s8 -> s8 [0, 65535] { R5069 += 1 };
  s8 -> s6 [0, 65535];
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R5069 += 1 };
  s9 -> s9 [0, 65535] { R5069 += 1, R4949 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s0 [0, 65535] { R5070 += 1, R5071 += 1 };
  s0 -> s1 [0, 65535] { R5071 += 1, R4950 += 1, R4951 += 1 };
  s0 -> s2 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s0 -> s3 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s0 -> s4 [0, 65535] { R5071 += 1, R4951 += 1, R1455 += 1, R1456 += 1 };
  s0 -> s5 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R5071 += 1, R4950 += 1, R4951 += 1 };
  s1 -> s2 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s1 -> s3 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s1 -> s4 [0, 65535] { R5071 += 1, R4951 += 1, R1455 += 1, R1456 += 1 };
  s1 -> s5 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s2 -> s6 [0, 65535] { R5071 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s9 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1 };
  s2 -> s10 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1 };
  s2 -> s2 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s2 -> s8 [0, 65535] { R5071 += 1, R4951 += 1 };
  s3 -> s6 [0, 65535] { R5071 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s9 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1 };
  s3 -> s2 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s3 -> s3 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s3 -> s8 [0, 65535] { R5071 += 1, R4951 += 1 };
  s4 -> s6 [0, 65535] { R5071 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s2 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s4 -> s3 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s4 -> s4 [0, 65535] { R5071 += 1, R4951 += 1, R1455 += 1, R1456 += 1 };
  s4 -> s5 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s5 -> s6 [0, 65535] { R5071 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s2 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s5 -> s3 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s5 -> s5 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s5 -> s8 [0, 65535] { R5071 += 1, R4951 += 1 };
  s6 -> s6 [0, 65535] { R5071 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R5071 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R5071 += 1, R4951 += 1 };
  s9 -> s6 [0, 65535] { R5071 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1 };
  s9 -> s8 [0, 65535] { R5071 += 1, R4951 += 1 };
  s10 -> s6 [0, 65535] { R5071 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s9 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1 };
  s10 -> s10 [0, 65535] { R5071 += 1, R4951 += 1, R1456 += 1, R1458 += 1 };
  s10 -> s8 [0, 65535] { R5071 += 1, R4951 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s0 [0, 65535] { R5072 += 1, R5073 += 1 };
  s0 -> s2 [0, 65535] { R5073 += 1, R4953 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s3 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s4 [0, 65535] { R5073 += 1, R4952 += 1, R4953 += 1 };
  s1 -> s6 [0, 65535] { R5073 += 1 };
  s1 -> s1 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s7 [0, 65535] { R5073 += 1, R4953 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s6 [0, 65535] { R5073 += 1 };
  s2 -> s1 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5073 += 1, R4953 += 1, R1467 += 1, R1468 += 1 };
  s2 -> s3 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s6 [0, 65535] { R5073 += 1 };
  s3 -> s7 [0, 65535] { R5073 += 1, R4953 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s8 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1 };
  s3 -> s3 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s1 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R5073 += 1, R4953 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s3 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s4 [0, 65535] { R5073 += 1, R4952 += 1, R4953 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5073 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R5073 += 1 };
  s7 -> s7 [0, 65535] { R5073 += 1, R4953 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R5073 += 1 };
  s8 -> s7 [0, 65535] { R5073 += 1, R4953 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R5073 += 1, R4953 += 1, R1468 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s2 [0, 65535] { R5075 += 1, R4954 += 1, R4955 += 1 };
  s0 -> s0 [0, 65535] { R5074 += 1, R5075 += 1 };
  s0 -> s3 [0, 65535] { R5075 += 1, R4955 += 1, R1476 += 1, R1477 += 1 };
  s0 -> s4 [0, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s0 -> s5 [70, 70] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s6 [76, 76] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s1 [77, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [0, 69] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s5 [70, 70] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s6 [76, 76] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [77, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [0, 69] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s2 [0, 65535] { R5075 += 1, R4954 += 1, R4955 += 1 };
  s2 -> s3 [0, 65535] { R5075 += 1, R4955 += 1, R1476 += 1, R1477 += 1 };
  s2 -> s4 [0, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s2 -> s5 [70, 70] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s6 [76, 76] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [77, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [0, 69] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s3 [0, 65535] { R5075 += 1, R4955 += 1, R1476 += 1, R1477 += 1 };
  s3 -> s4 [0, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s3 -> s5 [70, 70] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s6 [76, 76] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [77, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [0, 69] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s4 [0, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s4 -> s5 [70, 70] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s6 [76, 76] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [77, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [0, 70] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s11 [76, 76] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [77, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [0, 69] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [0, 65535] { R5075 += 1, R4955 += 1, R1477 += 1 };
  s6 -> s7 [0, 65535] { R5075 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R5075 += 1, R4955 += 1 };
  s6 -> s10 [70, 70] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s11 [70, 70] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [76, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s7 -> s7 [0, 65535] { R5075 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R5075 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5075 += 1, R4955 += 1 };
  s10 -> s7 [0, 65535] { R5075 += 1 };
  s10 -> s10 [0, 65535] { R5075 += 1, R4955 += 1, R1477 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R5075 += 1, R4955 += 1 };
  s11 -> s11 [0, 70] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  s11 -> s7 [0, 65535] { R5075 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R5075 += 1, R4955 += 1 };
  s11 -> s11 [0, 65535] { R5075 += 1, R4955 += 1, R1477 += 1 };
  s11 -> s11 [76, 65535] { R5075 += 1, R4955 += 1, R1477 += 1, R1479 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s2 [0, 65535] { R5077 += 1, R4957 += 1, R1485 += 1, R1486 += 1 };
  s0 -> s3 [0, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s0 -> s0 [0, 65535] { R5076 += 1, R5077 += 1 };
  s0 -> s4 [0, 65535] { R5077 += 1, R4956 += 1, R4957 += 1 };
  s0 -> s5 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s6 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s1 [71, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [0, 69] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s7 [0, 65535] { R5077 += 1 };
  s1 -> s1 [0, 65535] { R5077 += 1, R4957 += 1, R1486 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R5077 += 1, R4957 += 1 };
  s1 -> s5 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s6 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [71, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [0, 69] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s7 [0, 65535] { R5077 += 1 };
  s2 -> s2 [0, 65535] { R5077 += 1, R4957 += 1, R1485 += 1, R1486 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s3 [0, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s2 -> s5 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s6 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [71, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [0, 69] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s7 [0, 65535] { R5077 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s9 [0, 65535] { R5077 += 1, R4957 += 1 };
  s3 -> s3 [0, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s3 -> s5 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s6 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [71, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [0, 69] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s2 [0, 65535] { R5077 += 1, R4957 += 1, R1485 += 1, R1486 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s3 [0, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s4 -> s4 [0, 65535] { R5077 += 1, R4956 += 1, R4957 += 1 };
  s4 -> s5 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s6 [70, 70] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [71, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s5 -> s5 [0, 65535] { R5077 += 1, R4957 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s5 -> s7 [0, 65535] { R5077 += 1 };
  s5 -> s10 [0, 65535] { R5077 += 1, R4957 += 1, R1486 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R5077 += 1, R4957 += 1 };
  s6 -> s7 [0, 65535] { R5077 += 1 };
  s6 -> s6 [0, 65535] { R5077 += 1, R4957 += 1, R1486 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R5077 += 1, R4957 += 1 };
  s7 -> s7 [0, 65535] { R5077 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R5077 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R5077 += 1, R4957 += 1 };
  s10 -> s7 [0, 65535] { R5077 += 1 };
  s10 -> s10 [0, 65535] { R5077 += 1, R4957 += 1, R1486 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R5077 += 1, R4957 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s2 [0, 65535] { R5079 += 1, R4958 += 1, R4959 += 1 };
  s0 -> s3 [0, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s0 -> s4 [0, 65535] { R5079 += 1, R4959 += 1, R1495 += 1, R1496 += 1 };
  s0 -> s0 [0, 65535] { R5078 += 1, R5079 += 1 };
  s0 -> s5 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s6 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s1 [71, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [0, 69] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s7 [0, 65535] { R5079 += 1, R4959 += 1 };
  s1 -> s8 [0, 65535] { R5079 += 1 };
  s1 -> s1 [0, 65535] { R5079 += 1, R4959 += 1, R1496 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s6 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [71, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [0, 69] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s2 [0, 65535] { R5079 += 1, R4958 += 1, R4959 += 1 };
  s2 -> s3 [0, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s2 -> s4 [0, 65535] { R5079 += 1, R4959 += 1, R1495 += 1, R1496 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s6 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [71, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [0, 69] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s7 [0, 65535] { R5079 += 1, R4959 += 1 };
  s3 -> s3 [0, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s3 -> s8 [0, 65535] { R5079 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s6 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [71, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [0, 69] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s3 [0, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s4 -> s8 [0, 65535] { R5079 += 1 };
  s4 -> s4 [0, 65535] { R5079 += 1, R4959 += 1, R1495 += 1, R1496 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s5 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s6 [70, 70] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [71, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s5 -> s7 [0, 65535] { R5079 += 1, R4959 += 1 };
  s5 -> s5 [0, 65535] { R5079 += 1, R4959 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s5 -> s10 [0, 65535] { R5079 += 1, R4959 += 1, R1496 += 1 };
  s5 -> s8 [0, 65535] { R5079 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 65535] { R5079 += 1, R4959 += 1 };
  s6 -> s8 [0, 65535] { R5079 += 1 };
  s6 -> s6 [0, 65535] { R5079 += 1, R4959 += 1, R1496 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R5079 += 1, R4959 += 1 };
  s7 -> s8 [0, 65535] { R5079 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R5079 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R5079 += 1, R4959 += 1 };
  s10 -> s10 [0, 65535] { R5079 += 1, R4959 += 1, R1496 += 1 };
  s10 -> s8 [0, 65535] { R5079 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 69] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s0 -> s2 [0, 65535] { R5081 += 1, R4960 += 1, R4961 += 1 };
  s0 -> s0 [0, 65535] { R5080 += 1, R5081 += 1 };
  s0 -> s3 [70, 70] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s0 -> s1 [71, 75] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s0 -> s4 [76, 76] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s0 -> s1 [77, 65535] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s1 -> s1 [0, 69] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s1 -> s3 [70, 70] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s1 -> s1 [71, 75] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s1 -> s4 [76, 76] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s1 -> s1 [77, 65535] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s2 -> s1 [0, 69] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s2 -> s2 [0, 65535] { R5081 += 1, R4960 += 1, R4961 += 1 };
  s2 -> s3 [70, 70] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s2 -> s1 [71, 75] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s2 -> s4 [76, 76] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s2 -> s1 [77, 65535] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s3 -> s3 [0, 75] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s3 -> s8 [76, 76] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s3 -> s3 [77, 65535] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s4 -> s4 [0, 69] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s4 -> s5 [0, 65535] { R5081 += 1 };
  s4 -> s4 [0, 65535] { R5081 += 1, R4961 += 1, R4891 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R5081 += 1, R4961 += 1 };
  s4 -> s8 [70, 70] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s4 -> s9 [70, 70] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s4 -> s4 [71, 65535] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s5 -> s5 [0, 65535] { R5081 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R5081 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R5081 += 1, R4961 += 1 };
  s8 -> s5 [0, 65535] { R5081 += 1 };
  s8 -> s10 [0, 65535] { R5081 += 1, R4961 += 1, R4891 += 1 };
  s8 -> s8 [0, 65535] { R5081 += 1, R4961 += 1, R4891 += 1, R4893 += 1, R4895 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R5081 += 1, R4961 += 1 };
  s9 -> s5 [0, 65535] { R5081 += 1 };
  s9 -> s9 [0, 65535] { R5081 += 1, R4961 += 1, R4891 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R5081 += 1, R4961 += 1 };
  s10 -> s5 [0, 65535] { R5081 += 1 };
  s10 -> s10 [0, 65535] { R5081 += 1, R4961 += 1, R4891 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R5081 += 1, R4961 += 1 };
  accepting s4, s8, s5, s9, s6, s7, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 69] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s0 -> s2 [0, 65535] { R5083 += 1, R4963 += 1, R4903 += 1, R4904 += 1 };
  s0 -> s3 [0, 65535] { R5083 += 1, R4962 += 1, R4963 += 1 };
  s0 -> s4 [0, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4905 += 1, R4906 += 1 };
  s0 -> s0 [0, 65535] { R5082 += 1, R5083 += 1 };
  s0 -> s5 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s0 -> s6 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s0 -> s1 [71, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s1 -> s1 [0, 69] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s1 -> s1 [0, 65535] { R5083 += 1, R4963 += 1, R4904 += 1 };
  s1 -> s7 [0, 65535] { R5083 += 1 };
  s1 -> s8 [0, 65535] { R5083 += 1, R4963 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s1 -> s6 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s1 -> s1 [71, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s2 -> s1 [0, 69] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s2 -> s2 [0, 65535] { R5083 += 1, R4963 += 1, R4903 += 1, R4904 += 1 };
  s2 -> s7 [0, 65535] { R5083 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s4 [0, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4905 += 1, R4906 += 1 };
  s2 -> s5 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s2 -> s6 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s2 -> s1 [71, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s3 -> s1 [0, 69] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s3 -> s2 [0, 65535] { R5083 += 1, R4963 += 1, R4903 += 1, R4904 += 1 };
  s3 -> s3 [0, 65535] { R5083 += 1, R4962 += 1, R4963 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s4 [0, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4905 += 1, R4906 += 1 };
  s3 -> s5 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s3 -> s6 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s3 -> s1 [71, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s4 -> s1 [0, 69] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s4 -> s7 [0, 65535] { R5083 += 1 };
  s4 -> s8 [0, 65535] { R5083 += 1, R4963 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s4 [0, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4905 += 1, R4906 += 1 };
  s4 -> s5 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s4 -> s6 [70, 70] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s4 -> s1 [71, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s5 -> s10 [0, 65535] { R5083 += 1, R4963 += 1, R4904 += 1 };
  s5 -> s7 [0, 65535] { R5083 += 1 };
  s5 -> s5 [0, 65535] { R5083 += 1, R4963 += 1, R4904 += 1, R4906 += 1, R4907 += 1, R4908 += 1 };
  s5 -> s8 [0, 65535] { R5083 += 1, R4963 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 65535] { R5083 += 1 };
  s6 -> s8 [0, 65535] { R5083 += 1, R4963 += 1 };
  s6 -> s6 [0, 65535] { R5083 += 1, R4963 += 1, R4904 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R5083 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R5083 += 1 };
  s8 -> s8 [0, 65535] { R5083 += 1, R4963 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R5083 += 1, R4963 += 1, R4904 += 1 };
  s10 -> s7 [0, 65535] { R5083 += 1 };
  s10 -> s8 [0, 65535] { R5083 += 1, R4963 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65535] { R5085 += 1, R4964 += 1, R4965 += 1 };
  s0 -> s2 [0, 65535] { R5085 += 1, R4965 += 1, R27 += 1 };
  s0 -> s0 [0, 65535] { R5084 += 1, R5085 += 1 };
  s1 -> s1 [0, 65535] { R5085 += 1, R4964 += 1, R4965 += 1 };
  s1 -> s2 [0, 65535] { R5085 += 1, R4965 += 1, R27 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R5085 += 1, R4965 += 1, R27 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R5085 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R5085 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 66] { R5087 += 1, R4967 += 1 };
  s0 -> s2 [0, 65535] { R5087 += 1, R4966 += 1, R4967 += 1 };
  s0 -> s0 [0, 65535] { R5086 += 1, R5087 += 1 };
  s0 -> s3 [67, 67] { R5087 += 1, R4967 += 1 };
  s0 -> s4 [67, 67] { R5087 += 1, R4967 += 1 };
  s0 -> s5 [70, 70] { R5087 += 1, R4967 += 1 };
  s0 -> s1 [71, 65535] { R5087 += 1, R4967 += 1 };
  s1 -> s1 [0, 66] { R5087 += 1, R4967 += 1 };
  s1 -> s3 [67, 67] { R5087 += 1, R4967 += 1 };
  s1 -> s4 [67, 67] { R5087 += 1, R4967 += 1 };
  s1 -> s5 [70, 70] { R5087 += 1, R4967 += 1 };
  s1 -> s1 [71, 65535] { R5087 += 1, R4967 += 1 };
  s2 -> s1 [0, 66] { R5087 += 1, R4967 += 1 };
  s2 -> s2 [0, 65535] { R5087 += 1, R4966 += 1, R4967 += 1 };
  s2 -> s3 [67, 67] { R5087 += 1, R4967 += 1 };
  s2 -> s4 [67, 67] { R5087 += 1, R4967 += 1 };
  s2 -> s5 [70, 70] { R5087 += 1, R4967 += 1 };
  s2 -> s1 [71, 65535] { R5087 += 1, R4967 += 1 };
  s4 -> s4 [0, 67] { R5087 += 1, R4967 += 1 };
  s4 -> s7 [70, 70] { R5087 += 1, R4967 += 1 };
  s4 -> s4 [71, 65535] { R5087 += 1, R4967 += 1 };
  s5 -> s5 [0, 66] { R5087 += 1, R4967 += 1 };
  s5 -> s5 [0, 65535] { R5087 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [67, 67] { R5087 += 1, R4967 += 1 };
  s5 -> s8 [67, 67] { R5087 += 1, R4967 += 1 };
  s5 -> s5 [70, 65535] { R5087 += 1, R4967 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 67] { R5087 += 1, R4967 += 1 };
  s7 -> s7 [0, 65535] { R5087 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [70, 65535] { R5087 += 1, R4967 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R5087 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 66] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s0 -> s2 [0, 65535] { R5089 += 1, R4968 += 1, R4969 += 1 };
  s0 -> s0 [0, 65535] { R5088 += 1, R5089 += 1 };
  s0 -> s3 [67, 67] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s0 -> s4 [67, 67] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s0 -> s1 [68, 65535] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s1 -> s1 [0, 66] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5089 += 1 };
  s1 -> s3 [67, 67] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s1 -> s4 [67, 67] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s1 -> s1 [68, 65535] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s2 -> s1 [0, 66] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s2 -> s2 [0, 65535] { R5089 += 1, R4968 += 1, R4969 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s2 -> s4 [67, 67] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s2 -> s1 [68, 65535] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s3 -> s3 [0, 65535] { R5089 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5089 += 1, R4969 += 1, R1330 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5089 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5089 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 66] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s0 -> s0 [0, 65535] { R5090 += 1, R5091 += 1 };
  s0 -> s2 [0, 65535] { R5091 += 1, R4970 += 1, R4971 += 1 };
  s0 -> s3 [67, 67] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s0 -> s4 [67, 67] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s0 -> s1 [68, 65535] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s1 -> s1 [0, 66] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5091 += 1 };
  s1 -> s3 [67, 67] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s1 -> s4 [67, 67] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s1 -> s1 [68, 65535] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s2 -> s1 [0, 66] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5091 += 1, R4970 += 1, R4971 += 1 };
  s2 -> s3 [67, 67] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s2 -> s4 [67, 67] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s2 -> s1 [68, 65535] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5091 += 1 };
  s3 -> s3 [0, 65535] { R5091 += 1, R4971 += 1, R1332 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5091 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5091 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 66] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s0 [0, 65535] { R5092 += 1, R5093 += 1 };
  s0 -> s2 [0, 65535] { R5093 += 1, R4972 += 1, R4973 += 1 };
  s0 -> s3 [67, 67] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s4 [67, 67] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s1 [68, 65535] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [0, 66] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [0, 65535] { R5093 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s4 [67, 67] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [68, 65535] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [0, 66] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5093 += 1, R4972 += 1, R4973 += 1 };
  s2 -> s3 [67, 67] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s4 [67, 67] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [68, 65535] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s3 -> s3 [0, 65535] { R5093 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5093 += 1, R4973 += 1, R1334 += 1, R1335 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5093 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5093 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 66] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s0 [0, 65535] { R5094 += 1, R5095 += 1 };
  s0 -> s2 [0, 65535] { R5095 += 1, R4974 += 1, R4975 += 1 };
  s0 -> s3 [67, 67] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s4 [67, 67] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s1 [68, 65535] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [0, 66] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [0, 65535] { R5095 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s4 [67, 67] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [68, 65535] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [0, 66] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5095 += 1, R4974 += 1, R4975 += 1 };
  s2 -> s3 [67, 67] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s4 [67, 67] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [68, 65535] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5095 += 1, R4975 += 1, R1340 += 1, R1341 += 1 };
  s3 -> s6 [0, 65535] { R5095 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5095 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5095 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 66] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s2 [0, 65535] { R5097 += 1, R4976 += 1, R4977 += 1 };
  s0 -> s0 [0, 65535] { R5096 += 1, R5097 += 1 };
  s0 -> s3 [67, 67] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s4 [67, 67] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s1 [68, 65535] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [0, 66] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5097 += 1 };
  s1 -> s3 [67, 67] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s4 [67, 67] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [68, 65535] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [0, 66] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s2 [0, 65535] { R5097 += 1, R4976 += 1, R4977 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s4 [67, 67] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [68, 65535] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s3 -> s6 [0, 65535] { R5097 += 1 };
  s3 -> s3 [0, 65535] { R5097 += 1, R4977 += 1, R1344 += 1, R1345 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5097 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5097 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 66] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s2 [0, 65535] { R5099 += 1, R4978 += 1, R4979 += 1 };
  s0 -> s0 [0, 65535] { R5098 += 1, R5099 += 1 };
  s0 -> s3 [67, 67] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s4 [67, 67] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s1 [68, 65535] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [0, 66] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5099 += 1 };
  s1 -> s3 [67, 67] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s4 [67, 67] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [68, 65535] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [0, 66] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5099 += 1, R4978 += 1, R4979 += 1 };
  s2 -> s3 [67, 67] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s4 [67, 67] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [68, 65535] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s6 [0, 65535] { R5099 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5099 += 1, R4979 += 1, R1350 += 1, R1351 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5099 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5099 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 66] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s0 [0, 65535] { R5100 += 1, R5101 += 1 };
  s0 -> s2 [0, 65535] { R5101 += 1, R4980 += 1, R4981 += 1 };
  s0 -> s3 [67, 67] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s4 [67, 67] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s1 [68, 65535] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [0, 66] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5101 += 1 };
  s1 -> s3 [67, 67] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s4 [67, 67] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [68, 65535] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [0, 66] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5101 += 1, R4980 += 1, R4981 += 1 };
  s2 -> s3 [67, 67] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s4 [67, 67] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [68, 65535] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5101 += 1, R4981 += 1, R1356 += 1, R1357 += 1 };
  s3 -> s6 [0, 65535] { R5101 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5101 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5101 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 66] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s0 [0, 65535] { R5102 += 1, R5103 += 1 };
  s0 -> s2 [0, 65535] { R5103 += 1, R4982 += 1, R4983 += 1 };
  s0 -> s3 [67, 67] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s4 [67, 67] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s1 [68, 65535] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [0, 66] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5103 += 1 };
  s1 -> s3 [67, 67] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s4 [67, 67] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [68, 65535] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [0, 66] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5103 += 1, R4982 += 1, R4983 += 1 };
  s2 -> s3 [67, 67] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s4 [67, 67] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [68, 65535] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R5103 += 1 };
  s4 -> s5 [0, 65535] { R5103 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5103 += 1, R4983 += 1, R1364 += 1, R1365 += 1 };
  s5 -> s5 [0, 65535] { R5103 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 66] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s2 [0, 65535] { R5105 += 1, R4984 += 1, R4985 += 1 };
  s0 -> s0 [0, 65535] { R5104 += 1, R5105 += 1 };
  s0 -> s3 [67, 67] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s4 [67, 67] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s1 [68, 65535] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [0, 66] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [0, 65535] { R5105 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s4 [67, 67] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [68, 65535] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [0, 66] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5105 += 1, R4984 += 1, R4985 += 1 };
  s2 -> s3 [67, 67] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s4 [67, 67] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [68, 65535] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5105 += 1 };
  s3 -> s3 [0, 65535] { R5105 += 1, R4985 += 1, R1374 += 1, R1375 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5105 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5105 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 66] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s2 [0, 65535] { R5107 += 1, R4986 += 1, R4987 += 1 };
  s0 -> s0 [0, 65535] { R5106 += 1, R5107 += 1 };
  s0 -> s3 [67, 67] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s4 [67, 67] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s1 [68, 65535] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [0, 66] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [0, 65535] { R5107 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s4 [67, 67] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [68, 65535] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [0, 66] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s2 [0, 65535] { R5107 += 1, R4986 += 1, R4987 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s4 [67, 67] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [68, 65535] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s3 -> s3 [0, 65535] { R5107 += 1, R4987 += 1, R1378 += 1, R1379 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5107 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5107 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5107 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 66] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s2 [0, 65535] { R5109 += 1, R4988 += 1, R4989 += 1 };
  s0 -> s0 [0, 65535] { R5108 += 1, R5109 += 1 };
  s0 -> s3 [67, 67] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s4 [67, 67] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s1 [68, 65535] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [0, 66] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R5109 += 1 };
  s1 -> s3 [67, 67] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s4 [67, 67] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [68, 65535] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [0, 66] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R5109 += 1, R4988 += 1, R4989 += 1 };
  s2 -> s3 [67, 67] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s4 [67, 67] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [68, 65535] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s3 -> s3 [0, 65535] { R5109 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5109 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R5109 += 1, R4989 += 1, R1384 += 1, R1385 += 1 };
  s5 -> s5 [0, 65535] { R5109 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 66] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s2 [0, 65535] { R5111 += 1, R4990 += 1, R4991 += 1 };
  s0 -> s0 [0, 65535] { R5110 += 1, R5111 += 1 };
  s0 -> s3 [67, 67] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s4 [67, 67] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s1 [68, 65535] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [0, 66] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [0, 65535] { R5111 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s4 [67, 67] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [68, 65535] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [0, 66] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s2 [0, 65535] { R5111 += 1, R4990 += 1, R4991 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s4 [67, 67] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [68, 65535] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5111 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5111 += 1 };
  s4 -> s4 [0, 65535] { R5111 += 1, R4991 += 1, R1390 += 1, R1391 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5111 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_55 {
  init s0;
  s0 -> s1 [0, 66] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s2 [0, 65535] { R5113 += 1, R4992 += 1, R4993 += 1 };
  s0 -> s0 [0, 65535] { R5112 += 1, R5113 += 1 };
  s0 -> s3 [67, 67] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s4 [67, 67] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s1 [68, 65535] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [0, 66] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5113 += 1 };
  s1 -> s3 [67, 67] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s4 [67, 67] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [68, 65535] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [0, 66] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s2 [0, 65535] { R5113 += 1, R4992 += 1, R4993 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s4 [67, 67] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [68, 65535] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5113 += 1 };
  s3 -> s3 [0, 65535] { R5113 += 1, R4993 += 1, R1398 += 1, R1399 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5113 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5113 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_56 {
  init s0;
  s0 -> s1 [0, 66] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s0 [0, 65535] { R5114 += 1, R5115 += 1 };
  s0 -> s2 [0, 65535] { R5115 += 1, R4994 += 1, R4995 += 1 };
  s0 -> s3 [67, 67] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s4 [67, 67] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s1 [68, 65535] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [0, 66] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5115 += 1 };
  s1 -> s3 [67, 67] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s4 [67, 67] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [68, 65535] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [0, 66] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s2 [0, 65535] { R5115 += 1, R4994 += 1, R4995 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s4 [67, 67] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [68, 65535] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s3 -> s3 [0, 65535] { R5115 += 1, R4995 += 1, R1408 += 1, R1409 += 1 };
  s3 -> s6 [0, 65535] { R5115 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5115 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5115 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_57 {
  init s0;
  s0 -> s1 [0, 66] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s0 [0, 65535] { R5116 += 1, R5117 += 1 };
  s0 -> s2 [0, 65535] { R5117 += 1, R4996 += 1, R4997 += 1 };
  s0 -> s3 [67, 67] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s4 [67, 67] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s1 [68, 65535] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [0, 66] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5117 += 1 };
  s1 -> s3 [67, 67] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s4 [67, 67] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [68, 65535] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [0, 66] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5117 += 1, R4996 += 1, R4997 += 1 };
  s2 -> s3 [67, 67] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s4 [67, 67] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [68, 65535] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s3 -> s3 [0, 65535] { R5117 += 1, R4997 += 1, R1416 += 1, R1417 += 1 };
  s3 -> s6 [0, 65535] { R5117 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5117 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5117 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_58 {
  init s0;
  s0 -> s1 [0, 66] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s0 [0, 65535] { R5118 += 1, R5119 += 1 };
  s0 -> s2 [0, 65535] { R5119 += 1, R4998 += 1, R4999 += 1 };
  s0 -> s3 [67, 67] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s4 [67, 67] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s1 [68, 65535] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [0, 66] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5119 += 1 };
  s1 -> s3 [67, 67] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s4 [67, 67] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [68, 65535] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [0, 66] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R5119 += 1, R4998 += 1, R4999 += 1 };
  s2 -> s3 [67, 67] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s4 [67, 67] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [68, 65535] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5119 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5119 += 1 };
  s4 -> s4 [0, 65535] { R5119 += 1, R4999 += 1, R1426 += 1, R1427 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5119 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_59 {
  init s0;
  s0 -> s1 [0, 66] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s2 [0, 65535] { R5121 += 1, R5000 += 1, R5001 += 1 };
  s0 -> s0 [0, 65535] { R5120 += 1, R5121 += 1 };
  s0 -> s3 [67, 67] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s4 [67, 67] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s1 [68, 65535] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [0, 66] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [0, 65535] { R5121 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s4 [67, 67] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [68, 65535] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [0, 66] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s2 [0, 65535] { R5121 += 1, R5000 += 1, R5001 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s4 [67, 67] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [68, 65535] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s3 -> s3 [0, 65535] { R5121 += 1, R5001 += 1, R1436 += 1, R1437 += 1 };
  s3 -> s6 [0, 65535] { R5121 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5121 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5121 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_60 {
  init s0;
  s0 -> s1 [0, 66] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s2 [0, 65535] { R5123 += 1, R5002 += 1, R5003 += 1 };
  s0 -> s0 [0, 65535] { R5122 += 1, R5123 += 1 };
  s0 -> s3 [67, 67] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s4 [67, 67] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s1 [68, 65535] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [0, 66] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5123 += 1 };
  s1 -> s3 [67, 67] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s4 [67, 67] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [68, 65535] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [0, 66] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s2 [0, 65535] { R5123 += 1, R5002 += 1, R5003 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s4 [67, 67] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [68, 65535] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5123 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5123 += 1 };
  s4 -> s4 [0, 65535] { R5123 += 1, R5003 += 1, R1448 += 1, R1449 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5123 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_61 {
  init s0;
  s0 -> s1 [0, 66] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s0 [0, 65535] { R5124 += 1, R5125 += 1 };
  s0 -> s2 [0, 65535] { R5125 += 1, R5004 += 1, R5005 += 1 };
  s0 -> s3 [67, 67] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s4 [67, 67] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s1 [68, 65535] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [0, 66] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [0, 65535] { R5125 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s4 [67, 67] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [68, 65535] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [0, 66] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s2 [0, 65535] { R5125 += 1, R5004 += 1, R5005 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s4 [67, 67] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [68, 65535] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s3 -> s3 [0, 65535] { R5125 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R5125 += 1 };
  s4 -> s4 [0, 65535] { R5125 += 1, R5005 += 1, R1462 += 1, R1463 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R5125 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_62 {
  init s0;
  s0 -> s1 [0, 66] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s2 [0, 65535] { R5127 += 1, R5006 += 1, R5007 += 1 };
  s0 -> s0 [0, 65535] { R5126 += 1, R5127 += 1 };
  s0 -> s3 [67, 67] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s4 [67, 67] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s1 [68, 65535] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 66] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 65535] { R5127 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s4 [67, 67] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [68, 65535] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [0, 66] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s2 [0, 65535] { R5127 += 1, R5006 += 1, R5007 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s4 [67, 67] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [68, 65535] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s3 -> s3 [0, 65535] { R5127 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5127 += 1, R5007 += 1, R1472 += 1, R1473 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R5127 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5127 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_63 {
  init s0;
  s0 -> s1 [0, 66] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s0 [0, 65535] { R5128 += 1, R5129 += 1 };
  s0 -> s2 [0, 65535] { R5129 += 1, R5008 += 1, R5009 += 1 };
  s0 -> s3 [67, 67] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s4 [67, 67] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s1 [68, 65535] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [0, 66] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5129 += 1 };
  s1 -> s3 [67, 67] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s4 [67, 67] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [68, 65535] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [0, 66] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s2 [0, 65535] { R5129 += 1, R5008 += 1, R5009 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s4 [67, 67] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [68, 65535] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s3 -> s3 [0, 65535] { R5129 += 1, R5009 += 1, R1480 += 1, R1481 += 1 };
  s3 -> s6 [0, 65535] { R5129 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5129 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5129 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_64 {
  init s0;
  s0 -> s1 [0, 66] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s2 [0, 65535] { R5131 += 1, R5010 += 1, R5011 += 1 };
  s0 -> s0 [0, 65535] { R5130 += 1, R5131 += 1 };
  s0 -> s3 [67, 67] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s4 [67, 67] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s1 [68, 65535] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [0, 66] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [0, 65535] { R5131 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s4 [67, 67] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [68, 65535] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [0, 66] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s2 [0, 65535] { R5131 += 1, R5010 += 1, R5011 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s4 [67, 67] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [68, 65535] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s3 -> s3 [0, 65535] { R5131 += 1, R5011 += 1, R1490 += 1, R1491 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R5131 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5131 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5131 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_65 {
  init s0;
  s0 -> s1 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s0 -> s2 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s0 -> s3 [0, 66] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s0 -> s4 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s0 -> s0 [0, 65535] { R5132 += 1, R5133 += 1 };
  s0 -> s5 [0, 65535] { R5133 += 1, R5012 += 1, R5013 += 1 };
  s0 -> s6 [67, 67] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s0 -> s7 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s0 -> s8 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s0 -> s9 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s0 -> s10 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s0 -> s11 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s0 -> s12 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s0 -> s13 [67, 67] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s0 -> s2 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s0 -> s4 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s0 -> s1 [68, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s0 -> s3 [68, 65535] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s0 -> s2 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s0 -> s4 [71, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s0 -> s2 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s1 -> s1 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s1 -> s2 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s1 -> s4 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s1 -> s7 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s1 -> s8 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s1 -> s9 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s1 -> s10 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s1 -> s11 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s1 -> s12 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s1 -> s2 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s1 -> s4 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s1 -> s1 [68, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s1 -> s2 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s1 -> s4 [71, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s1 -> s2 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s2 -> s2 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s2 -> s2 [0, 65535] { R5133 += 1 };
  s2 -> s14 [0, 65535];
  s2 -> s9 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s2 -> s12 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s2 -> s2 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s2 -> s2 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s2 -> s2 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s3 -> s1 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s3 -> s2 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s3 -> s3 [0, 66] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s3 -> s4 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s3 -> s6 [67, 67] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s3 -> s7 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s3 -> s8 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s3 -> s9 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s3 -> s10 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s3 -> s11 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s3 -> s12 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s3 -> s13 [67, 67] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s3 -> s2 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s3 -> s4 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s3 -> s1 [68, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s3 -> s3 [68, 65535] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s3 -> s2 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s3 -> s4 [71, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s3 -> s2 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s4 -> s2 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s4 -> s4 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s4 -> s7 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s4 -> s9 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s4 -> s10 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s4 -> s12 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s4 -> s2 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s4 -> s4 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s4 -> s2 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s4 -> s4 [71, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s4 -> s2 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s5 -> s1 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s5 -> s2 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s5 -> s3 [0, 66] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s5 -> s4 [0, 66] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s5 -> s5 [0, 65535] { R5133 += 1, R5012 += 1, R5013 += 1 };
  s5 -> s6 [67, 67] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s5 -> s7 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s5 -> s8 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s5 -> s9 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s5 -> s10 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s5 -> s11 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s5 -> s12 [67, 67] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s5 -> s13 [67, 67] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s5 -> s2 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s5 -> s4 [68, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s5 -> s1 [68, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s5 -> s3 [68, 65535] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s5 -> s2 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s5 -> s4 [71, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s5 -> s2 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s6 -> s9 [0, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s6 -> s10 [0, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s6 -> s6 [0, 65535] { R5133 += 1, R5013 += 1, R4884 += 1, R4885 += 1 };
  s6 -> s8 [0, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s6 -> s9 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s6 -> s10 [71, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s6 -> s9 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s8 -> s9 [0, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s8 -> s10 [0, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s8 -> s8 [0, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4886 += 1, R4887 += 1 };
  s8 -> s9 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s8 -> s10 [71, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s8 -> s9 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s9 -> s9 [0, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s9 -> s9 [0, 65535] { R5133 += 1 };
  s9 -> s14 [0, 65535];
  s9 -> s9 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s9 -> s9 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s10 -> s9 [0, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s10 -> s10 [0, 69] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s10 -> s9 [71, 75] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s10 -> s10 [71, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4888 += 1, R4889 += 1 };
  s10 -> s9 [77, 65535] { R5133 += 1, R5013 += 1, R4885 += 1, R4887 += 1, R4889 += 1 };
  s12 -> s12 [0, 65535] { R5133 += 1 };
  s12 -> s14 [0, 65535];
  s14 -> s14 [0, 65535];
  accepting s2, s9, s12, s14;
};
automaton value2_66 {
  init s0;
  s0 -> s1 [0, 66] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s0 -> s2 [0, 65535] { R5135 += 1, R5014 += 1, R5015 += 1 };
  s0 -> s0 [0, 65535] { R5134 += 1, R5135 += 1 };
  s0 -> s3 [67, 67] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s0 -> s4 [67, 67] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s0 -> s1 [68, 65535] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s1 -> s1 [0, 66] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R5135 += 1 };
  s1 -> s3 [67, 67] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s1 -> s4 [67, 67] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s1 -> s1 [68, 65535] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s2 -> s1 [0, 66] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s2 -> s2 [0, 65535] { R5135 += 1, R5014 += 1, R5015 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s2 -> s4 [67, 67] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s2 -> s1 [68, 65535] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R5135 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R5135 += 1, R5015 += 1, R4896 += 1, R4897 += 1 };
  s4 -> s6 [0, 65535] { R5135 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R5135 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P17
automaton P17_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R4963 && R4 - R5135 = 1 && R28 - R4963 = -1 && R29 = R4963 && R30 - R4963 = -1 && R31 = R4963 && R32 = 0 && R33 = 1 && R34 = 0 && R35 = 1 && R36 = R5135 && R37 - R5135 = 1 && R38 = R5135 && R39 - R5135 = 1 && R40 = 0 && R41 = 1 && R42 = 0 && R43 = 1 && R1331 + R1330 + -1*R4891 + -1*R4885 = 0 && R1349 + R1346 + R1425 + R1420 + R1489 + R1484 + -1*R4895 + -1*R4889 - R1441 - R1447 - R1359 - R1363 = 0 && R1362 + R1358 + R1446 + R1440 + R4894 + R4888 = 0 && R1376 + R1374 = 0 && R1377 + R1375 + -1*R4891 + -1*R4885 = 0 && R1476 + R1472 = 0 && R1477 + R1473 + -1*R4891 + -1*R4885 = 0 && R1478 + R1474 = 0 && R1479 + R1475 = 0 && R4890 + R4884 = 0 && R4892 + R4886 = 0 && R4893 + R4887 = 0 && R4910 = 0 && R4911 = R4963 && R4912 = 0 && R4913 = R4963 && R4914 = 0 && R4915 = R4963 && R4916 = 0 && R4917 = R4963 && R4918 = 0 && R4919 = R4963 && R4920 = 0 && R4921 = R4963 && R4922 = 0 && R4923 = R4963 && R4924 = 0 && R4925 = R4963 && R4926 = 0 && R4927 = R4963 && R4928 = 0 && R4929 = R4963 && R4930 = 0 && R4931 = R4963 && R4932 = 0 && R4933 = R4963 && R4934 = 0 && R4935 = R4963 && R4936 = 0 && R4937 = R4963 && R4938 = 0 && R4939 = R4963 && R4940 = 0 && R4941 = R4963 && R4942 = 0 && R4943 = R4963 && R4944 = 0 && R4945 = R4963 && R4946 = 0 && R4947 = R4963 && R4948 = 0 && R4949 = R4963 && R4950 = 0 && R4951 = R4963 && R4952 = 0 && R4953 = R4963 && R4954 = 0 && R4955 = R4963 && R4956 = 0 && R4957 = R4963 && R4958 = 0 && R4959 = R4963 && R4960 = 0 && R4961 = R4963 && R4962 = 0 && R4966 = 0 && R4967 = 0 && R5012 = 0 && R5013 = 0 && R5016 = 0 && R5017 = R5135 && R5018 = 0 && R5019 = R5135 && R5020 = 0 && R5021 = R5135 && R5022 = 0 && R5023 = R5135 && R5024 = 0 && R5025 = R5135 && R5026 = 0 && R5027 = R5135 && R5028 = 0 && R5029 = R5135 && R5030 = 0 && R5031 = R5135 && R5032 = 0 && R5033 = R5135 && R5034 = 0 && R5035 = R5135 && R5036 = 0 && R5037 = R5135 && R5038 = 0 && R5039 = R5135 && R5040 = 0 && R5041 = R5135 && R5042 = 0 && R5043 = R5135 && R5044 = 0 && R5045 = R5135 && R5046 = 0 && R5047 = R5135 && R5048 = 0 && R5049 = R5135 && R5050 = 0 && R5051 = R5135 && R5052 = 0 && R5053 = R5135 && R5054 = 0 && R5055 = R5135 && R5056 = 0 && R5057 = R5135 && R5058 = 0 && R5059 = R5135 && R5060 = 0 && R5061 = R5135 && R5062 = 0 && R5063 = R5135 && R5064 = 0 && R5065 = R5135 && R5066 = 0 && R5067 = R5135 && R5068 = 0 && R5069 = R5135 && R5070 = 0 && R5071 = R5135 && R5072 = 0 && R5073 = R5135 && R5074 = 0 && R5075 = R5135 && R5076 = 0 && R5077 = R5135 && R5078 = 0 && R5079 = R5135 && R5080 = 0 && R5081 = R5135 && R5082 = 0 && R5083 = R5135 && R5084 = 0 && R5085 = R5135 && R5086 = 0 && R5087 = R5135 && R5088 = 0 && R5089 = R5135 && R5090 = 0 && R5091 = R5135 && R5092 = 0 && R5093 = R5135 && R5094 = 0 && R5095 = R5135 && R5096 = 0 && R5097 = R5135 && R5098 = 0 && R5099 = R5135 && R5100 = 0 && R5101 = R5135 && R5102 = 0 && R5103 = R5135 && R5104 = 0 && R5105 = R5135 && R5106 = 0 && R5107 = R5135 && R5108 = 0 && R5109 = R5135 && R5110 = 0 && R5111 = R5135 && R5112 = 0 && R5113 = R5135 && R5114 = 0 && R5115 = R5135 && R5116 = 0 && R5117 = R5135 && R5118 = 0 && R5119 = R5135 && R5120 = 0 && R5121 = R5135 && R5122 = 0 && R5123 = R5135 && R5124 = 0 && R5125 = R5135 && R5126 = 0 && R5127 = R5135 && R5128 = 0 && R5129 = R5135 && R5130 = 0 && R5131 = R5135 && R5132 = 0 && R5133 = R5135 && R5134 = 0 && R18 < 1 && R21 < 1 && R1333 + R1332 < 1 && R1355 + R1352 + R1435 + R1430 + R1499 + R1494 < 1 && -1*R4895 + -1*R4889 - R1441 - R1447 - R1359 - R1363 < 1 && -1*R1383 + -1*R1380 < 1 && R1389 + R1386 < 1 && -1*R4891 + -1*R4885 < 1 && 0 < R4963 && -1 < R5135 && (R1363 + R1359 + R1447 + R1441 + R4895 + R4889 != 0 || R1373 + R1368 + R1461 + R1454 + R4909 + R4902 = 0 || (R1371 + R1366 + R1459 + R1452 + R4907 + R4900 = 0 && R1372 + R1367 + R1460 + R1453 + R4908 + R4901 = 0)) && (R1371 + R1366 + R1459 + R1452 + R4907 + R4900 != 0 || R1363 + R1359 + R1447 + R1441 + R4895 + R4889 + -1*R4908 + -1*R4901 - R1453 - R1460 - R1367 - R1372 = 0 || R1363 + R1359 + R1447 + R1441 + R4895 + R4889 < 1) && (R1381 + R1378 != 0 || R1382 + R1379 + -1*R4891 + -1*R4885 = 0 || R1383 + R1380 < 1) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1396 + R1392 = 0 && R1397 + R1393 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1405 + R1400 = 0 && R1406 + R1401 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1414 + R1410 = 0 && R1415 + R1411 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1423 + R1418 = 0 && R1424 + R1419 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1433 + R1428 = 0 && R1434 + R1429 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1444 + R1438 = 0 && R1445 + R1439 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1457 + R1450 = 0 && R1458 + R1451 = 0)) && (R1383 + R1380 != 0 || ((R1381 + R1378 != 0 || R1382 + R1379 + -1*R4891 + -1*R4885 = 0 || R4891 + R4885 < 1) && (R1381 + R1378 = 0 || R4891 + R4885 < 1))) && (R1387 + R1384 != 0 || R1388 + R1385 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1394 + R1390 != 0 || R1395 + R1391 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1396 + R1392 != 0 || R1383 + R1380 + -1*R1397 + -1*R1393 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 != 0 || R1404 + R1399 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1405 + R1400 != 0 || R1383 + R1380 + -1*R1406 + -1*R1401 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 != 0 || R1413 + R1409 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1414 + R1410 != 0 || R1383 + R1380 + -1*R1415 + -1*R1411 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 != 0 || R1422 + R1417 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1423 + R1418 != 0 || R1383 + R1380 + -1*R1424 + -1*R1419 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 != 0 || R1432 + R1427 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1433 + R1428 != 0 || R1383 + R1380 + -1*R1434 + -1*R1429 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 != 0 || R1443 + R1437 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1444 + R1438 != 0 || R1383 + R1380 + -1*R1445 + -1*R1439 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 != 0 || R1456 + R1449 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1457 + R1450 != 0 || R1383 + R1380 + -1*R1458 + -1*R1451 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 != 0 || R1468 + R1463 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1485 + R1480 != 0 || R1486 + R1481 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1495 + R1490 != 0 || R1496 + R1491 + -1*R4891 + -1*R4885 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R4903 + R4896 != 0 || R4891 + R4885 + -1*R4904 + -1*R4897 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R27 = 0 || (R4964 = 0 && R4965 = 0)) && (R27 = 0 || (R4968 = 0 && R4969 = 0)) && (R27 = 0 || (R4970 = 0 && R4971 = 0)) && (R27 = 0 || (R4972 = 0 && R4973 = 0)) && (R27 = 0 || (R4974 = 0 && R4975 = 0)) && (R27 = 0 || (R4976 = 0 && R4977 = 0)) && (R27 = 0 || (R4978 = 0 && R4979 = 0)) && (R27 = 0 || (R4980 = 0 && R4981 = 0)) && (R27 = 0 || (R4982 = 0 && R4983 = 0)) && (R27 = 0 || (R4984 = 0 && R4985 = 0)) && (R27 = 0 || (R4986 = 0 && R4987 = 0)) && (R27 = 0 || (R4988 = 0 && R4989 = 0)) && (R27 = 0 || (R4990 = 0 && R4991 = 0)) && (R27 = 0 || (R4992 = 0 && R4993 = 0)) && (R27 = 0 || (R4994 = 0 && R4995 = 0)) && (R27 = 0 || (R4996 = 0 && R4997 = 0)) && (R27 = 0 || (R4998 = 0 && R4999 = 0)) && (R27 = 0 || (R5000 = 0 && R5001 = 0)) && (R27 = 0 || (R5002 = 0 && R5003 = 0)) && (R27 = 0 || (R5004 = 0 && R5005 = 0)) && (R27 = 0 || (R5006 = 0 && R5007 = 0)) && (R27 = 0 || (R5008 = 0 && R5009 = 0)) && (R27 = 0 || (R5010 = 0 && R5011 = 0)) && (R27 = 0 || (R5014 = 0 && R5015 = 0)) && (R1339 + R1336 = 0 || (R1337 + R1334 = 0 && R1338 + R1335 = 0)) && (R1339 + R1336 = 0 || (R1342 + R1340 = 0 && R1343 + R1341 = 0)) && (R1339 + R1336 = 0 || (R1347 + R1344 = 0 && R1348 + R1345 = 0)) && (R1339 + R1336 = 0 || (R1353 + R1350 = 0 && R1354 + R1351 = 0)) && (R1339 + R1336 = 0 || (R1360 + R1356 = 0 && R1361 + R1357 = 0)) && (R1339 + R1336 = 0 || (R1369 + R1364 = 0 && R1370 + R1365 = 0)) && (R1371 + R1366 + R1459 + R1452 + R4907 + R4900 = 0 || R1363 + R1359 + R1447 + R1441 + R4895 + R4889 < 1) && (R1381 + R1378 = 0 || R1383 + R1380 < 1) && (R1387 + R1384 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1394 + R1390 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1396 + R1392 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1405 + R1400 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1414 + R1410 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1423 + R1418 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1433 + R1428 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1444 + R1438 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1457 + R1450 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1471 + R1466 = 0 || (R1469 + R1464 = 0 && R1470 + R1465 = 0)) && (R1471 + R1466 = 0 || (R1487 + R1482 = 0 && R1488 + R1483 = 0)) && (R1471 + R1466 = 0 || (R1497 + R1492 = 0 && R1498 + R1493 = 0)) && (R1471 + R1466 = 0 || (R4905 + R4898 = 0 && R4906 + R4899 = 0)) && (R1485 + R1480 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R1495 + R1490 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0)) && (R4903 + R4896 = 0 || (R1383 + R1380 = 0 && R4891 + R4885 = 0));
// End of Parikh automata intersection problem
