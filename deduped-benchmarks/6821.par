// Parikh automata intersection problem, generated by OSTRICH+
counter int R1330, R1331, R1332, R1333, R1334, R1335, R1336, R1337, R1338, R1339, R1340, R1341, R1342, R1343, R1344, R1345, R1346, R1347, R1348, R1349, R1350, R1351, R1352, R1353, R1354, R1355, R1356, R1357, R1358, R1359, R1360, R1361, R1362, R1363, R1364, R1365, R1366, R1367, R1368, R1369, R1370, R1371, R1372, R1373, R1374, R1375, R1376, R1377, R1378, R1379, R1380, R1381, R1382, R1383, R1384, R1385, R1386, R1387, R1388, R1389, R1390, R1391, R1392, R1393, R1394, R1395, R1396, R1397, R1398, R1399, R1400, R1401, R1402, R1403, R1404, R1405, R1406, R1407, R1408, R1409, R1410, R1411, R1412, R1413, R1414, R1415, R1416, R1417, R1418, R1419, R1420, R1421, R1422, R1423, R1424, R1425, R1426, R1427, R1428, R1429, R1430, R1431, R1432, R1433, R1434, R1435, R1436, R1437, R1438, R1439, R1440, R1441, R1442, R1443, R1444, R1445, R1446, R1447, R1448, R1449, R1450, R1451, R1452, R1453, R1454, R1455, R1456, R1457, R1458, R1459, R1460, R1461, R1462, R1463, R1464, R1465, R1466, R1467, R1468, R1469, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R1477, R1478, R1479, R1480, R1481, R1482, R1483, R1484, R1485, R1486, R1487, R1488, R1489, R1490, R1491, R1492, R1493, R1494, R1495, R1496, R1497, R1498, R1499, R18, R21, R26, R27, R28, R29, R3, R30, R31, R3192, R3193, R3194, R3195, R3196, R3197, R3198, R3199, R32, R3200, R3201, R3202, R3203, R3204, R3205, R3206, R3207, R3208, R3209, R3210, R3211, R3212, R3213, R3214, R3215, R3216, R3217, R3218, R3219, R3220, R3221, R3222, R3223, R3224, R3225, R3226, R3227, R3228, R3229, R3230, R3231, R3232, R3233, R3234, R3235, R3236, R3237, R3238, R3239, R3240, R3241, R3242, R3243, R3244, R3245, R3246, R3247, R3248, R3249, R3250, R3251, R3252, R3253, R3254, R3255, R3256, R3257, R3258, R3259, R3260, R3261, R3262, R3263, R3264, R3265, R3266, R3267, R3268, R3269, R3270, R3271, R3272, R3273, R3274, R3275, R3276, R3277, R3278, R3279, R3280, R3281, R3282, R3283, R3284, R3285, R3286, R3287, R3288, R3289, R3290, R3291, R3292, R3293, R3294, R3295, R3296, R3297, R3298, R3299, R33, R3300, R3301, R3302, R3303, R3304, R3305, R3306, R3307, R3308, R3309, R3310, R3311, R3312, R3313, R3314, R3315, R3316, R3317, R3318, R3319, R3320, R3321, R3322, R3323, R3324, R3325, R3326, R3327, R3328, R3329, R3330, R3331, R3332, R3333, R3334, R3335, R3336, R3337, R3338, R3339, R3340, R3341, R3342, R3343, R3344, R3345, R3346, R3347, R3348, R3349, R3350, R3351, R3352, R3353, R3354, R3355, R3356, R3357, R3358, R3359, R3360, R3361, R3362, R3363, R3364, R3365, R3366, R3367, R3368, R3369, R3370, R3371, R3372, R3373, R3374, R3375, R3376, R3377, R3378, R3379, R3380, R3381, R3382, R3383, R3384, R3385, R3386, R3387, R3388, R3389, R3390, R3391, R3392, R3393, R3394, R3395, R3396, R3397, R3398, R3399, R34, R3400, R3401, R3402, R3403, R3404, R3405, R3406, R3407, R3408, R3409, R3410, R3411, R3412, R3413, R3414, R3415, R3416, R3417, R3418, R3419, R3420, R3421, R3422, R3423, R3424, R3425, R3426, R3427, R3428, R3429, R3430, R3431, R3432, R3433, R3434, R3435, R3436, R3437, R3438, R3439, R3440, R3441, R3442, R3443, R35, R36, R37, R38, R39, R4, R40, R41, R42, R43, R5, R6, R7, R8;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining P44
automaton P44_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s0 -> s1 [9, 9] { R37 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R38 += 1, R39 += 1 };
  s1 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R41 += 1 };
  s0 -> s0 [0, 65535] { R40 += 1, R41 += 1 };
  s0 -> s2 [9, 13] { R41 += 1 };
  s0 -> s1 [14, 31] { R41 += 1 };
  s0 -> s2 [32, 32] { R41 += 1 };
  s0 -> s1 [33, 65535] { R41 += 1 };
  s1 -> s1 [0, 65535] { R41 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R41 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R3325 += 1 };
  s0 -> s0 [0, 65535] { R3324 += 1, R3325 += 1 };
  s0 -> s2 [67, 67] { R3325 += 1 };
  s0 -> s1 [68, 65535] { R3325 += 1 };
  s1 -> s1 [0, 64] { R3325 += 1 };
  s1 -> s2 [67, 67] { R3325 += 1 };
  s1 -> s1 [68, 65535] { R3325 += 1 };
  s2 -> s2 [0, 64] { R3325 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R3325 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R3327 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R3326 += 1, R3327 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3327 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R3329 += 1 };
  s0 -> s0 [0, 65535] { R3328 += 1, R3329 += 1 };
  s0 -> s2 [0, 65535] { R3329 += 1, R18 += 1 };
  s0 -> s3 [67, 67] { R3329 += 1 };
  s0 -> s1 [68, 65535] { R3329 += 1 };
  s1 -> s1 [0, 66] { R3329 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R3329 += 1 };
  s1 -> s1 [68, 65535] { R3329 += 1 };
  s2 -> s1 [0, 66] { R3329 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3329 += 1, R18 += 1 };
  s2 -> s3 [67, 67] { R3329 += 1 };
  s2 -> s1 [68, 65535] { R3329 += 1 };
  s3 -> s3 [0, 65535] { R3329 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R3331 += 1, R29 += 1 };
  s0 -> s2 [0, 65535] { R3331 += 1, R28 += 1, R29 += 1 };
  s0 -> s0 [0, 65535] { R3330 += 1, R3331 += 1 };
  s0 -> s3 [9, 13] { R3331 += 1, R29 += 1 };
  s0 -> s1 [14, 31] { R3331 += 1, R29 += 1 };
  s0 -> s3 [32, 32] { R3331 += 1, R29 += 1 };
  s0 -> s1 [33, 65535] { R3331 += 1, R29 += 1 };
  s1 -> s5 [0, 65535] { R3331 += 1 };
  s1 -> s1 [0, 65535] { R3331 += 1, R29 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R3331 += 1, R29 += 1 };
  s2 -> s2 [0, 65535] { R3331 += 1, R28 += 1, R29 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R3331 += 1, R29 += 1 };
  s2 -> s1 [14, 31] { R3331 += 1, R29 += 1 };
  s2 -> s3 [32, 32] { R3331 += 1, R29 += 1 };
  s2 -> s1 [33, 65535] { R3331 += 1, R29 += 1 };
  s3 -> s1 [0, 65535] { R3331 += 1, R29 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3331 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R3333 += 1, R31 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R3333 += 1, R30 += 1, R31 += 1 };
  s0 -> s0 [0, 65535] { R3332 += 1, R3333 += 1 };
  s1 -> s4 [0, 65535] { R3333 += 1 };
  s1 -> s1 [0, 65535] { R3333 += 1, R31 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3333 += 1, R31 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R3333 += 1, R30 += 1, R31 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3333 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R3335 += 1, R33 += 1 };
  s0 -> s2 [0, 65535] { R3335 += 1, R32 += 1, R33 += 1 };
  s0 -> s0 [0, 65535] { R3334 += 1, R3335 += 1 };
  s0 -> s3 [9, 13] { R3335 += 1, R33 += 1 };
  s0 -> s1 [14, 31] { R3335 += 1, R33 += 1 };
  s0 -> s3 [32, 32] { R3335 += 1, R33 += 1 };
  s0 -> s1 [33, 65535] { R3335 += 1, R33 += 1 };
  s1 -> s1 [0, 65535] { R3335 += 1, R33 += 1 };
  s1 -> s5 [0, 65535] { R3335 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R3335 += 1, R33 += 1 };
  s2 -> s2 [0, 65535] { R3335 += 1, R32 += 1, R33 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R3335 += 1, R33 += 1 };
  s2 -> s1 [14, 31] { R3335 += 1, R33 += 1 };
  s2 -> s3 [32, 32] { R3335 += 1, R33 += 1 };
  s2 -> s1 [33, 65535] { R3335 += 1, R33 += 1 };
  s3 -> s1 [0, 65535] { R3335 += 1, R33 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3335 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R3337 += 1, R34 += 1, R35 += 1 };
  s0 -> s2 [0, 65535] { R3337 += 1, R35 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R3336 += 1, R3337 += 1 };
  s1 -> s1 [0, 65535] { R3337 += 1, R34 += 1, R35 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R3337 += 1, R35 += 1, R6 += 1 };
  s2 -> s3 [0, 65535] { R3337 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3337 += 1, R35 += 1, R6 += 1 };
  s3 -> s3 [0, 65535] { R3337 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R3339 += 1, R3219 += 1 };
  s0 -> s2 [0, 65535] { R3339 += 1, R3218 += 1, R3219 += 1 };
  s0 -> s0 [0, 65535] { R3338 += 1, R3339 += 1 };
  s0 -> s1 [68, 65535] { R3339 += 1, R3219 += 1 };
  s1 -> s1 [0, 66] { R3339 += 1, R3219 += 1 };
  s1 -> s1 [0, 65535] { R3339 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [68, 65535] { R3339 += 1, R3219 += 1 };
  s2 -> s1 [0, 66] { R3339 += 1, R3219 += 1 };
  s2 -> s2 [0, 65535] { R3339 += 1, R3218 += 1, R3219 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [68, 65535] { R3339 += 1, R3219 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R3341 += 1, R3221 += 1, R26 += 1 };
  s0 -> s2 [0, 65535] { R3341 += 1, R3220 += 1, R3221 += 1 };
  s0 -> s0 [0, 65535] { R3340 += 1, R3341 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3341 += 1, R3221 += 1, R26 += 1 };
  s1 -> s4 [0, 65535] { R3341 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3341 += 1, R3221 += 1, R26 += 1 };
  s2 -> s2 [0, 65535] { R3341 += 1, R3220 += 1, R3221 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3341 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R3343 += 1, R3223 += 1 };
  s0 -> s2 [0, 65535] { R3343 += 1, R3222 += 1, R3223 += 1 };
  s0 -> s0 [0, 65535] { R3342 += 1, R3343 += 1 };
  s0 -> s1 [70, 65535] { R3343 += 1, R3223 += 1 };
  s1 -> s1 [0, 67] { R3343 += 1, R3223 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3343 += 1 };
  s1 -> s1 [70, 65535] { R3343 += 1, R3223 += 1 };
  s2 -> s1 [0, 67] { R3343 += 1, R3223 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3343 += 1, R3222 += 1, R3223 += 1 };
  s2 -> s1 [70, 65535] { R3343 += 1, R3223 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s0 [0, 65535] { R3344 += 1, R3345 += 1 };
  s0 -> s1 [0, 65535] { R3345 += 1, R3225 += 1, R1331 += 1 };
  s0 -> s2 [0, 65535] { R3345 += 1, R3224 += 1, R3225 += 1 };
  s1 -> s4 [0, 65535] { R3345 += 1 };
  s1 -> s1 [0, 65535] { R3345 += 1, R3225 += 1, R1331 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3345 += 1, R3225 += 1, R1331 += 1 };
  s2 -> s2 [0, 65535] { R3345 += 1, R3224 += 1, R3225 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3345 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3347 += 1, R3227 += 1 };
  s0 -> s2 [0, 65535] { R3347 += 1, R3226 += 1, R3227 += 1 };
  s0 -> s0 [0, 65535] { R3346 += 1, R3347 += 1 };
  s0 -> s3 [0, 65535] { R3347 += 1, R3227 += 1, R1333 += 1 };
  s0 -> s1 [71, 65535] { R3347 += 1, R3227 += 1 };
  s1 -> s1 [0, 69] { R3347 += 1, R3227 += 1 };
  s1 -> s1 [0, 65535] { R3347 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [71, 65535] { R3347 += 1, R3227 += 1 };
  s2 -> s1 [0, 69] { R3347 += 1, R3227 += 1 };
  s2 -> s2 [0, 65535] { R3347 += 1, R3226 += 1, R3227 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R3347 += 1, R3227 += 1, R1333 += 1 };
  s2 -> s1 [71, 65535] { R3347 += 1, R3227 += 1 };
  s3 -> s1 [0, 69] { R3347 += 1, R3227 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3347 += 1, R3227 += 1, R1333 += 1 };
  s3 -> s5 [0, 65535] { R3347 += 1 };
  s3 -> s1 [71, 65535] { R3347 += 1, R3227 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3347 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s0 [0, 65535] { R3348 += 1, R3349 += 1 };
  s0 -> s1 [0, 65535] { R3349 += 1, R3229 += 1, R1338 += 1, R1339 += 1 };
  s0 -> s2 [0, 65535] { R3349 += 1, R3229 += 1, R1337 += 1, R1338 += 1 };
  s0 -> s3 [0, 65535] { R3349 += 1, R3228 += 1, R3229 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3349 += 1, R3229 += 1, R1338 += 1, R1339 += 1 };
  s1 -> s5 [0, 65535] { R3349 += 1 };
  s1 -> s6 [0, 65535] { R3349 += 1, R3229 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3349 += 1, R3229 += 1, R1338 += 1, R1339 += 1 };
  s2 -> s5 [0, 65535] { R3349 += 1 };
  s2 -> s2 [0, 65535] { R3349 += 1, R3229 += 1, R1337 += 1, R1338 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3349 += 1, R3229 += 1, R1338 += 1, R1339 += 1 };
  s3 -> s2 [0, 65535] { R3349 += 1, R3229 += 1, R1337 += 1, R1338 += 1 };
  s3 -> s3 [0, 65535] { R3349 += 1, R3228 += 1, R3229 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3349 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3349 += 1 };
  s6 -> s6 [0, 65535] { R3349 += 1, R3229 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s0 -> s2 [0, 65535] { R3351 += 1, R3230 += 1, R3231 += 1 };
  s0 -> s3 [0, 65535] { R3351 += 1, R3231 += 1, R1342 += 1, R1343 += 1 };
  s0 -> s0 [0, 65535] { R3350 += 1, R3351 += 1 };
  s0 -> s4 [70, 70] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s0 -> s5 [70, 70] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s0 -> s1 [77, 65535] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s1 -> s1 [0, 69] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s1 -> s1 [0, 65535] { R3351 += 1, R3231 += 1 };
  s1 -> s6 [0, 65535] { R3351 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s1 -> s5 [70, 70] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s1 -> s1 [77, 65535] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s2 -> s1 [0, 69] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s2 -> s2 [0, 65535] { R3351 += 1, R3230 += 1, R3231 += 1 };
  s2 -> s3 [0, 65535] { R3351 += 1, R3231 += 1, R1342 += 1, R1343 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s2 -> s5 [70, 70] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s2 -> s1 [77, 65535] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s3 -> s1 [0, 69] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s3 -> s3 [0, 65535] { R3351 += 1, R3231 += 1, R1342 += 1, R1343 += 1 };
  s3 -> s6 [0, 65535] { R3351 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [70, 70] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s3 -> s5 [70, 70] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s3 -> s1 [77, 65535] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s4 -> s4 [0, 65535] { R3351 += 1, R3231 += 1 };
  s4 -> s6 [0, 65535] { R3351 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 70] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s5 -> s5 [0, 65535] { R3351 += 1, R3231 += 1 };
  s5 -> s6 [0, 65535] { R3351 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [77, 65535] { R3351 += 1, R3231 += 1, R1343 += 1 };
  s6 -> s6 [0, 65535] { R3351 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s2 [0, 65535] { R3353 += 1, R3232 += 1, R3233 += 1 };
  s0 -> s0 [0, 65535] { R3352 += 1, R3353 += 1 };
  s0 -> s3 [0, 65535] { R3353 += 1, R3233 += 1, R1347 += 1, R1348 += 1 };
  s0 -> s4 [70, 70] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s5 [70, 70] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s1 [71, 65535] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [0, 69] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [0, 65535] { R3353 += 1, R3233 += 1 };
  s1 -> s6 [0, 65535] { R3353 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s5 [70, 70] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [71, 65535] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [0, 69] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s2 [0, 65535] { R3353 += 1, R3232 += 1, R3233 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s3 [0, 65535] { R3353 += 1, R3233 += 1, R1347 += 1, R1348 += 1 };
  s2 -> s4 [70, 70] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s5 [70, 70] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [71, 65535] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [0, 69] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s6 [0, 65535] { R3353 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R3353 += 1, R3233 += 1, R1347 += 1, R1348 += 1 };
  s3 -> s4 [70, 70] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s5 [70, 70] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [71, 65535] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s4 -> s4 [0, 65535] { R3353 += 1, R3233 += 1 };
  s4 -> s6 [0, 65535] { R3353 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R3353 += 1 };
  s5 -> s5 [0, 65535] { R3353 += 1, R3233 += 1, R1348 += 1, R1349 += 1 };
  s5 -> s7 [0, 65535] { R3353 += 1, R3233 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3353 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R3353 += 1 };
  s7 -> s7 [0, 65535] { R3353 += 1, R3233 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s2 [0, 65535] { R3355 += 1, R3235 += 1, R1353 += 1, R1354 += 1 };
  s0 -> s3 [0, 65535] { R3355 += 1, R3234 += 1, R3235 += 1 };
  s0 -> s0 [0, 65535] { R3354 += 1, R3355 += 1 };
  s0 -> s4 [70, 70] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s5 [70, 70] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s1 [71, 65535] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [0, 69] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [0, 65535] { R3355 += 1, R3235 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3355 += 1 };
  s1 -> s4 [70, 70] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s5 [70, 70] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [71, 65535] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [0, 69] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s2 [0, 65535] { R3355 += 1, R3235 += 1, R1353 += 1, R1354 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R3355 += 1 };
  s2 -> s4 [70, 70] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s5 [70, 70] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [71, 65535] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [0, 69] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s2 [0, 65535] { R3355 += 1, R3235 += 1, R1353 += 1, R1354 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3355 += 1, R3234 += 1, R3235 += 1 };
  s3 -> s4 [70, 70] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s5 [70, 70] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [71, 65535] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s4 -> s4 [0, 65535] { R3355 += 1, R3235 += 1, R1354 += 1, R1355 += 1 };
  s4 -> s8 [0, 65535] { R3355 += 1, R3235 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3355 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3355 += 1 };
  s5 -> s5 [0, 65535] { R3355 += 1, R3235 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3355 += 1 };
  s8 -> s8 [0, 65535] { R3355 += 1, R3235 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3355 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s2 [0, 65535] { R3357 += 1, R3236 += 1, R3237 += 1 };
  s0 -> s3 [0, 65535] { R3357 += 1, R3237 += 1, R1360 += 1, R1361 += 1 };
  s0 -> s0 [0, 65535] { R3356 += 1, R3357 += 1 };
  s0 -> s4 [70, 70] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s5 [70, 70] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s1 [71, 65535] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [0, 69] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s7 [0, 65535] { R3357 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R3357 += 1, R3237 += 1 };
  s1 -> s4 [70, 70] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s5 [70, 70] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [71, 65535] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [0, 69] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s2 [0, 65535] { R3357 += 1, R3236 += 1, R3237 += 1 };
  s2 -> s3 [0, 65535] { R3357 += 1, R3237 += 1, R1360 += 1, R1361 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s5 [70, 70] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [71, 65535] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [0, 69] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s7 [0, 65535] { R3357 += 1 };
  s3 -> s3 [0, 65535] { R3357 += 1, R3237 += 1, R1360 += 1, R1361 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [70, 70] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s5 [70, 70] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [71, 65535] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s4 -> s7 [0, 65535] { R3357 += 1 };
  s4 -> s4 [0, 65535] { R3357 += 1, R3237 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R3357 += 1, R3237 += 1 };
  s5 -> s7 [0, 65535] { R3357 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s5 [0, 65535] { R3357 += 1, R3237 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s6 -> s6 [0, 65535] { R3357 += 1, R3237 += 1 };
  s6 -> s7 [0, 65535] { R3357 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3357 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s2 [0, 65535] { R3359 += 1, R3238 += 1, R3239 += 1 };
  s0 -> s3 [0, 65535] { R3359 += 1, R3239 += 1, R1369 += 1, R1370 += 1 };
  s0 -> s0 [0, 65535] { R3358 += 1, R3359 += 1 };
  s0 -> s4 [70, 70] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s5 [70, 70] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s1 [71, 65535] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [0, 69] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3359 += 1 };
  s1 -> s1 [0, 65535] { R3359 += 1, R3239 += 1 };
  s1 -> s4 [70, 70] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s5 [70, 70] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [71, 65535] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [0, 69] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3359 += 1, R3238 += 1, R3239 += 1 };
  s2 -> s3 [0, 65535] { R3359 += 1, R3239 += 1, R1369 += 1, R1370 += 1 };
  s2 -> s4 [70, 70] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s5 [70, 70] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [71, 65535] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [0, 69] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3359 += 1, R3239 += 1, R1369 += 1, R1370 += 1 };
  s3 -> s7 [0, 65535] { R3359 += 1 };
  s3 -> s4 [70, 70] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s5 [70, 70] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [71, 65535] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3359 += 1, R3239 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s4 -> s8 [0, 65535] { R3359 += 1, R3239 += 1 };
  s4 -> s7 [0, 65535] { R3359 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3359 += 1, R3239 += 1 };
  s5 -> s7 [0, 65535] { R3359 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3359 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3359 += 1, R3239 += 1 };
  s8 -> s7 [0, 65535] { R3359 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s0 -> s2 [0, 65535] { R3361 += 1, R3240 += 1, R3241 += 1 };
  s0 -> s3 [0, 65535] { R3361 += 1, R3241 += 1, R1376 += 1, R1377 += 1 };
  s0 -> s0 [0, 65535] { R3360 += 1, R3361 += 1 };
  s0 -> s4 [70, 70] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s0 -> s1 [71, 65535] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s1 -> s1 [0, 69] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s1 -> s4 [70, 70] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s1 -> s1 [71, 65535] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s2 -> s1 [0, 69] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s2 -> s2 [0, 65535] { R3361 += 1, R3240 += 1, R3241 += 1 };
  s2 -> s3 [0, 65535] { R3361 += 1, R3241 += 1, R1376 += 1, R1377 += 1 };
  s2 -> s4 [70, 70] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s2 -> s1 [71, 65535] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s3 -> s1 [0, 69] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s3 -> s3 [0, 65535] { R3361 += 1, R3241 += 1, R1376 += 1, R1377 += 1 };
  s3 -> s4 [70, 70] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s3 -> s1 [71, 65535] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s4 -> s4 [0, 65535] { R3361 += 1, R3241 += 1, R1377 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3361 += 1, R3241 += 1 };
  s4 -> s7 [0, 65535] { R3361 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3361 += 1, R3241 += 1 };
  s6 -> s7 [0, 65535] { R3361 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3361 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R3362 += 1, R3363 += 1 };
  s0 -> s1 [0, 65535] { R3363 += 1, R3242 += 1, R3243 += 1 };
  s0 -> s2 [0, 65535] { R3363 += 1, R3243 += 1, R1382 += 1, R1383 += 1 };
  s0 -> s3 [0, 65535] { R3363 += 1, R3243 += 1, R1381 += 1, R1382 += 1 };
  s1 -> s1 [0, 65535] { R3363 += 1, R3242 += 1, R3243 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R3363 += 1, R3243 += 1, R1382 += 1, R1383 += 1 };
  s1 -> s3 [0, 65535] { R3363 += 1, R3243 += 1, R1381 += 1, R1382 += 1 };
  s2 -> s4 [0, 65535] { R3363 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3363 += 1, R3243 += 1, R1382 += 1, R1383 += 1 };
  s2 -> s6 [0, 65535] { R3363 += 1, R3243 += 1 };
  s3 -> s4 [0, 65535] { R3363 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3363 += 1, R3243 += 1, R1382 += 1, R1383 += 1 };
  s3 -> s3 [0, 65535] { R3363 += 1, R3243 += 1, R1381 += 1, R1382 += 1 };
  s4 -> s4 [0, 65535] { R3363 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R3363 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3363 += 1, R3243 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s0 -> s2 [0, 65535] { R3365 += 1, R3245 += 1, R1388 += 1, R1389 += 1 };
  s0 -> s3 [0, 65535] { R3365 += 1, R3245 += 1, R1387 += 1, R1388 += 1 };
  s0 -> s4 [0, 65535] { R3365 += 1, R3244 += 1, R3245 += 1 };
  s0 -> s0 [0, 65535] { R3364 += 1, R3365 += 1 };
  s0 -> s1 [71, 65535] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s1 -> s1 [0, 69] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s1 -> s1 [0, 65535] { R3365 += 1, R3245 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3365 += 1 };
  s1 -> s1 [71, 65535] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s2 -> s1 [0, 69] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s2 -> s2 [0, 65535] { R3365 += 1, R3245 += 1, R1388 += 1, R1389 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3365 += 1 };
  s2 -> s7 [0, 65535] { R3365 += 1, R3245 += 1 };
  s2 -> s1 [71, 65535] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s3 -> s1 [0, 69] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s3 -> s2 [0, 65535] { R3365 += 1, R3245 += 1, R1388 += 1, R1389 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3365 += 1, R3245 += 1, R1387 += 1, R1388 += 1 };
  s3 -> s6 [0, 65535] { R3365 += 1 };
  s3 -> s1 [71, 65535] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s4 -> s1 [0, 69] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s4 -> s2 [0, 65535] { R3365 += 1, R3245 += 1, R1388 += 1, R1389 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R3365 += 1, R3245 += 1, R1387 += 1, R1388 += 1 };
  s4 -> s4 [0, 65535] { R3365 += 1, R3244 += 1, R3245 += 1 };
  s4 -> s1 [71, 65535] { R3365 += 1, R3245 += 1, R1388 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3365 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3365 += 1 };
  s7 -> s7 [0, 65535] { R3365 += 1, R3245 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s0 -> s2 [0, 65535] { R3367 += 1, R3247 += 1, R1394 += 1, R1395 += 1 };
  s0 -> s3 [0, 65535] { R3367 += 1, R3246 += 1, R3247 += 1 };
  s0 -> s0 [0, 65535] { R3366 += 1, R3367 += 1 };
  s0 -> s4 [0, 65535] { R3367 += 1, R3247 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s0 -> s1 [71, 65535] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s1 [0, 69] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3367 += 1 };
  s1 -> s7 [0, 65535] { R3367 += 1, R3247 += 1 };
  s1 -> s1 [0, 65535] { R3367 += 1, R3247 += 1, R1395 += 1 };
  s1 -> s1 [71, 65535] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s1 [0, 69] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3367 += 1 };
  s2 -> s2 [0, 65535] { R3367 += 1, R3247 += 1, R1394 += 1, R1395 += 1 };
  s2 -> s4 [0, 65535] { R3367 += 1, R3247 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s2 -> s1 [71, 65535] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s1 [0, 69] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R3367 += 1, R3247 += 1, R1394 += 1, R1395 += 1 };
  s3 -> s3 [0, 65535] { R3367 += 1, R3246 += 1, R3247 += 1 };
  s3 -> s4 [0, 65535] { R3367 += 1, R3247 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s3 -> s1 [71, 65535] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s1 [0, 69] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3367 += 1 };
  s4 -> s7 [0, 65535] { R3367 += 1, R3247 += 1 };
  s4 -> s4 [0, 65535] { R3367 += 1, R3247 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s4 -> s1 [71, 65535] { R3367 += 1, R3247 += 1, R1395 += 1, R1397 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3367 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3367 += 1 };
  s7 -> s7 [0, 65535] { R3367 += 1, R3247 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R3369 += 1, R3248 += 1, R3249 += 1 };
  s0 -> s2 [0, 65535] { R3369 += 1, R3249 += 1, R1403 += 1, R1404 += 1 };
  s0 -> s3 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s0 -> s4 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s0 -> s0 [0, 65535] { R3368 += 1, R3369 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3369 += 1, R3248 += 1, R3249 += 1 };
  s1 -> s2 [0, 65535] { R3369 += 1, R3249 += 1, R1403 += 1, R1404 += 1 };
  s1 -> s3 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s1 -> s4 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s2 -> s5 [0, 65535] { R3369 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3369 += 1, R3249 += 1, R1403 += 1, R1404 += 1 };
  s2 -> s3 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s2 -> s4 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s3 -> s5 [0, 65535] { R3369 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s3 -> s8 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1 };
  s3 -> s7 [0, 65535] { R3369 += 1, R3249 += 1 };
  s4 -> s5 [0, 65535] { R3369 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s4 -> s4 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s4 -> s7 [0, 65535] { R3369 += 1, R3249 += 1 };
  s5 -> s5 [0, 65535] { R3369 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R3369 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3369 += 1, R3249 += 1 };
  s8 -> s5 [0, 65535] { R3369 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3369 += 1, R3249 += 1, R1404 += 1 };
  s8 -> s7 [0, 65535] { R3369 += 1, R3249 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 70] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s0 -> s2 [0, 65535] { R3371 += 1, R3250 += 1, R3251 += 1 };
  s0 -> s0 [0, 65535] { R3370 += 1, R3371 += 1 };
  s0 -> s3 [0, 65535] { R3371 += 1, R3251 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s0 -> s4 [0, 65535] { R3371 += 1, R3251 += 1, R1412 += 1, R1413 += 1 };
  s0 -> s1 [76, 65535] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s1 [0, 70] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s7 [0, 65535] { R3371 += 1, R3251 += 1 };
  s1 -> s5 [0, 65535] { R3371 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3371 += 1, R3251 += 1, R1413 += 1 };
  s1 -> s1 [76, 65535] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s1 [0, 70] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s2 [0, 65535] { R3371 += 1, R3250 += 1, R3251 += 1 };
  s2 -> s3 [0, 65535] { R3371 += 1, R3251 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R3371 += 1, R3251 += 1, R1412 += 1, R1413 += 1 };
  s2 -> s1 [76, 65535] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s1 [0, 70] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s7 [0, 65535] { R3371 += 1, R3251 += 1 };
  s3 -> s5 [0, 65535] { R3371 += 1 };
  s3 -> s3 [0, 65535] { R3371 += 1, R3251 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [76, 65535] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s1 [0, 70] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s5 [0, 65535] { R3371 += 1 };
  s4 -> s3 [0, 65535] { R3371 += 1, R3251 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3371 += 1, R3251 += 1, R1412 += 1, R1413 += 1 };
  s4 -> s1 [76, 65535] { R3371 += 1, R3251 += 1, R1413 += 1, R1415 += 1 };
  s5 -> s5 [0, 65535] { R3371 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3371 += 1, R3251 += 1 };
  s7 -> s5 [0, 65535] { R3371 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s0 -> s2 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s0 -> s3 [0, 65535] { R3373 += 1, R3252 += 1, R3253 += 1 };
  s0 -> s0 [0, 65535] { R3372 += 1, R3373 += 1 };
  s0 -> s4 [0, 65535] { R3373 += 1, R3253 += 1, R1421 += 1, R1422 += 1 };
  s1 -> s1 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s1 -> s8 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1 };
  s1 -> s7 [0, 65535] { R3373 += 1, R3253 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3373 += 1 };
  s2 -> s1 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s2 -> s2 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s2 -> s7 [0, 65535] { R3373 += 1, R3253 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3373 += 1 };
  s3 -> s1 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s3 -> s2 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s3 -> s3 [0, 65535] { R3373 += 1, R3252 += 1, R3253 += 1 };
  s3 -> s4 [0, 65535] { R3373 += 1, R3253 += 1, R1421 += 1, R1422 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s4 -> s2 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s4 -> s4 [0, 65535] { R3373 += 1, R3253 += 1, R1421 += 1, R1422 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3373 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3373 += 1 };
  s7 -> s7 [0, 65535] { R3373 += 1, R3253 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3373 += 1 };
  s8 -> s8 [0, 65535] { R3373 += 1, R3253 += 1, R1422 += 1 };
  s8 -> s7 [0, 65535] { R3373 += 1, R3253 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R3373 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 75] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s0 -> s2 [0, 65535] { R3375 += 1, R3255 += 1, R1431 += 1, R1432 += 1 };
  s0 -> s0 [0, 65535] { R3374 += 1, R3375 += 1 };
  s0 -> s3 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s0 -> s4 [0, 65535] { R3375 += 1, R3254 += 1, R3255 += 1 };
  s0 -> s5 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s0 -> s1 [77, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s1 [0, 75] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1 };
  s1 -> s8 [0, 65535] { R3375 += 1, R3255 += 1 };
  s1 -> s9 [0, 65535] { R3375 += 1 };
  s1 -> s1 [77, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s1 [0, 75] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s2 [0, 65535] { R3375 += 1, R3255 += 1, R1431 += 1, R1432 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s2 -> s9 [0, 65535] { R3375 += 1 };
  s2 -> s5 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s2 -> s1 [77, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s1 [0, 75] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s3 -> s8 [0, 65535] { R3375 += 1, R3255 += 1 };
  s3 -> s9 [0, 65535] { R3375 += 1 };
  s3 -> s5 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s3 -> s1 [77, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s1 [0, 75] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s2 [0, 65535] { R3375 += 1, R3255 += 1, R1431 += 1, R1432 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s3 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s4 -> s4 [0, 65535] { R3375 += 1, R3254 += 1, R3255 += 1 };
  s4 -> s5 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s4 -> s1 [77, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s1 [0, 75] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s6 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3375 += 1, R3255 += 1 };
  s5 -> s9 [0, 65535] { R3375 += 1 };
  s5 -> s5 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s5 -> s1 [77, 65535] { R3375 += 1, R3255 += 1, R1432 += 1, R1434 += 1 };
  s6 -> s6 [0, 65535] { R3375 += 1, R3255 += 1, R1432 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R3375 += 1, R3255 += 1 };
  s6 -> s9 [0, 65535] { R3375 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3375 += 1, R3255 += 1 };
  s8 -> s9 [0, 65535] { R3375 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R3375 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s0 -> s2 [0, 65535] { R3377 += 1, R3257 += 1, R1442 += 1, R1443 += 1 };
  s0 -> s3 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1 };
  s0 -> s4 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s0 -> s5 [0, 65535] { R3377 += 1, R3256 += 1, R3257 += 1 };
  s0 -> s0 [0, 65535] { R3376 += 1, R3377 += 1 };
  s1 -> s7 [0, 65535] { R3377 += 1, R3257 += 1 };
  s1 -> s1 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1 };
  s1 -> s8 [0, 65535] { R3377 += 1 };
  s1 -> s9 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1 };
  s2 -> s1 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s2 -> s2 [0, 65535] { R3377 += 1, R3257 += 1, R1442 += 1, R1443 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1 };
  s2 -> s8 [0, 65535] { R3377 += 1 };
  s2 -> s4 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s3 -> s7 [0, 65535] { R3377 += 1, R3257 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1 };
  s3 -> s8 [0, 65535] { R3377 += 1 };
  s3 -> s9 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1 };
  s4 -> s7 [0, 65535] { R3377 += 1, R3257 += 1 };
  s4 -> s1 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1 };
  s4 -> s8 [0, 65535] { R3377 += 1 };
  s4 -> s4 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s5 -> s1 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s5 -> s2 [0, 65535] { R3377 += 1, R3257 += 1, R1442 += 1, R1443 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s3 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1445 += 1 };
  s5 -> s4 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s5 -> s5 [0, 65535] { R3377 += 1, R3256 += 1, R3257 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3377 += 1, R3257 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s8 [0, 65535] { R3377 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3377 += 1 };
  s9 -> s7 [0, 65535] { R3377 += 1, R3257 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R3377 += 1 };
  s9 -> s9 [0, 65535] { R3377 += 1, R3257 += 1, R1443 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s0 -> s2 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s0 -> s3 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s0 -> s0 [0, 65535] { R3378 += 1, R3379 += 1 };
  s0 -> s4 [0, 65535] { R3379 += 1, R3259 += 1, R1455 += 1, R1456 += 1 };
  s0 -> s5 [0, 65535] { R3379 += 1, R3258 += 1, R3259 += 1 };
  s1 -> s1 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s1 -> s2 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s1 -> s7 [0, 65535] { R3379 += 1 };
  s1 -> s10 [0, 65535] { R3379 += 1, R3259 += 1 };
  s2 -> s2 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s2 -> s7 [0, 65535] { R3379 += 1 };
  s2 -> s9 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1 };
  s2 -> s10 [0, 65535] { R3379 += 1, R3259 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s3 -> s7 [0, 65535] { R3379 += 1 };
  s3 -> s8 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1 };
  s3 -> s9 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1 };
  s3 -> s10 [0, 65535] { R3379 += 1, R3259 += 1 };
  s4 -> s1 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s4 -> s2 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s4 -> s4 [0, 65535] { R3379 += 1, R3259 += 1, R1455 += 1, R1456 += 1 };
  s4 -> s7 [0, 65535] { R3379 += 1 };
  s5 -> s1 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s5 -> s2 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s3 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s5 -> s4 [0, 65535] { R3379 += 1, R3259 += 1, R1455 += 1, R1456 += 1 };
  s5 -> s5 [0, 65535] { R3379 += 1, R3258 += 1, R3259 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3379 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3379 += 1 };
  s8 -> s8 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1, R1458 += 1 };
  s8 -> s9 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1 };
  s8 -> s10 [0, 65535] { R3379 += 1, R3259 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R3379 += 1 };
  s9 -> s9 [0, 65535] { R3379 += 1, R3259 += 1, R1456 += 1 };
  s9 -> s10 [0, 65535] { R3379 += 1, R3259 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R3379 += 1 };
  s10 -> s10 [0, 65535] { R3379 += 1, R3259 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65535] { R3381 += 1, R3261 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s0 [0, 65535] { R3380 += 1, R3381 += 1 };
  s0 -> s2 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s3 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s4 [0, 65535] { R3381 += 1, R3260 += 1, R3261 += 1 };
  s1 -> s1 [0, 65535] { R3381 += 1, R3261 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s6 [0, 65535] { R3381 += 1 };
  s1 -> s2 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s6 [0, 65535] { R3381 += 1 };
  s2 -> s2 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s8 [0, 65535] { R3381 += 1, R3261 += 1 };
  s3 -> s6 [0, 65535] { R3381 += 1 };
  s3 -> s7 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s8 [0, 65535] { R3381 += 1, R3261 += 1 };
  s4 -> s1 [0, 65535] { R3381 += 1, R3261 += 1, R1467 += 1, R1468 += 1 };
  s4 -> s2 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s4 [0, 65535] { R3381 += 1, R3260 += 1, R3261 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3381 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3381 += 1 };
  s7 -> s7 [0, 65535] { R3381 += 1, R3261 += 1, R1468 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s8 [0, 65535] { R3381 += 1, R3261 += 1 };
  s8 -> s6 [0, 65535] { R3381 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R3381 += 1, R3261 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s0 [0, 65535] { R3382 += 1, R3383 += 1 };
  s0 -> s2 [0, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s0 -> s3 [0, 65535] { R3383 += 1, R3262 += 1, R3263 += 1 };
  s0 -> s4 [0, 65535] { R3383 += 1, R3263 += 1, R1476 += 1, R1477 += 1 };
  s0 -> s5 [70, 70] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s6 [76, 76] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s1 [77, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [0, 69] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s5 [70, 70] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s6 [76, 76] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [77, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [0, 69] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s2 [0, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s2 -> s5 [70, 70] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s6 [76, 76] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [77, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [0, 69] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s2 [0, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s3 -> s3 [0, 65535] { R3383 += 1, R3262 += 1, R3263 += 1 };
  s3 -> s4 [0, 65535] { R3383 += 1, R3263 += 1, R1476 += 1, R1477 += 1 };
  s3 -> s5 [70, 70] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s6 [76, 76] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [77, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [0, 69] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s2 [0, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s4 -> s4 [0, 65535] { R3383 += 1, R3263 += 1, R1476 += 1, R1477 += 1 };
  s4 -> s5 [70, 70] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s6 [76, 76] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [77, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [0, 70] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s10 [76, 76] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [77, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [0, 69] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s7 [0, 65535] { R3383 += 1, R3263 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3383 += 1, R3263 += 1, R1477 += 1 };
  s6 -> s9 [0, 65535] { R3383 += 1 };
  s6 -> s10 [70, 70] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s11 [70, 70] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [76, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s7 -> s7 [0, 65535] { R3383 += 1, R3263 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R3383 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3383 += 1 };
  s10 -> s10 [0, 70] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s10 -> s7 [0, 65535] { R3383 += 1, R3263 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R3383 += 1 };
  s10 -> s10 [0, 65535] { R3383 += 1, R3263 += 1, R1477 += 1 };
  s10 -> s10 [76, 65535] { R3383 += 1, R3263 += 1, R1477 += 1, R1479 += 1 };
  s11 -> s7 [0, 65535] { R3383 += 1, R3263 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R3383 += 1 };
  s11 -> s11 [0, 65535] { R3383 += 1, R3263 += 1, R1477 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s2 [0, 65535] { R3385 += 1, R3264 += 1, R3265 += 1 };
  s0 -> s0 [0, 65535] { R3384 += 1, R3385 += 1 };
  s0 -> s3 [0, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s0 -> s4 [0, 65535] { R3385 += 1, R3265 += 1, R1485 += 1, R1486 += 1 };
  s0 -> s5 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s6 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s1 [71, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [0, 69] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s7 [0, 65535] { R3385 += 1 };
  s1 -> s8 [0, 65535] { R3385 += 1, R3265 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R3385 += 1, R3265 += 1, R1486 += 1 };
  s1 -> s5 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s6 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [71, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [0, 69] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s2 [0, 65535] { R3385 += 1, R3264 += 1, R3265 += 1 };
  s2 -> s3 [0, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s2 -> s4 [0, 65535] { R3385 += 1, R3265 += 1, R1485 += 1, R1486 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s6 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [71, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [0, 69] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s7 [0, 65535] { R3385 += 1 };
  s3 -> s8 [0, 65535] { R3385 += 1, R3265 += 1 };
  s3 -> s3 [0, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s6 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [71, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [0, 69] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s7 [0, 65535] { R3385 += 1 };
  s4 -> s3 [0, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s4 -> s4 [0, 65535] { R3385 += 1, R3265 += 1, R1485 += 1, R1486 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s5 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s6 [70, 70] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [71, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s5 -> s5 [0, 65535] { R3385 += 1, R3265 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s5 -> s10 [0, 65535] { R3385 += 1, R3265 += 1, R1486 += 1 };
  s5 -> s7 [0, 65535] { R3385 += 1 };
  s5 -> s8 [0, 65535] { R3385 += 1, R3265 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 65535] { R3385 += 1 };
  s6 -> s8 [0, 65535] { R3385 += 1, R3265 += 1 };
  s6 -> s6 [0, 65535] { R3385 += 1, R3265 += 1, R1486 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R3385 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R3385 += 1 };
  s8 -> s8 [0, 65535] { R3385 += 1, R3265 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3385 += 1, R3265 += 1, R1486 += 1 };
  s10 -> s7 [0, 65535] { R3385 += 1 };
  s10 -> s8 [0, 65535] { R3385 += 1, R3265 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s2 [0, 65535] { R3387 += 1, R3266 += 1, R3267 += 1 };
  s0 -> s0 [0, 65535] { R3386 += 1, R3387 += 1 };
  s0 -> s3 [0, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s0 -> s4 [0, 65535] { R3387 += 1, R3267 += 1, R1495 += 1, R1496 += 1 };
  s0 -> s5 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s6 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s1 [71, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [0, 69] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [0, 65535] { R3387 += 1, R3267 += 1, R1496 += 1 };
  s1 -> s7 [0, 65535] { R3387 += 1, R3267 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R3387 += 1 };
  s1 -> s5 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s6 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [71, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [0, 69] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s2 [0, 65535] { R3387 += 1, R3266 += 1, R3267 += 1 };
  s2 -> s3 [0, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [0, 65535] { R3387 += 1, R3267 += 1, R1495 += 1, R1496 += 1 };
  s2 -> s5 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s6 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [71, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [0, 69] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s3 [0, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s3 -> s7 [0, 65535] { R3387 += 1, R3267 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s9 [0, 65535] { R3387 += 1 };
  s3 -> s5 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s6 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [71, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [0, 69] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s3 [0, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R3387 += 1, R3267 += 1, R1495 += 1, R1496 += 1 };
  s4 -> s9 [0, 65535] { R3387 += 1 };
  s4 -> s5 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s6 [70, 70] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [71, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s5 -> s5 [0, 65535] { R3387 += 1, R3267 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s5 -> s10 [0, 65535] { R3387 += 1, R3267 += 1, R1496 += 1 };
  s5 -> s7 [0, 65535] { R3387 += 1, R3267 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R3387 += 1 };
  s6 -> s6 [0, 65535] { R3387 += 1, R3267 += 1, R1496 += 1 };
  s6 -> s7 [0, 65535] { R3387 += 1, R3267 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R3387 += 1 };
  s7 -> s7 [0, 65535] { R3387 += 1, R3267 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R3387 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3387 += 1 };
  s10 -> s10 [0, 65535] { R3387 += 1, R3267 += 1, R1496 += 1 };
  s10 -> s7 [0, 65535] { R3387 += 1, R3267 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R3387 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 69] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s2 [0, 69] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s0 -> s3 [0, 65535] { R3389 += 1, R3268 += 1, R3269 += 1 };
  s0 -> s0 [0, 65535] { R3388 += 1, R3389 += 1 };
  s0 -> s4 [70, 70] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s0 -> s5 [70, 70] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s1 [71, 75] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s2 [71, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s0 -> s6 [76, 76] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s1 [77, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s1 [0, 69] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s5 [70, 70] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s1 [71, 75] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s6 [76, 76] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s1 [77, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s1 [0, 69] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s2 [0, 69] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s2 -> s4 [70, 70] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s2 -> s5 [70, 70] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s1 [71, 75] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s2 [71, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s2 -> s6 [76, 76] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s1 [77, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s1 [0, 69] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s2 [0, 69] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s3 -> s3 [0, 65535] { R3389 += 1, R3268 += 1, R3269 += 1 };
  s3 -> s4 [70, 70] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s3 -> s5 [70, 70] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s1 [71, 75] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s2 [71, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s3 -> s6 [76, 76] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s1 [77, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s4 -> s5 [0, 75] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s4 -> s4 [0, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s4 -> s11 [76, 76] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s4 -> s5 [77, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s5 -> s5 [0, 75] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s5 -> s11 [76, 76] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s5 -> s5 [77, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s6 [0, 69] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s7 [0, 65535] { R3389 += 1, R3269 += 1 };
  s6 -> s6 [0, 65535] { R3389 += 1, R3269 += 1, R3199 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R3389 += 1 };
  s6 -> s10 [70, 70] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s11 [70, 70] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s6 [71, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s7 -> s7 [0, 65535] { R3389 += 1, R3269 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R3389 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3389 += 1 };
  s10 -> s7 [0, 65535] { R3389 += 1, R3269 += 1 };
  s10 -> s10 [0, 65535] { R3389 += 1, R3269 += 1, R3199 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R3389 += 1 };
  s11 -> s7 [0, 65535] { R3389 += 1, R3269 += 1 };
  s11 -> s12 [0, 65535] { R3389 += 1, R3269 += 1, R3199 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s11 [0, 65535] { R3389 += 1, R3269 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s11 -> s9 [0, 65535] { R3389 += 1 };
  s12 -> s7 [0, 65535] { R3389 += 1, R3269 += 1 };
  s12 -> s12 [0, 65535] { R3389 += 1, R3269 += 1, R3199 += 1 };
  s12 -> s8 [0, 65535];
  s12 -> s9 [0, 65535] { R3389 += 1 };
  accepting s12, s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 69] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s0 -> s2 [0, 65535] { R3391 += 1, R3270 += 1, R3271 += 1 };
  s0 -> s0 [0, 65535] { R3390 += 1, R3391 += 1 };
  s0 -> s3 [0, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3213 += 1, R3214 += 1 };
  s0 -> s4 [0, 65535] { R3391 += 1, R3271 += 1, R3211 += 1, R3212 += 1 };
  s0 -> s5 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s0 -> s6 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s0 -> s1 [71, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s1 -> s1 [0, 69] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s1 -> s7 [0, 65535] { R3391 += 1, R3271 += 1 };
  s1 -> s8 [0, 65535] { R3391 += 1 };
  s1 -> s1 [0, 65535] { R3391 += 1, R3271 += 1, R3212 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s1 -> s6 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s1 -> s1 [71, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s2 -> s1 [0, 69] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s2 -> s2 [0, 65535] { R3391 += 1, R3270 += 1, R3271 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s3 [0, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3213 += 1, R3214 += 1 };
  s2 -> s4 [0, 65535] { R3391 += 1, R3271 += 1, R3211 += 1, R3212 += 1 };
  s2 -> s5 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s2 -> s6 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s2 -> s1 [71, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s3 -> s1 [0, 69] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s3 -> s7 [0, 65535] { R3391 += 1, R3271 += 1 };
  s3 -> s8 [0, 65535] { R3391 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s3 [0, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3213 += 1, R3214 += 1 };
  s3 -> s5 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s3 -> s6 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s3 -> s1 [71, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s4 -> s1 [0, 69] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s4 -> s8 [0, 65535] { R3391 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s3 [0, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3213 += 1, R3214 += 1 };
  s4 -> s4 [0, 65535] { R3391 += 1, R3271 += 1, R3211 += 1, R3212 += 1 };
  s4 -> s5 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s4 -> s6 [70, 70] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s4 -> s1 [71, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s5 -> s5 [0, 65535] { R3391 += 1, R3271 += 1, R3212 += 1, R3214 += 1, R3215 += 1, R3216 += 1 };
  s5 -> s7 [0, 65535] { R3391 += 1, R3271 += 1 };
  s5 -> s8 [0, 65535] { R3391 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R3391 += 1, R3271 += 1, R3212 += 1 };
  s6 -> s6 [0, 65535] { R3391 += 1, R3271 += 1, R3212 += 1 };
  s6 -> s7 [0, 65535] { R3391 += 1, R3271 += 1 };
  s6 -> s8 [0, 65535] { R3391 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R3391 += 1, R3271 += 1 };
  s7 -> s8 [0, 65535] { R3391 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3391 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R3391 += 1, R3271 += 1 };
  s10 -> s8 [0, 65535] { R3391 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3391 += 1, R3271 += 1, R3212 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_41 {
  init s0;
  s0 -> s0 [0, 65535] { R3392 += 1, R3393 += 1 };
  s0 -> s1 [0, 65535] { R3393 += 1, R3272 += 1, R3273 += 1 };
  s0 -> s2 [0, 65535] { R3393 += 1, R3273 += 1, R27 += 1 };
  s1 -> s1 [0, 65535] { R3393 += 1, R3272 += 1, R3273 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R3393 += 1, R3273 += 1, R27 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3393 += 1 };
  s2 -> s2 [0, 65535] { R3393 += 1, R3273 += 1, R27 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3393 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 66] { R3395 += 1, R3275 += 1 };
  s0 -> s0 [0, 65535] { R3394 += 1, R3395 += 1 };
  s0 -> s2 [0, 65535] { R3395 += 1, R3274 += 1, R3275 += 1 };
  s0 -> s3 [67, 67] { R3395 += 1, R3275 += 1 };
  s0 -> s4 [67, 67] { R3395 += 1, R3275 += 1 };
  s0 -> s5 [70, 70] { R3395 += 1, R3275 += 1 };
  s0 -> s1 [71, 65535] { R3395 += 1, R3275 += 1 };
  s1 -> s1 [0, 66] { R3395 += 1, R3275 += 1 };
  s1 -> s3 [67, 67] { R3395 += 1, R3275 += 1 };
  s1 -> s4 [67, 67] { R3395 += 1, R3275 += 1 };
  s1 -> s5 [70, 70] { R3395 += 1, R3275 += 1 };
  s1 -> s1 [71, 65535] { R3395 += 1, R3275 += 1 };
  s2 -> s1 [0, 66] { R3395 += 1, R3275 += 1 };
  s2 -> s2 [0, 65535] { R3395 += 1, R3274 += 1, R3275 += 1 };
  s2 -> s3 [67, 67] { R3395 += 1, R3275 += 1 };
  s2 -> s4 [67, 67] { R3395 += 1, R3275 += 1 };
  s2 -> s5 [70, 70] { R3395 += 1, R3275 += 1 };
  s2 -> s1 [71, 65535] { R3395 += 1, R3275 += 1 };
  s4 -> s4 [0, 67] { R3395 += 1, R3275 += 1 };
  s4 -> s8 [70, 70] { R3395 += 1, R3275 += 1 };
  s4 -> s4 [71, 65535] { R3395 += 1, R3275 += 1 };
  s5 -> s5 [0, 66] { R3395 += 1, R3275 += 1 };
  s5 -> s5 [0, 65535] { R3395 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [67, 67] { R3395 += 1, R3275 += 1 };
  s5 -> s8 [67, 67] { R3395 += 1, R3275 += 1 };
  s5 -> s5 [70, 65535] { R3395 += 1, R3275 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3395 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 67] { R3395 += 1, R3275 += 1 };
  s8 -> s8 [0, 65535] { R3395 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [70, 65535] { R3395 += 1, R3275 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 66] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s0 -> s0 [0, 65535] { R3396 += 1, R3397 += 1 };
  s0 -> s2 [0, 65535] { R3397 += 1, R3276 += 1, R3277 += 1 };
  s0 -> s3 [67, 67] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s0 -> s4 [67, 67] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s0 -> s1 [68, 65535] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s1 -> s1 [0, 66] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s1 -> s1 [0, 65535] { R3397 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s1 -> s4 [67, 67] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s1 -> s1 [68, 65535] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s2 -> s1 [0, 66] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s2 -> s2 [0, 65535] { R3397 += 1, R3276 += 1, R3277 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s2 -> s4 [67, 67] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s2 -> s1 [68, 65535] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s3 -> s3 [0, 65535] { R3397 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3397 += 1, R3277 += 1, R1330 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3397 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3397 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 66] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s0 -> s2 [0, 65535] { R3399 += 1, R3278 += 1, R3279 += 1 };
  s0 -> s0 [0, 65535] { R3398 += 1, R3399 += 1 };
  s0 -> s3 [67, 67] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s0 -> s4 [67, 67] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s0 -> s1 [68, 65535] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s1 -> s1 [0, 66] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3399 += 1 };
  s1 -> s3 [67, 67] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s1 -> s4 [67, 67] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s1 -> s1 [68, 65535] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s2 -> s1 [0, 66] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3399 += 1, R3278 += 1, R3279 += 1 };
  s2 -> s3 [67, 67] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s2 -> s4 [67, 67] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s2 -> s1 [68, 65535] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3399 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3399 += 1, R3279 += 1, R1332 += 1 };
  s4 -> s6 [0, 65535] { R3399 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3399 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 66] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s0 [0, 65535] { R3400 += 1, R3401 += 1 };
  s0 -> s2 [0, 65535] { R3401 += 1, R3280 += 1, R3281 += 1 };
  s0 -> s3 [67, 67] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s4 [67, 67] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s1 [68, 65535] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [0, 66] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [0, 65535] { R3401 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s4 [67, 67] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [68, 65535] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [0, 66] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3401 += 1, R3280 += 1, R3281 += 1 };
  s2 -> s3 [67, 67] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s4 [67, 67] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [68, 65535] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s3 -> s6 [0, 65535] { R3401 += 1 };
  s3 -> s3 [0, 65535] { R3401 += 1, R3281 += 1, R1334 += 1, R1335 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3401 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3401 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 66] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s2 [0, 65535] { R3403 += 1, R3282 += 1, R3283 += 1 };
  s0 -> s0 [0, 65535] { R3402 += 1, R3403 += 1 };
  s0 -> s3 [67, 67] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s4 [67, 67] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s1 [68, 65535] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [0, 66] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [0, 65535] { R3403 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s4 [67, 67] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [68, 65535] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [0, 66] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s2 [0, 65535] { R3403 += 1, R3282 += 1, R3283 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s4 [67, 67] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [68, 65535] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s3 -> s3 [0, 65535] { R3403 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3403 += 1 };
  s4 -> s4 [0, 65535] { R3403 += 1, R3283 += 1, R1340 += 1, R1341 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3403 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 66] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s0 [0, 65535] { R3404 += 1, R3405 += 1 };
  s0 -> s2 [0, 65535] { R3405 += 1, R3284 += 1, R3285 += 1 };
  s0 -> s3 [67, 67] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s4 [67, 67] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s1 [68, 65535] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [0, 66] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [0, 65535] { R3405 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s4 [67, 67] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [68, 65535] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [0, 66] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3405 += 1, R3284 += 1, R3285 += 1 };
  s2 -> s3 [67, 67] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s4 [67, 67] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [68, 65535] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s3 -> s3 [0, 65535] { R3405 += 1, R3285 += 1, R1344 += 1, R1345 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3405 += 1 };
  s4 -> s4 [0, 65535] { R3405 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3405 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 66] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s0 [0, 65535] { R3406 += 1, R3407 += 1 };
  s0 -> s2 [0, 65535] { R3407 += 1, R3286 += 1, R3287 += 1 };
  s0 -> s3 [67, 67] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s4 [67, 67] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s1 [68, 65535] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [0, 66] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [0, 65535] { R3407 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s4 [67, 67] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [68, 65535] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [0, 66] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s2 [0, 65535] { R3407 += 1, R3286 += 1, R3287 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s4 [67, 67] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [68, 65535] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s3 [0, 65535] { R3407 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3407 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3407 += 1, R3287 += 1, R1350 += 1, R1351 += 1 };
  s5 -> s5 [0, 65535] { R3407 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 66] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s2 [0, 65535] { R3409 += 1, R3288 += 1, R3289 += 1 };
  s0 -> s0 [0, 65535] { R3408 += 1, R3409 += 1 };
  s0 -> s3 [67, 67] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s4 [67, 67] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s1 [68, 65535] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [0, 66] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3409 += 1 };
  s1 -> s3 [67, 67] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s4 [67, 67] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [68, 65535] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [0, 66] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s2 [0, 65535] { R3409 += 1, R3288 += 1, R3289 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s4 [67, 67] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [68, 65535] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s3 -> s3 [0, 65535] { R3409 += 1, R3289 += 1, R1356 += 1, R1357 += 1 };
  s3 -> s6 [0, 65535] { R3409 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3409 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3409 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 66] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s0 [0, 65535] { R3410 += 1, R3411 += 1 };
  s0 -> s2 [0, 65535] { R3411 += 1, R3290 += 1, R3291 += 1 };
  s0 -> s3 [67, 67] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s4 [67, 67] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s1 [68, 65535] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [0, 66] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [0, 65535] { R3411 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s4 [67, 67] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [68, 65535] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [0, 66] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s2 [0, 65535] { R3411 += 1, R3290 += 1, R3291 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s4 [67, 67] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [68, 65535] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s3 -> s3 [0, 65535] { R3411 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3411 += 1 };
  s4 -> s4 [0, 65535] { R3411 += 1, R3291 += 1, R1364 += 1, R1365 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3411 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 66] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s2 [0, 65535] { R3413 += 1, R3292 += 1, R3293 += 1 };
  s0 -> s0 [0, 65535] { R3412 += 1, R3413 += 1 };
  s0 -> s3 [67, 67] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s4 [67, 67] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s1 [68, 65535] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [0, 66] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3413 += 1 };
  s1 -> s3 [67, 67] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s4 [67, 67] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [68, 65535] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [0, 66] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s2 [0, 65535] { R3413 += 1, R3292 += 1, R3293 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s4 [67, 67] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [68, 65535] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s3 -> s6 [0, 65535] { R3413 += 1 };
  s3 -> s3 [0, 65535] { R3413 += 1, R3293 += 1, R1374 += 1, R1375 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3413 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3413 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 66] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s2 [0, 65535] { R3415 += 1, R3294 += 1, R3295 += 1 };
  s0 -> s0 [0, 65535] { R3414 += 1, R3415 += 1 };
  s0 -> s3 [67, 67] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s4 [67, 67] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s1 [68, 65535] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [0, 66] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [0, 65535] { R3415 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s4 [67, 67] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [68, 65535] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [0, 66] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s2 [0, 65535] { R3415 += 1, R3294 += 1, R3295 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s4 [67, 67] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [68, 65535] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s3 -> s3 [0, 65535] { R3415 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3415 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3415 += 1, R3295 += 1, R1378 += 1, R1379 += 1 };
  s5 -> s5 [0, 65535] { R3415 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 66] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s0 [0, 65535] { R3416 += 1, R3417 += 1 };
  s0 -> s2 [0, 65535] { R3417 += 1, R3296 += 1, R3297 += 1 };
  s0 -> s3 [67, 67] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s4 [67, 67] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s1 [68, 65535] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [0, 66] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [0, 65535] { R3417 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s4 [67, 67] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [68, 65535] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [0, 66] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s2 [0, 65535] { R3417 += 1, R3296 += 1, R3297 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s4 [67, 67] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [68, 65535] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s3 -> s6 [0, 65535] { R3417 += 1 };
  s3 -> s3 [0, 65535] { R3417 += 1, R3297 += 1, R1384 += 1, R1385 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3417 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3417 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 66] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s0 [0, 65535] { R3418 += 1, R3419 += 1 };
  s0 -> s2 [0, 65535] { R3419 += 1, R3298 += 1, R3299 += 1 };
  s0 -> s3 [67, 67] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s4 [67, 67] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s1 [68, 65535] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [0, 66] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [0, 65535] { R3419 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s4 [67, 67] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [68, 65535] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [0, 66] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3419 += 1, R3298 += 1, R3299 += 1 };
  s2 -> s3 [67, 67] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s4 [67, 67] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [68, 65535] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s3 -> s3 [0, 65535] { R3419 += 1, R3299 += 1, R1390 += 1, R1391 += 1 };
  s3 -> s6 [0, 65535] { R3419 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3419 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3419 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_55 {
  init s0;
  s0 -> s1 [0, 66] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s2 [0, 65535] { R3421 += 1, R3300 += 1, R3301 += 1 };
  s0 -> s0 [0, 65535] { R3420 += 1, R3421 += 1 };
  s0 -> s3 [67, 67] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s4 [67, 67] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s1 [68, 65535] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [0, 66] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3421 += 1 };
  s1 -> s3 [67, 67] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s4 [67, 67] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [68, 65535] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [0, 66] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3421 += 1, R3300 += 1, R3301 += 1 };
  s2 -> s3 [67, 67] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s4 [67, 67] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [68, 65535] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s3 -> s3 [0, 65535] { R3421 += 1, R3301 += 1, R1398 += 1, R1399 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3421 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3421 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3421 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_56 {
  init s0;
  s0 -> s1 [0, 66] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s2 [0, 65535] { R3423 += 1, R3302 += 1, R3303 += 1 };
  s0 -> s0 [0, 65535] { R3422 += 1, R3423 += 1 };
  s0 -> s3 [67, 67] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s4 [67, 67] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s1 [68, 65535] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [0, 66] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [0, 65535] { R3423 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s4 [67, 67] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [68, 65535] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [0, 66] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s2 [0, 65535] { R3423 += 1, R3302 += 1, R3303 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s4 [67, 67] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [68, 65535] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s3 -> s3 [0, 65535] { R3423 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3423 += 1, R3303 += 1, R1408 += 1, R1409 += 1 };
  s4 -> s5 [0, 65535] { R3423 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3423 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_57 {
  init s0;
  s0 -> s1 [0, 66] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s2 [0, 65535] { R3425 += 1, R3304 += 1, R3305 += 1 };
  s0 -> s0 [0, 65535] { R3424 += 1, R3425 += 1 };
  s0 -> s3 [67, 67] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s4 [67, 67] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s1 [68, 65535] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [0, 66] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [0, 65535] { R3425 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s4 [67, 67] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [68, 65535] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [0, 66] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s2 [0, 65535] { R3425 += 1, R3304 += 1, R3305 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s4 [67, 67] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [68, 65535] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s3 -> s3 [0, 65535] { R3425 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3425 += 1 };
  s4 -> s4 [0, 65535] { R3425 += 1, R3305 += 1, R1416 += 1, R1417 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3425 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_58 {
  init s0;
  s0 -> s1 [0, 66] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s0 [0, 65535] { R3426 += 1, R3427 += 1 };
  s0 -> s2 [0, 65535] { R3427 += 1, R3306 += 1, R3307 += 1 };
  s0 -> s3 [67, 67] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s4 [67, 67] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s1 [68, 65535] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [0, 66] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [0, 65535] { R3427 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s4 [67, 67] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [68, 65535] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [0, 66] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3427 += 1, R3306 += 1, R3307 += 1 };
  s2 -> s3 [67, 67] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s4 [67, 67] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [68, 65535] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s3 -> s6 [0, 65535] { R3427 += 1 };
  s3 -> s3 [0, 65535] { R3427 += 1, R3307 += 1, R1426 += 1, R1427 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3427 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3427 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_59 {
  init s0;
  s0 -> s1 [0, 66] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s2 [0, 65535] { R3429 += 1, R3308 += 1, R3309 += 1 };
  s0 -> s0 [0, 65535] { R3428 += 1, R3429 += 1 };
  s0 -> s3 [67, 67] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s4 [67, 67] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s1 [68, 65535] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [0, 66] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [0, 65535] { R3429 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s4 [67, 67] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [68, 65535] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [0, 66] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s2 [0, 65535] { R3429 += 1, R3308 += 1, R3309 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s4 [67, 67] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [68, 65535] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s3 -> s3 [0, 65535] { R3429 += 1, R3309 += 1, R1436 += 1, R1437 += 1 };
  s3 -> s6 [0, 65535] { R3429 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3429 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3429 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_60 {
  init s0;
  s0 -> s1 [0, 66] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s0 [0, 65535] { R3430 += 1, R3431 += 1 };
  s0 -> s2 [0, 65535] { R3431 += 1, R3310 += 1, R3311 += 1 };
  s0 -> s3 [67, 67] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s4 [67, 67] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s1 [68, 65535] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [0, 66] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [0, 65535] { R3431 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s4 [67, 67] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [68, 65535] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [0, 66] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s2 [0, 65535] { R3431 += 1, R3310 += 1, R3311 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s4 [67, 67] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [68, 65535] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s3 -> s3 [0, 65535] { R3431 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3431 += 1 };
  s4 -> s4 [0, 65535] { R3431 += 1, R3311 += 1, R1448 += 1, R1449 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3431 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_61 {
  init s0;
  s0 -> s1 [0, 66] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s0 [0, 65535] { R3432 += 1, R3433 += 1 };
  s0 -> s2 [0, 65535] { R3433 += 1, R3312 += 1, R3313 += 1 };
  s0 -> s3 [67, 67] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s4 [67, 67] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s1 [68, 65535] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [0, 66] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3433 += 1 };
  s1 -> s3 [67, 67] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s4 [67, 67] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [68, 65535] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [0, 66] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3433 += 1, R3312 += 1, R3313 += 1 };
  s2 -> s3 [67, 67] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s4 [67, 67] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [68, 65535] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3433 += 1, R3313 += 1, R1462 += 1, R1463 += 1 };
  s3 -> s6 [0, 65535] { R3433 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3433 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3433 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_62 {
  init s0;
  s0 -> s1 [0, 66] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s2 [0, 65535] { R3435 += 1, R3314 += 1, R3315 += 1 };
  s0 -> s0 [0, 65535] { R3434 += 1, R3435 += 1 };
  s0 -> s3 [67, 67] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s4 [67, 67] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s1 [68, 65535] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 66] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 65535] { R3435 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s4 [67, 67] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [68, 65535] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [0, 66] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s2 [0, 65535] { R3435 += 1, R3314 += 1, R3315 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s4 [67, 67] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [68, 65535] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s3 -> s3 [0, 65535] { R3435 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3435 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3435 += 1, R3315 += 1, R1472 += 1, R1473 += 1 };
  s5 -> s5 [0, 65535] { R3435 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_63 {
  init s0;
  s0 -> s1 [0, 66] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s2 [0, 65535] { R3437 += 1, R3316 += 1, R3317 += 1 };
  s0 -> s0 [0, 65535] { R3436 += 1, R3437 += 1 };
  s0 -> s3 [67, 67] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s4 [67, 67] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s1 [68, 65535] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [0, 66] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3437 += 1 };
  s1 -> s3 [67, 67] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s4 [67, 67] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [68, 65535] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [0, 66] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s2 [0, 65535] { R3437 += 1, R3316 += 1, R3317 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s4 [67, 67] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [68, 65535] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3437 += 1, R3317 += 1, R1480 += 1, R1481 += 1 };
  s3 -> s6 [0, 65535] { R3437 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3437 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3437 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_64 {
  init s0;
  s0 -> s1 [0, 66] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s2 [0, 65535] { R3439 += 1, R3318 += 1, R3319 += 1 };
  s0 -> s0 [0, 65535] { R3438 += 1, R3439 += 1 };
  s0 -> s3 [67, 67] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s4 [67, 67] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s1 [68, 65535] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [0, 66] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3439 += 1 };
  s1 -> s3 [67, 67] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s4 [67, 67] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [68, 65535] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [0, 66] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3439 += 1, R3318 += 1, R3319 += 1 };
  s2 -> s3 [67, 67] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s4 [67, 67] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [68, 65535] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3439 += 1 };
  s4 -> s5 [0, 65535] { R3439 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3439 += 1, R3319 += 1, R1490 += 1, R1491 += 1 };
  s5 -> s5 [0, 65535] { R3439 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_65 {
  init s0;
  s0 -> s1 [0, 66] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s2 [0, 66] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s3 [0, 66] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s4 [0, 65535] { R3441 += 1, R3320 += 1, R3321 += 1 };
  s0 -> s0 [0, 65535] { R3440 += 1, R3441 += 1 };
  s0 -> s5 [67, 67] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s6 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s7 [67, 67] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s8 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s9 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s10 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s3 [68, 69] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s1 [68, 65535] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s2 [68, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s3 [71, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s1 [0, 66] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s1 -> s2 [0, 66] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s1 -> s3 [0, 66] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s5 [67, 67] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s1 -> s6 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s1 -> s7 [67, 67] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s1 -> s8 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s1 -> s9 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s10 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s3 [68, 69] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s1 [68, 65535] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s1 -> s2 [68, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s1 -> s3 [71, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s2 [0, 66] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s3 [0, 66] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s6 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s8 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s9 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s10 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s3 [68, 69] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s2 [68, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s3 [71, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s3 [0, 66] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R3441 += 1 };
  s3 -> s9 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s10 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s3 [68, 69] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s3 [71, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s1 [0, 66] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s2 [0, 66] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s3 [0, 66] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s4 [0, 65535] { R3441 += 1, R3320 += 1, R3321 += 1 };
  s4 -> s5 [67, 67] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s6 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s7 [67, 67] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s8 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s9 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s10 [67, 67] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s3 [68, 69] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s1 [68, 65535] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s2 [68, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s3 [71, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s6 -> s10 [0, 69] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s6 -> s6 [0, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s6 -> s10 [71, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s7 -> s10 [0, 69] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s7 -> s6 [0, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s7 -> s7 [0, 65535] { R3441 += 1, R3321 += 1, R3192 += 1, R3193 += 1 };
  s7 -> s10 [71, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s9 [0, 65535] { R3441 += 1 };
  s10 -> s10 [0, 69] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s10 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R3441 += 1 };
  s10 -> s10 [71, 65535] { R3441 += 1, R3321 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s11 -> s11 [0, 65535];
  accepting s3, s9, s10, s11;
};
automaton value2_66 {
  init s0;
  s0 -> s1 [0, 66] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s0 -> s2 [0, 65535] { R3443 += 1, R3322 += 1, R3323 += 1 };
  s0 -> s0 [0, 65535] { R3442 += 1, R3443 += 1 };
  s0 -> s3 [67, 67] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s0 -> s4 [67, 67] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s0 -> s1 [68, 65535] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s1 -> s1 [0, 66] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3443 += 1 };
  s1 -> s3 [67, 67] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s1 -> s4 [67, 67] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s1 -> s1 [68, 65535] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s2 -> s1 [0, 66] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s2 -> s2 [0, 65535] { R3443 += 1, R3322 += 1, R3323 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s2 -> s4 [67, 67] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s2 -> s1 [68, 65535] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s3 -> s3 [0, 65535] { R3443 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3443 += 1, R3323 += 1, R3204 += 1, R3205 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3443 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3443 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
};
synchronised {  // Automata constraining P17
automaton P17_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R3271 && R4 - R3443 = 1 && R28 - R3271 = -1 && R29 = R3271 && R30 - R3271 = -1 && R31 = R3271 && R32 = 0 && R33 = 1 && R34 = 0 && R35 = 1 && R36 = R3443 && R37 - R3443 = 1 && R38 = R3443 && R39 - R3443 = 1 && R40 = 0 && R41 = 1 && R42 = 0 && R43 = 1 && R1331 + R1330 + -1*R3199 + -1*R3193 = 0 && R1349 + R1346 + R1425 + R1420 + R1489 + R1484 + -1*R3203 + -1*R3197 - R1441 - R1447 - R1359 - R1363 = 0 && R1362 + R1358 + R1446 + R1440 + R3202 + R3196 = 0 && R1376 + R1374 = 0 && R1377 + R1375 + -1*R3199 + -1*R3193 = 0 && R1476 + R1472 = 0 && R1477 + R1473 + -1*R3199 + -1*R3193 = 0 && R1478 + R1474 = 0 && R1479 + R1475 = 0 && R3198 + R3192 = 0 && R3200 + R3194 = 0 && R3201 + R3195 = 0 && R3218 = 0 && R3219 = R3271 && R3220 = 0 && R3221 = R3271 && R3222 = 0 && R3223 = R3271 && R3224 = 0 && R3225 = R3271 && R3226 = 0 && R3227 = R3271 && R3228 = 0 && R3229 = R3271 && R3230 = 0 && R3231 = R3271 && R3232 = 0 && R3233 = R3271 && R3234 = 0 && R3235 = R3271 && R3236 = 0 && R3237 = R3271 && R3238 = 0 && R3239 = R3271 && R3240 = 0 && R3241 = R3271 && R3242 = 0 && R3243 = R3271 && R3244 = 0 && R3245 = R3271 && R3246 = 0 && R3247 = R3271 && R3248 = 0 && R3249 = R3271 && R3250 = 0 && R3251 = R3271 && R3252 = 0 && R3253 = R3271 && R3254 = 0 && R3255 = R3271 && R3256 = 0 && R3257 = R3271 && R3258 = 0 && R3259 = R3271 && R3260 = 0 && R3261 = R3271 && R3262 = 0 && R3263 = R3271 && R3264 = 0 && R3265 = R3271 && R3266 = 0 && R3267 = R3271 && R3268 = 0 && R3269 = R3271 && R3270 = 0 && R3274 = 0 && R3275 = 0 && R3320 = 0 && R3321 = 0 && R3324 = 0 && R3325 = R3443 && R3326 = 0 && R3327 = R3443 && R3328 = 0 && R3329 = R3443 && R3330 = 0 && R3331 = R3443 && R3332 = 0 && R3333 = R3443 && R3334 = 0 && R3335 = R3443 && R3336 = 0 && R3337 = R3443 && R3338 = 0 && R3339 = R3443 && R3340 = 0 && R3341 = R3443 && R3342 = 0 && R3343 = R3443 && R3344 = 0 && R3345 = R3443 && R3346 = 0 && R3347 = R3443 && R3348 = 0 && R3349 = R3443 && R3350 = 0 && R3351 = R3443 && R3352 = 0 && R3353 = R3443 && R3354 = 0 && R3355 = R3443 && R3356 = 0 && R3357 = R3443 && R3358 = 0 && R3359 = R3443 && R3360 = 0 && R3361 = R3443 && R3362 = 0 && R3363 = R3443 && R3364 = 0 && R3365 = R3443 && R3366 = 0 && R3367 = R3443 && R3368 = 0 && R3369 = R3443 && R3370 = 0 && R3371 = R3443 && R3372 = 0 && R3373 = R3443 && R3374 = 0 && R3375 = R3443 && R3376 = 0 && R3377 = R3443 && R3378 = 0 && R3379 = R3443 && R3380 = 0 && R3381 = R3443 && R3382 = 0 && R3383 = R3443 && R3384 = 0 && R3385 = R3443 && R3386 = 0 && R3387 = R3443 && R3388 = 0 && R3389 = R3443 && R3390 = 0 && R3391 = R3443 && R3392 = 0 && R3393 = R3443 && R3394 = 0 && R3395 = R3443 && R3396 = 0 && R3397 = R3443 && R3398 = 0 && R3399 = R3443 && R3400 = 0 && R3401 = R3443 && R3402 = 0 && R3403 = R3443 && R3404 = 0 && R3405 = R3443 && R3406 = 0 && R3407 = R3443 && R3408 = 0 && R3409 = R3443 && R3410 = 0 && R3411 = R3443 && R3412 = 0 && R3413 = R3443 && R3414 = 0 && R3415 = R3443 && R3416 = 0 && R3417 = R3443 && R3418 = 0 && R3419 = R3443 && R3420 = 0 && R3421 = R3443 && R3422 = 0 && R3423 = R3443 && R3424 = 0 && R3425 = R3443 && R3426 = 0 && R3427 = R3443 && R3428 = 0 && R3429 = R3443 && R3430 = 0 && R3431 = R3443 && R3432 = 0 && R3433 = R3443 && R3434 = 0 && R3435 = R3443 && R3436 = 0 && R3437 = R3443 && R3438 = 0 && R3439 = R3443 && R3440 = 0 && R3441 = R3443 && R3442 = 0 && R18 < 1 && R21 < 1 && R1333 + R1332 < 1 && R1355 + R1352 + R1435 + R1430 + R1499 + R1494 < 1 && -1*R3203 + -1*R3197 - R1441 - R1447 - R1359 - R1363 < 1 && -1*R1383 + -1*R1380 < 1 && R1389 + R1386 < 1 && -1*R3199 + -1*R3193 < 1 && 0 < R3271 && -1 < R3443 && (R1363 + R1359 + R1447 + R1441 + R3203 + R3197 != 0 || R1373 + R1368 + R1461 + R1454 + R3217 + R3210 = 0 || (R1371 + R1366 + R1459 + R1452 + R3215 + R3208 = 0 && R1372 + R1367 + R1460 + R1453 + R3216 + R3209 = 0)) && (R1371 + R1366 + R1459 + R1452 + R3215 + R3208 != 0 || R1363 + R1359 + R1447 + R1441 + R3203 + R3197 + -1*R3216 + -1*R3209 - R1453 - R1460 - R1367 - R1372 = 0 || R1363 + R1359 + R1447 + R1441 + R3203 + R3197 < 1) && (R1381 + R1378 != 0 || R1382 + R1379 + -1*R3199 + -1*R3193 = 0 || R1383 + R1380 < 1) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1396 + R1392 = 0 && R1397 + R1393 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1405 + R1400 = 0 && R1406 + R1401 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1414 + R1410 = 0 && R1415 + R1411 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1423 + R1418 = 0 && R1424 + R1419 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1433 + R1428 = 0 && R1434 + R1429 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1444 + R1438 = 0 && R1445 + R1439 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1457 + R1450 = 0 && R1458 + R1451 = 0)) && (R1383 + R1380 != 0 || ((R1381 + R1378 != 0 || R1382 + R1379 + -1*R3199 + -1*R3193 = 0 || R3199 + R3193 < 1) && (R1381 + R1378 = 0 || R3199 + R3193 < 1))) && (R1387 + R1384 != 0 || R1388 + R1385 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1394 + R1390 != 0 || R1395 + R1391 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1396 + R1392 != 0 || R1383 + R1380 + -1*R1397 + -1*R1393 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 != 0 || R1404 + R1399 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1405 + R1400 != 0 || R1383 + R1380 + -1*R1406 + -1*R1401 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 != 0 || R1413 + R1409 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1414 + R1410 != 0 || R1383 + R1380 + -1*R1415 + -1*R1411 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 != 0 || R1422 + R1417 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1423 + R1418 != 0 || R1383 + R1380 + -1*R1424 + -1*R1419 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 != 0 || R1432 + R1427 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1433 + R1428 != 0 || R1383 + R1380 + -1*R1434 + -1*R1429 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 != 0 || R1443 + R1437 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1444 + R1438 != 0 || R1383 + R1380 + -1*R1445 + -1*R1439 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 != 0 || R1456 + R1449 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1457 + R1450 != 0 || R1383 + R1380 + -1*R1458 + -1*R1451 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 != 0 || R1468 + R1463 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1485 + R1480 != 0 || R1486 + R1481 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1495 + R1490 != 0 || R1496 + R1491 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R3211 + R3204 != 0 || R3199 + R3193 + -1*R3212 + -1*R3205 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R27 = 0 || (R3272 = 0 && R3273 = 0)) && (R27 = 0 || (R3276 = 0 && R3277 = 0)) && (R27 = 0 || (R3278 = 0 && R3279 = 0)) && (R27 = 0 || (R3280 = 0 && R3281 = 0)) && (R27 = 0 || (R3282 = 0 && R3283 = 0)) && (R27 = 0 || (R3284 = 0 && R3285 = 0)) && (R27 = 0 || (R3286 = 0 && R3287 = 0)) && (R27 = 0 || (R3288 = 0 && R3289 = 0)) && (R27 = 0 || (R3290 = 0 && R3291 = 0)) && (R27 = 0 || (R3292 = 0 && R3293 = 0)) && (R27 = 0 || (R3294 = 0 && R3295 = 0)) && (R27 = 0 || (R3296 = 0 && R3297 = 0)) && (R27 = 0 || (R3298 = 0 && R3299 = 0)) && (R27 = 0 || (R3300 = 0 && R3301 = 0)) && (R27 = 0 || (R3302 = 0 && R3303 = 0)) && (R27 = 0 || (R3304 = 0 && R3305 = 0)) && (R27 = 0 || (R3306 = 0 && R3307 = 0)) && (R27 = 0 || (R3308 = 0 && R3309 = 0)) && (R27 = 0 || (R3310 = 0 && R3311 = 0)) && (R27 = 0 || (R3312 = 0 && R3313 = 0)) && (R27 = 0 || (R3314 = 0 && R3315 = 0)) && (R27 = 0 || (R3316 = 0 && R3317 = 0)) && (R27 = 0 || (R3318 = 0 && R3319 = 0)) && (R27 = 0 || (R3322 = 0 && R3323 = 0)) && (R1339 + R1336 = 0 || (R1337 + R1334 = 0 && R1338 + R1335 = 0)) && (R1339 + R1336 = 0 || (R1342 + R1340 = 0 && R1343 + R1341 = 0)) && (R1339 + R1336 = 0 || (R1347 + R1344 = 0 && R1348 + R1345 = 0)) && (R1339 + R1336 = 0 || (R1353 + R1350 = 0 && R1354 + R1351 = 0)) && (R1339 + R1336 = 0 || (R1360 + R1356 = 0 && R1361 + R1357 = 0)) && (R1339 + R1336 = 0 || (R1369 + R1364 = 0 && R1370 + R1365 = 0)) && (R1371 + R1366 + R1459 + R1452 + R3215 + R3208 = 0 || R1363 + R1359 + R1447 + R1441 + R3203 + R3197 < 1) && (R1381 + R1378 = 0 || R1383 + R1380 < 1) && (R1387 + R1384 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1394 + R1390 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1396 + R1392 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1405 + R1400 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1414 + R1410 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1423 + R1418 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1433 + R1428 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1444 + R1438 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1457 + R1450 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1471 + R1466 = 0 || (R1469 + R1464 = 0 && R1470 + R1465 = 0)) && (R1471 + R1466 = 0 || (R1487 + R1482 = 0 && R1488 + R1483 = 0)) && (R1471 + R1466 = 0 || (R1497 + R1492 = 0 && R1498 + R1493 = 0)) && (R1471 + R1466 = 0 || (R3213 + R3206 = 0 && R3214 + R3207 = 0)) && (R1485 + R1480 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1495 + R1490 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R3211 + R3204 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0));
// End of Parikh automata intersection problem
