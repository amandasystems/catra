// Parikh automata intersection problem, generated by OSTRICH+
counter int R1330, R1331, R1332, R1333, R1334, R1335, R1336, R1337, R1338, R1339, R1340, R1341, R1342, R1343, R1344, R1345, R1346, R1347, R1348, R1349, R1350, R1351, R1352, R1353, R1354, R1355, R1356, R1357, R1358, R1359, R1360, R1361, R1362, R1363, R1364, R1365, R1366, R1367, R1368, R1369, R1370, R1371, R1372, R1373, R1374, R1375, R1376, R1377, R1378, R1379, R1380, R1381, R1382, R1383, R1384, R1385, R1386, R1387, R1388, R1389, R1390, R1391, R1392, R1393, R1394, R1395, R1396, R1397, R1398, R1399, R1400, R1401, R1402, R1403, R1404, R1405, R1406, R1407, R1408, R1409, R1410, R1411, R1412, R1413, R1414, R1415, R1416, R1417, R1418, R1419, R1420, R1421, R1422, R1423, R1424, R1425, R1426, R1427, R1428, R1429, R1430, R1431, R1432, R1433, R1434, R1435, R1436, R1437, R1438, R1439, R1440, R1441, R1442, R1443, R1444, R1445, R1446, R1447, R1448, R1449, R1450, R1451, R1452, R1453, R1454, R1455, R1456, R1457, R1458, R1459, R1460, R1461, R1462, R1463, R1464, R1465, R1466, R1467, R1468, R1469, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R1477, R1478, R1479, R1480, R1481, R1482, R1483, R1484, R1485, R1486, R1487, R1488, R1489, R1490, R1491, R1492, R1493, R1494, R1495, R1496, R1497, R1498, R1499, R1500, R1501, R1502, R1503, R1504, R1505, R1506, R1507, R1508, R1509, R1510, R1511, R18, R21, R26, R27, R28, R29, R2952, R2953, R2954, R2955, R2956, R2957, R2958, R2959, R2960, R2961, R2962, R2963, R2964, R2965, R2966, R2967, R2968, R2969, R2970, R2971, R2972, R2973, R2974, R2975, R2976, R2977, R2978, R2979, R2980, R2981, R2982, R2983, R2984, R2985, R2986, R2987, R2988, R2989, R2990, R2991, R2992, R2993, R2994, R2995, R2996, R2997, R2998, R2999, R3, R30, R3000, R3001, R3002, R3003, R3004, R3005, R3006, R3007, R3008, R3009, R3010, R3011, R3012, R3013, R3014, R3015, R3016, R3017, R3018, R3019, R3020, R3021, R3022, R3023, R3024, R3025, R3026, R3027, R3028, R3029, R3030, R3031, R3032, R3033, R3034, R3035, R3036, R3037, R3038, R3039, R3040, R3041, R3042, R3043, R3044, R3045, R3046, R3047, R3048, R3049, R3050, R3051, R3052, R3053, R3054, R3055, R3056, R3057, R3058, R3059, R3060, R3061, R3062, R3063, R3064, R3065, R3066, R3067, R3068, R3069, R3070, R3071, R3072, R3073, R3074, R3075, R3076, R3077, R3078, R3079, R3080, R3081, R3082, R3083, R3084, R3085, R3086, R3087, R3088, R3089, R3090, R3091, R3092, R3093, R3094, R3095, R3096, R3097, R3098, R3099, R31, R3100, R3101, R3102, R3103, R3104, R3105, R3106, R3107, R3108, R3109, R3110, R3111, R3112, R3113, R3114, R3115, R3116, R3117, R3118, R3119, R3120, R3121, R3122, R3123, R3124, R3125, R3126, R3127, R3128, R3129, R3130, R3131, R3132, R3133, R3134, R3135, R3136, R3137, R3138, R3139, R3140, R3141, R3142, R3143, R3144, R3145, R3146, R3147, R3148, R3149, R3150, R3151, R3152, R3153, R3154, R3155, R3156, R3157, R3158, R3159, R3160, R3161, R3162, R3163, R3164, R3165, R3166, R3167, R3168, R3169, R3170, R3171, R3172, R3173, R3174, R3175, R3176, R3177, R3178, R3179, R3180, R3181, R3182, R3183, R3184, R3185, R3186, R3187, R3188, R3189, R3190, R3191, R32, R33, R34, R35, R36, R37, R38, R39, R4, R40, R41, R42, R43, R5, R6, R7, R8;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining P44
automaton P44_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s0 -> s1 [9, 9] { R37 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R38 += 1, R39 += 1 };
  s1 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R41 += 1 };
  s0 -> s0 [0, 65535] { R40 += 1, R41 += 1 };
  s0 -> s2 [9, 13] { R41 += 1 };
  s0 -> s1 [14, 31] { R41 += 1 };
  s0 -> s2 [32, 32] { R41 += 1 };
  s0 -> s1 [33, 65535] { R41 += 1 };
  s1 -> s1 [0, 65535] { R41 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R41 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R3073 += 1 };
  s0 -> s0 [0, 65535] { R3072 += 1, R3073 += 1 };
  s0 -> s2 [67, 67] { R3073 += 1 };
  s0 -> s1 [68, 65535] { R3073 += 1 };
  s1 -> s1 [0, 64] { R3073 += 1 };
  s1 -> s2 [67, 67] { R3073 += 1 };
  s1 -> s1 [68, 65535] { R3073 += 1 };
  s2 -> s2 [0, 64] { R3073 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R3073 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3074 += 1, R3075 += 1 };
  s0 -> s1 [0, 65535] { R3075 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3075 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R3077 += 1 };
  s0 -> s0 [0, 65535] { R3076 += 1, R3077 += 1 };
  s0 -> s2 [0, 65535] { R3077 += 1, R18 += 1 };
  s0 -> s3 [67, 67] { R3077 += 1 };
  s0 -> s1 [68, 65535] { R3077 += 1 };
  s1 -> s1 [0, 66] { R3077 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R3077 += 1 };
  s1 -> s1 [68, 65535] { R3077 += 1 };
  s2 -> s1 [0, 66] { R3077 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3077 += 1, R18 += 1 };
  s2 -> s3 [67, 67] { R3077 += 1 };
  s2 -> s1 [68, 65535] { R3077 += 1 };
  s3 -> s3 [0, 65535] { R3077 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R3079 += 1, R29 += 1 };
  s0 -> s2 [0, 65535] { R3079 += 1, R28 += 1, R29 += 1 };
  s0 -> s0 [0, 65535] { R3078 += 1, R3079 += 1 };
  s0 -> s3 [9, 13] { R3079 += 1, R29 += 1 };
  s0 -> s1 [14, 31] { R3079 += 1, R29 += 1 };
  s0 -> s3 [32, 32] { R3079 += 1, R29 += 1 };
  s0 -> s1 [33, 65535] { R3079 += 1, R29 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3079 += 1, R29 += 1 };
  s1 -> s5 [0, 65535] { R3079 += 1 };
  s2 -> s1 [0, 8] { R3079 += 1, R29 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3079 += 1, R28 += 1, R29 += 1 };
  s2 -> s3 [9, 13] { R3079 += 1, R29 += 1 };
  s2 -> s1 [14, 31] { R3079 += 1, R29 += 1 };
  s2 -> s3 [32, 32] { R3079 += 1, R29 += 1 };
  s2 -> s1 [33, 65535] { R3079 += 1, R29 += 1 };
  s3 -> s1 [0, 65535] { R3079 += 1, R29 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3079 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R3080 += 1, R3081 += 1 };
  s0 -> s1 [0, 65535] { R3081 += 1, R30 += 1, R31 += 1 };
  s0 -> s2 [0, 65535] { R3081 += 1, R31 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R3081 += 1, R30 += 1, R31 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R3081 += 1, R31 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R3081 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3081 += 1, R31 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R3081 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R3083 += 1, R33 += 1 };
  s0 -> s0 [0, 65535] { R3082 += 1, R3083 += 1 };
  s0 -> s2 [0, 65535] { R3083 += 1, R32 += 1, R33 += 1 };
  s0 -> s3 [9, 13] { R3083 += 1, R33 += 1 };
  s0 -> s1 [14, 31] { R3083 += 1, R33 += 1 };
  s0 -> s3 [32, 32] { R3083 += 1, R33 += 1 };
  s0 -> s1 [33, 65535] { R3083 += 1, R33 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3083 += 1, R33 += 1 };
  s1 -> s5 [0, 65535] { R3083 += 1 };
  s2 -> s1 [0, 8] { R3083 += 1, R33 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3083 += 1, R32 += 1, R33 += 1 };
  s2 -> s3 [9, 13] { R3083 += 1, R33 += 1 };
  s2 -> s1 [14, 31] { R3083 += 1, R33 += 1 };
  s2 -> s3 [32, 32] { R3083 += 1, R33 += 1 };
  s2 -> s1 [33, 65535] { R3083 += 1, R33 += 1 };
  s3 -> s1 [0, 65535] { R3083 += 1, R33 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3083 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R3085 += 1, R35 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R3084 += 1, R3085 += 1 };
  s0 -> s2 [0, 65535] { R3085 += 1, R34 += 1, R35 += 1 };
  s1 -> s1 [0, 65535] { R3085 += 1, R35 += 1, R6 += 1 };
  s1 -> s4 [0, 65535] { R3085 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3085 += 1, R35 += 1, R6 += 1 };
  s2 -> s2 [0, 65535] { R3085 += 1, R34 += 1, R35 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3085 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R3087 += 1, R2967 += 1 };
  s0 -> s2 [0, 65535] { R3087 += 1, R2966 += 1, R2967 += 1 };
  s0 -> s0 [0, 65535] { R3086 += 1, R3087 += 1 };
  s0 -> s1 [68, 65535] { R3087 += 1, R2967 += 1 };
  s1 -> s1 [0, 66] { R3087 += 1, R2967 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3087 += 1 };
  s1 -> s1 [68, 65535] { R3087 += 1, R2967 += 1 };
  s2 -> s1 [0, 66] { R3087 += 1, R2967 += 1 };
  s2 -> s2 [0, 65535] { R3087 += 1, R2966 += 1, R2967 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [68, 65535] { R3087 += 1, R2967 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R3089 += 1, R2968 += 1, R2969 += 1 };
  s0 -> s0 [0, 65535] { R3088 += 1, R3089 += 1 };
  s0 -> s2 [0, 65535] { R3089 += 1, R2969 += 1, R26 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3089 += 1, R2968 += 1, R2969 += 1 };
  s1 -> s2 [0, 65535] { R3089 += 1, R2969 += 1, R26 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3089 += 1 };
  s2 -> s2 [0, 65535] { R3089 += 1, R2969 += 1, R26 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3089 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R3091 += 1, R2971 += 1 };
  s0 -> s0 [0, 65535] { R3090 += 1, R3091 += 1 };
  s0 -> s2 [0, 65535] { R3091 += 1, R2970 += 1, R2971 += 1 };
  s0 -> s1 [70, 65535] { R3091 += 1, R2971 += 1 };
  s1 -> s1 [0, 67] { R3091 += 1, R2971 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3091 += 1 };
  s1 -> s1 [70, 65535] { R3091 += 1, R2971 += 1 };
  s2 -> s1 [0, 67] { R3091 += 1, R2971 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3091 += 1, R2970 += 1, R2971 += 1 };
  s2 -> s1 [70, 65535] { R3091 += 1, R2971 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s0 [0, 65535] { R3092 += 1, R3093 += 1 };
  s0 -> s1 [0, 65535] { R3093 += 1, R2973 += 1, R1331 += 1 };
  s0 -> s2 [0, 65535] { R3093 += 1, R2972 += 1, R2973 += 1 };
  s1 -> s1 [0, 65535] { R3093 += 1, R2973 += 1, R1331 += 1 };
  s1 -> s4 [0, 65535] { R3093 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3093 += 1, R2973 += 1, R1331 += 1 };
  s2 -> s2 [0, 65535] { R3093 += 1, R2972 += 1, R2973 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3093 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3095 += 1, R2975 += 1 };
  s0 -> s2 [0, 65535] { R3095 += 1, R2975 += 1, R1333 += 1 };
  s0 -> s0 [0, 65535] { R3094 += 1, R3095 += 1 };
  s0 -> s3 [0, 65535] { R3095 += 1, R2974 += 1, R2975 += 1 };
  s0 -> s1 [71, 65535] { R3095 += 1, R2975 += 1 };
  s1 -> s1 [0, 69] { R3095 += 1, R2975 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3095 += 1 };
  s1 -> s1 [71, 65535] { R3095 += 1, R2975 += 1 };
  s2 -> s1 [0, 69] { R3095 += 1, R2975 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3095 += 1, R2975 += 1, R1333 += 1 };
  s2 -> s5 [0, 65535] { R3095 += 1 };
  s2 -> s1 [71, 65535] { R3095 += 1, R2975 += 1 };
  s3 -> s1 [0, 69] { R3095 += 1, R2975 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R3095 += 1, R2975 += 1, R1333 += 1 };
  s3 -> s3 [0, 65535] { R3095 += 1, R2974 += 1, R2975 += 1 };
  s3 -> s1 [71, 65535] { R3095 += 1, R2975 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3095 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s0 [0, 65535] { R3096 += 1, R3097 += 1 };
  s0 -> s1 [0, 65535] { R3097 += 1, R2977 += 1, R1338 += 1, R1339 += 1 };
  s0 -> s2 [0, 65535] { R3097 += 1, R2977 += 1, R1337 += 1, R1338 += 1 };
  s0 -> s3 [0, 65535] { R3097 += 1, R2976 += 1, R2977 += 1 };
  s1 -> s1 [0, 65535] { R3097 += 1, R2977 += 1, R1338 += 1, R1339 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3097 += 1 };
  s1 -> s6 [0, 65535] { R3097 += 1, R2977 += 1 };
  s2 -> s1 [0, 65535] { R3097 += 1, R2977 += 1, R1338 += 1, R1339 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3097 += 1, R2977 += 1, R1337 += 1, R1338 += 1 };
  s2 -> s5 [0, 65535] { R3097 += 1 };
  s3 -> s1 [0, 65535] { R3097 += 1, R2977 += 1, R1338 += 1, R1339 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R3097 += 1, R2977 += 1, R1337 += 1, R1338 += 1 };
  s3 -> s3 [0, 65535] { R3097 += 1, R2976 += 1, R2977 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3097 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3097 += 1 };
  s6 -> s6 [0, 65535] { R3097 += 1, R2977 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s0 -> s2 [0, 65535] { R3099 += 1, R2979 += 1, R1342 += 1, R1343 += 1 };
  s0 -> s3 [0, 65535] { R3099 += 1, R2978 += 1, R2979 += 1 };
  s0 -> s0 [0, 65535] { R3098 += 1, R3099 += 1 };
  s0 -> s4 [70, 70] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s0 -> s5 [70, 70] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s0 -> s1 [77, 65535] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s1 -> s1 [0, 69] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s1 -> s6 [0, 65535] { R3099 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3099 += 1, R2979 += 1 };
  s1 -> s4 [70, 70] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s1 -> s5 [70, 70] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s1 -> s1 [77, 65535] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s2 -> s1 [0, 69] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s2 -> s6 [0, 65535] { R3099 += 1 };
  s2 -> s2 [0, 65535] { R3099 += 1, R2979 += 1, R1342 += 1, R1343 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s2 -> s5 [70, 70] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s2 -> s1 [77, 65535] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s3 -> s1 [0, 69] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s3 -> s2 [0, 65535] { R3099 += 1, R2979 += 1, R1342 += 1, R1343 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3099 += 1, R2978 += 1, R2979 += 1 };
  s3 -> s4 [70, 70] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s3 -> s5 [70, 70] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s3 -> s1 [77, 65535] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s4 -> s6 [0, 65535] { R3099 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R3099 += 1, R2979 += 1 };
  s5 -> s5 [0, 70] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s5 -> s6 [0, 65535] { R3099 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3099 += 1, R2979 += 1 };
  s5 -> s5 [77, 65535] { R3099 += 1, R2979 += 1, R1343 += 1 };
  s6 -> s6 [0, 65535] { R3099 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s0 [0, 65535] { R3100 += 1, R3101 += 1 };
  s0 -> s2 [0, 65535] { R3101 += 1, R2980 += 1, R2981 += 1 };
  s0 -> s3 [0, 65535] { R3101 += 1, R2981 += 1, R1347 += 1, R1348 += 1 };
  s0 -> s4 [70, 70] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s5 [70, 70] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s1 [71, 65535] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [0, 69] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [0, 65535] { R3101 += 1, R2981 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R3101 += 1 };
  s1 -> s4 [70, 70] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s5 [70, 70] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [71, 65535] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [0, 69] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3101 += 1, R2980 += 1, R2981 += 1 };
  s2 -> s3 [0, 65535] { R3101 += 1, R2981 += 1, R1347 += 1, R1348 += 1 };
  s2 -> s4 [70, 70] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s5 [70, 70] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [71, 65535] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [0, 69] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R3101 += 1 };
  s3 -> s3 [0, 65535] { R3101 += 1, R2981 += 1, R1347 += 1, R1348 += 1 };
  s3 -> s4 [70, 70] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s5 [70, 70] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [71, 65535] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s4 -> s4 [0, 65535] { R3101 += 1, R2981 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R3101 += 1 };
  s5 -> s6 [0, 65535] { R3101 += 1, R2981 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3101 += 1 };
  s5 -> s5 [0, 65535] { R3101 += 1, R2981 += 1, R1348 += 1, R1349 += 1 };
  s6 -> s6 [0, 65535] { R3101 += 1, R2981 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R3101 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3101 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s0 [0, 65535] { R3102 += 1, R3103 += 1 };
  s0 -> s2 [0, 65535] { R3103 += 1, R2983 += 1, R1353 += 1, R1354 += 1 };
  s0 -> s3 [0, 65535] { R3103 += 1, R2982 += 1, R2983 += 1 };
  s0 -> s4 [70, 70] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s5 [70, 70] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s1 [71, 65535] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [0, 69] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s6 [0, 65535] { R3103 += 1 };
  s1 -> s1 [0, 65535] { R3103 += 1, R2983 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s5 [70, 70] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [71, 65535] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [0, 69] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s6 [0, 65535] { R3103 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3103 += 1, R2983 += 1, R1353 += 1, R1354 += 1 };
  s2 -> s4 [70, 70] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s5 [70, 70] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [71, 65535] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [0, 69] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s2 [0, 65535] { R3103 += 1, R2983 += 1, R1353 += 1, R1354 += 1 };
  s3 -> s3 [0, 65535] { R3103 += 1, R2982 += 1, R2983 += 1 };
  s3 -> s4 [70, 70] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s5 [70, 70] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [71, 65535] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s4 -> s6 [0, 65535] { R3103 += 1 };
  s4 -> s4 [0, 65535] { R3103 += 1, R2983 += 1, R1354 += 1, R1355 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R3103 += 1, R2983 += 1 };
  s5 -> s6 [0, 65535] { R3103 += 1 };
  s5 -> s5 [0, 65535] { R3103 += 1, R2983 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3103 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3103 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3103 += 1, R2983 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s2 [0, 65535] { R3105 += 1, R2984 += 1, R2985 += 1 };
  s0 -> s3 [0, 65535] { R3105 += 1, R2985 += 1, R1360 += 1, R1361 += 1 };
  s0 -> s0 [0, 65535] { R3104 += 1, R3105 += 1 };
  s0 -> s4 [70, 70] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s5 [70, 70] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s1 [71, 65535] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [0, 69] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [0, 65535] { R3105 += 1, R2985 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3105 += 1 };
  s1 -> s4 [70, 70] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s5 [70, 70] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [71, 65535] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [0, 69] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3105 += 1, R2984 += 1, R2985 += 1 };
  s2 -> s3 [0, 65535] { R3105 += 1, R2985 += 1, R1360 += 1, R1361 += 1 };
  s2 -> s4 [70, 70] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s5 [70, 70] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [71, 65535] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [0, 69] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R3105 += 1 };
  s3 -> s3 [0, 65535] { R3105 += 1, R2985 += 1, R1360 += 1, R1361 += 1 };
  s3 -> s4 [70, 70] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s5 [70, 70] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [71, 65535] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3105 += 1, R2985 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s4 -> s7 [0, 65535] { R3105 += 1 };
  s4 -> s8 [0, 65535] { R3105 += 1, R2985 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3105 += 1 };
  s5 -> s5 [0, 65535] { R3105 += 1, R2985 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3105 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3105 += 1 };
  s8 -> s8 [0, 65535] { R3105 += 1, R2985 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s0 [0, 65535] { R3106 += 1, R3107 += 1 };
  s0 -> s2 [0, 65535] { R3107 += 1, R2987 += 1, R1369 += 1, R1370 += 1 };
  s0 -> s3 [0, 65535] { R3107 += 1, R2986 += 1, R2987 += 1 };
  s0 -> s4 [70, 70] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s5 [70, 70] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s1 [71, 65535] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [0, 69] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3107 += 1, R2987 += 1 };
  s1 -> s7 [0, 65535] { R3107 += 1 };
  s1 -> s4 [70, 70] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s5 [70, 70] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [71, 65535] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [0, 69] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R3107 += 1 };
  s2 -> s2 [0, 65535] { R3107 += 1, R2987 += 1, R1369 += 1, R1370 += 1 };
  s2 -> s4 [70, 70] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s5 [70, 70] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [71, 65535] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [0, 69] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R3107 += 1, R2987 += 1, R1369 += 1, R1370 += 1 };
  s3 -> s3 [0, 65535] { R3107 += 1, R2986 += 1, R2987 += 1 };
  s3 -> s4 [70, 70] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s5 [70, 70] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [71, 65535] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3107 += 1 };
  s4 -> s4 [0, 65535] { R3107 += 1, R2987 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s4 -> s8 [0, 65535] { R3107 += 1, R2987 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3107 += 1 };
  s5 -> s5 [0, 65535] { R3107 += 1, R2987 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3107 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3107 += 1 };
  s8 -> s8 [0, 65535] { R3107 += 1, R2987 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s0 -> s2 [0, 65535] { R3109 += 1, R2989 += 1, R1376 += 1, R1377 += 1 };
  s0 -> s0 [0, 65535] { R3108 += 1, R3109 += 1 };
  s0 -> s3 [0, 65535] { R3109 += 1, R2988 += 1, R2989 += 1 };
  s0 -> s4 [70, 70] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s0 -> s1 [71, 65535] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s1 -> s1 [0, 69] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s1 -> s4 [70, 70] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s1 -> s1 [71, 65535] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s2 -> s1 [0, 69] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s2 -> s2 [0, 65535] { R3109 += 1, R2989 += 1, R1376 += 1, R1377 += 1 };
  s2 -> s4 [70, 70] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s2 -> s1 [71, 65535] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s3 -> s1 [0, 69] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s3 -> s2 [0, 65535] { R3109 += 1, R2989 += 1, R1376 += 1, R1377 += 1 };
  s3 -> s3 [0, 65535] { R3109 += 1, R2988 += 1, R2989 += 1 };
  s3 -> s4 [70, 70] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s3 -> s1 [71, 65535] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3109 += 1, R2989 += 1 };
  s4 -> s7 [0, 65535] { R3109 += 1 };
  s4 -> s4 [0, 65535] { R3109 += 1, R2989 += 1, R1377 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3109 += 1, R2989 += 1 };
  s6 -> s7 [0, 65535] { R3109 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3109 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_26 {
  init s0;
  s0 -> s0 [0, 65535] { R3110 += 1, R3111 += 1 };
  s0 -> s1 [0, 65535] { R3111 += 1, R2991 += 1, R1382 += 1, R1383 += 1 };
  s0 -> s2 [0, 65535] { R3111 += 1, R2991 += 1, R1381 += 1, R1382 += 1 };
  s0 -> s3 [0, 65535] { R3111 += 1, R2990 += 1, R2991 += 1 };
  s1 -> s1 [0, 65535] { R3111 += 1, R2991 += 1, R1382 += 1, R1383 += 1 };
  s1 -> s6 [0, 65535] { R3111 += 1, R2991 += 1 };
  s1 -> s5 [0, 65535] { R3111 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3111 += 1, R2991 += 1, R1382 += 1, R1383 += 1 };
  s2 -> s2 [0, 65535] { R3111 += 1, R2991 += 1, R1381 += 1, R1382 += 1 };
  s2 -> s5 [0, 65535] { R3111 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3111 += 1, R2991 += 1, R1382 += 1, R1383 += 1 };
  s3 -> s2 [0, 65535] { R3111 += 1, R2991 += 1, R1381 += 1, R1382 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3111 += 1, R2990 += 1, R2991 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3111 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3111 += 1, R2991 += 1 };
  s6 -> s5 [0, 65535] { R3111 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s0 -> s2 [0, 65535] { R3113 += 1, R2992 += 1, R2993 += 1 };
  s0 -> s3 [0, 65535] { R3113 += 1, R2993 += 1, R1388 += 1, R1389 += 1 };
  s0 -> s4 [0, 65535] { R3113 += 1, R2993 += 1, R1387 += 1, R1388 += 1 };
  s0 -> s0 [0, 65535] { R3112 += 1, R3113 += 1 };
  s0 -> s1 [71, 65535] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s1 -> s1 [0, 69] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s1 -> s1 [0, 65535] { R3113 += 1, R2993 += 1 };
  s1 -> s5 [0, 65535] { R3113 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s2 -> s1 [0, 69] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s2 -> s2 [0, 65535] { R3113 += 1, R2992 += 1, R2993 += 1 };
  s2 -> s3 [0, 65535] { R3113 += 1, R2993 += 1, R1388 += 1, R1389 += 1 };
  s2 -> s4 [0, 65535] { R3113 += 1, R2993 += 1, R1387 += 1, R1388 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [71, 65535] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s3 -> s1 [0, 69] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s3 -> s3 [0, 65535] { R3113 += 1, R2993 += 1, R1388 += 1, R1389 += 1 };
  s3 -> s5 [0, 65535] { R3113 += 1 };
  s3 -> s7 [0, 65535] { R3113 += 1, R2993 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [71, 65535] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s4 -> s1 [0, 69] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s4 -> s3 [0, 65535] { R3113 += 1, R2993 += 1, R1388 += 1, R1389 += 1 };
  s4 -> s4 [0, 65535] { R3113 += 1, R2993 += 1, R1387 += 1, R1388 += 1 };
  s4 -> s5 [0, 65535] { R3113 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [71, 65535] { R3113 += 1, R2993 += 1, R1388 += 1 };
  s5 -> s5 [0, 65535] { R3113 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R3113 += 1 };
  s7 -> s7 [0, 65535] { R3113 += 1, R2993 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s0 -> s2 [0, 65535] { R3115 += 1, R2994 += 1, R2995 += 1 };
  s0 -> s3 [0, 65535] { R3115 += 1, R2995 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s0 -> s0 [0, 65535] { R3114 += 1, R3115 += 1 };
  s0 -> s4 [0, 65535] { R3115 += 1, R2995 += 1, R1394 += 1, R1395 += 1 };
  s0 -> s1 [71, 65535] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s1 [0, 69] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s7 [0, 65535] { R3115 += 1, R2995 += 1 };
  s1 -> s5 [0, 65535] { R3115 += 1 };
  s1 -> s1 [0, 65535] { R3115 += 1, R2995 += 1, R1395 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s1 [0, 69] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s2 [0, 65535] { R3115 += 1, R2994 += 1, R2995 += 1 };
  s2 -> s3 [0, 65535] { R3115 += 1, R2995 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s2 -> s4 [0, 65535] { R3115 += 1, R2995 += 1, R1394 += 1, R1395 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [71, 65535] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s1 [0, 69] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s3 [0, 65535] { R3115 += 1, R2995 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s3 -> s7 [0, 65535] { R3115 += 1, R2995 += 1 };
  s3 -> s5 [0, 65535] { R3115 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [71, 65535] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s1 [0, 69] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s3 [0, 65535] { R3115 += 1, R2995 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s4 -> s5 [0, 65535] { R3115 += 1 };
  s4 -> s4 [0, 65535] { R3115 += 1, R2995 += 1, R1394 += 1, R1395 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [71, 65535] { R3115 += 1, R2995 += 1, R1395 += 1, R1397 += 1 };
  s5 -> s5 [0, 65535] { R3115 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3115 += 1, R2995 += 1 };
  s7 -> s5 [0, 65535] { R3115 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s0 -> s2 [0, 65535] { R3117 += 1, R2996 += 1, R2997 += 1 };
  s0 -> s0 [0, 65535] { R3116 += 1, R3117 += 1 };
  s0 -> s3 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s0 -> s4 [0, 65535] { R3117 += 1, R2997 += 1, R1403 += 1, R1404 += 1 };
  s1 -> s5 [0, 65535] { R3117 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3117 += 1, R2997 += 1 };
  s1 -> s1 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s1 -> s3 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s2 -> s2 [0, 65535] { R3117 += 1, R2996 += 1, R2997 += 1 };
  s2 -> s3 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s2 -> s4 [0, 65535] { R3117 += 1, R2997 += 1, R1403 += 1, R1404 += 1 };
  s3 -> s5 [0, 65535] { R3117 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R3117 += 1, R2997 += 1 };
  s3 -> s3 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s3 -> s8 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1 };
  s4 -> s5 [0, 65535] { R3117 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s4 -> s3 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s4 -> s4 [0, 65535] { R3117 += 1, R2997 += 1, R1403 += 1, R1404 += 1 };
  s5 -> s5 [0, 65535] { R3117 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R3117 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3117 += 1, R2997 += 1 };
  s8 -> s5 [0, 65535] { R3117 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3117 += 1, R2997 += 1 };
  s8 -> s8 [0, 65535] { R3117 += 1, R2997 += 1, R1404 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 70] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s0 -> s2 [0, 65535] { R3119 += 1, R2999 += 1, R1412 += 1, R1413 += 1 };
  s0 -> s3 [0, 65535] { R3119 += 1, R2999 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s0 -> s4 [0, 65535] { R3119 += 1, R2998 += 1, R2999 += 1 };
  s0 -> s0 [0, 65535] { R3118 += 1, R3119 += 1 };
  s0 -> s1 [76, 65535] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s1 [0, 70] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s6 [0, 65535] { R3119 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3119 += 1, R2999 += 1, R1413 += 1 };
  s1 -> s7 [0, 65535] { R3119 += 1, R2999 += 1 };
  s1 -> s1 [76, 65535] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s1 [0, 70] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s6 [0, 65535] { R3119 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3119 += 1, R2999 += 1, R1412 += 1, R1413 += 1 };
  s2 -> s3 [0, 65535] { R3119 += 1, R2999 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s2 -> s1 [76, 65535] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s1 [0, 70] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s6 [0, 65535] { R3119 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3119 += 1, R2999 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s3 -> s7 [0, 65535] { R3119 += 1, R2999 += 1 };
  s3 -> s1 [76, 65535] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s1 [0, 70] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3119 += 1, R2999 += 1, R1412 += 1, R1413 += 1 };
  s4 -> s3 [0, 65535] { R3119 += 1, R2999 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s4 -> s4 [0, 65535] { R3119 += 1, R2998 += 1, R2999 += 1 };
  s4 -> s1 [76, 65535] { R3119 += 1, R2999 += 1, R1413 += 1, R1415 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3119 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3119 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3119 += 1, R2999 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s0 -> s2 [0, 65535] { R3121 += 1, R3000 += 1, R3001 += 1 };
  s0 -> s3 [0, 65535] { R3121 += 1, R3001 += 1, R1421 += 1, R1422 += 1 };
  s0 -> s4 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s0 -> s0 [0, 65535] { R3120 += 1, R3121 += 1 };
  s1 -> s1 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s1 -> s5 [0, 65535] { R3121 += 1, R3001 += 1 };
  s1 -> s8 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1 };
  s1 -> s6 [0, 65535] { R3121 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s2 -> s2 [0, 65535] { R3121 += 1, R3000 += 1, R3001 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R3121 += 1, R3001 += 1, R1421 += 1, R1422 += 1 };
  s2 -> s4 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s3 -> s1 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s3 -> s6 [0, 65535] { R3121 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3121 += 1, R3001 += 1, R1421 += 1, R1422 += 1 };
  s3 -> s4 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s4 -> s1 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s4 -> s5 [0, 65535] { R3121 += 1, R3001 += 1 };
  s4 -> s6 [0, 65535] { R3121 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s5 -> s5 [0, 65535] { R3121 += 1, R3001 += 1 };
  s5 -> s6 [0, 65535] { R3121 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3121 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R3121 += 1, R3001 += 1 };
  s8 -> s8 [0, 65535] { R3121 += 1, R3001 += 1, R1422 += 1 };
  s8 -> s6 [0, 65535] { R3121 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 75] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s0 -> s2 [0, 65535] { R3123 += 1, R3003 += 1, R1431 += 1, R1432 += 1 };
  s0 -> s3 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s0 -> s4 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s0 -> s0 [0, 65535] { R3122 += 1, R3123 += 1 };
  s0 -> s5 [0, 65535] { R3123 += 1, R3002 += 1, R3003 += 1 };
  s0 -> s1 [77, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s1 [0, 75] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s7 [0, 65535] { R3123 += 1, R3003 += 1 };
  s1 -> s8 [0, 65535] { R3123 += 1 };
  s1 -> s1 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [77, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s1 [0, 75] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s2 [0, 65535] { R3123 += 1, R3003 += 1, R1431 += 1, R1432 += 1 };
  s2 -> s3 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s2 -> s8 [0, 65535] { R3123 += 1 };
  s2 -> s4 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [77, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s1 [0, 75] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s7 [0, 65535] { R3123 += 1, R3003 += 1 };
  s3 -> s3 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s3 -> s8 [0, 65535] { R3123 += 1 };
  s3 -> s4 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [77, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s1 [0, 75] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s7 [0, 65535] { R3123 += 1, R3003 += 1 };
  s4 -> s8 [0, 65535] { R3123 += 1 };
  s4 -> s9 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1 };
  s4 -> s4 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [77, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s1 [0, 75] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s2 [0, 65535] { R3123 += 1, R3003 += 1, R1431 += 1, R1432 += 1 };
  s5 -> s3 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s5 -> s4 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3123 += 1, R3002 += 1, R3003 += 1 };
  s5 -> s1 [77, 65535] { R3123 += 1, R3003 += 1, R1432 += 1, R1434 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3123 += 1, R3003 += 1 };
  s7 -> s8 [0, 65535] { R3123 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3123 += 1 };
  s8 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R3123 += 1, R3003 += 1 };
  s9 -> s8 [0, 65535] { R3123 += 1 };
  s9 -> s9 [0, 65535] { R3123 += 1, R3003 += 1, R1432 += 1 };
  s9 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s0 -> s2 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s0 -> s3 [0, 65535] { R3125 += 1, R3005 += 1, R1442 += 1, R1443 += 1 };
  s0 -> s4 [0, 65535] { R3125 += 1, R3004 += 1, R3005 += 1 };
  s0 -> s5 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1 };
  s0 -> s0 [0, 65535] { R3124 += 1, R3125 += 1 };
  s1 -> s6 [0, 65535] { R3125 += 1 };
  s1 -> s1 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R3125 += 1, R3005 += 1 };
  s1 -> s5 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1 };
  s1 -> s9 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1 };
  s2 -> s6 [0, 65535] { R3125 += 1 };
  s2 -> s1 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s2 -> s2 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R3125 += 1, R3005 += 1 };
  s2 -> s5 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1 };
  s3 -> s6 [0, 65535] { R3125 += 1 };
  s3 -> s1 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s3 -> s2 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3125 += 1, R3005 += 1, R1442 += 1, R1443 += 1 };
  s3 -> s5 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1 };
  s4 -> s1 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s4 -> s2 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s3 [0, 65535] { R3125 += 1, R3005 += 1, R1442 += 1, R1443 += 1 };
  s4 -> s4 [0, 65535] { R3125 += 1, R3004 += 1, R3005 += 1 };
  s4 -> s5 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1 };
  s5 -> s6 [0, 65535] { R3125 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3125 += 1, R3005 += 1 };
  s5 -> s5 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1, R1445 += 1 };
  s5 -> s9 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1 };
  s6 -> s6 [0, 65535] { R3125 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3125 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3125 += 1, R3005 += 1 };
  s9 -> s6 [0, 65535] { R3125 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R3125 += 1, R3005 += 1 };
  s9 -> s9 [0, 65535] { R3125 += 1, R3005 += 1, R1443 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s0 -> s2 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s0 -> s3 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s0 -> s4 [0, 65535] { R3127 += 1, R3006 += 1, R3007 += 1 };
  s0 -> s5 [0, 65535] { R3127 += 1, R3007 += 1, R1455 += 1, R1456 += 1 };
  s0 -> s0 [0, 65535] { R3126 += 1, R3127 += 1 };
  s1 -> s1 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s1 -> s2 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s8 [0, 65535] { R3127 += 1, R3007 += 1 };
  s1 -> s3 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s1 -> s7 [0, 65535] { R3127 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s2 -> s8 [0, 65535] { R3127 += 1, R3007 += 1 };
  s2 -> s9 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1 };
  s2 -> s7 [0, 65535] { R3127 += 1 };
  s2 -> s10 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s3 -> s8 [0, 65535] { R3127 += 1, R3007 += 1 };
  s3 -> s3 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s3 -> s9 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1 };
  s3 -> s7 [0, 65535] { R3127 += 1 };
  s4 -> s1 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s4 -> s2 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s4 -> s4 [0, 65535] { R3127 += 1, R3006 += 1, R3007 += 1 };
  s4 -> s5 [0, 65535] { R3127 += 1, R3007 += 1, R1455 += 1, R1456 += 1 };
  s5 -> s1 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s5 -> s2 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s3 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s5 -> s7 [0, 65535] { R3127 += 1 };
  s5 -> s5 [0, 65535] { R3127 += 1, R3007 += 1, R1455 += 1, R1456 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3127 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3127 += 1, R3007 += 1 };
  s8 -> s7 [0, 65535] { R3127 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s8 [0, 65535] { R3127 += 1, R3007 += 1 };
  s9 -> s9 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1 };
  s9 -> s7 [0, 65535] { R3127 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s8 [0, 65535] { R3127 += 1, R3007 += 1 };
  s10 -> s9 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1 };
  s10 -> s7 [0, 65535] { R3127 += 1 };
  s10 -> s10 [0, 65535] { R3127 += 1, R3007 += 1, R1456 += 1, R1458 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_35 {
  init s0;
  s0 -> s0 [0, 65535] { R3128 += 1, R3129 += 1 };
  s0 -> s1 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s0 -> s2 [0, 65535] { R3129 += 1, R3008 += 1, R3009 += 1 };
  s0 -> s3 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s4 [0, 65535] { R3129 += 1, R3009 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s5 [0, 65535] { R3129 += 1 };
  s1 -> s7 [0, 65535] { R3129 += 1, R3009 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s8 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s2 [0, 65535] { R3129 += 1, R3008 += 1, R3009 += 1 };
  s2 -> s3 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s4 [0, 65535] { R3129 += 1, R3009 += 1, R1467 += 1, R1468 += 1 };
  s3 -> s5 [0, 65535] { R3129 += 1 };
  s3 -> s7 [0, 65535] { R3129 += 1, R3009 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s3 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s5 [0, 65535] { R3129 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s3 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s4 -> s4 [0, 65535] { R3129 += 1, R3009 += 1, R1467 += 1, R1468 += 1 };
  s5 -> s5 [0, 65535] { R3129 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R3129 += 1 };
  s7 -> s7 [0, 65535] { R3129 += 1, R3009 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s5 [0, 65535] { R3129 += 1 };
  s8 -> s7 [0, 65535] { R3129 += 1, R3009 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3129 += 1, R3009 += 1, R1468 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s2 [0, 65535] { R3131 += 1, R3010 += 1, R3011 += 1 };
  s0 -> s3 [0, 65535] { R3131 += 1, R3011 += 1, R1476 += 1, R1477 += 1 };
  s0 -> s0 [0, 65535] { R3130 += 1, R3131 += 1 };
  s0 -> s4 [0, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s0 -> s5 [70, 70] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s6 [76, 76] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s1 [77, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [0, 69] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s5 [70, 70] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s6 [76, 76] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [77, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [0, 69] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s2 [0, 65535] { R3131 += 1, R3010 += 1, R3011 += 1 };
  s2 -> s3 [0, 65535] { R3131 += 1, R3011 += 1, R1476 += 1, R1477 += 1 };
  s2 -> s4 [0, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s2 -> s5 [70, 70] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s6 [76, 76] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [77, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [0, 69] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s3 [0, 65535] { R3131 += 1, R3011 += 1, R1476 += 1, R1477 += 1 };
  s3 -> s4 [0, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s3 -> s5 [70, 70] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s6 [76, 76] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [77, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [0, 69] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s4 [0, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s4 -> s5 [70, 70] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s6 [76, 76] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [77, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [0, 70] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s11 [76, 76] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [77, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [0, 69] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s7 [0, 65535] { R3131 += 1 };
  s6 -> s6 [0, 65535] { R3131 += 1, R3011 += 1, R1477 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R3131 += 1, R3011 += 1 };
  s6 -> s10 [70, 70] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s11 [70, 70] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [76, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s7 -> s7 [0, 65535] { R3131 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R3131 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3131 += 1, R3011 += 1 };
  s10 -> s7 [0, 65535] { R3131 += 1 };
  s10 -> s10 [0, 65535] { R3131 += 1, R3011 += 1, R1477 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R3131 += 1, R3011 += 1 };
  s11 -> s11 [0, 70] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  s11 -> s7 [0, 65535] { R3131 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R3131 += 1, R3011 += 1 };
  s11 -> s11 [0, 65535] { R3131 += 1, R3011 += 1, R1477 += 1 };
  s11 -> s11 [76, 65535] { R3131 += 1, R3011 += 1, R1477 += 1, R1479 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s2 [0, 65535] { R3133 += 1, R3013 += 1, R1485 += 1, R1486 += 1 };
  s0 -> s3 [0, 65535] { R3133 += 1, R3012 += 1, R3013 += 1 };
  s0 -> s0 [0, 65535] { R3132 += 1, R3133 += 1 };
  s0 -> s4 [0, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s0 -> s5 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s6 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s1 [71, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [0, 69] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s7 [0, 65535] { R3133 += 1 };
  s1 -> s8 [0, 65535] { R3133 += 1, R3013 += 1 };
  s1 -> s1 [0, 65535] { R3133 += 1, R3013 += 1, R1486 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s5 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s6 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [71, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [0, 69] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s2 [0, 65535] { R3133 += 1, R3013 += 1, R1485 += 1, R1486 += 1 };
  s2 -> s7 [0, 65535] { R3133 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s4 [0, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s2 -> s5 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s6 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [71, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [0, 69] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s2 [0, 65535] { R3133 += 1, R3013 += 1, R1485 += 1, R1486 += 1 };
  s3 -> s3 [0, 65535] { R3133 += 1, R3012 += 1, R3013 += 1 };
  s3 -> s10 [0, 65535];
  s3 -> s4 [0, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s3 -> s5 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s6 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [71, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [0, 69] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s7 [0, 65535] { R3133 += 1 };
  s4 -> s8 [0, 65535] { R3133 += 1, R3013 += 1 };
  s4 -> s10 [0, 65535];
  s4 -> s4 [0, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s4 -> s5 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s6 [70, 70] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [71, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s5 -> s5 [0, 65535] { R3133 += 1, R3013 += 1, R1486 += 1 };
  s5 -> s7 [0, 65535] { R3133 += 1 };
  s5 -> s8 [0, 65535] { R3133 += 1, R3013 += 1 };
  s5 -> s10 [0, 65535];
  s6 -> s7 [0, 65535] { R3133 += 1 };
  s6 -> s8 [0, 65535] { R3133 += 1, R3013 += 1 };
  s6 -> s9 [0, 65535] { R3133 += 1, R3013 += 1, R1486 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s6 [0, 65535] { R3133 += 1, R3013 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s7 -> s7 [0, 65535] { R3133 += 1 };
  s7 -> s10 [0, 65535];
  s8 -> s7 [0, 65535] { R3133 += 1 };
  s8 -> s8 [0, 65535] { R3133 += 1, R3013 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s7 [0, 65535] { R3133 += 1 };
  s9 -> s8 [0, 65535] { R3133 += 1, R3013 += 1 };
  s9 -> s9 [0, 65535] { R3133 += 1, R3013 += 1, R1486 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s2 [0, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s0 -> s3 [0, 65535] { R3135 += 1, R3014 += 1, R3015 += 1 };
  s0 -> s0 [0, 65535] { R3134 += 1, R3135 += 1 };
  s0 -> s4 [0, 65535] { R3135 += 1, R3015 += 1, R1495 += 1, R1496 += 1 };
  s0 -> s5 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s6 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s1 [71, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [0, 69] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s7 [0, 65535] { R3135 += 1, R3015 += 1 };
  s1 -> s1 [0, 65535] { R3135 += 1, R3015 += 1, R1496 += 1 };
  s1 -> s8 [0, 65535] { R3135 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s5 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s6 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [71, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [0, 69] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s2 [0, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s2 -> s7 [0, 65535] { R3135 += 1, R3015 += 1 };
  s2 -> s8 [0, 65535] { R3135 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s6 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [71, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [0, 69] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s2 [0, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s3 -> s3 [0, 65535] { R3135 += 1, R3014 += 1, R3015 += 1 };
  s3 -> s4 [0, 65535] { R3135 += 1, R3015 += 1, R1495 += 1, R1496 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s6 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [71, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [0, 69] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s2 [0, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s4 -> s4 [0, 65535] { R3135 += 1, R3015 += 1, R1495 += 1, R1496 += 1 };
  s4 -> s8 [0, 65535] { R3135 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s5 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s6 [70, 70] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [71, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s5 -> s7 [0, 65535] { R3135 += 1, R3015 += 1 };
  s5 -> s8 [0, 65535] { R3135 += 1 };
  s5 -> s10 [0, 65535] { R3135 += 1, R3015 += 1, R1496 += 1 };
  s5 -> s5 [0, 65535] { R3135 += 1, R3015 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s7 [0, 65535] { R3135 += 1, R3015 += 1 };
  s6 -> s8 [0, 65535] { R3135 += 1 };
  s6 -> s6 [0, 65535] { R3135 += 1, R3015 += 1, R1496 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R3135 += 1, R3015 += 1 };
  s7 -> s8 [0, 65535] { R3135 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3135 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R3135 += 1, R3015 += 1 };
  s10 -> s8 [0, 65535] { R3135 += 1 };
  s10 -> s10 [0, 65535] { R3135 += 1, R3015 += 1, R1496 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s0 -> s2 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s0 -> s3 [0, 65535] { R3137 += 1, R3016 += 1, R3017 += 1 };
  s0 -> s4 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1508 += 1, R1509 += 1 };
  s0 -> s0 [0, 65535] { R3136 += 1, R3137 += 1 };
  s0 -> s5 [0, 65535] { R3137 += 1, R3017 += 1, R1506 += 1, R1507 += 1 };
  s0 -> s6 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s0 -> s7 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s0 -> s1 [71, 75] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s0 -> s2 [71, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s0 -> s8 [76, 76] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s0 -> s1 [77, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s1 -> s1 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s1 -> s7 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s1 -> s1 [71, 75] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s1 -> s8 [76, 76] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s1 -> s1 [77, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s2 -> s1 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s2 -> s2 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s2 -> s6 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s2 -> s7 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s2 -> s1 [71, 75] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s2 -> s2 [71, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s2 -> s8 [76, 76] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s2 -> s1 [77, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s3 -> s1 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s3 -> s2 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s3 -> s3 [0, 65535] { R3137 += 1, R3016 += 1, R3017 += 1 };
  s3 -> s4 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1508 += 1, R1509 += 1 };
  s3 -> s5 [0, 65535] { R3137 += 1, R3017 += 1, R1506 += 1, R1507 += 1 };
  s3 -> s6 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s3 -> s7 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s3 -> s1 [71, 75] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s3 -> s2 [71, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s3 -> s8 [76, 76] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s3 -> s1 [77, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s4 -> s1 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s4 -> s2 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s4 -> s4 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1508 += 1, R1509 += 1 };
  s4 -> s6 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s4 -> s7 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s4 -> s1 [71, 75] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s4 -> s2 [71, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s4 -> s8 [76, 76] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s4 -> s1 [77, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s5 -> s1 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s5 -> s2 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s5 -> s4 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1508 += 1, R1509 += 1 };
  s5 -> s5 [0, 65535] { R3137 += 1, R3017 += 1, R1506 += 1, R1507 += 1 };
  s5 -> s6 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s5 -> s7 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s5 -> s1 [71, 75] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s5 -> s2 [71, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s5 -> s8 [76, 76] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s5 -> s1 [77, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s6 -> s7 [0, 75] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s6 -> s6 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1510 += 1, R1511 += 1 };
  s6 -> s13 [76, 76] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s6 -> s7 [77, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s7 -> s7 [0, 75] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s7 -> s13 [76, 76] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s7 -> s7 [77, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s8 -> s8 [0, 69] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R3137 += 1 };
  s8 -> s11 [0, 65535] { R3137 += 1, R3017 += 1 };
  s8 -> s8 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1 };
  s8 -> s12 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s8 -> s13 [70, 70] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s8 -> s8 [71, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3137 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s10 [0, 65535] { R3137 += 1 };
  s11 -> s11 [0, 65535] { R3137 += 1, R3017 += 1 };
  s12 -> s12 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s10 [0, 65535] { R3137 += 1 };
  s12 -> s11 [0, 65535] { R3137 += 1, R3017 += 1 };
  s13 -> s9 [0, 65535];
  s13 -> s10 [0, 65535] { R3137 += 1 };
  s13 -> s13 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1, R1509 += 1, R1511 += 1 };
  s13 -> s14 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1 };
  s13 -> s11 [0, 65535] { R3137 += 1, R3017 += 1 };
  s14 -> s9 [0, 65535];
  s14 -> s10 [0, 65535] { R3137 += 1 };
  s14 -> s14 [0, 65535] { R3137 += 1, R3017 += 1, R1507 += 1 };
  s14 -> s11 [0, 65535] { R3137 += 1, R3017 += 1 };
  accepting s12, s8, s13, s9, s14, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65535] { R3139 += 1, R3018 += 1, R3019 += 1 };
  s0 -> s0 [0, 65535] { R3138 += 1, R3139 += 1 };
  s0 -> s2 [0, 65535] { R3139 += 1, R3019 += 1 };
  s0 -> s3 [0, 65535] { R3139 += 1, R3019 += 1, R2960 += 1 };
  s1 -> s1 [0, 65535] { R3139 += 1, R3018 += 1, R3019 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R3139 += 1, R3019 += 1 };
  s1 -> s3 [0, 65535] { R3139 += 1, R3019 += 1, R2960 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3139 += 1, R3019 += 1 };
  s2 -> s5 [0, 65535] { R3139 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R3139 += 1, R3019 += 1 };
  s3 -> s3 [0, 65535] { R3139 += 1, R3019 += 1, R2960 += 1 };
  s3 -> s5 [0, 65535] { R3139 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3139 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65535] { R3141 += 1, R3021 += 1, R27 += 1 };
  s0 -> s2 [0, 65535] { R3141 += 1, R3020 += 1, R3021 += 1 };
  s0 -> s0 [0, 65535] { R3140 += 1, R3141 += 1 };
  s1 -> s1 [0, 65535] { R3141 += 1, R3021 += 1, R27 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3141 += 1 };
  s2 -> s1 [0, 65535] { R3141 += 1, R3021 += 1, R27 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3141 += 1, R3020 += 1, R3021 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3141 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 66] { R3143 += 1, R3023 += 1 };
  s0 -> s2 [0, 65535] { R3143 += 1, R3022 += 1, R3023 += 1 };
  s0 -> s0 [0, 65535] { R3142 += 1, R3143 += 1 };
  s0 -> s3 [67, 67] { R3143 += 1, R3023 += 1 };
  s0 -> s4 [67, 67] { R3143 += 1, R3023 += 1 };
  s0 -> s5 [70, 70] { R3143 += 1, R3023 += 1 };
  s0 -> s1 [71, 65535] { R3143 += 1, R3023 += 1 };
  s1 -> s1 [0, 66] { R3143 += 1, R3023 += 1 };
  s1 -> s3 [67, 67] { R3143 += 1, R3023 += 1 };
  s1 -> s4 [67, 67] { R3143 += 1, R3023 += 1 };
  s1 -> s5 [70, 70] { R3143 += 1, R3023 += 1 };
  s1 -> s1 [71, 65535] { R3143 += 1, R3023 += 1 };
  s2 -> s1 [0, 66] { R3143 += 1, R3023 += 1 };
  s2 -> s2 [0, 65535] { R3143 += 1, R3022 += 1, R3023 += 1 };
  s2 -> s3 [67, 67] { R3143 += 1, R3023 += 1 };
  s2 -> s4 [67, 67] { R3143 += 1, R3023 += 1 };
  s2 -> s5 [70, 70] { R3143 += 1, R3023 += 1 };
  s2 -> s1 [71, 65535] { R3143 += 1, R3023 += 1 };
  s4 -> s4 [0, 67] { R3143 += 1, R3023 += 1 };
  s4 -> s8 [70, 70] { R3143 += 1, R3023 += 1 };
  s4 -> s4 [71, 65535] { R3143 += 1, R3023 += 1 };
  s5 -> s5 [0, 66] { R3143 += 1, R3023 += 1 };
  s5 -> s5 [0, 65535] { R3143 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [67, 67] { R3143 += 1, R3023 += 1 };
  s5 -> s8 [67, 67] { R3143 += 1, R3023 += 1 };
  s5 -> s5 [70, 65535] { R3143 += 1, R3023 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3143 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 67] { R3143 += 1, R3023 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3143 += 1 };
  s8 -> s8 [70, 65535] { R3143 += 1, R3023 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 66] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s0 -> s0 [0, 65535] { R3144 += 1, R3145 += 1 };
  s0 -> s2 [0, 65535] { R3145 += 1, R3024 += 1, R3025 += 1 };
  s0 -> s3 [67, 67] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s0 -> s4 [67, 67] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s0 -> s1 [68, 65535] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s1 -> s1 [0, 66] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3145 += 1 };
  s1 -> s3 [67, 67] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s1 -> s4 [67, 67] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s1 -> s1 [68, 65535] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s2 -> s1 [0, 66] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3145 += 1, R3024 += 1, R3025 += 1 };
  s2 -> s3 [67, 67] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s2 -> s4 [67, 67] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s2 -> s1 [68, 65535] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3145 += 1, R3025 += 1, R1330 += 1 };
  s3 -> s6 [0, 65535] { R3145 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3145 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3145 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 66] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s0 -> s0 [0, 65535] { R3146 += 1, R3147 += 1 };
  s0 -> s2 [0, 65535] { R3147 += 1, R3026 += 1, R3027 += 1 };
  s0 -> s3 [67, 67] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s0 -> s4 [67, 67] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s0 -> s1 [68, 65535] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s1 -> s1 [0, 66] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3147 += 1 };
  s1 -> s3 [67, 67] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s1 -> s4 [67, 67] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s1 -> s1 [68, 65535] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s2 -> s1 [0, 66] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3147 += 1, R3026 += 1, R3027 += 1 };
  s2 -> s3 [67, 67] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s2 -> s4 [67, 67] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s2 -> s1 [68, 65535] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3147 += 1 };
  s3 -> s3 [0, 65535] { R3147 += 1, R3027 += 1, R1332 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3147 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3147 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 66] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s0 [0, 65535] { R3148 += 1, R3149 += 1 };
  s0 -> s2 [0, 65535] { R3149 += 1, R3028 += 1, R3029 += 1 };
  s0 -> s3 [67, 67] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s4 [67, 67] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s1 [68, 65535] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [0, 66] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3149 += 1 };
  s1 -> s3 [67, 67] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s4 [67, 67] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [68, 65535] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [0, 66] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3149 += 1, R3028 += 1, R3029 += 1 };
  s2 -> s3 [67, 67] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s4 [67, 67] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [68, 65535] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3149 += 1, R3029 += 1, R1334 += 1, R1335 += 1 };
  s3 -> s6 [0, 65535] { R3149 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3149 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3149 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 66] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s0 [0, 65535] { R3150 += 1, R3151 += 1 };
  s0 -> s2 [0, 65535] { R3151 += 1, R3030 += 1, R3031 += 1 };
  s0 -> s3 [67, 67] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s4 [67, 67] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s1 [68, 65535] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [0, 66] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3151 += 1 };
  s1 -> s3 [67, 67] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s4 [67, 67] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [68, 65535] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [0, 66] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3151 += 1, R3030 += 1, R3031 += 1 };
  s2 -> s3 [67, 67] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s4 [67, 67] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [68, 65535] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s3 -> s6 [0, 65535] { R3151 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3151 += 1, R3031 += 1, R1340 += 1, R1341 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3151 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3151 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 66] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s2 [0, 65535] { R3153 += 1, R3032 += 1, R3033 += 1 };
  s0 -> s0 [0, 65535] { R3152 += 1, R3153 += 1 };
  s0 -> s3 [67, 67] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s4 [67, 67] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s1 [68, 65535] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [0, 66] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [0, 65535] { R3153 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s4 [67, 67] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [68, 65535] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [0, 66] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s2 [0, 65535] { R3153 += 1, R3032 += 1, R3033 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s4 [67, 67] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [68, 65535] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3153 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3153 += 1, R3033 += 1, R1344 += 1, R1345 += 1 };
  s4 -> s6 [0, 65535] { R3153 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3153 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 66] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s2 [0, 65535] { R3155 += 1, R3034 += 1, R3035 += 1 };
  s0 -> s0 [0, 65535] { R3154 += 1, R3155 += 1 };
  s0 -> s3 [67, 67] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s4 [67, 67] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s1 [68, 65535] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [0, 66] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3155 += 1 };
  s1 -> s3 [67, 67] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s4 [67, 67] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [68, 65535] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [0, 66] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s2 [0, 65535] { R3155 += 1, R3034 += 1, R3035 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s4 [67, 67] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [68, 65535] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s3 [0, 65535] { R3155 += 1, R3035 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3155 += 1 };
  s4 -> s4 [0, 65535] { R3155 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3155 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 66] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s2 [0, 65535] { R3157 += 1, R3036 += 1, R3037 += 1 };
  s0 -> s0 [0, 65535] { R3156 += 1, R3157 += 1 };
  s0 -> s3 [67, 67] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s4 [67, 67] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s1 [68, 65535] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [0, 66] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [0, 65535] { R3157 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s4 [67, 67] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [68, 65535] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [0, 66] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s2 [0, 65535] { R3157 += 1, R3036 += 1, R3037 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s4 [67, 67] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [68, 65535] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s3 -> s6 [0, 65535] { R3157 += 1 };
  s3 -> s3 [0, 65535] { R3157 += 1, R3037 += 1, R1356 += 1, R1357 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3157 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3157 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 66] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s2 [0, 65535] { R3159 += 1, R3038 += 1, R3039 += 1 };
  s0 -> s0 [0, 65535] { R3158 += 1, R3159 += 1 };
  s0 -> s3 [67, 67] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s4 [67, 67] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s1 [68, 65535] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [0, 66] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3159 += 1 };
  s1 -> s3 [67, 67] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s4 [67, 67] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [68, 65535] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [0, 66] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3159 += 1, R3038 += 1, R3039 += 1 };
  s2 -> s3 [67, 67] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s4 [67, 67] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [68, 65535] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3159 += 1 };
  s4 -> s5 [0, 65535] { R3159 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3159 += 1, R3039 += 1, R1364 += 1, R1365 += 1 };
  s5 -> s5 [0, 65535] { R3159 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 66] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s2 [0, 65535] { R3161 += 1, R3040 += 1, R3041 += 1 };
  s0 -> s0 [0, 65535] { R3160 += 1, R3161 += 1 };
  s0 -> s3 [67, 67] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s4 [67, 67] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s1 [68, 65535] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [0, 66] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3161 += 1 };
  s1 -> s3 [67, 67] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s4 [67, 67] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [68, 65535] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [0, 66] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s2 [0, 65535] { R3161 += 1, R3040 += 1, R3041 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s4 [67, 67] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [68, 65535] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s3 -> s3 [0, 65535] { R3161 += 1, R3041 += 1, R1374 += 1, R1375 += 1 };
  s3 -> s6 [0, 65535] { R3161 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3161 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3161 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 66] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s2 [0, 65535] { R3163 += 1, R3042 += 1, R3043 += 1 };
  s0 -> s0 [0, 65535] { R3162 += 1, R3163 += 1 };
  s0 -> s3 [67, 67] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s4 [67, 67] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s1 [68, 65535] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [0, 66] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [0, 65535] { R3163 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s4 [67, 67] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [68, 65535] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [0, 66] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s2 [0, 65535] { R3163 += 1, R3042 += 1, R3043 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s4 [67, 67] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [68, 65535] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s3 -> s3 [0, 65535] { R3163 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3163 += 1, R3043 += 1, R1378 += 1, R1379 += 1 };
  s4 -> s6 [0, 65535] { R3163 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3163 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 66] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s2 [0, 65535] { R3165 += 1, R3044 += 1, R3045 += 1 };
  s0 -> s0 [0, 65535] { R3164 += 1, R3165 += 1 };
  s0 -> s3 [67, 67] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s4 [67, 67] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s1 [68, 65535] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [0, 66] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3165 += 1 };
  s1 -> s3 [67, 67] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s4 [67, 67] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [68, 65535] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [0, 66] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3165 += 1, R3044 += 1, R3045 += 1 };
  s2 -> s3 [67, 67] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s4 [67, 67] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [68, 65535] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3165 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3165 += 1 };
  s4 -> s4 [0, 65535] { R3165 += 1, R3045 += 1, R1384 += 1, R1385 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3165 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 66] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s2 [0, 65535] { R3167 += 1, R3046 += 1, R3047 += 1 };
  s0 -> s0 [0, 65535] { R3166 += 1, R3167 += 1 };
  s0 -> s3 [67, 67] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s4 [67, 67] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s1 [68, 65535] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [0, 66] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3167 += 1 };
  s1 -> s3 [67, 67] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s4 [67, 67] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [68, 65535] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [0, 66] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s2 [0, 65535] { R3167 += 1, R3046 += 1, R3047 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s4 [67, 67] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [68, 65535] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s3 -> s3 [0, 65535] { R3167 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3167 += 1 };
  s4 -> s4 [0, 65535] { R3167 += 1, R3047 += 1, R1390 += 1, R1391 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3167 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_55 {
  init s0;
  s0 -> s1 [0, 66] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s0 [0, 65535] { R3168 += 1, R3169 += 1 };
  s0 -> s2 [0, 65535] { R3169 += 1, R3048 += 1, R3049 += 1 };
  s0 -> s3 [67, 67] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s4 [67, 67] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s1 [68, 65535] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [0, 66] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3169 += 1 };
  s1 -> s3 [67, 67] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s4 [67, 67] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [68, 65535] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [0, 66] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3169 += 1, R3048 += 1, R3049 += 1 };
  s2 -> s3 [67, 67] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s4 [67, 67] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [68, 65535] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s3 -> s3 [0, 65535] { R3169 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3169 += 1, R3049 += 1, R1398 += 1, R1399 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3169 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3169 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_56 {
  init s0;
  s0 -> s1 [0, 66] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s0 [0, 65535] { R3170 += 1, R3171 += 1 };
  s0 -> s2 [0, 65535] { R3171 += 1, R3050 += 1, R3051 += 1 };
  s0 -> s3 [67, 67] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s4 [67, 67] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s1 [68, 65535] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [0, 66] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3171 += 1 };
  s1 -> s3 [67, 67] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s4 [67, 67] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [68, 65535] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [0, 66] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3171 += 1, R3050 += 1, R3051 += 1 };
  s2 -> s3 [67, 67] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s4 [67, 67] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [68, 65535] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s3 -> s6 [0, 65535] { R3171 += 1 };
  s3 -> s3 [0, 65535] { R3171 += 1, R3051 += 1, R1408 += 1, R1409 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3171 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3171 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_57 {
  init s0;
  s0 -> s1 [0, 66] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s0 [0, 65535] { R3172 += 1, R3173 += 1 };
  s0 -> s2 [0, 65535] { R3173 += 1, R3052 += 1, R3053 += 1 };
  s0 -> s3 [67, 67] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s4 [67, 67] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s1 [68, 65535] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [0, 66] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3173 += 1 };
  s1 -> s3 [67, 67] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s4 [67, 67] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [68, 65535] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [0, 66] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3173 += 1, R3052 += 1, R3053 += 1 };
  s2 -> s3 [67, 67] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s4 [67, 67] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [68, 65535] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3173 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3173 += 1 };
  s4 -> s4 [0, 65535] { R3173 += 1, R3053 += 1, R1416 += 1, R1417 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3173 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_58 {
  init s0;
  s0 -> s1 [0, 66] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s2 [0, 65535] { R3175 += 1, R3054 += 1, R3055 += 1 };
  s0 -> s0 [0, 65535] { R3174 += 1, R3175 += 1 };
  s0 -> s3 [67, 67] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s4 [67, 67] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s1 [68, 65535] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [0, 66] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3175 += 1 };
  s1 -> s3 [67, 67] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s4 [67, 67] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [68, 65535] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [0, 66] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3175 += 1, R3054 += 1, R3055 += 1 };
  s2 -> s3 [67, 67] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s4 [67, 67] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [68, 65535] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s3 -> s6 [0, 65535] { R3175 += 1 };
  s3 -> s3 [0, 65535] { R3175 += 1, R3055 += 1, R1426 += 1, R1427 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3175 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3175 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_59 {
  init s0;
  s0 -> s1 [0, 66] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s2 [0, 65535] { R3177 += 1, R3056 += 1, R3057 += 1 };
  s0 -> s0 [0, 65535] { R3176 += 1, R3177 += 1 };
  s0 -> s3 [67, 67] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s4 [67, 67] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s1 [68, 65535] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [0, 66] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [0, 65535] { R3177 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s4 [67, 67] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [68, 65535] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [0, 66] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s2 [0, 65535] { R3177 += 1, R3056 += 1, R3057 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s4 [67, 67] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [68, 65535] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s3 -> s3 [0, 65535] { R3177 += 1, R3057 += 1, R1436 += 1, R1437 += 1 };
  s3 -> s6 [0, 65535] { R3177 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3177 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3177 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_60 {
  init s0;
  s0 -> s1 [0, 66] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s2 [0, 65535] { R3179 += 1, R3058 += 1, R3059 += 1 };
  s0 -> s0 [0, 65535] { R3178 += 1, R3179 += 1 };
  s0 -> s3 [67, 67] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s4 [67, 67] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s1 [68, 65535] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [0, 66] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3179 += 1 };
  s1 -> s3 [67, 67] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s4 [67, 67] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [68, 65535] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [0, 66] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s2 [0, 65535] { R3179 += 1, R3058 += 1, R3059 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s4 [67, 67] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [68, 65535] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s3 -> s3 [0, 65535] { R3179 += 1, R3059 += 1, R1448 += 1, R1449 += 1 };
  s3 -> s6 [0, 65535] { R3179 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3179 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3179 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_61 {
  init s0;
  s0 -> s1 [0, 66] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s0 [0, 65535] { R3180 += 1, R3181 += 1 };
  s0 -> s2 [0, 65535] { R3181 += 1, R3060 += 1, R3061 += 1 };
  s0 -> s3 [67, 67] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s4 [67, 67] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s1 [68, 65535] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [0, 66] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [0, 65535] { R3181 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s4 [67, 67] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [68, 65535] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [0, 66] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3181 += 1, R3060 += 1, R3061 += 1 };
  s2 -> s3 [67, 67] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s4 [67, 67] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [68, 65535] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s3 -> s3 [0, 65535] { R3181 += 1, R3061 += 1, R1462 += 1, R1463 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3181 += 1 };
  s4 -> s4 [0, 65535] { R3181 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3181 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_62 {
  init s0;
  s0 -> s1 [0, 66] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s0 [0, 65535] { R3182 += 1, R3183 += 1 };
  s0 -> s2 [0, 65535] { R3183 += 1, R3062 += 1, R3063 += 1 };
  s0 -> s3 [67, 67] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s4 [67, 67] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s1 [68, 65535] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 66] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 65535] { R3183 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s4 [67, 67] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [68, 65535] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [0, 66] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3183 += 1, R3062 += 1, R3063 += 1 };
  s2 -> s3 [67, 67] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s4 [67, 67] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [68, 65535] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s3 -> s3 [0, 65535] { R3183 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3183 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3183 += 1, R3063 += 1, R1472 += 1, R1473 += 1 };
  s5 -> s5 [0, 65535] { R3183 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_63 {
  init s0;
  s0 -> s1 [0, 66] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s0 [0, 65535] { R3184 += 1, R3185 += 1 };
  s0 -> s2 [0, 65535] { R3185 += 1, R3064 += 1, R3065 += 1 };
  s0 -> s3 [67, 67] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s4 [67, 67] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s1 [68, 65535] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [0, 66] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3185 += 1 };
  s1 -> s3 [67, 67] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s4 [67, 67] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [68, 65535] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [0, 66] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3185 += 1, R3064 += 1, R3065 += 1 };
  s2 -> s3 [67, 67] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s4 [67, 67] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [68, 65535] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3185 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3185 += 1 };
  s4 -> s4 [0, 65535] { R3185 += 1, R3065 += 1, R1480 += 1, R1481 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3185 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_64 {
  init s0;
  s0 -> s1 [0, 66] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s2 [0, 65535] { R3187 += 1, R3066 += 1, R3067 += 1 };
  s0 -> s0 [0, 65535] { R3186 += 1, R3187 += 1 };
  s0 -> s3 [67, 67] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s4 [67, 67] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s1 [68, 65535] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [0, 66] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3187 += 1 };
  s1 -> s3 [67, 67] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s4 [67, 67] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [68, 65535] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [0, 66] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s2 [0, 65535] { R3187 += 1, R3066 += 1, R3067 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s4 [67, 67] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [68, 65535] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3187 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3187 += 1 };
  s4 -> s4 [0, 65535] { R3187 += 1, R3067 += 1, R1490 += 1, R1491 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3187 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_65 {
  init s0;
  s0 -> s1 [0, 66] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s0 -> s2 [0, 65535] { R3189 += 1, R3068 += 1, R3069 += 1 };
  s0 -> s0 [0, 65535] { R3188 += 1, R3189 += 1 };
  s0 -> s3 [67, 67] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s0 -> s4 [67, 67] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s0 -> s1 [68, 65535] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s1 -> s1 [0, 66] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s1 -> s1 [0, 65535] { R3189 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s1 -> s4 [67, 67] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s1 -> s1 [68, 65535] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s2 -> s1 [0, 66] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s2 -> s2 [0, 65535] { R3189 += 1, R3068 += 1, R3069 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s2 -> s4 [67, 67] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s2 -> s1 [68, 65535] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s3 -> s3 [0, 65535] { R3189 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3189 += 1 };
  s4 -> s4 [0, 65535] { R3189 += 1, R3069 += 1, R1500 += 1, R1501 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3189 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_66 {
  init s0;
  s0 -> s1 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s0 -> s2 [0, 66] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s0 -> s3 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s0 -> s4 [0, 65535] { R3191 += 1, R3070 += 1, R3071 += 1 };
  s0 -> s0 [0, 65535] { R3190 += 1, R3191 += 1 };
  s0 -> s5 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s0 -> s6 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s0 -> s7 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s0 -> s8 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s0 -> s9 [67, 67] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s0 -> s10 [67, 67] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s0 -> s1 [68, 69] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s0 -> s2 [68, 65535] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s0 -> s3 [68, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s0 -> s11 [70, 70] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s0 -> s1 [71, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s1 -> s1 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s1 -> s6 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s1 -> s7 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s1 -> s1 [68, 69] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s1 -> s1 [68, 65535] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s1 -> s11 [70, 70] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s1 -> s1 [71, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s2 -> s1 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s2 -> s2 [0, 66] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s2 -> s3 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s2 -> s5 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s2 -> s6 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s2 -> s7 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s2 -> s8 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s2 -> s9 [67, 67] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s2 -> s10 [67, 67] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s2 -> s1 [68, 69] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s2 -> s2 [68, 65535] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s2 -> s3 [68, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s2 -> s11 [70, 70] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s2 -> s1 [71, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s3 -> s1 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s3 -> s3 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s3 -> s5 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s3 -> s6 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s3 -> s7 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s3 -> s8 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s3 -> s1 [68, 69] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s3 -> s3 [68, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s3 -> s11 [70, 70] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s3 -> s1 [71, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s4 -> s1 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s4 -> s2 [0, 66] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s4 -> s3 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s4 -> s4 [0, 65535] { R3191 += 1, R3070 += 1, R3071 += 1 };
  s4 -> s5 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s4 -> s6 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s4 -> s7 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s4 -> s8 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s4 -> s9 [67, 67] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s4 -> s10 [67, 67] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s4 -> s1 [68, 69] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s4 -> s2 [68, 65535] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s4 -> s3 [68, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s4 -> s11 [70, 70] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s4 -> s1 [71, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s7 -> s7 [0, 69] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s7 -> s7 [0, 65535] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s7 -> s13 [70, 70] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s7 -> s7 [71, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s8 -> s7 [0, 69] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s8 -> s8 [0, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s8 -> s13 [70, 70] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s8 -> s7 [71, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s9 -> s7 [0, 69] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s9 -> s8 [0, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2954 += 1, R2955 += 1 };
  s9 -> s9 [0, 65535] { R3191 += 1, R3071 += 1, R2952 += 1, R2953 += 1 };
  s9 -> s13 [70, 70] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s9 -> s7 [71, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s11 -> s12 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s11 -> s11 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s11 -> s13 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s11 -> s14 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s11 -> s15 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s11 -> s16 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s11 -> s12 [68, 65535] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s11 -> s11 [68, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s12 -> s12 [0, 66] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s12 -> s17 [0, 65535];
  s12 -> s12 [0, 65535] { R3191 += 1 };
  s12 -> s14 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s12 -> s15 [67, 67] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s12 -> s12 [68, 65535] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s13 -> s13 [0, 65535] { R3191 += 1, R3071 += 1, R2953 += 1, R2955 += 1, R2956 += 1, R2957 += 1 };
  s13 -> s14 [0, 65535] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s14 -> s17 [0, 65535];
  s14 -> s14 [0, 65535] { R3191 += 1, R3071 += 1, R2953 += 1 };
  s14 -> s18 [0, 65535] { R3191 += 1 };
  s15 -> s17 [0, 65535];
  s15 -> s15 [0, 65535] { R3191 += 1 };
  s17 -> s17 [0, 65535];
  s18 -> s17 [0, 65535];
  s18 -> s18 [0, 65535] { R3191 += 1 };
  accepting s17, s12, s14, s18, s15;
};
};
synchronised {  // Automata constraining P17
automaton P17_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R3019 && R4 - R3191 = 1 && R28 - R3019 = -1 && R29 = R3019 && R30 - R3019 = -1 && R31 = R3019 && R32 = 0 && R33 = 1 && R34 = 0 && R35 = 1 && R36 = R3191 && R37 - R3191 = 1 && R38 = R3191 && R39 - R3191 = 1 && R40 = 0 && R41 = 1 && R42 = 0 && R43 = 1 && R1331 + R1330 + -1*R1507 + -1*R1501 = 0 && R1349 + R1346 + R1425 + R1420 + R1489 + R1484 + -1*R1511 + -1*R1505 - R1441 - R1447 - R1359 - R1363 = 0 && R1362 + R1358 + R1446 + R1440 + R1510 + R1504 = 0 && R1376 + R1374 = 0 && R1377 + R1375 + -1*R1507 + -1*R1501 = 0 && R1476 + R1472 = 0 && R1477 + R1473 + -1*R1507 + -1*R1501 = 0 && R1478 + R1474 = 0 && R1479 + R1475 = 0 && R1506 + R1500 = 0 && R1508 + R1502 = 0 && R1509 + R1503 = 0 && R2966 = 0 && R2967 = R3019 && R2968 = 0 && R2969 = R3019 && R2970 = 0 && R2971 = R3019 && R2972 = 0 && R2973 = R3019 && R2974 = 0 && R2975 = R3019 && R2976 = 0 && R2977 = R3019 && R2978 = 0 && R2979 = R3019 && R2980 = 0 && R2981 = R3019 && R2982 = 0 && R2983 = R3019 && R2984 = 0 && R2985 = R3019 && R2986 = 0 && R2987 = R3019 && R2988 = 0 && R2989 = R3019 && R2990 = 0 && R2991 = R3019 && R2992 = 0 && R2993 = R3019 && R2994 = 0 && R2995 = R3019 && R2996 = 0 && R2997 = R3019 && R2998 = 0 && R2999 = R3019 && R3000 = 0 && R3001 = R3019 && R3002 = 0 && R3003 = R3019 && R3004 = 0 && R3005 = R3019 && R3006 = 0 && R3007 = R3019 && R3008 = 0 && R3009 = R3019 && R3010 = 0 && R3011 = R3019 && R3012 = 0 && R3013 = R3019 && R3014 = 0 && R3015 = R3019 && R3016 = 0 && R3017 = R3019 && R3018 = 0 && R3022 = 0 && R3023 = 0 && R3070 = 0 && R3071 = 0 && R3072 = 0 && R3073 = R3191 && R3074 = 0 && R3075 = R3191 && R3076 = 0 && R3077 = R3191 && R3078 = 0 && R3079 = R3191 && R3080 = 0 && R3081 = R3191 && R3082 = 0 && R3083 = R3191 && R3084 = 0 && R3085 = R3191 && R3086 = 0 && R3087 = R3191 && R3088 = 0 && R3089 = R3191 && R3090 = 0 && R3091 = R3191 && R3092 = 0 && R3093 = R3191 && R3094 = 0 && R3095 = R3191 && R3096 = 0 && R3097 = R3191 && R3098 = 0 && R3099 = R3191 && R3100 = 0 && R3101 = R3191 && R3102 = 0 && R3103 = R3191 && R3104 = 0 && R3105 = R3191 && R3106 = 0 && R3107 = R3191 && R3108 = 0 && R3109 = R3191 && R3110 = 0 && R3111 = R3191 && R3112 = 0 && R3113 = R3191 && R3114 = 0 && R3115 = R3191 && R3116 = 0 && R3117 = R3191 && R3118 = 0 && R3119 = R3191 && R3120 = 0 && R3121 = R3191 && R3122 = 0 && R3123 = R3191 && R3124 = 0 && R3125 = R3191 && R3126 = 0 && R3127 = R3191 && R3128 = 0 && R3129 = R3191 && R3130 = 0 && R3131 = R3191 && R3132 = 0 && R3133 = R3191 && R3134 = 0 && R3135 = R3191 && R3136 = 0 && R3137 = R3191 && R3138 = 0 && R3139 = R3191 && R3140 = 0 && R3141 = R3191 && R3142 = 0 && R3143 = R3191 && R3144 = 0 && R3145 = R3191 && R3146 = 0 && R3147 = R3191 && R3148 = 0 && R3149 = R3191 && R3150 = 0 && R3151 = R3191 && R3152 = 0 && R3153 = R3191 && R3154 = 0 && R3155 = R3191 && R3156 = 0 && R3157 = R3191 && R3158 = 0 && R3159 = R3191 && R3160 = 0 && R3161 = R3191 && R3162 = 0 && R3163 = R3191 && R3164 = 0 && R3165 = R3191 && R3166 = 0 && R3167 = R3191 && R3168 = 0 && R3169 = R3191 && R3170 = 0 && R3171 = R3191 && R3172 = 0 && R3173 = R3191 && R3174 = 0 && R3175 = R3191 && R3176 = 0 && R3177 = R3191 && R3178 = 0 && R3179 = R3191 && R3180 = 0 && R3181 = R3191 && R3182 = 0 && R3183 = R3191 && R3184 = 0 && R3185 = R3191 && R3186 = 0 && R3187 = R3191 && R3188 = 0 && R3189 = R3191 && R3190 = 0 && R18 < 1 && R21 < 1 && R1333 + R1332 < 1 && R1355 + R1352 + R1435 + R1430 + R1499 + R1494 < 1 && -1*R1511 + -1*R1505 - R1441 - R1447 - R1359 - R1363 < 1 && -1*R1383 + -1*R1380 < 1 && R1389 + R1386 < 1 && -1*R1507 + -1*R1501 < 1 && 0 < R3019 && -1 < R3191 && (R1363 + R1359 + R1447 + R1441 + R1511 + R1505 != 0 || R1373 + R1368 + R1461 + R1454 + R2965 + R2958 = 0 || (R1371 + R1366 + R1459 + R1452 + R2963 + R2956 = 0 && R1372 + R1367 + R1460 + R1453 + R2964 + R2957 = 0)) && (R1371 + R1366 + R1459 + R1452 + R2963 + R2956 != 0 || R1363 + R1359 + R1447 + R1441 + R1511 + R1505 + -1*R2964 + -1*R2957 - R1453 - R1460 - R1367 - R1372 = 0 || R1363 + R1359 + R1447 + R1441 + R1511 + R1505 < 1) && (R1381 + R1378 != 0 || R1382 + R1379 + -1*R1507 + -1*R1501 = 0 || R1383 + R1380 < 1) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1396 + R1392 = 0 && R1397 + R1393 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1405 + R1400 = 0 && R1406 + R1401 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1414 + R1410 = 0 && R1415 + R1411 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1423 + R1418 = 0 && R1424 + R1419 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1433 + R1428 = 0 && R1434 + R1429 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1444 + R1438 = 0 && R1445 + R1439 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1457 + R1450 = 0 && R1458 + R1451 = 0)) && (R1383 + R1380 != 0 || ((R1381 + R1378 != 0 || R1382 + R1379 + -1*R1507 + -1*R1501 = 0 || R1507 + R1501 < 1) && (R1381 + R1378 = 0 || R1507 + R1501 < 1))) && (R1387 + R1384 != 0 || R1388 + R1385 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1394 + R1390 != 0 || R1395 + R1391 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1396 + R1392 != 0 || R1383 + R1380 + -1*R1397 + -1*R1393 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 != 0 || R1404 + R1399 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1405 + R1400 != 0 || R1383 + R1380 + -1*R1406 + -1*R1401 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 != 0 || R1413 + R1409 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1414 + R1410 != 0 || R1383 + R1380 + -1*R1415 + -1*R1411 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 != 0 || R1422 + R1417 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1423 + R1418 != 0 || R1383 + R1380 + -1*R1424 + -1*R1419 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 != 0 || R1432 + R1427 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1433 + R1428 != 0 || R1383 + R1380 + -1*R1434 + -1*R1429 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 != 0 || R1443 + R1437 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1444 + R1438 != 0 || R1383 + R1380 + -1*R1445 + -1*R1439 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 != 0 || R1456 + R1449 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1457 + R1450 != 0 || R1383 + R1380 + -1*R1458 + -1*R1451 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 != 0 || R1468 + R1463 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1485 + R1480 != 0 || R1486 + R1481 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1495 + R1490 != 0 || R1496 + R1491 + -1*R1507 + -1*R1501 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R2959 + R2952 != 0 || R1507 + R1501 + -1*R2960 + -1*R2953 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R27 = 0 || (R3020 = 0 && R3021 = 0)) && (R27 = 0 || (R3024 = 0 && R3025 = 0)) && (R27 = 0 || (R3026 = 0 && R3027 = 0)) && (R27 = 0 || (R3028 = 0 && R3029 = 0)) && (R27 = 0 || (R3030 = 0 && R3031 = 0)) && (R27 = 0 || (R3032 = 0 && R3033 = 0)) && (R27 = 0 || (R3034 = 0 && R3035 = 0)) && (R27 = 0 || (R3036 = 0 && R3037 = 0)) && (R27 = 0 || (R3038 = 0 && R3039 = 0)) && (R27 = 0 || (R3040 = 0 && R3041 = 0)) && (R27 = 0 || (R3042 = 0 && R3043 = 0)) && (R27 = 0 || (R3044 = 0 && R3045 = 0)) && (R27 = 0 || (R3046 = 0 && R3047 = 0)) && (R27 = 0 || (R3048 = 0 && R3049 = 0)) && (R27 = 0 || (R3050 = 0 && R3051 = 0)) && (R27 = 0 || (R3052 = 0 && R3053 = 0)) && (R27 = 0 || (R3054 = 0 && R3055 = 0)) && (R27 = 0 || (R3056 = 0 && R3057 = 0)) && (R27 = 0 || (R3058 = 0 && R3059 = 0)) && (R27 = 0 || (R3060 = 0 && R3061 = 0)) && (R27 = 0 || (R3062 = 0 && R3063 = 0)) && (R27 = 0 || (R3064 = 0 && R3065 = 0)) && (R27 = 0 || (R3066 = 0 && R3067 = 0)) && (R27 = 0 || (R3068 = 0 && R3069 = 0)) && (R1339 + R1336 = 0 || (R1337 + R1334 = 0 && R1338 + R1335 = 0)) && (R1339 + R1336 = 0 || (R1342 + R1340 = 0 && R1343 + R1341 = 0)) && (R1339 + R1336 = 0 || (R1347 + R1344 = 0 && R1348 + R1345 = 0)) && (R1339 + R1336 = 0 || (R1353 + R1350 = 0 && R1354 + R1351 = 0)) && (R1339 + R1336 = 0 || (R1360 + R1356 = 0 && R1361 + R1357 = 0)) && (R1339 + R1336 = 0 || (R1369 + R1364 = 0 && R1370 + R1365 = 0)) && (R1371 + R1366 + R1459 + R1452 + R2963 + R2956 = 0 || R1363 + R1359 + R1447 + R1441 + R1511 + R1505 < 1) && (R1381 + R1378 = 0 || R1383 + R1380 < 1) && (R1387 + R1384 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1394 + R1390 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1396 + R1392 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1405 + R1400 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1414 + R1410 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1423 + R1418 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1433 + R1428 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1444 + R1438 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1457 + R1450 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1471 + R1466 = 0 || (R1469 + R1464 = 0 && R1470 + R1465 = 0)) && (R1471 + R1466 = 0 || (R1487 + R1482 = 0 && R1488 + R1483 = 0)) && (R1471 + R1466 = 0 || (R1497 + R1492 = 0 && R1498 + R1493 = 0)) && (R1471 + R1466 = 0 || (R2961 + R2954 = 0 && R2962 + R2955 = 0)) && (R1485 + R1480 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R1495 + R1490 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0)) && (R2959 + R2952 = 0 || (R1383 + R1380 = 0 && R1507 + R1501 = 0));
// End of Parikh automata intersection problem
