// Parikh automata intersection problem, generated by OSTRICH+
counter int R1330, R1331, R1332, R1333, R1334, R1335, R1336, R1337, R1338, R1339, R1340, R1341, R1342, R1343, R1344, R1345, R1346, R1347, R1348, R1349, R1350, R1351, R1352, R1353, R1354, R1355, R1356, R1357, R1358, R1359, R1360, R1361, R1362, R1363, R1364, R1365, R1366, R1367, R1368, R1369, R1370, R1371, R1372, R1373, R1374, R1375, R1376, R1377, R1378, R1379, R1380, R1381, R1382, R1383, R1384, R1385, R1386, R1387, R1388, R1389, R1390, R1391, R1392, R1393, R1394, R1395, R1396, R1397, R1398, R1399, R1400, R1401, R1402, R1403, R1404, R1405, R1406, R1407, R1408, R1409, R1410, R1411, R1412, R1413, R1414, R1415, R1416, R1417, R1418, R1419, R1420, R1421, R1422, R1423, R1424, R1425, R1426, R1427, R1428, R1429, R1430, R1431, R1432, R1433, R1434, R1435, R1436, R1437, R1438, R1439, R1440, R1441, R1442, R1443, R1444, R1445, R1446, R1447, R1448, R1449, R1450, R1451, R1452, R1453, R1454, R1455, R1456, R1457, R1458, R1459, R1460, R1461, R1462, R1463, R1464, R1465, R1466, R1467, R1468, R1469, R1470, R1471, R1472, R1473, R1474, R1475, R1476, R1477, R1478, R1479, R1480, R1481, R1482, R1483, R1484, R1485, R1486, R1487, R1488, R1489, R1490, R1491, R1492, R1493, R1494, R1495, R1496, R1497, R1498, R1499, R18, R21, R26, R27, R28, R29, R3, R30, R31, R3192, R3193, R3194, R3195, R3196, R3197, R3198, R3199, R32, R3200, R3201, R3202, R3203, R33, R34, R35, R36, R3684, R3685, R3686, R3687, R3688, R3689, R3690, R3691, R3692, R3693, R3694, R3695, R3696, R3697, R3698, R3699, R37, R3700, R3701, R3702, R3703, R3704, R3705, R3706, R3707, R3708, R3709, R3710, R3711, R3712, R3713, R3714, R3715, R3716, R3717, R3718, R3719, R3720, R3721, R3722, R3723, R3724, R3725, R3726, R3727, R3728, R3729, R3730, R3731, R3732, R3733, R3734, R3735, R3736, R3737, R3738, R3739, R3740, R3741, R3742, R3743, R3744, R3745, R3746, R3747, R3748, R3749, R3750, R3751, R3752, R3753, R3754, R3755, R3756, R3757, R3758, R3759, R3760, R3761, R3762, R3763, R3764, R3765, R3766, R3767, R3768, R3769, R3770, R3771, R3772, R3773, R3774, R3775, R3776, R3777, R3778, R3779, R3780, R3781, R3782, R3783, R3784, R3785, R3786, R3787, R3788, R3789, R3790, R3791, R3792, R3793, R3794, R3795, R3796, R3797, R3798, R3799, R38, R3800, R3801, R3802, R3803, R3804, R3805, R3806, R3807, R3808, R3809, R3810, R3811, R3812, R3813, R3814, R3815, R3816, R3817, R3818, R3819, R3820, R3821, R3822, R3823, R3824, R3825, R3826, R3827, R3828, R3829, R3830, R3831, R3832, R3833, R3834, R3835, R3836, R3837, R3838, R3839, R3840, R3841, R3842, R3843, R3844, R3845, R3846, R3847, R3848, R3849, R3850, R3851, R3852, R3853, R3854, R3855, R3856, R3857, R3858, R3859, R3860, R3861, R3862, R3863, R3864, R3865, R3866, R3867, R3868, R3869, R3870, R3871, R3872, R3873, R3874, R3875, R3876, R3877, R3878, R3879, R3880, R3881, R3882, R3883, R3884, R3885, R3886, R3887, R3888, R3889, R3890, R3891, R3892, R3893, R3894, R3895, R3896, R3897, R3898, R3899, R39, R3900, R3901, R3902, R3903, R3904, R3905, R3906, R3907, R3908, R3909, R3910, R3911, R3912, R3913, R3914, R3915, R3916, R3917, R3918, R3919, R3920, R3921, R3922, R3923, R4, R40, R41, R42, R43, R5, R6, R7, R8;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining P44
automaton P44_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R36 += 1, R37 += 1 };
  s0 -> s1 [9, 9] { R37 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R38 += 1, R39 += 1 };
  s1 -> s1 [0, 65535] { R39 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R41 += 1 };
  s0 -> s0 [0, 65535] { R40 += 1, R41 += 1 };
  s0 -> s2 [9, 13] { R41 += 1 };
  s0 -> s1 [14, 31] { R41 += 1 };
  s0 -> s2 [32, 32] { R41 += 1 };
  s0 -> s1 [33, 65535] { R41 += 1 };
  s1 -> s1 [0, 65535] { R41 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R41 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R42 += 1, R43 += 1 };
  s1 -> s1 [0, 65535] { R43 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R3805 += 1 };
  s0 -> s0 [0, 65535] { R3804 += 1, R3805 += 1 };
  s0 -> s2 [67, 67] { R3805 += 1 };
  s0 -> s1 [68, 65535] { R3805 += 1 };
  s1 -> s1 [0, 64] { R3805 += 1 };
  s1 -> s2 [67, 67] { R3805 += 1 };
  s1 -> s1 [68, 65535] { R3805 += 1 };
  s2 -> s2 [0, 64] { R3805 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R3805 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R3806 += 1, R3807 += 1 };
  s0 -> s1 [0, 65535] { R3807 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R3807 += 1, R3 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R3809 += 1 };
  s0 -> s0 [0, 65535] { R3808 += 1, R3809 += 1 };
  s0 -> s2 [0, 65535] { R3809 += 1, R18 += 1 };
  s0 -> s3 [67, 67] { R3809 += 1 };
  s0 -> s1 [68, 65535] { R3809 += 1 };
  s1 -> s1 [0, 66] { R3809 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R3809 += 1 };
  s1 -> s1 [68, 65535] { R3809 += 1 };
  s2 -> s1 [0, 66] { R3809 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3809 += 1, R18 += 1 };
  s2 -> s3 [67, 67] { R3809 += 1 };
  s2 -> s1 [68, 65535] { R3809 += 1 };
  s3 -> s3 [0, 65535] { R3809 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R3811 += 1, R29 += 1 };
  s0 -> s2 [0, 65535] { R3811 += 1, R28 += 1, R29 += 1 };
  s0 -> s0 [0, 65535] { R3810 += 1, R3811 += 1 };
  s0 -> s3 [9, 13] { R3811 += 1, R29 += 1 };
  s0 -> s1 [14, 31] { R3811 += 1, R29 += 1 };
  s0 -> s3 [32, 32] { R3811 += 1, R29 += 1 };
  s0 -> s1 [33, 65535] { R3811 += 1, R29 += 1 };
  s1 -> s5 [0, 65535] { R3811 += 1 };
  s1 -> s1 [0, 65535] { R3811 += 1, R29 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R3811 += 1, R29 += 1 };
  s2 -> s2 [0, 65535] { R3811 += 1, R28 += 1, R29 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R3811 += 1, R29 += 1 };
  s2 -> s1 [14, 31] { R3811 += 1, R29 += 1 };
  s2 -> s3 [32, 32] { R3811 += 1, R29 += 1 };
  s2 -> s1 [33, 65535] { R3811 += 1, R29 += 1 };
  s3 -> s1 [0, 65535] { R3811 += 1, R29 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3811 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s0 [0, 65535] { R3812 += 1, R3813 += 1 };
  s0 -> s1 [0, 65535] { R3813 += 1, R30 += 1, R31 += 1 };
  s0 -> s2 [0, 65535] { R3813 += 1, R31 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R3813 += 1, R30 += 1, R31 += 1 };
  s1 -> s2 [0, 65535] { R3813 += 1, R31 += 1, R5 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R3813 += 1 };
  s2 -> s2 [0, 65535] { R3813 += 1, R31 += 1, R5 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3813 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R3815 += 1, R33 += 1 };
  s0 -> s0 [0, 65535] { R3814 += 1, R3815 += 1 };
  s0 -> s2 [0, 65535] { R3815 += 1, R32 += 1, R33 += 1 };
  s0 -> s3 [9, 13] { R3815 += 1, R33 += 1 };
  s0 -> s1 [14, 31] { R3815 += 1, R33 += 1 };
  s0 -> s3 [32, 32] { R3815 += 1, R33 += 1 };
  s0 -> s1 [33, 65535] { R3815 += 1, R33 += 1 };
  s1 -> s5 [0, 65535] { R3815 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3815 += 1, R33 += 1 };
  s2 -> s1 [0, 8] { R3815 += 1, R33 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3815 += 1, R32 += 1, R33 += 1 };
  s2 -> s3 [9, 13] { R3815 += 1, R33 += 1 };
  s2 -> s1 [14, 31] { R3815 += 1, R33 += 1 };
  s2 -> s3 [32, 32] { R3815 += 1, R33 += 1 };
  s2 -> s1 [33, 65535] { R3815 += 1, R33 += 1 };
  s3 -> s1 [0, 65535] { R3815 += 1, R33 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3815 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R3817 += 1, R34 += 1, R35 += 1 };
  s0 -> s2 [0, 65535] { R3817 += 1, R35 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R3816 += 1, R3817 += 1 };
  s1 -> s1 [0, 65535] { R3817 += 1, R34 += 1, R35 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R3817 += 1, R35 += 1, R6 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3817 += 1, R35 += 1, R6 += 1 };
  s2 -> s4 [0, 65535] { R3817 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3817 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R3819 += 1, R3699 += 1 };
  s0 -> s2 [0, 65535] { R3819 += 1, R3698 += 1, R3699 += 1 };
  s0 -> s0 [0, 65535] { R3818 += 1, R3819 += 1 };
  s0 -> s1 [68, 65535] { R3819 += 1, R3699 += 1 };
  s1 -> s1 [0, 66] { R3819 += 1, R3699 += 1 };
  s1 -> s1 [0, 65535] { R3819 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [68, 65535] { R3819 += 1, R3699 += 1 };
  s2 -> s1 [0, 66] { R3819 += 1, R3699 += 1 };
  s2 -> s2 [0, 65535] { R3819 += 1, R3698 += 1, R3699 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [68, 65535] { R3819 += 1, R3699 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s0 [0, 65535] { R3820 += 1, R3821 += 1 };
  s0 -> s1 [0, 65535] { R3821 += 1, R3700 += 1, R3701 += 1 };
  s0 -> s2 [0, 65535] { R3821 += 1, R3701 += 1, R26 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3821 += 1, R3700 += 1, R3701 += 1 };
  s1 -> s2 [0, 65535] { R3821 += 1, R3701 += 1, R26 += 1 };
  s2 -> s3 [0, 65535] { R3821 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3821 += 1, R3701 += 1, R26 += 1 };
  s3 -> s3 [0, 65535] { R3821 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R3823 += 1, R3703 += 1 };
  s0 -> s2 [0, 65535] { R3823 += 1, R3702 += 1, R3703 += 1 };
  s0 -> s0 [0, 65535] { R3822 += 1, R3823 += 1 };
  s0 -> s1 [70, 65535] { R3823 += 1, R3703 += 1 };
  s1 -> s1 [0, 67] { R3823 += 1, R3703 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3823 += 1 };
  s1 -> s1 [70, 65535] { R3823 += 1, R3703 += 1 };
  s2 -> s1 [0, 67] { R3823 += 1, R3703 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3823 += 1, R3702 += 1, R3703 += 1 };
  s2 -> s1 [70, 65535] { R3823 += 1, R3703 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65535] { R3825 += 1, R3704 += 1, R3705 += 1 };
  s0 -> s0 [0, 65535] { R3824 += 1, R3825 += 1 };
  s0 -> s2 [0, 65535] { R3825 += 1, R3705 += 1, R1331 += 1 };
  s1 -> s1 [0, 65535] { R3825 += 1, R3704 += 1, R3705 += 1 };
  s1 -> s2 [0, 65535] { R3825 += 1, R3705 += 1, R1331 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R3825 += 1 };
  s2 -> s2 [0, 65535] { R3825 += 1, R3705 += 1, R1331 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3825 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3827 += 1, R3707 += 1 };
  s0 -> s2 [0, 65535] { R3827 += 1, R3707 += 1, R1333 += 1 };
  s0 -> s3 [0, 65535] { R3827 += 1, R3706 += 1, R3707 += 1 };
  s0 -> s0 [0, 65535] { R3826 += 1, R3827 += 1 };
  s0 -> s1 [71, 65535] { R3827 += 1, R3707 += 1 };
  s1 -> s1 [0, 69] { R3827 += 1, R3707 += 1 };
  s1 -> s1 [0, 65535] { R3827 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [71, 65535] { R3827 += 1, R3707 += 1 };
  s2 -> s1 [0, 69] { R3827 += 1, R3707 += 1 };
  s2 -> s2 [0, 65535] { R3827 += 1, R3707 += 1, R1333 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3827 += 1 };
  s2 -> s1 [71, 65535] { R3827 += 1, R3707 += 1 };
  s3 -> s1 [0, 69] { R3827 += 1, R3707 += 1 };
  s3 -> s2 [0, 65535] { R3827 += 1, R3707 += 1, R1333 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3827 += 1, R3706 += 1, R3707 += 1 };
  s3 -> s1 [71, 65535] { R3827 += 1, R3707 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3827 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R3829 += 1, R3708 += 1, R3709 += 1 };
  s0 -> s0 [0, 65535] { R3828 += 1, R3829 += 1 };
  s0 -> s2 [0, 65535] { R3829 += 1, R3709 += 1, R1338 += 1, R1339 += 1 };
  s0 -> s3 [0, 65535] { R3829 += 1, R3709 += 1, R1337 += 1, R1338 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3829 += 1, R3708 += 1, R3709 += 1 };
  s1 -> s2 [0, 65535] { R3829 += 1, R3709 += 1, R1338 += 1, R1339 += 1 };
  s1 -> s3 [0, 65535] { R3829 += 1, R3709 += 1, R1337 += 1, R1338 += 1 };
  s2 -> s6 [0, 65535] { R3829 += 1, R3709 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3829 += 1 };
  s2 -> s2 [0, 65535] { R3829 += 1, R3709 += 1, R1338 += 1, R1339 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3829 += 1 };
  s3 -> s2 [0, 65535] { R3829 += 1, R3709 += 1, R1338 += 1, R1339 += 1 };
  s3 -> s3 [0, 65535] { R3829 += 1, R3709 += 1, R1337 += 1, R1338 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3829 += 1 };
  s6 -> s6 [0, 65535] { R3829 += 1, R3709 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R3829 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s0 -> s0 [0, 65535] { R3830 += 1, R3831 += 1 };
  s0 -> s2 [0, 65535] { R3831 += 1, R3710 += 1, R3711 += 1 };
  s0 -> s3 [0, 65535] { R3831 += 1, R3711 += 1, R1342 += 1, R1343 += 1 };
  s0 -> s4 [70, 70] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s0 -> s5 [70, 70] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s0 -> s1 [77, 65535] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s1 -> s1 [0, 69] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s1 -> s1 [0, 65535] { R3831 += 1, R3711 += 1 };
  s1 -> s6 [0, 65535] { R3831 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s1 -> s5 [70, 70] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s1 -> s1 [77, 65535] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s2 -> s1 [0, 69] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s2 -> s2 [0, 65535] { R3831 += 1, R3710 += 1, R3711 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R3831 += 1, R3711 += 1, R1342 += 1, R1343 += 1 };
  s2 -> s4 [70, 70] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s2 -> s5 [70, 70] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s2 -> s1 [77, 65535] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s3 -> s1 [0, 69] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s3 -> s6 [0, 65535] { R3831 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3831 += 1, R3711 += 1, R1342 += 1, R1343 += 1 };
  s3 -> s4 [70, 70] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s3 -> s5 [70, 70] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s3 -> s1 [77, 65535] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s4 -> s4 [0, 70] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s4 -> s4 [0, 65535] { R3831 += 1, R3711 += 1 };
  s4 -> s6 [0, 65535] { R3831 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [77, 65535] { R3831 += 1, R3711 += 1, R1343 += 1 };
  s5 -> s6 [0, 65535] { R3831 += 1 };
  s5 -> s5 [0, 65535] { R3831 += 1, R3711 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3831 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s2 [0, 65535] { R3833 += 1, R3712 += 1, R3713 += 1 };
  s0 -> s3 [0, 65535] { R3833 += 1, R3713 += 1, R1347 += 1, R1348 += 1 };
  s0 -> s0 [0, 65535] { R3832 += 1, R3833 += 1 };
  s0 -> s4 [70, 70] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s5 [70, 70] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s0 -> s1 [71, 65535] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [0, 69] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [0, 65535] { R3833 += 1, R3713 += 1 };
  s1 -> s7 [0, 65535] { R3833 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s5 [70, 70] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s1 -> s1 [71, 65535] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [0, 69] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s2 [0, 65535] { R3833 += 1, R3712 += 1, R3713 += 1 };
  s2 -> s3 [0, 65535] { R3833 += 1, R3713 += 1, R1347 += 1, R1348 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s5 [70, 70] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s2 -> s1 [71, 65535] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [0, 69] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s7 [0, 65535] { R3833 += 1 };
  s3 -> s3 [0, 65535] { R3833 += 1, R3713 += 1, R1347 += 1, R1348 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [70, 70] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s5 [70, 70] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s3 -> s1 [71, 65535] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s4 -> s4 [0, 65535] { R3833 += 1, R3713 += 1 };
  s4 -> s7 [0, 65535] { R3833 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R3833 += 1, R3713 += 1 };
  s5 -> s7 [0, 65535] { R3833 += 1 };
  s5 -> s5 [0, 65535] { R3833 += 1, R3713 += 1, R1348 += 1, R1349 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3833 += 1, R3713 += 1 };
  s6 -> s7 [0, 65535] { R3833 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3833 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s2 [0, 65535] { R3835 += 1, R3715 += 1, R1353 += 1, R1354 += 1 };
  s0 -> s0 [0, 65535] { R3834 += 1, R3835 += 1 };
  s0 -> s3 [0, 65535] { R3835 += 1, R3714 += 1, R3715 += 1 };
  s0 -> s4 [70, 70] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s5 [70, 70] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s0 -> s1 [71, 65535] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [0, 69] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s6 [0, 65535] { R3835 += 1 };
  s1 -> s1 [0, 65535] { R3835 += 1, R3715 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s5 [70, 70] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s1 -> s1 [71, 65535] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [0, 69] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s2 [0, 65535] { R3835 += 1, R3715 += 1, R1353 += 1, R1354 += 1 };
  s2 -> s6 [0, 65535] { R3835 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s5 [70, 70] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s2 -> s1 [71, 65535] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [0, 69] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s2 [0, 65535] { R3835 += 1, R3715 += 1, R1353 += 1, R1354 += 1 };
  s3 -> s3 [0, 65535] { R3835 += 1, R3714 += 1, R3715 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [70, 70] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s5 [70, 70] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s3 -> s1 [71, 65535] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s4 -> s8 [0, 65535] { R3835 += 1, R3715 += 1 };
  s4 -> s4 [0, 65535] { R3835 += 1, R3715 += 1, R1354 += 1, R1355 += 1 };
  s4 -> s6 [0, 65535] { R3835 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R3835 += 1 };
  s5 -> s5 [0, 65535] { R3835 += 1, R3715 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3835 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3835 += 1, R3715 += 1 };
  s8 -> s6 [0, 65535] { R3835 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s0 [0, 65535] { R3836 += 1, R3837 += 1 };
  s0 -> s2 [0, 65535] { R3837 += 1, R3717 += 1, R1360 += 1, R1361 += 1 };
  s0 -> s3 [0, 65535] { R3837 += 1, R3716 += 1, R3717 += 1 };
  s0 -> s4 [70, 70] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s5 [70, 70] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s0 -> s1 [71, 65535] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [0, 69] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s6 [0, 65535] { R3837 += 1 };
  s1 -> s1 [0, 65535] { R3837 += 1, R3717 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s5 [70, 70] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s1 -> s1 [71, 65535] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [0, 69] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s6 [0, 65535] { R3837 += 1 };
  s2 -> s2 [0, 65535] { R3837 += 1, R3717 += 1, R1360 += 1, R1361 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s5 [70, 70] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s2 -> s1 [71, 65535] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [0, 69] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s2 [0, 65535] { R3837 += 1, R3717 += 1, R1360 += 1, R1361 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3837 += 1, R3716 += 1, R3717 += 1 };
  s3 -> s4 [70, 70] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s5 [70, 70] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s3 -> s1 [71, 65535] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s4 -> s6 [0, 65535] { R3837 += 1 };
  s4 -> s4 [0, 65535] { R3837 += 1, R3717 += 1, R1361 += 1, R1362 += 1, R1363 += 1 };
  s4 -> s8 [0, 65535] { R3837 += 1, R3717 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R3837 += 1 };
  s5 -> s5 [0, 65535] { R3837 += 1, R3717 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3837 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3837 += 1 };
  s8 -> s8 [0, 65535] { R3837 += 1, R3717 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s2 [0, 65535] { R3839 += 1, R3719 += 1, R1369 += 1, R1370 += 1 };
  s0 -> s3 [0, 65535] { R3839 += 1, R3718 += 1, R3719 += 1 };
  s0 -> s0 [0, 65535] { R3838 += 1, R3839 += 1 };
  s0 -> s4 [70, 70] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s5 [70, 70] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s0 -> s1 [71, 65535] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [0, 69] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [0, 65535] { R3839 += 1, R3719 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3839 += 1 };
  s1 -> s4 [70, 70] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s5 [70, 70] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s1 -> s1 [71, 65535] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [0, 69] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R3839 += 1 };
  s2 -> s2 [0, 65535] { R3839 += 1, R3719 += 1, R1369 += 1, R1370 += 1 };
  s2 -> s4 [70, 70] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s5 [70, 70] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s2 -> s1 [71, 65535] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [0, 69] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R3839 += 1, R3719 += 1, R1369 += 1, R1370 += 1 };
  s3 -> s3 [0, 65535] { R3839 += 1, R3718 += 1, R3719 += 1 };
  s3 -> s4 [70, 70] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s5 [70, 70] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s3 -> s1 [71, 65535] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3839 += 1, R3719 += 1 };
  s4 -> s7 [0, 65535] { R3839 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3839 += 1 };
  s5 -> s8 [0, 65535] { R3839 += 1, R3719 += 1 };
  s5 -> s5 [0, 65535] { R3839 += 1, R3719 += 1, R1370 += 1, R1371 += 1, R1372 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3839 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3839 += 1 };
  s8 -> s8 [0, 65535] { R3839 += 1, R3719 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s0 -> s2 [0, 65535] { R3841 += 1, R3721 += 1, R1376 += 1, R1377 += 1 };
  s0 -> s0 [0, 65535] { R3840 += 1, R3841 += 1 };
  s0 -> s3 [0, 65535] { R3841 += 1, R3720 += 1, R3721 += 1 };
  s0 -> s4 [70, 70] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s0 -> s1 [71, 65535] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s1 -> s1 [0, 69] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s1 -> s4 [70, 70] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s1 -> s1 [71, 65535] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s2 -> s1 [0, 69] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s2 -> s2 [0, 65535] { R3841 += 1, R3721 += 1, R1376 += 1, R1377 += 1 };
  s2 -> s4 [70, 70] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s2 -> s1 [71, 65535] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s3 -> s1 [0, 69] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s3 -> s2 [0, 65535] { R3841 += 1, R3721 += 1, R1376 += 1, R1377 += 1 };
  s3 -> s3 [0, 65535] { R3841 += 1, R3720 += 1, R3721 += 1 };
  s3 -> s4 [70, 70] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s3 -> s1 [71, 65535] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s4 -> s4 [0, 65535] { R3841 += 1, R3721 += 1, R1377 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3841 += 1 };
  s4 -> s7 [0, 65535] { R3841 += 1, R3721 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3841 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3841 += 1 };
  s7 -> s7 [0, 65535] { R3841 += 1, R3721 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65535] { R3843 += 1, R3723 += 1, R1382 += 1, R1383 += 1 };
  s0 -> s2 [0, 65535] { R3843 += 1, R3723 += 1, R1381 += 1, R1382 += 1 };
  s0 -> s0 [0, 65535] { R3842 += 1, R3843 += 1 };
  s0 -> s3 [0, 65535] { R3843 += 1, R3722 += 1, R3723 += 1 };
  s1 -> s1 [0, 65535] { R3843 += 1, R3723 += 1, R1382 += 1, R1383 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R3843 += 1, R3723 += 1 };
  s1 -> s5 [0, 65535] { R3843 += 1 };
  s2 -> s1 [0, 65535] { R3843 += 1, R3723 += 1, R1382 += 1, R1383 += 1 };
  s2 -> s2 [0, 65535] { R3843 += 1, R3723 += 1, R1381 += 1, R1382 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3843 += 1 };
  s3 -> s1 [0, 65535] { R3843 += 1, R3723 += 1, R1382 += 1, R1383 += 1 };
  s3 -> s2 [0, 65535] { R3843 += 1, R3723 += 1, R1381 += 1, R1382 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R3843 += 1, R3722 += 1, R3723 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3843 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3843 += 1, R3723 += 1 };
  s6 -> s5 [0, 65535] { R3843 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s0 -> s2 [0, 65535] { R3845 += 1, R3725 += 1, R1387 += 1, R1388 += 1 };
  s0 -> s3 [0, 65535] { R3845 += 1, R3724 += 1, R3725 += 1 };
  s0 -> s0 [0, 65535] { R3844 += 1, R3845 += 1 };
  s0 -> s4 [0, 65535] { R3845 += 1, R3725 += 1, R1388 += 1, R1389 += 1 };
  s0 -> s1 [71, 65535] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s1 -> s1 [0, 69] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s1 -> s5 [0, 65535] { R3845 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3845 += 1, R3725 += 1 };
  s1 -> s1 [71, 65535] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s2 -> s1 [0, 69] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s2 -> s5 [0, 65535] { R3845 += 1 };
  s2 -> s2 [0, 65535] { R3845 += 1, R3725 += 1, R1387 += 1, R1388 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R3845 += 1, R3725 += 1, R1388 += 1, R1389 += 1 };
  s2 -> s1 [71, 65535] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s3 -> s1 [0, 69] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s3 -> s2 [0, 65535] { R3845 += 1, R3725 += 1, R1387 += 1, R1388 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3845 += 1, R3724 += 1, R3725 += 1 };
  s3 -> s4 [0, 65535] { R3845 += 1, R3725 += 1, R1388 += 1, R1389 += 1 };
  s3 -> s1 [71, 65535] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s4 -> s1 [0, 69] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s4 -> s5 [0, 65535] { R3845 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3845 += 1, R3725 += 1 };
  s4 -> s4 [0, 65535] { R3845 += 1, R3725 += 1, R1388 += 1, R1389 += 1 };
  s4 -> s1 [71, 65535] { R3845 += 1, R3725 += 1, R1388 += 1 };
  s5 -> s5 [0, 65535] { R3845 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R3845 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3845 += 1, R3725 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s0 -> s2 [0, 65535] { R3847 += 1, R3726 += 1, R3727 += 1 };
  s0 -> s3 [0, 65535] { R3847 += 1, R3727 += 1, R1394 += 1, R1395 += 1 };
  s0 -> s4 [0, 65535] { R3847 += 1, R3727 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s0 -> s0 [0, 65535] { R3846 += 1, R3847 += 1 };
  s0 -> s1 [71, 65535] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s1 [0, 69] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s1 -> s1 [0, 65535] { R3847 += 1, R3727 += 1, R1395 += 1 };
  s1 -> s5 [0, 65535] { R3847 += 1, R3727 += 1 };
  s1 -> s6 [0, 65535] { R3847 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [71, 65535] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s1 [0, 69] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s2 -> s2 [0, 65535] { R3847 += 1, R3726 += 1, R3727 += 1 };
  s2 -> s3 [0, 65535] { R3847 += 1, R3727 += 1, R1394 += 1, R1395 += 1 };
  s2 -> s4 [0, 65535] { R3847 += 1, R3727 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [71, 65535] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s1 [0, 69] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s3 -> s3 [0, 65535] { R3847 += 1, R3727 += 1, R1394 += 1, R1395 += 1 };
  s3 -> s4 [0, 65535] { R3847 += 1, R3727 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s3 -> s6 [0, 65535] { R3847 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [71, 65535] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s1 [0, 69] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s4 -> s5 [0, 65535] { R3847 += 1, R3727 += 1 };
  s4 -> s4 [0, 65535] { R3847 += 1, R3727 += 1, R1395 += 1, R1396 += 1, R1397 += 1 };
  s4 -> s6 [0, 65535] { R3847 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [71, 65535] { R3847 += 1, R3727 += 1, R1395 += 1, R1397 += 1 };
  s5 -> s5 [0, 65535] { R3847 += 1, R3727 += 1 };
  s5 -> s6 [0, 65535] { R3847 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3847 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s0 -> s0 [0, 65535] { R3848 += 1, R3849 += 1 };
  s0 -> s2 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s0 -> s3 [0, 65535] { R3849 += 1, R3729 += 1, R1403 += 1, R1404 += 1 };
  s0 -> s4 [0, 65535] { R3849 += 1, R3728 += 1, R3729 += 1 };
  s1 -> s1 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s1 -> s6 [0, 65535] { R3849 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R3849 += 1, R3729 += 1 };
  s1 -> s8 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1 };
  s2 -> s1 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s2 -> s2 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s2 -> s6 [0, 65535] { R3849 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R3849 += 1, R3729 += 1 };
  s3 -> s1 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s3 -> s2 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s3 -> s6 [0, 65535] { R3849 += 1 };
  s3 -> s3 [0, 65535] { R3849 += 1, R3729 += 1, R1403 += 1, R1404 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1, R1406 += 1, R1407 += 1 };
  s4 -> s2 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1, R1405 += 1, R1406 += 1 };
  s4 -> s3 [0, 65535] { R3849 += 1, R3729 += 1, R1403 += 1, R1404 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3849 += 1, R3728 += 1, R3729 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3849 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3849 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3849 += 1, R3729 += 1 };
  s8 -> s6 [0, 65535] { R3849 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R3849 += 1, R3729 += 1 };
  s8 -> s8 [0, 65535] { R3849 += 1, R3729 += 1, R1404 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 70] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s0 -> s2 [0, 65535] { R3851 += 1, R3730 += 1, R3731 += 1 };
  s0 -> s0 [0, 65535] { R3850 += 1, R3851 += 1 };
  s0 -> s3 [0, 65535] { R3851 += 1, R3731 += 1, R1412 += 1, R1413 += 1 };
  s0 -> s4 [0, 65535] { R3851 += 1, R3731 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s0 -> s1 [76, 65535] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s1 [0, 70] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3851 += 1 };
  s1 -> s1 [0, 65535] { R3851 += 1, R3731 += 1, R1413 += 1 };
  s1 -> s7 [0, 65535] { R3851 += 1, R3731 += 1 };
  s1 -> s1 [76, 65535] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s1 [0, 70] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3851 += 1, R3730 += 1, R3731 += 1 };
  s2 -> s3 [0, 65535] { R3851 += 1, R3731 += 1, R1412 += 1, R1413 += 1 };
  s2 -> s4 [0, 65535] { R3851 += 1, R3731 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s2 -> s1 [76, 65535] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s1 [0, 70] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3851 += 1 };
  s3 -> s3 [0, 65535] { R3851 += 1, R3731 += 1, R1412 += 1, R1413 += 1 };
  s3 -> s4 [0, 65535] { R3851 += 1, R3731 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s3 -> s1 [76, 65535] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s1 [0, 70] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3851 += 1 };
  s4 -> s4 [0, 65535] { R3851 += 1, R3731 += 1, R1413 += 1, R1414 += 1, R1415 += 1 };
  s4 -> s7 [0, 65535] { R3851 += 1, R3731 += 1 };
  s4 -> s1 [76, 65535] { R3851 += 1, R3731 += 1, R1413 += 1, R1415 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3851 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3851 += 1 };
  s7 -> s7 [0, 65535] { R3851 += 1, R3731 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 65535] { R3853 += 1, R3732 += 1, R3733 += 1 };
  s0 -> s2 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s0 -> s3 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s0 -> s0 [0, 65535] { R3852 += 1, R3853 += 1 };
  s0 -> s4 [0, 65535] { R3853 += 1, R3733 += 1, R1421 += 1, R1422 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3853 += 1, R3732 += 1, R3733 += 1 };
  s1 -> s2 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s1 -> s3 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s1 -> s4 [0, 65535] { R3853 += 1, R3733 += 1, R1421 += 1, R1422 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s8 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1 };
  s2 -> s7 [0, 65535] { R3853 += 1, R3733 += 1 };
  s2 -> s6 [0, 65535] { R3853 += 1 };
  s2 -> s2 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R3853 += 1, R3733 += 1 };
  s3 -> s6 [0, 65535] { R3853 += 1 };
  s3 -> s2 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s3 -> s3 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3853 += 1 };
  s4 -> s2 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1, R1424 += 1, R1425 += 1 };
  s4 -> s3 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1, R1423 += 1, R1424 += 1 };
  s4 -> s4 [0, 65535] { R3853 += 1, R3733 += 1, R1421 += 1, R1422 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3853 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3853 += 1, R3733 += 1 };
  s7 -> s6 [0, 65535] { R3853 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R3853 += 1, R3733 += 1, R1422 += 1 };
  s8 -> s7 [0, 65535] { R3853 += 1, R3733 += 1 };
  s8 -> s6 [0, 65535] { R3853 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 75] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s0 -> s2 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s0 -> s0 [0, 65535] { R3854 += 1, R3855 += 1 };
  s0 -> s3 [0, 65535] { R3855 += 1, R3734 += 1, R3735 += 1 };
  s0 -> s4 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s0 -> s5 [0, 65535] { R3855 += 1, R3735 += 1, R1431 += 1, R1432 += 1 };
  s0 -> s1 [77, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s1 [0, 75] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3855 += 1 };
  s1 -> s9 [0, 65535] { R3855 += 1, R3735 += 1 };
  s1 -> s1 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1 };
  s1 -> s1 [77, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s1 [0, 75] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s2 -> s2 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s2 -> s4 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R3855 += 1 };
  s2 -> s9 [0, 65535] { R3855 += 1, R3735 += 1 };
  s2 -> s1 [77, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s1 [0, 75] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s3 -> s2 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s3 -> s3 [0, 65535] { R3855 += 1, R3734 += 1, R3735 += 1 };
  s3 -> s4 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s3 -> s5 [0, 65535] { R3855 += 1, R3735 += 1, R1431 += 1, R1432 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [77, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s1 [0, 75] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s4 -> s8 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1 };
  s4 -> s4 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3855 += 1 };
  s4 -> s9 [0, 65535] { R3855 += 1, R3735 += 1 };
  s4 -> s1 [77, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s1 [0, 75] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s5 -> s2 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1433 += 1, R1434 += 1 };
  s5 -> s4 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1, R1435 += 1 };
  s5 -> s5 [0, 65535] { R3855 += 1, R3735 += 1, R1431 += 1, R1432 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3855 += 1 };
  s5 -> s1 [77, 65535] { R3855 += 1, R3735 += 1, R1432 += 1, R1434 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3855 += 1 };
  s8 -> s8 [0, 65535] { R3855 += 1, R3735 += 1, R1432 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3855 += 1 };
  s8 -> s9 [0, 65535] { R3855 += 1, R3735 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R3855 += 1 };
  s9 -> s9 [0, 65535] { R3855 += 1, R3735 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s0 [0, 65535] { R3856 += 1, R3857 += 1 };
  s0 -> s1 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1 };
  s0 -> s2 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s0 -> s3 [0, 65535] { R3857 += 1, R3736 += 1, R3737 += 1 };
  s0 -> s4 [0, 65535] { R3857 += 1, R3737 += 1, R1442 += 1, R1443 += 1 };
  s0 -> s5 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s1 -> s1 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1 };
  s1 -> s6 [0, 65535] { R3857 += 1, R3737 += 1 };
  s1 -> s7 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s9 [0, 65535] { R3857 += 1 };
  s2 -> s1 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1 };
  s2 -> s2 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s2 -> s6 [0, 65535] { R3857 += 1, R3737 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s9 [0, 65535] { R3857 += 1 };
  s2 -> s5 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s3 -> s1 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1 };
  s3 -> s2 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s3 -> s3 [0, 65535] { R3857 += 1, R3736 += 1, R3737 += 1 };
  s3 -> s4 [0, 65535] { R3857 += 1, R3737 += 1, R1442 += 1, R1443 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s5 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s4 -> s1 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1 };
  s4 -> s2 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1444 += 1, R1445 += 1 };
  s4 -> s4 [0, 65535] { R3857 += 1, R3737 += 1, R1442 += 1, R1443 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R3857 += 1 };
  s4 -> s5 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s5 -> s1 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1 };
  s5 -> s6 [0, 65535] { R3857 += 1, R3737 += 1 };
  s5 -> s7 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R3857 += 1 };
  s5 -> s5 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1, R1445 += 1, R1447 += 1 };
  s6 -> s6 [0, 65535] { R3857 += 1, R3737 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R3857 += 1 };
  s7 -> s6 [0, 65535] { R3857 += 1, R3737 += 1 };
  s7 -> s7 [0, 65535] { R3857 += 1, R3737 += 1, R1443 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s9 [0, 65535] { R3857 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3857 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s0 [0, 65535] { R3858 += 1, R3859 += 1 };
  s0 -> s1 [0, 65535] { R3859 += 1, R3739 += 1, R1455 += 1, R1456 += 1 };
  s0 -> s2 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s0 -> s3 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s0 -> s4 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s0 -> s5 [0, 65535] { R3859 += 1, R3738 += 1, R3739 += 1 };
  s1 -> s7 [0, 65535] { R3859 += 1 };
  s1 -> s1 [0, 65535] { R3859 += 1, R3739 += 1, R1455 += 1, R1456 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s1 -> s3 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s1 -> s4 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s2 -> s7 [0, 65535] { R3859 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s2 -> s3 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s2 -> s4 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s2 -> s9 [0, 65535] { R3859 += 1, R3739 += 1 };
  s3 -> s7 [0, 65535] { R3859 += 1 };
  s3 -> s8 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s3 -> s4 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s3 -> s9 [0, 65535] { R3859 += 1, R3739 += 1 };
  s4 -> s7 [0, 65535] { R3859 += 1 };
  s4 -> s8 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s4 -> s9 [0, 65535] { R3859 += 1, R3739 += 1 };
  s4 -> s10 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1 };
  s5 -> s1 [0, 65535] { R3859 += 1, R3739 += 1, R1455 += 1, R1456 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s2 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1457 += 1, R1458 += 1 };
  s5 -> s3 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1459 += 1, R1460 += 1 };
  s5 -> s4 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1, R1460 += 1, R1461 += 1 };
  s5 -> s5 [0, 65535] { R3859 += 1, R3738 += 1, R3739 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3859 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3859 += 1 };
  s8 -> s8 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s9 [0, 65535] { R3859 += 1, R3739 += 1 };
  s9 -> s7 [0, 65535] { R3859 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R3859 += 1, R3739 += 1 };
  s10 -> s7 [0, 65535] { R3859 += 1 };
  s10 -> s8 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s9 [0, 65535] { R3859 += 1, R3739 += 1 };
  s10 -> s10 [0, 65535] { R3859 += 1, R3739 += 1, R1456 += 1, R1458 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65535] { R3861 += 1, R3740 += 1, R3741 += 1 };
  s0 -> s2 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s0 -> s3 [0, 65535] { R3861 += 1, R3741 += 1, R1467 += 1, R1468 += 1 };
  s0 -> s0 [0, 65535] { R3860 += 1, R3861 += 1 };
  s0 -> s4 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s1 -> s1 [0, 65535] { R3861 += 1, R3740 += 1, R3741 += 1 };
  s1 -> s2 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s1 -> s3 [0, 65535] { R3861 += 1, R3741 += 1, R1467 += 1, R1468 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s2 -> s5 [0, 65535] { R3861 += 1, R3741 += 1 };
  s2 -> s2 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R3861 += 1 };
  s2 -> s4 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s3 -> s2 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1, R1469 += 1, R1470 += 1 };
  s3 -> s3 [0, 65535] { R3861 += 1, R3741 += 1, R1467 += 1, R1468 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R3861 += 1 };
  s3 -> s4 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s4 -> s5 [0, 65535] { R3861 += 1, R3741 += 1 };
  s4 -> s6 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R3861 += 1 };
  s4 -> s4 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1, R1470 += 1, R1471 += 1 };
  s5 -> s5 [0, 65535] { R3861 += 1, R3741 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3861 += 1 };
  s6 -> s5 [0, 65535] { R3861 += 1, R3741 += 1 };
  s6 -> s6 [0, 65535] { R3861 += 1, R3741 += 1, R1468 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R3861 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3861 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 69] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s2 [0, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s0 -> s0 [0, 65535] { R3862 += 1, R3863 += 1 };
  s0 -> s3 [0, 65535] { R3863 += 1, R3743 += 1, R1476 += 1, R1477 += 1 };
  s0 -> s4 [0, 65535] { R3863 += 1, R3742 += 1, R3743 += 1 };
  s0 -> s5 [70, 70] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s6 [76, 76] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s0 -> s1 [77, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [0, 69] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s5 [70, 70] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s6 [76, 76] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s1 -> s1 [77, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [0, 69] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s2 [0, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s2 -> s5 [70, 70] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s6 [76, 76] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s2 -> s1 [77, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [0, 69] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s2 [0, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s3 -> s3 [0, 65535] { R3863 += 1, R3743 += 1, R1476 += 1, R1477 += 1 };
  s3 -> s5 [70, 70] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s6 [76, 76] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s3 -> s1 [77, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [0, 69] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s2 [0, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1478 += 1, R1479 += 1 };
  s4 -> s3 [0, 65535] { R3863 += 1, R3743 += 1, R1476 += 1, R1477 += 1 };
  s4 -> s4 [0, 65535] { R3863 += 1, R3742 += 1, R3743 += 1 };
  s4 -> s5 [70, 70] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s6 [76, 76] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s4 -> s1 [77, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [0, 70] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s11 [76, 76] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s5 -> s5 [77, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [0, 69] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s7 [0, 65535] { R3863 += 1 };
  s6 -> s6 [0, 65535] { R3863 += 1, R3743 += 1, R1477 += 1 };
  s6 -> s8 [0, 65535] { R3863 += 1, R3743 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [70, 70] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s11 [70, 70] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s6 -> s6 [76, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s7 -> s7 [0, 65535] { R3863 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R3863 += 1 };
  s8 -> s8 [0, 65535] { R3863 += 1, R3743 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3863 += 1, R3743 += 1, R1477 += 1 };
  s10 -> s7 [0, 65535] { R3863 += 1 };
  s10 -> s8 [0, 65535] { R3863 += 1, R3743 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s11 [0, 70] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  s11 -> s7 [0, 65535] { R3863 += 1 };
  s11 -> s11 [0, 65535] { R3863 += 1, R3743 += 1, R1477 += 1 };
  s11 -> s8 [0, 65535] { R3863 += 1, R3743 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [76, 65535] { R3863 += 1, R3743 += 1, R1477 += 1, R1479 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 69] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s0 [0, 65535] { R3864 += 1, R3865 += 1 };
  s0 -> s2 [0, 65535] { R3865 += 1, R3744 += 1, R3745 += 1 };
  s0 -> s3 [0, 65535] { R3865 += 1, R3745 += 1, R1485 += 1, R1486 += 1 };
  s0 -> s4 [0, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s0 -> s5 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s6 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s0 -> s1 [71, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [0, 69] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [0, 65535] { R3865 += 1, R3745 += 1, R1486 += 1 };
  s1 -> s8 [0, 65535] { R3865 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s10 [0, 65535] { R3865 += 1, R3745 += 1 };
  s1 -> s5 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s6 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s1 -> s1 [71, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [0, 69] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s2 [0, 65535] { R3865 += 1, R3744 += 1, R3745 += 1 };
  s2 -> s3 [0, 65535] { R3865 += 1, R3745 += 1, R1485 += 1, R1486 += 1 };
  s2 -> s4 [0, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s6 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s2 -> s1 [71, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [0, 69] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s8 [0, 65535] { R3865 += 1 };
  s3 -> s3 [0, 65535] { R3865 += 1, R3745 += 1, R1485 += 1, R1486 += 1 };
  s3 -> s4 [0, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s5 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s6 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s3 -> s1 [71, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [0, 69] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s8 [0, 65535] { R3865 += 1 };
  s4 -> s4 [0, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1487 += 1, R1488 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s10 [0, 65535] { R3865 += 1, R3745 += 1 };
  s4 -> s5 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s6 [70, 70] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s4 -> s1 [71, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s5 -> s5 [0, 65535] { R3865 += 1, R3745 += 1, R1486 += 1 };
  s5 -> s8 [0, 65535] { R3865 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R3865 += 1, R3745 += 1 };
  s6 -> s6 [0, 65535] { R3865 += 1, R3745 += 1, R1486 += 1, R1488 += 1, R1489 += 1 };
  s6 -> s7 [0, 65535] { R3865 += 1, R3745 += 1, R1486 += 1 };
  s6 -> s8 [0, 65535] { R3865 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R3865 += 1, R3745 += 1 };
  s7 -> s7 [0, 65535] { R3865 += 1, R3745 += 1, R1486 += 1 };
  s7 -> s8 [0, 65535] { R3865 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s10 [0, 65535] { R3865 += 1, R3745 += 1 };
  s8 -> s8 [0, 65535] { R3865 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s8 [0, 65535] { R3865 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3865 += 1, R3745 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 69] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s0 [0, 65535] { R3866 += 1, R3867 += 1 };
  s0 -> s2 [0, 65535] { R3867 += 1, R3747 += 1, R1495 += 1, R1496 += 1 };
  s0 -> s3 [0, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s0 -> s4 [0, 65535] { R3867 += 1, R3746 += 1, R3747 += 1 };
  s0 -> s5 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s6 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s0 -> s1 [71, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [0, 69] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s7 [0, 65535] { R3867 += 1 };
  s1 -> s8 [0, 65535] { R3867 += 1, R3747 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s1 [0, 65535] { R3867 += 1, R3747 += 1, R1496 += 1 };
  s1 -> s5 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s6 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s1 -> s1 [71, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [0, 69] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s7 [0, 65535] { R3867 += 1 };
  s2 -> s2 [0, 65535] { R3867 += 1, R3747 += 1, R1495 += 1, R1496 += 1 };
  s2 -> s3 [0, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s2 -> s10 [0, 65535];
  s2 -> s5 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s6 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s2 -> s1 [71, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [0, 69] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s7 [0, 65535] { R3867 += 1 };
  s3 -> s3 [0, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s3 -> s8 [0, 65535] { R3867 += 1, R3747 += 1 };
  s3 -> s10 [0, 65535];
  s3 -> s5 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s6 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s3 -> s1 [71, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [0, 69] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s2 [0, 65535] { R3867 += 1, R3747 += 1, R1495 += 1, R1496 += 1 };
  s4 -> s3 [0, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1497 += 1, R1498 += 1 };
  s4 -> s4 [0, 65535] { R3867 += 1, R3746 += 1, R3747 += 1 };
  s4 -> s10 [0, 65535];
  s4 -> s5 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s6 [70, 70] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s4 -> s1 [71, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s5 -> s7 [0, 65535] { R3867 += 1 };
  s5 -> s8 [0, 65535] { R3867 += 1, R3747 += 1 };
  s5 -> s5 [0, 65535] { R3867 += 1, R3747 += 1, R1496 += 1 };
  s5 -> s10 [0, 65535];
  s6 -> s7 [0, 65535] { R3867 += 1 };
  s6 -> s8 [0, 65535] { R3867 += 1, R3747 += 1 };
  s6 -> s9 [0, 65535] { R3867 += 1, R3747 += 1, R1496 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s6 [0, 65535] { R3867 += 1, R3747 += 1, R1496 += 1, R1498 += 1, R1499 += 1 };
  s7 -> s7 [0, 65535] { R3867 += 1 };
  s7 -> s10 [0, 65535];
  s8 -> s7 [0, 65535] { R3867 += 1 };
  s8 -> s8 [0, 65535] { R3867 += 1, R3747 += 1 };
  s8 -> s10 [0, 65535];
  s9 -> s7 [0, 65535] { R3867 += 1 };
  s9 -> s8 [0, 65535] { R3867 += 1, R3747 += 1 };
  s9 -> s9 [0, 65535] { R3867 += 1, R3747 += 1, R1496 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 69] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s0 -> s2 [0, 69] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s0 [0, 65535] { R3868 += 1, R3869 += 1 };
  s0 -> s3 [0, 65535] { R3869 += 1, R3748 += 1, R3749 += 1 };
  s0 -> s4 [70, 70] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s0 -> s5 [70, 70] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s2 [71, 75] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s1 [71, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s0 -> s6 [76, 76] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s0 -> s2 [77, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s1 [0, 69] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s1 -> s2 [0, 69] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s4 [70, 70] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s1 -> s5 [70, 70] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s2 [71, 75] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s1 [71, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s1 -> s6 [76, 76] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s1 -> s2 [77, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s2 [0, 69] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s5 [70, 70] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s2 [71, 75] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s6 [76, 76] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s2 -> s2 [77, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s1 [0, 69] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s3 -> s2 [0, 69] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s3 [0, 65535] { R3869 += 1, R3748 += 1, R3749 += 1 };
  s3 -> s4 [70, 70] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s3 -> s5 [70, 70] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s2 [71, 75] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s1 [71, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s3 -> s6 [76, 76] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s3 -> s2 [77, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s4 -> s5 [0, 75] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s4 -> s4 [0, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3202 += 1, R3203 += 1 };
  s4 -> s11 [76, 76] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s4 -> s5 [77, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s5 -> s5 [0, 75] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s5 -> s11 [76, 76] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s5 -> s5 [77, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s6 [0, 69] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s7 [0, 65535] { R3869 += 1 };
  s6 -> s8 [0, 65535] { R3869 += 1, R3749 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R3869 += 1, R3749 += 1, R3199 += 1 };
  s6 -> s10 [70, 70] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s11 [70, 70] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s6 -> s6 [71, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s7 -> s7 [0, 65535] { R3869 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R3869 += 1 };
  s8 -> s8 [0, 65535] { R3869 += 1, R3749 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3869 += 1, R3749 += 1, R3199 += 1 };
  s10 -> s7 [0, 65535] { R3869 += 1 };
  s10 -> s8 [0, 65535] { R3869 += 1, R3749 += 1 };
  s10 -> s9 [0, 65535];
  s11 -> s7 [0, 65535] { R3869 += 1 };
  s11 -> s8 [0, 65535] { R3869 += 1, R3749 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R3869 += 1, R3749 += 1, R3199 += 1, R3201 += 1, R3203 += 1 };
  s11 -> s12 [0, 65535] { R3869 += 1, R3749 += 1, R3199 += 1 };
  s12 -> s7 [0, 65535] { R3869 += 1 };
  s12 -> s8 [0, 65535] { R3869 += 1, R3749 += 1 };
  s12 -> s9 [0, 65535];
  s12 -> s12 [0, 65535] { R3869 += 1, R3749 += 1, R3199 += 1 };
  accepting s12, s8, s9, s6, s7, s10, s11;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 69] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s0 -> s0 [0, 65535] { R3870 += 1, R3871 += 1 };
  s0 -> s2 [0, 65535] { R3871 += 1, R3751 += 1 };
  s0 -> s3 [0, 65535] { R3871 += 1, R3750 += 1, R3751 += 1 };
  s0 -> s4 [0, 65535] { R3871 += 1, R3751 += 1, R3692 += 1, R3693 += 1, R3694 += 1 };
  s0 -> s5 [70, 70] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s0 -> s6 [70, 70] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s0 -> s1 [71, 65535] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s1 -> s1 [0, 69] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s1 -> s7 [0, 65535] { R3871 += 1 };
  s1 -> s2 [0, 65535] { R3871 += 1, R3751 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s1 [0, 65535] { R3871 += 1, R3751 += 1, R3692 += 1 };
  s1 -> s5 [70, 70] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s1 -> s6 [70, 70] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s1 -> s1 [71, 65535] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s2 -> s7 [0, 65535] { R3871 += 1 };
  s2 -> s2 [0, 65535] { R3871 += 1, R3751 += 1 };
  s2 -> s8 [0, 65535];
  s3 -> s1 [0, 69] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s3 -> s2 [0, 65535] { R3871 += 1, R3751 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R3871 += 1, R3750 += 1, R3751 += 1 };
  s3 -> s4 [0, 65535] { R3871 += 1, R3751 += 1, R3692 += 1, R3693 += 1, R3694 += 1 };
  s3 -> s5 [70, 70] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s3 -> s6 [70, 70] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s3 -> s1 [71, 65535] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s4 -> s1 [0, 69] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s4 -> s7 [0, 65535] { R3871 += 1 };
  s4 -> s2 [0, 65535] { R3871 += 1, R3751 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R3871 += 1, R3751 += 1, R3692 += 1, R3693 += 1, R3694 += 1 };
  s4 -> s5 [70, 70] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s4 -> s6 [70, 70] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s4 -> s1 [71, 65535] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s5 -> s5 [0, 65535] { R3871 += 1, R3751 += 1, R3692 += 1, R3694 += 1, R3695 += 1, R3696 += 1 };
  s5 -> s7 [0, 65535] { R3871 += 1 };
  s5 -> s2 [0, 65535] { R3871 += 1, R3751 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s9 [0, 65535] { R3871 += 1, R3751 += 1, R3692 += 1 };
  s6 -> s7 [0, 65535] { R3871 += 1 };
  s6 -> s2 [0, 65535] { R3871 += 1, R3751 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3871 += 1, R3751 += 1, R3692 += 1 };
  s7 -> s7 [0, 65535] { R3871 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R3871 += 1 };
  s9 -> s2 [0, 65535] { R3871 += 1, R3751 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3871 += 1, R3751 += 1, R3692 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65535] { R3873 += 1, R3753 += 1, R27 += 1 };
  s0 -> s2 [0, 65535] { R3873 += 1, R3752 += 1, R3753 += 1 };
  s0 -> s0 [0, 65535] { R3872 += 1, R3873 += 1 };
  s1 -> s1 [0, 65535] { R3873 += 1, R3753 += 1, R27 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3873 += 1 };
  s2 -> s1 [0, 65535] { R3873 += 1, R3753 += 1, R27 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R3873 += 1, R3752 += 1, R3753 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3873 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 66] { R3875 += 1, R3755 += 1 };
  s0 -> s2 [0, 65535] { R3875 += 1, R3754 += 1, R3755 += 1 };
  s0 -> s0 [0, 65535] { R3874 += 1, R3875 += 1 };
  s0 -> s3 [67, 67] { R3875 += 1, R3755 += 1 };
  s0 -> s4 [67, 67] { R3875 += 1, R3755 += 1 };
  s0 -> s5 [70, 70] { R3875 += 1, R3755 += 1 };
  s0 -> s1 [71, 65535] { R3875 += 1, R3755 += 1 };
  s1 -> s1 [0, 66] { R3875 += 1, R3755 += 1 };
  s1 -> s3 [67, 67] { R3875 += 1, R3755 += 1 };
  s1 -> s4 [67, 67] { R3875 += 1, R3755 += 1 };
  s1 -> s5 [70, 70] { R3875 += 1, R3755 += 1 };
  s1 -> s1 [71, 65535] { R3875 += 1, R3755 += 1 };
  s2 -> s1 [0, 66] { R3875 += 1, R3755 += 1 };
  s2 -> s2 [0, 65535] { R3875 += 1, R3754 += 1, R3755 += 1 };
  s2 -> s3 [67, 67] { R3875 += 1, R3755 += 1 };
  s2 -> s4 [67, 67] { R3875 += 1, R3755 += 1 };
  s2 -> s5 [70, 70] { R3875 += 1, R3755 += 1 };
  s2 -> s1 [71, 65535] { R3875 += 1, R3755 += 1 };
  s3 -> s3 [0, 67] { R3875 += 1, R3755 += 1 };
  s3 -> s7 [70, 70] { R3875 += 1, R3755 += 1 };
  s3 -> s3 [71, 65535] { R3875 += 1, R3755 += 1 };
  s5 -> s5 [0, 66] { R3875 += 1, R3755 += 1 };
  s5 -> s5 [0, 65535] { R3875 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [67, 67] { R3875 += 1, R3755 += 1 };
  s5 -> s8 [67, 67] { R3875 += 1, R3755 += 1 };
  s5 -> s5 [70, 65535] { R3875 += 1, R3755 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 67] { R3875 += 1, R3755 += 1 };
  s7 -> s7 [0, 65535] { R3875 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [70, 65535] { R3875 += 1, R3755 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3875 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 66] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s0 -> s2 [0, 65535] { R3877 += 1, R3756 += 1, R3757 += 1 };
  s0 -> s0 [0, 65535] { R3876 += 1, R3877 += 1 };
  s0 -> s3 [67, 67] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s0 -> s4 [67, 67] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s0 -> s1 [68, 65535] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s1 -> s1 [0, 66] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s1 -> s1 [0, 65535] { R3877 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s1 -> s4 [67, 67] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s1 -> s1 [68, 65535] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s2 -> s1 [0, 66] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s2 -> s2 [0, 65535] { R3877 += 1, R3756 += 1, R3757 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s2 -> s4 [67, 67] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s2 -> s1 [68, 65535] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s3 -> s3 [0, 65535] { R3877 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3877 += 1 };
  s4 -> s4 [0, 65535] { R3877 += 1, R3757 += 1, R1330 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3877 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 66] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s0 -> s2 [0, 65535] { R3879 += 1, R3758 += 1, R3759 += 1 };
  s0 -> s0 [0, 65535] { R3878 += 1, R3879 += 1 };
  s0 -> s3 [67, 67] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s0 -> s4 [67, 67] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s0 -> s1 [68, 65535] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s1 -> s1 [0, 66] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3879 += 1 };
  s1 -> s3 [67, 67] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s1 -> s4 [67, 67] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s1 -> s1 [68, 65535] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s2 -> s1 [0, 66] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s2 -> s2 [0, 65535] { R3879 += 1, R3758 += 1, R3759 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s2 -> s4 [67, 67] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s2 -> s1 [68, 65535] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s3 -> s3 [0, 65535] { R3879 += 1, R3759 += 1, R1332 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3879 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3879 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3879 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 66] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s0 [0, 65535] { R3880 += 1, R3881 += 1 };
  s0 -> s2 [0, 65535] { R3881 += 1, R3760 += 1, R3761 += 1 };
  s0 -> s3 [67, 67] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s4 [67, 67] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s0 -> s1 [68, 65535] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [0, 66] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [0, 65535] { R3881 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s4 [67, 67] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s1 -> s1 [68, 65535] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [0, 66] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3881 += 1, R3760 += 1, R3761 += 1 };
  s2 -> s3 [67, 67] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s4 [67, 67] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s2 -> s1 [68, 65535] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s3 -> s3 [0, 65535] { R3881 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3881 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3881 += 1, R3761 += 1, R1334 += 1, R1335 += 1 };
  s5 -> s5 [0, 65535] { R3881 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 66] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s0 [0, 65535] { R3882 += 1, R3883 += 1 };
  s0 -> s2 [0, 65535] { R3883 += 1, R3762 += 1, R3763 += 1 };
  s0 -> s3 [67, 67] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s4 [67, 67] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s0 -> s1 [68, 65535] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [0, 66] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3883 += 1 };
  s1 -> s3 [67, 67] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s4 [67, 67] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s1 -> s1 [68, 65535] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [0, 66] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3883 += 1, R3762 += 1, R3763 += 1 };
  s2 -> s3 [67, 67] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s4 [67, 67] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s2 -> s1 [68, 65535] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s3 -> s3 [0, 65535] { R3883 += 1, R3763 += 1, R1340 += 1, R1341 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3883 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3883 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3883 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 66] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s2 [0, 65535] { R3885 += 1, R3764 += 1, R3765 += 1 };
  s0 -> s0 [0, 65535] { R3884 += 1, R3885 += 1 };
  s0 -> s3 [67, 67] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s4 [67, 67] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s0 -> s1 [68, 65535] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [0, 66] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3885 += 1 };
  s1 -> s3 [67, 67] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s4 [67, 67] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s1 -> s1 [68, 65535] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [0, 66] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3885 += 1, R3764 += 1, R3765 += 1 };
  s2 -> s3 [67, 67] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s4 [67, 67] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s2 -> s1 [68, 65535] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3885 += 1 };
  s3 -> s3 [0, 65535] { R3885 += 1, R3765 += 1, R1344 += 1, R1345 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3885 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3885 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 66] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s0 [0, 65535] { R3886 += 1, R3887 += 1 };
  s0 -> s2 [0, 65535] { R3887 += 1, R3766 += 1, R3767 += 1 };
  s0 -> s3 [67, 67] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s4 [67, 67] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s0 -> s1 [68, 65535] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [0, 66] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3887 += 1 };
  s1 -> s3 [67, 67] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s4 [67, 67] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s1 -> s1 [68, 65535] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [0, 66] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3887 += 1, R3766 += 1, R3767 += 1 };
  s2 -> s3 [67, 67] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s4 [67, 67] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s2 -> s1 [68, 65535] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3887 += 1, R3767 += 1, R1350 += 1, R1351 += 1 };
  s3 -> s6 [0, 65535] { R3887 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3887 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3887 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 66] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s0 [0, 65535] { R3888 += 1, R3889 += 1 };
  s0 -> s2 [0, 65535] { R3889 += 1, R3768 += 1, R3769 += 1 };
  s0 -> s3 [67, 67] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s4 [67, 67] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s0 -> s1 [68, 65535] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [0, 66] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [0, 65535] { R3889 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s4 [67, 67] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s1 -> s1 [68, 65535] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [0, 66] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s2 [0, 65535] { R3889 += 1, R3768 += 1, R3769 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s4 [67, 67] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s2 -> s1 [68, 65535] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s3 -> s3 [0, 65535] { R3889 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3889 += 1, R3769 += 1, R1356 += 1, R1357 += 1 };
  s4 -> s5 [0, 65535] { R3889 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3889 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 66] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s0 [0, 65535] { R3890 += 1, R3891 += 1 };
  s0 -> s2 [0, 65535] { R3891 += 1, R3770 += 1, R3771 += 1 };
  s0 -> s3 [67, 67] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s4 [67, 67] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s0 -> s1 [68, 65535] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [0, 66] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [0, 65535] { R3891 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s4 [67, 67] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s1 -> s1 [68, 65535] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [0, 66] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s2 [0, 65535] { R3891 += 1, R3770 += 1, R3771 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s4 [67, 67] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s2 -> s1 [68, 65535] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s3 -> s3 [0, 65535] { R3891 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3891 += 1, R3771 += 1, R1364 += 1, R1365 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3891 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3891 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 66] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s2 [0, 65535] { R3893 += 1, R3772 += 1, R3773 += 1 };
  s0 -> s0 [0, 65535] { R3892 += 1, R3893 += 1 };
  s0 -> s3 [67, 67] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s4 [67, 67] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s0 -> s1 [68, 65535] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [0, 66] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3893 += 1 };
  s1 -> s3 [67, 67] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s4 [67, 67] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s1 -> s1 [68, 65535] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [0, 66] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3893 += 1, R3772 += 1, R3773 += 1 };
  s2 -> s3 [67, 67] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s4 [67, 67] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s2 -> s1 [68, 65535] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s3 -> s3 [0, 65535] { R3893 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3893 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3893 += 1, R3773 += 1, R1374 += 1, R1375 += 1 };
  s5 -> s5 [0, 65535] { R3893 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 66] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s0 [0, 65535] { R3894 += 1, R3895 += 1 };
  s0 -> s2 [0, 65535] { R3895 += 1, R3774 += 1, R3775 += 1 };
  s0 -> s3 [67, 67] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s4 [67, 67] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s0 -> s1 [68, 65535] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [0, 66] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [0, 65535] { R3895 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s4 [67, 67] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s1 -> s1 [68, 65535] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [0, 66] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s2 [0, 65535] { R3895 += 1, R3774 += 1, R3775 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s4 [67, 67] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s2 -> s1 [68, 65535] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s3 -> s3 [0, 65535] { R3895 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3895 += 1 };
  s4 -> s4 [0, 65535] { R3895 += 1, R3775 += 1, R1378 += 1, R1379 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3895 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 66] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s2 [0, 65535] { R3897 += 1, R3776 += 1, R3777 += 1 };
  s0 -> s0 [0, 65535] { R3896 += 1, R3897 += 1 };
  s0 -> s3 [67, 67] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s4 [67, 67] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s0 -> s1 [68, 65535] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [0, 66] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [0, 65535] { R3897 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s4 [67, 67] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s1 -> s1 [68, 65535] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [0, 66] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s2 [0, 65535] { R3897 += 1, R3776 += 1, R3777 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s4 [67, 67] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s2 -> s1 [68, 65535] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s3 -> s3 [0, 65535] { R3897 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3897 += 1, R3777 += 1, R1384 += 1, R1385 += 1 };
  s4 -> s6 [0, 65535] { R3897 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3897 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 66] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s0 [0, 65535] { R3898 += 1, R3899 += 1 };
  s0 -> s2 [0, 65535] { R3899 += 1, R3778 += 1, R3779 += 1 };
  s0 -> s3 [67, 67] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s4 [67, 67] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s0 -> s1 [68, 65535] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [0, 66] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3899 += 1 };
  s1 -> s3 [67, 67] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s4 [67, 67] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s1 -> s1 [68, 65535] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [0, 66] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3899 += 1, R3778 += 1, R3779 += 1 };
  s2 -> s3 [67, 67] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s4 [67, 67] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s2 -> s1 [68, 65535] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s3 -> s3 [0, 65535] { R3899 += 1, R3779 += 1, R1390 += 1, R1391 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3899 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3899 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3899 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_55 {
  init s0;
  s0 -> s1 [0, 66] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s2 [0, 65535] { R3901 += 1, R3780 += 1, R3781 += 1 };
  s0 -> s0 [0, 65535] { R3900 += 1, R3901 += 1 };
  s0 -> s3 [67, 67] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s4 [67, 67] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s0 -> s1 [68, 65535] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [0, 66] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3901 += 1 };
  s1 -> s3 [67, 67] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s4 [67, 67] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s1 -> s1 [68, 65535] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [0, 66] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s2 [0, 65535] { R3901 += 1, R3780 += 1, R3781 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s4 [67, 67] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s2 -> s1 [68, 65535] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s3 -> s3 [0, 65535] { R3901 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3901 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3901 += 1, R3781 += 1, R1398 += 1, R1399 += 1 };
  s5 -> s5 [0, 65535] { R3901 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_56 {
  init s0;
  s0 -> s1 [0, 66] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s2 [0, 65535] { R3903 += 1, R3782 += 1, R3783 += 1 };
  s0 -> s0 [0, 65535] { R3902 += 1, R3903 += 1 };
  s0 -> s3 [67, 67] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s4 [67, 67] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s0 -> s1 [68, 65535] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [0, 66] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [0, 65535] { R3903 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s4 [67, 67] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s1 -> s1 [68, 65535] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [0, 66] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s2 [0, 65535] { R3903 += 1, R3782 += 1, R3783 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s4 [67, 67] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s2 -> s1 [68, 65535] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s3 -> s3 [0, 65535] { R3903 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3903 += 1, R3783 += 1, R1408 += 1, R1409 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3903 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3903 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_57 {
  init s0;
  s0 -> s1 [0, 66] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s2 [0, 65535] { R3905 += 1, R3784 += 1, R3785 += 1 };
  s0 -> s0 [0, 65535] { R3904 += 1, R3905 += 1 };
  s0 -> s3 [67, 67] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s4 [67, 67] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s0 -> s1 [68, 65535] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [0, 66] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [0, 65535] { R3905 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s4 [67, 67] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s1 -> s1 [68, 65535] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [0, 66] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s2 [0, 65535] { R3905 += 1, R3784 += 1, R3785 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s4 [67, 67] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s2 -> s1 [68, 65535] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s3 -> s6 [0, 65535] { R3905 += 1 };
  s3 -> s3 [0, 65535] { R3905 += 1, R3785 += 1, R1416 += 1, R1417 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3905 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3905 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_58 {
  init s0;
  s0 -> s1 [0, 66] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s0 [0, 65535] { R3906 += 1, R3907 += 1 };
  s0 -> s2 [0, 65535] { R3907 += 1, R3786 += 1, R3787 += 1 };
  s0 -> s3 [67, 67] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s4 [67, 67] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s0 -> s1 [68, 65535] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [0, 66] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [0, 65535] { R3907 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s4 [67, 67] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s1 -> s1 [68, 65535] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [0, 66] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3907 += 1, R3786 += 1, R3787 += 1 };
  s2 -> s3 [67, 67] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s4 [67, 67] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s2 -> s1 [68, 65535] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s3 -> s3 [0, 65535] { R3907 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3907 += 1, R3787 += 1, R1426 += 1, R1427 += 1 };
  s4 -> s6 [0, 65535] { R3907 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3907 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_59 {
  init s0;
  s0 -> s1 [0, 66] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s2 [0, 65535] { R3909 += 1, R3788 += 1, R3789 += 1 };
  s0 -> s0 [0, 65535] { R3908 += 1, R3909 += 1 };
  s0 -> s3 [67, 67] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s4 [67, 67] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s0 -> s1 [68, 65535] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [0, 66] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3909 += 1 };
  s1 -> s3 [67, 67] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s4 [67, 67] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s1 -> s1 [68, 65535] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [0, 66] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3909 += 1, R3788 += 1, R3789 += 1 };
  s2 -> s3 [67, 67] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s4 [67, 67] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s2 -> s1 [68, 65535] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s3 -> s3 [0, 65535] { R3909 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3909 += 1 };
  s4 -> s4 [0, 65535] { R3909 += 1, R3789 += 1, R1436 += 1, R1437 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3909 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_60 {
  init s0;
  s0 -> s1 [0, 66] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s0 [0, 65535] { R3910 += 1, R3911 += 1 };
  s0 -> s2 [0, 65535] { R3911 += 1, R3790 += 1, R3791 += 1 };
  s0 -> s3 [67, 67] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s4 [67, 67] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s0 -> s1 [68, 65535] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [0, 66] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [0, 65535] { R3911 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s4 [67, 67] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s1 -> s1 [68, 65535] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [0, 66] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s2 [0, 65535] { R3911 += 1, R3790 += 1, R3791 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s4 [67, 67] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s2 -> s1 [68, 65535] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s3 -> s6 [0, 65535] { R3911 += 1 };
  s3 -> s3 [0, 65535] { R3911 += 1, R3791 += 1, R1448 += 1, R1449 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3911 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3911 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_61 {
  init s0;
  s0 -> s1 [0, 66] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s0 [0, 65535] { R3912 += 1, R3913 += 1 };
  s0 -> s2 [0, 65535] { R3913 += 1, R3792 += 1, R3793 += 1 };
  s0 -> s3 [67, 67] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s4 [67, 67] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s0 -> s1 [68, 65535] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [0, 66] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [0, 65535] { R3913 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s4 [67, 67] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s1 -> s1 [68, 65535] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [0, 66] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s2 [0, 65535] { R3913 += 1, R3792 += 1, R3793 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s4 [67, 67] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s2 -> s1 [68, 65535] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s3 -> s3 [0, 65535] { R3913 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3913 += 1 };
  s4 -> s4 [0, 65535] { R3913 += 1, R3793 += 1, R1462 += 1, R1463 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3913 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_62 {
  init s0;
  s0 -> s1 [0, 66] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s2 [0, 65535] { R3915 += 1, R3794 += 1, R3795 += 1 };
  s0 -> s0 [0, 65535] { R3914 += 1, R3915 += 1 };
  s0 -> s3 [67, 67] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s4 [67, 67] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s0 -> s1 [68, 65535] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 66] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [0, 65535] { R3915 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s4 [67, 67] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s1 -> s1 [68, 65535] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [0, 66] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s2 [0, 65535] { R3915 += 1, R3794 += 1, R3795 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s4 [67, 67] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s2 -> s1 [68, 65535] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s3 -> s3 [0, 65535] { R3915 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3915 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3915 += 1, R3795 += 1, R1472 += 1, R1473 += 1 };
  s5 -> s5 [0, 65535] { R3915 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_63 {
  init s0;
  s0 -> s1 [0, 66] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s2 [0, 65535] { R3917 += 1, R3796 += 1, R3797 += 1 };
  s0 -> s0 [0, 65535] { R3916 += 1, R3917 += 1 };
  s0 -> s3 [67, 67] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s4 [67, 67] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s0 -> s1 [68, 65535] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [0, 66] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [0, 65535] { R3917 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s4 [67, 67] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s1 -> s1 [68, 65535] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [0, 66] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s2 [0, 65535] { R3917 += 1, R3796 += 1, R3797 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s4 [67, 67] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s2 -> s1 [68, 65535] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s3 -> s3 [0, 65535] { R3917 += 1, R3797 += 1, R1480 += 1, R1481 += 1 };
  s3 -> s6 [0, 65535] { R3917 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3917 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3917 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_64 {
  init s0;
  s0 -> s1 [0, 66] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s2 [0, 65535] { R3919 += 1, R3798 += 1, R3799 += 1 };
  s0 -> s0 [0, 65535] { R3918 += 1, R3919 += 1 };
  s0 -> s3 [67, 67] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s4 [67, 67] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s0 -> s1 [68, 65535] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [0, 66] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [0, 65535] { R3919 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s4 [67, 67] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s1 -> s1 [68, 65535] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [0, 66] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s2 [0, 65535] { R3919 += 1, R3798 += 1, R3799 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s4 [67, 67] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s2 -> s1 [68, 65535] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s3 -> s6 [0, 65535] { R3919 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3919 += 1, R3799 += 1, R1490 += 1, R1491 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3919 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3919 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_65 {
  init s0;
  s0 -> s1 [0, 66] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s2 [0, 66] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s3 [0, 66] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s0 [0, 65535] { R3920 += 1, R3921 += 1 };
  s0 -> s4 [0, 65535] { R3921 += 1, R3800 += 1, R3801 += 1 };
  s0 -> s5 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s6 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s7 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s8 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s9 [67, 67] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s10 [67, 67] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s3 [68, 69] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s0 -> s1 [68, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s0 -> s2 [68, 65535] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s0 -> s3 [71, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s1 [0, 66] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s1 -> s3 [0, 66] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s5 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s6 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s1 -> s7 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s1 -> s8 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s3 [68, 69] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s1 -> s1 [68, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s1 -> s3 [71, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s1 [0, 66] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s2 [0, 66] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s2 -> s3 [0, 66] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s5 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s6 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s7 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s8 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s9 [67, 67] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s2 -> s10 [67, 67] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s2 -> s3 [68, 69] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s2 -> s1 [68, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s2 -> s2 [68, 65535] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s2 -> s3 [71, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s3 [0, 66] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s3 [0, 65535] { R3921 += 1 };
  s3 -> s5 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s8 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s3 [68, 69] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s3 -> s3 [71, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s1 [0, 66] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s2 [0, 66] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s3 [0, 66] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s4 [0, 65535] { R3921 += 1, R3800 += 1, R3801 += 1 };
  s4 -> s5 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s6 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s7 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s8 [67, 67] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s9 [67, 67] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s10 [67, 67] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s3 [68, 69] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s4 -> s1 [68, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s4 -> s2 [68, 65535] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s4 -> s3 [71, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s5 -> s5 [0, 69] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s5 -> s5 [0, 65535] { R3921 += 1 };
  s5 -> s11 [0, 65535];
  s5 -> s5 [71, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s6 -> s5 [0, 69] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s6 -> s6 [0, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s6 -> s5 [71, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [0, 65535] { R3921 += 1 };
  s10 -> s5 [0, 69] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s10 -> s6 [0, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3194 += 1, R3195 += 1 };
  s10 -> s10 [0, 65535] { R3921 += 1, R3801 += 1, R3192 += 1, R3193 += 1 };
  s10 -> s5 [71, 65535] { R3921 += 1, R3801 += 1, R3193 += 1, R3195 += 1, R3196 += 1, R3197 += 1 };
  s11 -> s11 [0, 65535];
  accepting s3, s5, s8, s11;
};
automaton value2_66 {
  init s0;
  s0 -> s1 [0, 66] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s0 -> s2 [0, 66] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s0 -> s3 [0, 65535] { R3923 += 1, R3802 += 1, R3803 += 1 };
  s0 -> s0 [0, 65535] { R3922 += 1, R3923 += 1 };
  s0 -> s4 [67, 67] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s0 -> s5 [67, 67] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s0 -> s6 [67, 67] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s0 -> s7 [67, 67] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s0 -> s1 [68, 65535] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s0 -> s2 [68, 65535] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s1 -> s1 [0, 66] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s1 -> s2 [0, 66] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s1 -> s4 [67, 67] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s1 -> s5 [67, 67] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s1 -> s6 [67, 67] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s1 -> s7 [67, 67] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s1 -> s1 [68, 65535] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s1 -> s2 [68, 65535] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s2 -> s2 [0, 66] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s2 [0, 65535] { R3923 += 1 };
  s2 -> s4 [67, 67] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s2 -> s6 [67, 67] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s2 -> s2 [68, 65535] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s3 -> s1 [0, 66] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s3 -> s2 [0, 66] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s3 -> s3 [0, 65535] { R3923 += 1, R3802 += 1, R3803 += 1 };
  s3 -> s4 [67, 67] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s3 -> s5 [67, 67] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s3 -> s6 [67, 67] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s3 -> s7 [67, 67] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s3 -> s1 [68, 65535] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s3 -> s2 [68, 65535] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s4 -> s4 [0, 65535] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s9 [0, 65535] { R3923 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3923 += 1 };
  s7 -> s4 [0, 65535] { R3923 += 1, R3803 += 1, R3685 += 1, R3686 += 1, R3687 += 1 };
  s7 -> s7 [0, 65535] { R3923 += 1, R3803 += 1, R3684 += 1, R3685 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3923 += 1 };
  accepting s4, s8, s2, s9, s6;
};
};
synchronised {  // Automata constraining P17
automaton P17_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
constraint R3 = R3751 && R4 - R3923 = 1 && R28 - R3751 = -1 && R29 = R3751 && R30 - R3751 = -1 && R31 = R3751 && R32 = 0 && R33 = 1 && R34 = 0 && R35 = 1 && R36 = R3923 && R37 - R3923 = 1 && R38 = R3923 && R39 - R3923 = 1 && R40 = 0 && R41 = 1 && R42 = 0 && R43 = 1 && R1331 + R1330 + -1*R3199 + -1*R3193 = 0 && R1349 + R1346 + R1425 + R1420 + R1489 + R1484 + -1*R3203 + -1*R3197 - R1441 - R1447 - R1359 - R1363 = 0 && R1362 + R1358 + R1446 + R1440 + R3202 + R3196 = 0 && R1376 + R1374 = 0 && R1377 + R1375 + -1*R3199 + -1*R3193 = 0 && R1476 + R1472 = 0 && R1477 + R1473 + -1*R3199 + -1*R3193 = 0 && R1478 + R1474 = 0 && R1479 + R1475 = 0 && R3198 + R3192 = 0 && R3200 + R3194 = 0 && R3201 + R3195 = 0 && R3698 = 0 && R3699 = R3751 && R3700 = 0 && R3701 = R3751 && R3702 = 0 && R3703 = R3751 && R3704 = 0 && R3705 = R3751 && R3706 = 0 && R3707 = R3751 && R3708 = 0 && R3709 = R3751 && R3710 = 0 && R3711 = R3751 && R3712 = 0 && R3713 = R3751 && R3714 = 0 && R3715 = R3751 && R3716 = 0 && R3717 = R3751 && R3718 = 0 && R3719 = R3751 && R3720 = 0 && R3721 = R3751 && R3722 = 0 && R3723 = R3751 && R3724 = 0 && R3725 = R3751 && R3726 = 0 && R3727 = R3751 && R3728 = 0 && R3729 = R3751 && R3730 = 0 && R3731 = R3751 && R3732 = 0 && R3733 = R3751 && R3734 = 0 && R3735 = R3751 && R3736 = 0 && R3737 = R3751 && R3738 = 0 && R3739 = R3751 && R3740 = 0 && R3741 = R3751 && R3742 = 0 && R3743 = R3751 && R3744 = 0 && R3745 = R3751 && R3746 = 0 && R3747 = R3751 && R3748 = 0 && R3749 = R3751 && R3750 = 0 && R3754 = 0 && R3755 = 0 && R3800 = 0 && R3801 = 0 && R3802 = 0 && R3803 = 0 && R3804 = 0 && R3805 = R3923 && R3806 = 0 && R3807 = R3923 && R3808 = 0 && R3809 = R3923 && R3810 = 0 && R3811 = R3923 && R3812 = 0 && R3813 = R3923 && R3814 = 0 && R3815 = R3923 && R3816 = 0 && R3817 = R3923 && R3818 = 0 && R3819 = R3923 && R3820 = 0 && R3821 = R3923 && R3822 = 0 && R3823 = R3923 && R3824 = 0 && R3825 = R3923 && R3826 = 0 && R3827 = R3923 && R3828 = 0 && R3829 = R3923 && R3830 = 0 && R3831 = R3923 && R3832 = 0 && R3833 = R3923 && R3834 = 0 && R3835 = R3923 && R3836 = 0 && R3837 = R3923 && R3838 = 0 && R3839 = R3923 && R3840 = 0 && R3841 = R3923 && R3842 = 0 && R3843 = R3923 && R3844 = 0 && R3845 = R3923 && R3846 = 0 && R3847 = R3923 && R3848 = 0 && R3849 = R3923 && R3850 = 0 && R3851 = R3923 && R3852 = 0 && R3853 = R3923 && R3854 = 0 && R3855 = R3923 && R3856 = 0 && R3857 = R3923 && R3858 = 0 && R3859 = R3923 && R3860 = 0 && R3861 = R3923 && R3862 = 0 && R3863 = R3923 && R3864 = 0 && R3865 = R3923 && R3866 = 0 && R3867 = R3923 && R3868 = 0 && R3869 = R3923 && R3870 = 0 && R3871 = R3923 && R3872 = 0 && R3873 = R3923 && R3874 = 0 && R3875 = R3923 && R3876 = 0 && R3877 = R3923 && R3878 = 0 && R3879 = R3923 && R3880 = 0 && R3881 = R3923 && R3882 = 0 && R3883 = R3923 && R3884 = 0 && R3885 = R3923 && R3886 = 0 && R3887 = R3923 && R3888 = 0 && R3889 = R3923 && R3890 = 0 && R3891 = R3923 && R3892 = 0 && R3893 = R3923 && R3894 = 0 && R3895 = R3923 && R3896 = 0 && R3897 = R3923 && R3898 = 0 && R3899 = R3923 && R3900 = 0 && R3901 = R3923 && R3902 = 0 && R3903 = R3923 && R3904 = 0 && R3905 = R3923 && R3906 = 0 && R3907 = R3923 && R3908 = 0 && R3909 = R3923 && R3910 = 0 && R3911 = R3923 && R3912 = 0 && R3913 = R3923 && R3914 = 0 && R3915 = R3923 && R3916 = 0 && R3917 = R3923 && R3918 = 0 && R3919 = R3923 && R3920 = 0 && R3921 = R3923 && R3922 = 0 && R18 < 1 && R21 < 1 && R1333 + R1332 < 1 && R1355 + R1352 + R1435 + R1430 + R1499 + R1494 < 1 && -1*R3203 + -1*R3197 - R1441 - R1447 - R1359 - R1363 < 1 && -1*R1383 + -1*R1380 < 1 && R1389 + R1386 < 1 && -1*R3199 + -1*R3193 < 1 && 0 < R3751 && -1 < R3923 && (R1363 + R1359 + R1447 + R1441 + R3203 + R3197 != 0 || R1373 + R1368 + R1461 + R1454 + R3697 + R3690 = 0 || (R1371 + R1366 + R1459 + R1452 + R3695 + R3688 = 0 && R1372 + R1367 + R1460 + R1453 + R3696 + R3689 = 0)) && (R1371 + R1366 + R1459 + R1452 + R3695 + R3688 != 0 || R1363 + R1359 + R1447 + R1441 + R3203 + R3197 + -1*R3696 + -1*R3689 - R1453 - R1460 - R1367 - R1372 = 0 || R1363 + R1359 + R1447 + R1441 + R3203 + R3197 < 1) && (R1381 + R1378 != 0 || R1382 + R1379 + -1*R3199 + -1*R3193 = 0 || R1383 + R1380 < 1) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1396 + R1392 = 0 && R1397 + R1393 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1405 + R1400 = 0 && R1406 + R1401 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1414 + R1410 = 0 && R1415 + R1411 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1423 + R1418 = 0 && R1424 + R1419 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1433 + R1428 = 0 && R1434 + R1429 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1444 + R1438 = 0 && R1445 + R1439 = 0)) && (R1383 + R1380 != 0 || R1407 + R1402 = 0 || (R1457 + R1450 = 0 && R1458 + R1451 = 0)) && (R1383 + R1380 != 0 || ((R1381 + R1378 != 0 || R1382 + R1379 + -1*R3199 + -1*R3193 = 0 || R3199 + R3193 < 1) && (R1381 + R1378 = 0 || R3199 + R3193 < 1))) && (R1387 + R1384 != 0 || R1388 + R1385 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1394 + R1390 != 0 || R1395 + R1391 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1396 + R1392 != 0 || R1383 + R1380 + -1*R1397 + -1*R1393 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 != 0 || R1404 + R1399 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1405 + R1400 != 0 || R1383 + R1380 + -1*R1406 + -1*R1401 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 != 0 || R1413 + R1409 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1414 + R1410 != 0 || R1383 + R1380 + -1*R1415 + -1*R1411 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 != 0 || R1422 + R1417 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1423 + R1418 != 0 || R1383 + R1380 + -1*R1424 + -1*R1419 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 != 0 || R1432 + R1427 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1433 + R1428 != 0 || R1383 + R1380 + -1*R1434 + -1*R1429 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 != 0 || R1443 + R1437 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1444 + R1438 != 0 || R1383 + R1380 + -1*R1445 + -1*R1439 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 != 0 || R1456 + R1449 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1457 + R1450 != 0 || R1383 + R1380 + -1*R1458 + -1*R1451 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 != 0 || R1468 + R1463 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1485 + R1480 != 0 || R1486 + R1481 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1495 + R1490 != 0 || R1496 + R1491 + -1*R3199 + -1*R3193 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R3691 + R3684 != 0 || R3199 + R3193 + -1*R3692 + -1*R3685 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R27 = 0 || (R3752 = 0 && R3753 = 0)) && (R27 = 0 || (R3756 = 0 && R3757 = 0)) && (R27 = 0 || (R3758 = 0 && R3759 = 0)) && (R27 = 0 || (R3760 = 0 && R3761 = 0)) && (R27 = 0 || (R3762 = 0 && R3763 = 0)) && (R27 = 0 || (R3764 = 0 && R3765 = 0)) && (R27 = 0 || (R3766 = 0 && R3767 = 0)) && (R27 = 0 || (R3768 = 0 && R3769 = 0)) && (R27 = 0 || (R3770 = 0 && R3771 = 0)) && (R27 = 0 || (R3772 = 0 && R3773 = 0)) && (R27 = 0 || (R3774 = 0 && R3775 = 0)) && (R27 = 0 || (R3776 = 0 && R3777 = 0)) && (R27 = 0 || (R3778 = 0 && R3779 = 0)) && (R27 = 0 || (R3780 = 0 && R3781 = 0)) && (R27 = 0 || (R3782 = 0 && R3783 = 0)) && (R27 = 0 || (R3784 = 0 && R3785 = 0)) && (R27 = 0 || (R3786 = 0 && R3787 = 0)) && (R27 = 0 || (R3788 = 0 && R3789 = 0)) && (R27 = 0 || (R3790 = 0 && R3791 = 0)) && (R27 = 0 || (R3792 = 0 && R3793 = 0)) && (R27 = 0 || (R3794 = 0 && R3795 = 0)) && (R27 = 0 || (R3796 = 0 && R3797 = 0)) && (R27 = 0 || (R3798 = 0 && R3799 = 0)) && (R1339 + R1336 = 0 || (R1337 + R1334 = 0 && R1338 + R1335 = 0)) && (R1339 + R1336 = 0 || (R1342 + R1340 = 0 && R1343 + R1341 = 0)) && (R1339 + R1336 = 0 || (R1347 + R1344 = 0 && R1348 + R1345 = 0)) && (R1339 + R1336 = 0 || (R1353 + R1350 = 0 && R1354 + R1351 = 0)) && (R1339 + R1336 = 0 || (R1360 + R1356 = 0 && R1361 + R1357 = 0)) && (R1339 + R1336 = 0 || (R1369 + R1364 = 0 && R1370 + R1365 = 0)) && (R1371 + R1366 + R1459 + R1452 + R3695 + R3688 = 0 || R1363 + R1359 + R1447 + R1441 + R3203 + R3197 < 1) && (R1381 + R1378 = 0 || R1383 + R1380 < 1) && (R1387 + R1384 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1394 + R1390 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1396 + R1392 = 0 || R1383 + R1380 < 1) && (R1403 + R1398 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1405 + R1400 = 0 || R1383 + R1380 < 1) && (R1412 + R1408 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1414 + R1410 = 0 || R1383 + R1380 < 1) && (R1421 + R1416 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1423 + R1418 = 0 || R1383 + R1380 < 1) && (R1431 + R1426 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1433 + R1428 = 0 || R1383 + R1380 < 1) && (R1442 + R1436 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1444 + R1438 = 0 || R1383 + R1380 < 1) && (R1455 + R1448 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1457 + R1450 = 0 || R1383 + R1380 < 1) && (R1467 + R1462 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1471 + R1466 = 0 || (R1469 + R1464 = 0 && R1470 + R1465 = 0)) && (R1471 + R1466 = 0 || (R1487 + R1482 = 0 && R1488 + R1483 = 0)) && (R1471 + R1466 = 0 || (R1497 + R1492 = 0 && R1498 + R1493 = 0)) && (R1471 + R1466 = 0 || (R3693 + R3686 = 0 && R3694 + R3687 = 0)) && (R1485 + R1480 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R1495 + R1490 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0)) && (R3691 + R3684 = 0 || (R1383 + R1380 = 0 && R3199 + R3193 = 0));
// End of Parikh automata intersection problem
