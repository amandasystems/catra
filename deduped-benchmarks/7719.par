// Parikh automata intersection problem, generated by OSTRICH+
counter int R14, R1621, R1622, R1623, R1624, R1625, R1626, R1627, R1628, R1629, R1630, R1631, R1632, R1633, R1634, R1635, R1636, R1637, R1638, R1639, R1640, R1641, R1642, R1643, R1644, R1645, R1646, R1647, R1648, R1649, R1650, R1651, R1652, R1653, R1654, R1655, R1656, R1657, R1658, R1659, R1660, R1661, R1662, R1663, R1664, R1665, R1666, R1667, R1668, R1669, R1670, R1671, R1672, R1673, R1674, R1675, R1676, R1677, R1678, R1679, R1680, R1681, R1682, R1683, R1684, R1685, R1686, R1687, R1688, R1689, R1690, R1691, R1692, R1693, R1694, R1695, R1696, R1697, R1698, R1699, R17, R1700, R1701, R1702, R1703, R1704, R1705, R1706, R1707, R1708, R1709, R1710, R1711, R1712, R1713, R1714, R1715, R1716, R1717, R1718, R1719, R1720, R1721, R1722, R1723, R1724, R1725, R1726, R1727, R1728, R1729, R1730, R1731, R1732, R1733, R1734, R1735, R1736, R1737, R1738, R1739, R1740, R1741, R1742, R1743, R1744, R1745, R1746, R1747, R1748, R1749, R1750, R1751, R1752, R1753, R1754, R1755, R1756, R1757, R1758, R2, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R5, R6, R7, R857, R858, R859, R860, R861, R862, R863, R864, R865, R866, R867, R868, R869, R870, R871, R872, R873, R874, R875, R876, R877, R878, R879, R880, R881, R882, R883, R884, R885, R886, R887, R888, R889, R890, R891, R892, R893, R894, R895, R896, R897, R898, R899, R900, R901, R902, R903, R904, R905, R906, R907, R908, R909, R910, R911, R912, R913, R914, R915, R916, R917, R918, R919, R920, R921, R922;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining P48
automaton P48_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [32, 32] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R1688 += 1 };
  s0 -> s0 [0, 65535] { R1687 += 1, R1688 += 1 };
  s0 -> s2 [67, 67] { R1688 += 1 };
  s0 -> s1 [68, 65535] { R1688 += 1 };
  s1 -> s1 [0, 64] { R1688 += 1 };
  s1 -> s2 [67, 67] { R1688 += 1 };
  s1 -> s1 [68, 65535] { R1688 += 1 };
  s2 -> s2 [0, 64] { R1688 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R1688 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R1690 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R1689 += 1, R1690 += 1 };
  s1 -> s1 [0, 65535] { R1690 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R1692 += 1 };
  s0 -> s0 [0, 65535] { R1691 += 1, R1692 += 1 };
  s0 -> s2 [0, 65535] { R1692 += 1, R14 += 1 };
  s0 -> s3 [67, 67] { R1692 += 1 };
  s0 -> s1 [68, 65535] { R1692 += 1 };
  s1 -> s1 [0, 66] { R1692 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R1692 += 1 };
  s1 -> s1 [68, 65535] { R1692 += 1 };
  s2 -> s1 [0, 66] { R1692 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1692 += 1, R14 += 1 };
  s2 -> s3 [67, 67] { R1692 += 1 };
  s2 -> s1 [68, 65535] { R1692 += 1 };
  s3 -> s3 [0, 65535] { R1692 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R1694 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R1693 += 1, R1694 += 1 };
  s0 -> s2 [0, 65535] { R1694 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R1694 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R1694 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R1694 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R1694 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R1694 += 1 };
  s1 -> s1 [0, 65535] { R1694 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R1694 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R1694 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R1694 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R1694 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R1694 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R1694 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R1694 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1694 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R1696 += 1, R26 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R1696 += 1, R25 += 1, R26 += 1 };
  s0 -> s0 [0, 65535] { R1695 += 1, R1696 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1696 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R1696 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1696 += 1, R26 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R1696 += 1, R25 += 1, R26 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1696 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R1698 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R1698 += 1, R27 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R1697 += 1, R1698 += 1 };
  s0 -> s3 [9, 13] { R1698 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R1698 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R1698 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R1698 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R1698 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R1698 += 1 };
  s2 -> s1 [0, 8] { R1698 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R1698 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R1698 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R1698 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R1698 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R1698 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R1698 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1698 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R1699 += 1, R1700 += 1 };
  s0 -> s1 [0, 65535] { R1700 += 1, R30 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R1700 += 1, R29 += 1, R30 += 1 };
  s1 -> s4 [0, 65535] { R1700 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1700 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1700 += 1, R30 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R1700 += 1, R29 += 1, R30 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1700 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R1702 += 1, R1630 += 1 };
  s0 -> s0 [0, 65535] { R1701 += 1, R1702 += 1 };
  s0 -> s2 [0, 65535] { R1702 += 1, R1629 += 1, R1630 += 1 };
  s0 -> s1 [68, 65535] { R1702 += 1, R1630 += 1 };
  s1 -> s1 [0, 66] { R1702 += 1, R1630 += 1 };
  s1 -> s1 [0, 65535] { R1702 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [68, 65535] { R1702 += 1, R1630 += 1 };
  s2 -> s1 [0, 66] { R1702 += 1, R1630 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1702 += 1, R1629 += 1, R1630 += 1 };
  s2 -> s1 [68, 65535] { R1702 += 1, R1630 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R1704 += 1, R1632 += 1, R21 += 1 };
  s0 -> s2 [0, 65535] { R1704 += 1, R1631 += 1, R1632 += 1 };
  s0 -> s0 [0, 65535] { R1703 += 1, R1704 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1704 += 1, R1632 += 1, R21 += 1 };
  s1 -> s4 [0, 65535] { R1704 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1704 += 1, R1632 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R1704 += 1, R1631 += 1, R1632 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1704 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R1706 += 1, R1634 += 1 };
  s0 -> s0 [0, 65535] { R1705 += 1, R1706 += 1 };
  s0 -> s2 [0, 65535] { R1706 += 1, R1633 += 1, R1634 += 1 };
  s0 -> s1 [70, 65535] { R1706 += 1, R1634 += 1 };
  s1 -> s1 [0, 67] { R1706 += 1, R1634 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1706 += 1 };
  s1 -> s1 [70, 65535] { R1706 += 1, R1634 += 1 };
  s2 -> s1 [0, 67] { R1706 += 1, R1634 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1706 += 1, R1633 += 1, R1634 += 1 };
  s2 -> s1 [70, 65535] { R1706 += 1, R1634 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s0 [0, 65535] { R1707 += 1, R1708 += 1 };
  s0 -> s1 [0, 65535] { R1708 += 1, R1636 += 1, R858 += 1 };
  s0 -> s2 [0, 65535] { R1708 += 1, R1635 += 1, R1636 += 1 };
  s1 -> s4 [0, 65535] { R1708 += 1 };
  s1 -> s1 [0, 65535] { R1708 += 1, R1636 += 1, R858 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1708 += 1, R1636 += 1, R858 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R1708 += 1, R1635 += 1, R1636 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1708 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R1710 += 1, R1638 += 1 };
  s0 -> s2 [0, 65535] { R1710 += 1, R1637 += 1, R1638 += 1 };
  s0 -> s0 [0, 65535] { R1709 += 1, R1710 += 1 };
  s0 -> s3 [0, 65535] { R1710 += 1, R1638 += 1, R860 += 1 };
  s0 -> s1 [71, 65535] { R1710 += 1, R1638 += 1 };
  s1 -> s1 [0, 69] { R1710 += 1, R1638 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R1710 += 1 };
  s1 -> s1 [71, 65535] { R1710 += 1, R1638 += 1 };
  s2 -> s1 [0, 69] { R1710 += 1, R1638 += 1 };
  s2 -> s2 [0, 65535] { R1710 += 1, R1637 += 1, R1638 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R1710 += 1, R1638 += 1, R860 += 1 };
  s2 -> s1 [71, 65535] { R1710 += 1, R1638 += 1 };
  s3 -> s1 [0, 69] { R1710 += 1, R1638 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R1710 += 1 };
  s3 -> s3 [0, 65535] { R1710 += 1, R1638 += 1, R860 += 1 };
  s3 -> s1 [71, 65535] { R1710 += 1, R1638 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R1710 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R1712 += 1, R1639 += 1, R1640 += 1 };
  s0 -> s0 [0, 65535] { R1711 += 1, R1712 += 1 };
  s0 -> s2 [0, 65535] { R1712 += 1, R1640 += 1, R864 += 1, R865 += 1 };
  s0 -> s3 [0, 65535] { R1712 += 1, R1640 += 1, R865 += 1, R866 += 1 };
  s1 -> s1 [0, 65535] { R1712 += 1, R1639 += 1, R1640 += 1 };
  s1 -> s2 [0, 65535] { R1712 += 1, R1640 += 1, R864 += 1, R865 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1712 += 1, R1640 += 1, R865 += 1, R866 += 1 };
  s2 -> s4 [0, 65535] { R1712 += 1 };
  s2 -> s2 [0, 65535] { R1712 += 1, R1640 += 1, R864 += 1, R865 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R1712 += 1, R1640 += 1, R865 += 1, R866 += 1 };
  s3 -> s4 [0, 65535] { R1712 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1712 += 1, R1640 += 1, R865 += 1, R866 += 1 };
  s3 -> s6 [0, 65535] { R1712 += 1, R1640 += 1 };
  s4 -> s4 [0, 65535] { R1712 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R1712 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1712 += 1, R1640 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R1714 += 1, R1642 += 1, R870 += 1 };
  s0 -> s2 [0, 65535] { R1714 += 1, R1642 += 1, R869 += 1, R870 += 1 };
  s0 -> s0 [0, 65535] { R1713 += 1, R1714 += 1 };
  s0 -> s3 [0, 65535] { R1714 += 1, R1641 += 1, R1642 += 1 };
  s0 -> s4 [70, 70] { R1714 += 1, R1642 += 1, R870 += 1 };
  s0 -> s5 [70, 70] { R1714 += 1, R1642 += 1, R870 += 1 };
  s0 -> s1 [75, 65535] { R1714 += 1, R1642 += 1, R870 += 1 };
  s1 -> s1 [0, 69] { R1714 += 1, R1642 += 1, R870 += 1 };
  s1 -> s6 [0, 65535] { R1714 += 1 };
  s1 -> s1 [0, 65535] { R1714 += 1, R1642 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R1714 += 1, R1642 += 1, R870 += 1 };
  s1 -> s5 [70, 70] { R1714 += 1, R1642 += 1, R870 += 1 };
  s1 -> s1 [75, 65535] { R1714 += 1, R1642 += 1, R870 += 1 };
  s2 -> s1 [0, 69] { R1714 += 1, R1642 += 1, R870 += 1 };
  s2 -> s2 [0, 65535] { R1714 += 1, R1642 += 1, R869 += 1, R870 += 1 };
  s2 -> s6 [0, 65535] { R1714 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R1714 += 1, R1642 += 1, R870 += 1 };
  s2 -> s5 [70, 70] { R1714 += 1, R1642 += 1, R870 += 1 };
  s2 -> s1 [75, 65535] { R1714 += 1, R1642 += 1, R870 += 1 };
  s3 -> s1 [0, 69] { R1714 += 1, R1642 += 1, R870 += 1 };
  s3 -> s2 [0, 65535] { R1714 += 1, R1642 += 1, R869 += 1, R870 += 1 };
  s3 -> s3 [0, 65535] { R1714 += 1, R1641 += 1, R1642 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [70, 70] { R1714 += 1, R1642 += 1, R870 += 1 };
  s3 -> s5 [70, 70] { R1714 += 1, R1642 += 1, R870 += 1 };
  s3 -> s1 [75, 65535] { R1714 += 1, R1642 += 1, R870 += 1 };
  s4 -> s4 [0, 65535] { R1714 += 1, R1642 += 1 };
  s4 -> s6 [0, 65535] { R1714 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 70] { R1714 += 1, R1642 += 1, R870 += 1 };
  s5 -> s5 [0, 65535] { R1714 += 1, R1642 += 1 };
  s5 -> s6 [0, 65535] { R1714 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [75, 65535] { R1714 += 1, R1642 += 1, R870 += 1 };
  s6 -> s6 [0, 65535] { R1714 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R1716 += 1, R1644 += 1, R874 += 1 };
  s0 -> s2 [0, 65535] { R1716 += 1, R1643 += 1, R1644 += 1 };
  s0 -> s0 [0, 65535] { R1715 += 1, R1716 += 1 };
  s0 -> s3 [0, 65535] { R1716 += 1, R1644 += 1, R873 += 1, R874 += 1 };
  s0 -> s4 [70, 70] { R1716 += 1, R1644 += 1, R874 += 1 };
  s0 -> s1 [71, 65535] { R1716 += 1, R1644 += 1, R874 += 1 };
  s1 -> s1 [0, 69] { R1716 += 1, R1644 += 1, R874 += 1 };
  s1 -> s4 [70, 70] { R1716 += 1, R1644 += 1, R874 += 1 };
  s1 -> s1 [71, 65535] { R1716 += 1, R1644 += 1, R874 += 1 };
  s2 -> s1 [0, 69] { R1716 += 1, R1644 += 1, R874 += 1 };
  s2 -> s2 [0, 65535] { R1716 += 1, R1643 += 1, R1644 += 1 };
  s2 -> s3 [0, 65535] { R1716 += 1, R1644 += 1, R873 += 1, R874 += 1 };
  s2 -> s4 [70, 70] { R1716 += 1, R1644 += 1, R874 += 1 };
  s2 -> s1 [71, 65535] { R1716 += 1, R1644 += 1, R874 += 1 };
  s3 -> s1 [0, 69] { R1716 += 1, R1644 += 1, R874 += 1 };
  s3 -> s3 [0, 65535] { R1716 += 1, R1644 += 1, R873 += 1, R874 += 1 };
  s3 -> s4 [70, 70] { R1716 += 1, R1644 += 1, R874 += 1 };
  s3 -> s1 [71, 65535] { R1716 += 1, R1644 += 1, R874 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1716 += 1, R1644 += 1, R874 += 1 };
  s4 -> s6 [0, 65535] { R1716 += 1, R1644 += 1 };
  s4 -> s7 [0, 65535] { R1716 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1716 += 1, R1644 += 1 };
  s6 -> s7 [0, 65535] { R1716 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1716 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65535] { R1718 += 1, R1646 += 1, R878 += 1, R879 += 1 };
  s0 -> s0 [0, 65535] { R1717 += 1, R1718 += 1 };
  s0 -> s2 [0, 65535] { R1718 += 1, R1645 += 1, R1646 += 1 };
  s0 -> s3 [0, 65535] { R1718 += 1, R1646 += 1, R879 += 1, R880 += 1 };
  s1 -> s1 [0, 65535] { R1718 += 1, R1646 += 1, R878 += 1, R879 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R1718 += 1, R1646 += 1, R879 += 1, R880 += 1 };
  s1 -> s6 [0, 65535] { R1718 += 1 };
  s2 -> s1 [0, 65535] { R1718 += 1, R1646 += 1, R878 += 1, R879 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1718 += 1, R1645 += 1, R1646 += 1 };
  s2 -> s3 [0, 65535] { R1718 += 1, R1646 += 1, R879 += 1, R880 += 1 };
  s3 -> s4 [0, 65535] { R1718 += 1, R1646 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1718 += 1, R1646 += 1, R879 += 1, R880 += 1 };
  s3 -> s6 [0, 65535] { R1718 += 1 };
  s4 -> s4 [0, 65535] { R1718 += 1, R1646 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1718 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1718 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R1720 += 1, R1648 += 1, R885 += 1 };
  s0 -> s2 [0, 65535] { R1720 += 1, R1648 += 1, R884 += 1, R885 += 1 };
  s0 -> s3 [0, 65535] { R1720 += 1, R1647 += 1, R1648 += 1 };
  s0 -> s4 [0, 65535] { R1720 += 1, R1648 += 1, R885 += 1, R886 += 1 };
  s0 -> s0 [0, 65535] { R1719 += 1, R1720 += 1 };
  s0 -> s1 [71, 65535] { R1720 += 1, R1648 += 1, R885 += 1 };
  s1 -> s1 [0, 69] { R1720 += 1, R1648 += 1, R885 += 1 };
  s1 -> s5 [0, 65535] { R1720 += 1 };
  s1 -> s1 [0, 65535] { R1720 += 1, R1648 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [71, 65535] { R1720 += 1, R1648 += 1, R885 += 1 };
  s2 -> s1 [0, 69] { R1720 += 1, R1648 += 1, R885 += 1 };
  s2 -> s2 [0, 65535] { R1720 += 1, R1648 += 1, R884 += 1, R885 += 1 };
  s2 -> s5 [0, 65535] { R1720 += 1 };
  s2 -> s4 [0, 65535] { R1720 += 1, R1648 += 1, R885 += 1, R886 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s1 [71, 65535] { R1720 += 1, R1648 += 1, R885 += 1 };
  s3 -> s1 [0, 69] { R1720 += 1, R1648 += 1, R885 += 1 };
  s3 -> s2 [0, 65535] { R1720 += 1, R1648 += 1, R884 += 1, R885 += 1 };
  s3 -> s3 [0, 65535] { R1720 += 1, R1647 += 1, R1648 += 1 };
  s3 -> s4 [0, 65535] { R1720 += 1, R1648 += 1, R885 += 1, R886 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s1 [71, 65535] { R1720 += 1, R1648 += 1, R885 += 1 };
  s4 -> s1 [0, 69] { R1720 += 1, R1648 += 1, R885 += 1 };
  s4 -> s5 [0, 65535] { R1720 += 1 };
  s4 -> s6 [0, 65535] { R1720 += 1, R1648 += 1 };
  s4 -> s4 [0, 65535] { R1720 += 1, R1648 += 1, R885 += 1, R886 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s1 [71, 65535] { R1720 += 1, R1648 += 1, R885 += 1 };
  s5 -> s5 [0, 65535] { R1720 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R1720 += 1 };
  s6 -> s6 [0, 65535] { R1720 += 1, R1648 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s0 -> s2 [0, 65535] { R1722 += 1, R1650 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s0 -> s0 [0, 65535] { R1721 += 1, R1722 += 1 };
  s0 -> s3 [0, 65535] { R1722 += 1, R1649 += 1, R1650 += 1 };
  s0 -> s4 [0, 65535] { R1722 += 1, R1650 += 1, R891 += 1, R892 += 1 };
  s0 -> s1 [71, 65535] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s1 -> s1 [0, 69] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s1 -> s7 [0, 65535] { R1722 += 1, R1650 += 1 };
  s1 -> s1 [0, 65535] { R1722 += 1, R1650 += 1, R892 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R1722 += 1 };
  s1 -> s1 [71, 65535] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s2 -> s1 [0, 69] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s2 -> s7 [0, 65535] { R1722 += 1, R1650 += 1 };
  s2 -> s2 [0, 65535] { R1722 += 1, R1650 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R1722 += 1 };
  s2 -> s1 [71, 65535] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s3 -> s1 [0, 69] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s3 -> s2 [0, 65535] { R1722 += 1, R1650 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1722 += 1, R1649 += 1, R1650 += 1 };
  s3 -> s4 [0, 65535] { R1722 += 1, R1650 += 1, R891 += 1, R892 += 1 };
  s3 -> s1 [71, 65535] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s4 -> s1 [0, 69] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s4 -> s2 [0, 65535] { R1722 += 1, R1650 += 1, R892 += 1, R893 += 1, R894 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R1722 += 1 };
  s4 -> s4 [0, 65535] { R1722 += 1, R1650 += 1, R891 += 1, R892 += 1 };
  s4 -> s1 [71, 65535] { R1722 += 1, R1650 += 1, R892 += 1, R894 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1722 += 1 };
  s7 -> s7 [0, 65535] { R1722 += 1, R1650 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1722 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R1724 += 1, R1652 += 1, R900 += 1, R901 += 1 };
  s0 -> s0 [0, 65535] { R1723 += 1, R1724 += 1 };
  s0 -> s2 [0, 65535] { R1724 += 1, R1651 += 1, R1652 += 1 };
  s0 -> s3 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s0 -> s4 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s1 -> s1 [0, 65535] { R1724 += 1, R1652 += 1, R900 += 1, R901 += 1 };
  s1 -> s3 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s1 -> s4 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R1724 += 1 };
  s2 -> s1 [0, 65535] { R1724 += 1, R1652 += 1, R900 += 1, R901 += 1 };
  s2 -> s2 [0, 65535] { R1724 += 1, R1651 += 1, R1652 += 1 };
  s2 -> s3 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s2 -> s4 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s5 [0, 65535] { R1724 += 1, R1652 += 1 };
  s3 -> s8 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1 };
  s3 -> s3 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R1724 += 1 };
  s4 -> s5 [0, 65535] { R1724 += 1, R1652 += 1 };
  s4 -> s3 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1, R903 += 1, R904 += 1 };
  s4 -> s4 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1, R902 += 1, R903 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R1724 += 1 };
  s5 -> s5 [0, 65535] { R1724 += 1, R1652 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R1724 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1724 += 1 };
  s8 -> s5 [0, 65535] { R1724 += 1, R1652 += 1 };
  s8 -> s8 [0, 65535] { R1724 += 1, R1652 += 1, R901 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R1724 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 70] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s0 -> s0 [0, 65535] { R1725 += 1, R1726 += 1 };
  s0 -> s2 [0, 65535] { R1726 += 1, R1654 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s0 -> s3 [0, 65535] { R1726 += 1, R1654 += 1, R909 += 1, R910 += 1 };
  s0 -> s4 [0, 65535] { R1726 += 1, R1653 += 1, R1654 += 1 };
  s0 -> s1 [74, 65535] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s1 -> s1 [0, 70] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s1 -> s6 [0, 65535] { R1726 += 1 };
  s1 -> s7 [0, 65535] { R1726 += 1, R1654 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1726 += 1, R1654 += 1, R910 += 1 };
  s1 -> s1 [74, 65535] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s2 -> s1 [0, 70] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s2 -> s6 [0, 65535] { R1726 += 1 };
  s2 -> s7 [0, 65535] { R1726 += 1, R1654 += 1 };
  s2 -> s2 [0, 65535] { R1726 += 1, R1654 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [74, 65535] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s3 -> s1 [0, 70] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s3 -> s6 [0, 65535] { R1726 += 1 };
  s3 -> s2 [0, 65535] { R1726 += 1, R1654 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1726 += 1, R1654 += 1, R909 += 1, R910 += 1 };
  s3 -> s1 [74, 65535] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s4 -> s1 [0, 70] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s4 -> s2 [0, 65535] { R1726 += 1, R1654 += 1, R910 += 1, R911 += 1, R912 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R1726 += 1, R1654 += 1, R909 += 1, R910 += 1 };
  s4 -> s4 [0, 65535] { R1726 += 1, R1653 += 1, R1654 += 1 };
  s4 -> s1 [74, 65535] { R1726 += 1, R1654 += 1, R910 += 1, R912 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1726 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R1726 += 1 };
  s7 -> s7 [0, 65535] { R1726 += 1, R1654 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R1728 += 1, R1656 += 1, R918 += 1, R919 += 1 };
  s0 -> s2 [0, 65535] { R1728 += 1, R1655 += 1, R1656 += 1 };
  s0 -> s3 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s0 -> s0 [0, 65535] { R1727 += 1, R1728 += 1 };
  s0 -> s4 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s1 -> s1 [0, 65535] { R1728 += 1, R1656 += 1, R918 += 1, R919 += 1 };
  s1 -> s3 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s1 -> s7 [0, 65535] { R1728 += 1 };
  s2 -> s1 [0, 65535] { R1728 += 1, R1656 += 1, R918 += 1, R919 += 1 };
  s2 -> s2 [0, 65535] { R1728 += 1, R1655 += 1, R1656 += 1 };
  s2 -> s3 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s3 -> s8 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1 };
  s3 -> s3 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1728 += 1, R1656 += 1 };
  s3 -> s7 [0, 65535] { R1728 += 1 };
  s4 -> s3 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1, R921 += 1, R922 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1, R920 += 1, R921 += 1 };
  s4 -> s6 [0, 65535] { R1728 += 1, R1656 += 1 };
  s4 -> s7 [0, 65535] { R1728 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1728 += 1, R1656 += 1 };
  s6 -> s7 [0, 65535] { R1728 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R1728 += 1 };
  s8 -> s8 [0, 65535] { R1728 += 1, R1656 += 1, R919 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R1728 += 1, R1656 += 1 };
  s8 -> s7 [0, 65535] { R1728 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 65535] { R1730 += 1, R1658 += 1 };
  s0 -> s2 [0, 65535] { R1730 += 1, R1657 += 1, R1658 += 1 };
  s0 -> s0 [0, 65535] { R1729 += 1, R1730 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R1730 += 1 };
  s1 -> s1 [0, 65535] { R1730 += 1, R1658 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R1730 += 1, R1658 += 1 };
  s2 -> s2 [0, 65535] { R1730 += 1, R1657 += 1, R1658 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1730 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R1732 += 1, R1659 += 1, R1660 += 1 };
  s0 -> s2 [0, 65535] { R1732 += 1, R1660 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R1731 += 1, R1732 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R1732 += 1, R1659 += 1, R1660 += 1 };
  s1 -> s2 [0, 65535] { R1732 += 1, R1660 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R1732 += 1 };
  s2 -> s2 [0, 65535] { R1732 += 1, R1660 += 1, R22 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R1732 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 66] { R1734 += 1, R1662 += 1 };
  s0 -> s0 [0, 65535] { R1733 += 1, R1734 += 1 };
  s0 -> s2 [0, 65535] { R1734 += 1, R1661 += 1, R1662 += 1 };
  s0 -> s3 [67, 67] { R1734 += 1, R1662 += 1 };
  s0 -> s4 [67, 67] { R1734 += 1, R1662 += 1 };
  s0 -> s5 [70, 70] { R1734 += 1, R1662 += 1 };
  s0 -> s1 [71, 65535] { R1734 += 1, R1662 += 1 };
  s1 -> s1 [0, 66] { R1734 += 1, R1662 += 1 };
  s1 -> s3 [67, 67] { R1734 += 1, R1662 += 1 };
  s1 -> s4 [67, 67] { R1734 += 1, R1662 += 1 };
  s1 -> s5 [70, 70] { R1734 += 1, R1662 += 1 };
  s1 -> s1 [71, 65535] { R1734 += 1, R1662 += 1 };
  s2 -> s1 [0, 66] { R1734 += 1, R1662 += 1 };
  s2 -> s2 [0, 65535] { R1734 += 1, R1661 += 1, R1662 += 1 };
  s2 -> s3 [67, 67] { R1734 += 1, R1662 += 1 };
  s2 -> s4 [67, 67] { R1734 += 1, R1662 += 1 };
  s2 -> s5 [70, 70] { R1734 += 1, R1662 += 1 };
  s2 -> s1 [71, 65535] { R1734 += 1, R1662 += 1 };
  s4 -> s4 [0, 67] { R1734 += 1, R1662 += 1 };
  s4 -> s8 [70, 70] { R1734 += 1, R1662 += 1 };
  s4 -> s4 [71, 65535] { R1734 += 1, R1662 += 1 };
  s5 -> s5 [0, 66] { R1734 += 1, R1662 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1734 += 1 };
  s5 -> s7 [67, 67] { R1734 += 1, R1662 += 1 };
  s5 -> s8 [67, 67] { R1734 += 1, R1662 += 1 };
  s5 -> s5 [70, 65535] { R1734 += 1, R1662 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R1734 += 1 };
  s8 -> s8 [0, 67] { R1734 += 1, R1662 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R1734 += 1 };
  s8 -> s8 [70, 65535] { R1734 += 1, R1662 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 66] { R1736 += 1, R1664 += 1, R857 += 1 };
  s0 -> s2 [0, 65535] { R1736 += 1, R1663 += 1, R1664 += 1 };
  s0 -> s0 [0, 65535] { R1735 += 1, R1736 += 1 };
  s0 -> s3 [67, 67] { R1736 += 1, R1664 += 1, R857 += 1 };
  s0 -> s4 [67, 67] { R1736 += 1, R1664 += 1, R857 += 1 };
  s0 -> s1 [68, 65535] { R1736 += 1, R1664 += 1, R857 += 1 };
  s1 -> s1 [0, 66] { R1736 += 1, R1664 += 1, R857 += 1 };
  s1 -> s1 [0, 65535] { R1736 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R1736 += 1, R1664 += 1, R857 += 1 };
  s1 -> s4 [67, 67] { R1736 += 1, R1664 += 1, R857 += 1 };
  s1 -> s1 [68, 65535] { R1736 += 1, R1664 += 1, R857 += 1 };
  s2 -> s1 [0, 66] { R1736 += 1, R1664 += 1, R857 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1736 += 1, R1663 += 1, R1664 += 1 };
  s2 -> s3 [67, 67] { R1736 += 1, R1664 += 1, R857 += 1 };
  s2 -> s4 [67, 67] { R1736 += 1, R1664 += 1, R857 += 1 };
  s2 -> s1 [68, 65535] { R1736 += 1, R1664 += 1, R857 += 1 };
  s3 -> s6 [0, 65535] { R1736 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1736 += 1, R1664 += 1, R857 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1736 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1736 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 66] { R1738 += 1, R1666 += 1, R859 += 1 };
  s0 -> s0 [0, 65535] { R1737 += 1, R1738 += 1 };
  s0 -> s2 [0, 65535] { R1738 += 1, R1665 += 1, R1666 += 1 };
  s0 -> s3 [67, 67] { R1738 += 1, R1666 += 1, R859 += 1 };
  s0 -> s4 [67, 67] { R1738 += 1, R1666 += 1, R859 += 1 };
  s0 -> s1 [68, 65535] { R1738 += 1, R1666 += 1, R859 += 1 };
  s1 -> s1 [0, 66] { R1738 += 1, R1666 += 1, R859 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1738 += 1 };
  s1 -> s3 [67, 67] { R1738 += 1, R1666 += 1, R859 += 1 };
  s1 -> s4 [67, 67] { R1738 += 1, R1666 += 1, R859 += 1 };
  s1 -> s1 [68, 65535] { R1738 += 1, R1666 += 1, R859 += 1 };
  s2 -> s1 [0, 66] { R1738 += 1, R1666 += 1, R859 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1738 += 1, R1665 += 1, R1666 += 1 };
  s2 -> s3 [67, 67] { R1738 += 1, R1666 += 1, R859 += 1 };
  s2 -> s4 [67, 67] { R1738 += 1, R1666 += 1, R859 += 1 };
  s2 -> s1 [68, 65535] { R1738 += 1, R1666 += 1, R859 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R1738 += 1, R1666 += 1, R859 += 1 };
  s3 -> s6 [0, 65535] { R1738 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1738 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1738 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 66] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s0 -> s0 [0, 65535] { R1739 += 1, R1740 += 1 };
  s0 -> s2 [0, 65535] { R1740 += 1, R1667 += 1, R1668 += 1 };
  s0 -> s3 [67, 67] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s0 -> s4 [67, 67] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s0 -> s1 [68, 65535] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s1 -> s1 [0, 66] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s1 -> s1 [0, 65535] { R1740 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s1 -> s4 [67, 67] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s1 -> s1 [68, 65535] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s2 -> s1 [0, 66] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s2 -> s2 [0, 65535] { R1740 += 1, R1667 += 1, R1668 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s2 -> s4 [67, 67] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s2 -> s1 [68, 65535] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s3 -> s6 [0, 65535] { R1740 += 1 };
  s3 -> s3 [0, 65535] { R1740 += 1, R1668 += 1, R861 += 1, R862 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1740 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1740 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 66] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s0 -> s2 [0, 65535] { R1742 += 1, R1669 += 1, R1670 += 1 };
  s0 -> s0 [0, 65535] { R1741 += 1, R1742 += 1 };
  s0 -> s3 [67, 67] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s0 -> s4 [67, 67] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s0 -> s1 [68, 65535] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s1 -> s1 [0, 66] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s1 -> s1 [0, 65535] { R1742 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s1 -> s4 [67, 67] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s1 -> s1 [68, 65535] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s2 -> s1 [0, 66] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s2 -> s2 [0, 65535] { R1742 += 1, R1669 += 1, R1670 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s2 -> s4 [67, 67] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s2 -> s1 [68, 65535] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s3 -> s3 [0, 65535] { R1742 += 1, R1670 += 1, R867 += 1, R868 += 1 };
  s3 -> s6 [0, 65535] { R1742 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1742 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1742 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 66] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s0 -> s0 [0, 65535] { R1743 += 1, R1744 += 1 };
  s0 -> s2 [0, 65535] { R1744 += 1, R1671 += 1, R1672 += 1 };
  s0 -> s3 [67, 67] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s0 -> s4 [67, 67] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s0 -> s1 [68, 65535] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s1 -> s1 [0, 66] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s1 -> s1 [0, 65535] { R1744 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s1 -> s4 [67, 67] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s1 -> s1 [68, 65535] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s2 -> s1 [0, 66] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s2 -> s2 [0, 65535] { R1744 += 1, R1671 += 1, R1672 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s2 -> s4 [67, 67] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s2 -> s1 [68, 65535] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s3 -> s3 [0, 65535] { R1744 += 1, R1672 += 1, R871 += 1, R872 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1744 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1744 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1744 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 66] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s0 -> s0 [0, 65535] { R1745 += 1, R1746 += 1 };
  s0 -> s2 [0, 65535] { R1746 += 1, R1673 += 1, R1674 += 1 };
  s0 -> s3 [67, 67] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s0 -> s4 [67, 67] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s0 -> s1 [68, 65535] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s1 -> s1 [0, 66] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s1 -> s1 [0, 65535] { R1746 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s1 -> s4 [67, 67] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s1 -> s1 [68, 65535] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s2 -> s1 [0, 66] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1746 += 1, R1673 += 1, R1674 += 1 };
  s2 -> s3 [67, 67] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s2 -> s4 [67, 67] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s2 -> s1 [68, 65535] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s3 -> s3 [0, 65535] { R1746 += 1, R1674 += 1, R875 += 1, R876 += 1 };
  s3 -> s6 [0, 65535] { R1746 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1746 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1746 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 66] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s0 -> s0 [0, 65535] { R1747 += 1, R1748 += 1 };
  s0 -> s2 [0, 65535] { R1748 += 1, R1675 += 1, R1676 += 1 };
  s0 -> s3 [67, 67] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s0 -> s4 [67, 67] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s0 -> s1 [68, 65535] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s1 -> s1 [0, 66] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1748 += 1 };
  s1 -> s3 [67, 67] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s1 -> s4 [67, 67] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s1 -> s1 [68, 65535] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s2 -> s1 [0, 66] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R1748 += 1, R1675 += 1, R1676 += 1 };
  s2 -> s3 [67, 67] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s2 -> s4 [67, 67] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s2 -> s1 [68, 65535] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s3 -> s3 [0, 65535] { R1748 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1748 += 1, R1676 += 1, R881 += 1, R882 += 1 };
  s4 -> s5 [0, 65535] { R1748 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1748 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 66] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s0 -> s2 [0, 65535] { R1750 += 1, R1677 += 1, R1678 += 1 };
  s0 -> s0 [0, 65535] { R1749 += 1, R1750 += 1 };
  s0 -> s3 [67, 67] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s0 -> s4 [67, 67] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s0 -> s1 [68, 65535] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s1 -> s1 [0, 66] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1750 += 1 };
  s1 -> s3 [67, 67] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s1 -> s4 [67, 67] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s1 -> s1 [68, 65535] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s2 -> s1 [0, 66] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1750 += 1, R1677 += 1, R1678 += 1 };
  s2 -> s3 [67, 67] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s2 -> s4 [67, 67] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s2 -> s1 [68, 65535] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s3 -> s3 [0, 65535] { R1750 += 1, R1678 += 1, R887 += 1, R888 += 1 };
  s3 -> s6 [0, 65535] { R1750 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1750 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1750 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 66] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s0 -> s2 [0, 65535] { R1752 += 1, R1679 += 1, R1680 += 1 };
  s0 -> s0 [0, 65535] { R1751 += 1, R1752 += 1 };
  s0 -> s3 [67, 67] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s0 -> s4 [67, 67] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s0 -> s1 [68, 65535] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s1 -> s1 [0, 66] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1752 += 1 };
  s1 -> s3 [67, 67] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s1 -> s4 [67, 67] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s1 -> s1 [68, 65535] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s2 -> s1 [0, 66] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s2 -> s2 [0, 65535] { R1752 += 1, R1679 += 1, R1680 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s2 -> s4 [67, 67] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s2 -> s1 [68, 65535] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s3 -> s3 [0, 65535] { R1752 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R1752 += 1 };
  s4 -> s4 [0, 65535] { R1752 += 1, R1680 += 1, R895 += 1, R896 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R1752 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 66] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s0 -> s2 [0, 65535] { R1754 += 1, R1681 += 1, R1682 += 1 };
  s0 -> s0 [0, 65535] { R1753 += 1, R1754 += 1 };
  s0 -> s3 [67, 67] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s0 -> s4 [67, 67] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s0 -> s1 [68, 65535] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s1 -> s1 [0, 66] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R1754 += 1 };
  s1 -> s3 [67, 67] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s1 -> s4 [67, 67] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s1 -> s1 [68, 65535] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s2 -> s1 [0, 66] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s2 -> s2 [0, 65535] { R1754 += 1, R1681 += 1, R1682 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s2 -> s4 [67, 67] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s2 -> s1 [68, 65535] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R1754 += 1 };
  s4 -> s5 [0, 65535] { R1754 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R1754 += 1, R1682 += 1, R905 += 1, R906 += 1 };
  s5 -> s5 [0, 65535] { R1754 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 66] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s0 -> s2 [0, 65535] { R1756 += 1, R1683 += 1, R1684 += 1 };
  s0 -> s0 [0, 65535] { R1755 += 1, R1756 += 1 };
  s0 -> s3 [67, 67] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s0 -> s4 [67, 67] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s0 -> s1 [68, 65535] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s1 -> s1 [0, 66] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R1756 += 1 };
  s1 -> s3 [67, 67] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s1 -> s4 [67, 67] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s1 -> s1 [68, 65535] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s2 -> s1 [0, 66] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R1756 += 1, R1683 += 1, R1684 += 1 };
  s2 -> s3 [67, 67] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s2 -> s4 [67, 67] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s2 -> s1 [68, 65535] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R1756 += 1 };
  s3 -> s3 [0, 65535] { R1756 += 1, R1684 += 1, R913 += 1, R914 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R1756 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R1756 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s0 -> s2 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s0 -> s3 [0, 66] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s0 -> s4 [0, 65535] { R1758 += 1, R1685 += 1, R1686 += 1 };
  s0 -> s0 [0, 65535] { R1757 += 1, R1758 += 1 };
  s0 -> s5 [67, 67] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s0 -> s6 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s0 -> s7 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s0 -> s8 [67, 67] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s0 -> s9 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s0 -> s10 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s0 -> s1 [68, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s0 -> s2 [68, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s0 -> s3 [68, 65535] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s0 -> s11 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s0 -> s12 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s0 -> s1 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s1 -> s1 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s1 -> s7 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s1 -> s10 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s1 -> s1 [68, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s1 -> s11 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s1 -> s12 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s1 -> s1 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s2 -> s1 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s2 -> s2 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s2 -> s6 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s2 -> s7 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s2 -> s9 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s2 -> s10 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s2 -> s1 [68, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s2 -> s2 [68, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s2 -> s11 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s2 -> s12 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s2 -> s1 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s3 -> s1 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s3 -> s2 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s3 -> s3 [0, 66] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s3 -> s5 [67, 67] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s3 -> s6 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s3 -> s7 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s3 -> s8 [67, 67] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s3 -> s9 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s3 -> s10 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s3 -> s1 [68, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s3 -> s2 [68, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s3 -> s3 [68, 65535] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s3 -> s11 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s3 -> s12 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s3 -> s1 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s4 -> s1 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s4 -> s2 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s4 -> s3 [0, 66] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s4 -> s4 [0, 65535] { R1758 += 1, R1685 += 1, R1686 += 1 };
  s4 -> s5 [67, 67] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s4 -> s6 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s4 -> s7 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s4 -> s8 [67, 67] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s4 -> s9 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s4 -> s10 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s4 -> s1 [68, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s4 -> s2 [68, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s4 -> s3 [68, 65535] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s4 -> s11 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s4 -> s12 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s4 -> s1 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s7 -> s7 [0, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s7 -> s26 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s7 -> s16 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s7 -> s7 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s8 -> s7 [0, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s8 -> s8 [0, 65535] { R1758 += 1, R1686 += 1, R1621 += 1, R1622 += 1 };
  s8 -> s9 [0, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s8 -> s26 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s8 -> s16 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s8 -> s7 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s9 -> s7 [0, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s9 -> s9 [0, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1623 += 1, R1624 += 1 };
  s9 -> s26 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s9 -> s16 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s9 -> s7 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s11 -> s11 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s11 -> s26 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s11 -> s27 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s11 -> s11 [68, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s11 -> s18 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s11 -> s11 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s12 -> s13 [0, 66] { R1758 += 1, R1686 += 1 };
  s12 -> s12 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s12 -> s14 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s12 -> s15 [67, 67] { R1758 += 1, R1686 += 1 };
  s12 -> s16 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s12 -> s17 [67, 67] { R1758 += 1, R1686 += 1 };
  s12 -> s12 [68, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s12 -> s13 [68, 65535] { R1758 += 1, R1686 += 1 };
  s12 -> s12 [68, 65535] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s12 -> s18 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s12 -> s19 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s12 -> s12 [74, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s13 -> s13 [0, 66] { R1758 += 1, R1686 += 1 };
  s13 -> s13 [0, 65535] { R1758 += 1 };
  s13 -> s25 [0, 65535];
  s13 -> s15 [67, 67] { R1758 += 1, R1686 += 1 };
  s13 -> s17 [67, 67] { R1758 += 1, R1686 += 1 };
  s13 -> s13 [68, 65535] { R1758 += 1, R1686 += 1 };
  s15 -> s25 [0, 65535];
  s15 -> s15 [0, 65535] { R1758 += 1 };
  s16 -> s16 [0, 69] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s16 -> s16 [0, 65535] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s16 -> s17 [0, 65535] { R1758 += 1, R1686 += 1 };
  s16 -> s23 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s16 -> s21 [70, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s16 -> s16 [74, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s17 -> s24 [0, 65535] { R1758 += 1 };
  s17 -> s25 [0, 65535];
  s17 -> s17 [0, 65535] { R1758 += 1, R1686 += 1 };
  s18 -> s13 [0, 66] { R1758 += 1, R1686 += 1 };
  s18 -> s18 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s18 -> s22 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s18 -> s23 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s18 -> s15 [67, 67] { R1758 += 1, R1686 += 1 };
  s18 -> s17 [67, 67] { R1758 += 1, R1686 += 1 };
  s18 -> s18 [68, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s18 -> s13 [68, 65535] { R1758 += 1, R1686 += 1 };
  s18 -> s18 [68, 65535] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s18 -> s18 [74, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s19 -> s13 [0, 66] { R1758 += 1, R1686 += 1 };
  s19 -> s19 [0, 66] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s19 -> s20 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s19 -> s21 [67, 67] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s19 -> s15 [67, 67] { R1758 += 1, R1686 += 1 };
  s19 -> s17 [67, 67] { R1758 += 1, R1686 += 1 };
  s19 -> s13 [68, 65535] { R1758 += 1, R1686 += 1 };
  s19 -> s19 [68, 65535] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s21 -> s21 [0, 65535] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s21 -> s17 [0, 65535] { R1758 += 1, R1686 += 1 };
  s23 -> s23 [0, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s23 -> s23 [0, 65535] { R1758 += 1, R1686 += 1, R1622 += 1 };
  s23 -> s17 [0, 65535] { R1758 += 1, R1686 += 1 };
  s23 -> s23 [74, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s24 -> s24 [0, 65535] { R1758 += 1 };
  s24 -> s25 [0, 65535];
  s25 -> s25 [0, 65535];
  s26 -> s26 [0, 70] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s26 -> s23 [74, 74] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  s26 -> s26 [75, 65535] { R1758 += 1, R1686 += 1, R1622 += 1, R1624 += 1 };
  accepting s17, s24, s13, s15, s25;
};
};
constraint R2 = R1658 && R3 - R1758 = 1 && R23 - R1658 = -1 && R24 = R1658 && R25 - R1658 = -1 && R26 = R1658 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R1758 && R32 - R1758 = 1 && R33 = R1758 && R34 - R1758 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R858 + R857 + -1*R1626 + -1*R1622 = 0 && R873 + R871 = 0 && R874 + R872 + -1*R1626 + -1*R1622 = 0 && R1625 + R1621 = 0 && R1627 + R1623 = 0 && R1628 + R1624 = 0 && R1629 = 0 && R1630 = R1658 && R1631 = 0 && R1632 = R1658 && R1633 = 0 && R1634 = R1658 && R1635 = 0 && R1636 = R1658 && R1637 = 0 && R1638 = R1658 && R1639 = 0 && R1640 = R1658 && R1641 = 0 && R1642 = R1658 && R1643 = 0 && R1644 = R1658 && R1645 = 0 && R1646 = R1658 && R1647 = 0 && R1648 = R1658 && R1649 = 0 && R1650 = R1658 && R1651 = 0 && R1652 = R1658 && R1653 = 0 && R1654 = R1658 && R1655 = 0 && R1656 = R1658 && R1657 = 0 && R1661 = 0 && R1662 = 0 && R1685 = 0 && R1686 = 0 && R1687 = 0 && R1688 = R1758 && R1689 = 0 && R1690 = R1758 && R1691 = 0 && R1692 = R1758 && R1693 = 0 && R1694 = R1758 && R1695 = 0 && R1696 = R1758 && R1697 = 0 && R1698 = R1758 && R1699 = 0 && R1700 = R1758 && R1701 = 0 && R1702 = R1758 && R1703 = 0 && R1704 = R1758 && R1705 = 0 && R1706 = R1758 && R1707 = 0 && R1708 = R1758 && R1709 = 0 && R1710 = R1758 && R1711 = 0 && R1712 = R1758 && R1713 = 0 && R1714 = R1758 && R1715 = 0 && R1716 = R1758 && R1717 = 0 && R1718 = R1758 && R1719 = 0 && R1720 = R1758 && R1721 = 0 && R1722 = R1758 && R1723 = 0 && R1724 = R1758 && R1725 = 0 && R1726 = R1758 && R1727 = 0 && R1728 = R1758 && R1729 = 0 && R1730 = R1758 && R1731 = 0 && R1732 = R1758 && R1733 = 0 && R1734 = R1758 && R1735 = 0 && R1736 = R1758 && R1737 = 0 && R1738 = R1758 && R1739 = 0 && R1740 = R1758 && R1741 = 0 && R1742 = R1758 && R1743 = 0 && R1744 = R1758 && R1745 = 0 && R1746 = R1758 && R1747 = 0 && R1748 = R1758 && R1749 = 0 && R1750 = R1758 && R1751 = 0 && R1752 = R1758 && R1753 = 0 && R1754 = R1758 && R1755 = 0 && R1756 = R1758 && R1757 = 0 && R14 < 1 && R17 < 1 && R860 + R859 < 1 && -1*R880 + -1*R877 < 1 && R886 + R883 < 1 && -1*R1626 + -1*R1622 < 1 && 0 < R1658 && -1 < R1758 && (R878 + R875 != 0 || R879 + R876 + -1*R1626 + -1*R1622 = 0 || R880 + R877 < 1) && (R880 + R877 != 0 || R904 + R899 = 0 || (R893 + R889 = 0 && R894 + R890 = 0)) && (R880 + R877 != 0 || R904 + R899 = 0 || (R902 + R897 = 0 && R903 + R898 = 0)) && (R880 + R877 != 0 || R904 + R899 = 0 || (R911 + R907 = 0 && R912 + R908 = 0)) && (R880 + R877 != 0 || ((R878 + R875 != 0 || R879 + R876 + -1*R1626 + -1*R1622 = 0 || R1626 + R1622 < 1) && (R878 + R875 = 0 || R1626 + R1622 < 1))) && (R884 + R881 != 0 || R885 + R882 + -1*R1626 + -1*R1622 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R891 + R887 != 0 || R892 + R888 + -1*R1626 + -1*R1622 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R893 + R889 != 0 || R880 + R877 + -1*R894 + -1*R890 = 0 || R880 + R877 < 1) && (R900 + R895 != 0 || R901 + R896 + -1*R1626 + -1*R1622 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R902 + R897 != 0 || R880 + R877 + -1*R903 + -1*R898 = 0 || R880 + R877 < 1) && (R909 + R905 != 0 || R910 + R906 + -1*R1626 + -1*R1622 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R911 + R907 != 0 || R880 + R877 + -1*R912 + -1*R908 = 0 || R880 + R877 < 1) && (R918 + R913 != 0 || R919 + R914 + -1*R1626 + -1*R1622 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R22 = 0 || (R1659 = 0 && R1660 = 0)) && (R22 = 0 || (R1663 = 0 && R1664 = 0)) && (R22 = 0 || (R1665 = 0 && R1666 = 0)) && (R22 = 0 || (R1667 = 0 && R1668 = 0)) && (R22 = 0 || (R1669 = 0 && R1670 = 0)) && (R22 = 0 || (R1671 = 0 && R1672 = 0)) && (R22 = 0 || (R1673 = 0 && R1674 = 0)) && (R22 = 0 || (R1675 = 0 && R1676 = 0)) && (R22 = 0 || (R1677 = 0 && R1678 = 0)) && (R22 = 0 || (R1679 = 0 && R1680 = 0)) && (R22 = 0 || (R1681 = 0 && R1682 = 0)) && (R22 = 0 || (R1683 = 0 && R1684 = 0)) && (R866 + R863 = 0 || (R864 + R861 = 0 && R865 + R862 = 0)) && (R866 + R863 = 0 || (R869 + R867 = 0 && R870 + R868 = 0)) && (R878 + R875 = 0 || R880 + R877 < 1) && (R884 + R881 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R891 + R887 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R893 + R889 = 0 || R880 + R877 < 1) && (R900 + R895 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R902 + R897 = 0 || R880 + R877 < 1) && (R909 + R905 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R911 + R907 = 0 || R880 + R877 < 1) && (R918 + R913 = 0 || (R880 + R877 = 0 && R1626 + R1622 = 0)) && (R922 + R917 = 0 || (R920 + R915 = 0 && R921 + R916 = 0));
// End of Parikh automata intersection problem
