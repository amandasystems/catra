// Parikh automata intersection problem, generated by OSTRICH+
counter int R100, R101, R102, R103, R104, R105, R106, R107, R108, R109, R110, R111, R112, R113, R114, R115, R116, R117, R118, R119, R120, R121, R122, R123, R124, R125, R126, R127, R128, R129, R130, R131, R132, R133, R134, R14, R17, R2, R21, R22, R23, R24, R25, R26, R27, R273, R274, R275, R276, R277, R278, R279, R28, R280, R281, R282, R283, R284, R285, R286, R287, R288, R289, R29, R290, R291, R292, R293, R294, R295, R296, R297, R298, R299, R3, R30, R300, R301, R302, R303, R304, R305, R306, R307, R308, R309, R31, R310, R311, R312, R313, R314, R315, R316, R317, R318, R319, R32, R320, R321, R322, R323, R324, R325, R326, R327, R328, R329, R33, R330, R331, R332, R333, R334, R335, R336, R337, R338, R339, R34, R340, R341, R342, R343, R344, R345, R346, R347, R348, R349, R35, R350, R351, R352, R353, R354, R355, R356, R357, R358, R359, R36, R360, R361, R362, R363, R364, R365, R366, R367, R368, R369, R37, R370, R371, R372, R373, R374, R375, R376, R377, R378, R379, R38, R380, R381, R382, R383, R384, R385, R386, R387, R388, R389, R390, R391, R392, R393, R394, R395, R396, R397, R398, R399, R4, R400, R401, R402, R403, R404, R405, R406, R407, R408, R409, R410, R5, R6, R69, R7, R70, R71, R72, R73, R74, R75, R76, R77, R78, R79, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89, R90, R91, R92, R93, R94, R95, R96, R97, R98, R99;
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining P48
automaton P48_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [32, 32] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R36 += 1 };
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R340 += 1 };
  s0 -> s0 [0, 65535] { R339 += 1, R340 += 1 };
  s0 -> s2 [67, 67] { R340 += 1 };
  s0 -> s1 [68, 65535] { R340 += 1 };
  s1 -> s1 [0, 64] { R340 += 1 };
  s1 -> s2 [67, 67] { R340 += 1 };
  s1 -> s1 [68, 65535] { R340 += 1 };
  s2 -> s2 [0, 64] { R340 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R340 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R341 += 1, R342 += 1 };
  s0 -> s1 [0, 65535] { R342 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R342 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R344 += 1 };
  s0 -> s2 [0, 65535] { R344 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R343 += 1, R344 += 1 };
  s0 -> s3 [67, 67] { R344 += 1 };
  s0 -> s1 [68, 65535] { R344 += 1 };
  s1 -> s1 [0, 66] { R344 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R344 += 1 };
  s1 -> s1 [68, 65535] { R344 += 1 };
  s2 -> s1 [0, 66] { R344 += 1 };
  s2 -> s2 [0, 65535] { R344 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [67, 67] { R344 += 1 };
  s2 -> s1 [68, 65535] { R344 += 1 };
  s3 -> s3 [0, 65535] { R344 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R346 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R345 += 1, R346 += 1 };
  s0 -> s2 [0, 65535] { R346 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R346 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R346 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R346 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R346 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R346 += 1 };
  s1 -> s1 [0, 65535] { R346 += 1, R24 += 1 };
  s2 -> s1 [0, 8] { R346 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R346 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R346 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R346 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R346 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R346 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R346 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R346 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R348 += 1, R26 += 1, R4 += 1 };
  s0 -> s2 [0, 65535] { R348 += 1, R25 += 1, R26 += 1 };
  s0 -> s0 [0, 65535] { R347 += 1, R348 += 1 };
  s1 -> s1 [0, 65535] { R348 += 1, R26 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R348 += 1 };
  s2 -> s1 [0, 65535] { R348 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R348 += 1, R25 += 1, R26 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R348 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R350 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R350 += 1, R27 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R349 += 1, R350 += 1 };
  s0 -> s3 [9, 13] { R350 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R350 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R350 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R350 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R350 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R350 += 1 };
  s2 -> s1 [0, 8] { R350 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R350 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R350 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R350 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R350 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R350 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R350 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R350 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R352 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R351 += 1, R352 += 1 };
  s0 -> s2 [0, 65535] { R352 += 1, R30 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R352 += 1, R29 += 1, R30 += 1 };
  s1 -> s2 [0, 65535] { R352 += 1, R30 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R352 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R352 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R352 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R354 += 1, R282 += 1 };
  s0 -> s0 [0, 65535] { R353 += 1, R354 += 1 };
  s0 -> s2 [0, 65535] { R354 += 1, R281 += 1, R282 += 1 };
  s0 -> s1 [68, 65535] { R354 += 1, R282 += 1 };
  s1 -> s1 [0, 66] { R354 += 1, R282 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R354 += 1 };
  s1 -> s1 [68, 65535] { R354 += 1, R282 += 1 };
  s2 -> s1 [0, 66] { R354 += 1, R282 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R354 += 1, R281 += 1, R282 += 1 };
  s2 -> s1 [68, 65535] { R354 += 1, R282 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s0 [0, 65535] { R355 += 1, R356 += 1 };
  s0 -> s1 [0, 65535] { R356 += 1, R283 += 1, R284 += 1 };
  s0 -> s2 [0, 65535] { R356 += 1, R284 += 1, R21 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R356 += 1, R283 += 1, R284 += 1 };
  s1 -> s2 [0, 65535] { R356 += 1, R284 += 1, R21 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R356 += 1 };
  s2 -> s2 [0, 65535] { R356 += 1, R284 += 1, R21 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R356 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R358 += 1, R286 += 1 };
  s0 -> s2 [0, 65535] { R358 += 1, R285 += 1, R286 += 1 };
  s0 -> s0 [0, 65535] { R357 += 1, R358 += 1 };
  s0 -> s3 [70, 70] { R358 += 1, R286 += 1 };
  s0 -> s1 [71, 65535] { R358 += 1, R286 += 1 };
  s1 -> s1 [0, 67] { R358 += 1, R286 += 1 };
  s1 -> s3 [70, 70] { R358 += 1, R286 += 1 };
  s1 -> s1 [71, 65535] { R358 += 1, R286 += 1 };
  s2 -> s1 [0, 67] { R358 += 1, R286 += 1 };
  s2 -> s2 [0, 65535] { R358 += 1, R285 += 1, R286 += 1 };
  s2 -> s3 [70, 70] { R358 += 1, R286 += 1 };
  s2 -> s1 [71, 65535] { R358 += 1, R286 += 1 };
  s3 -> s3 [0, 67] { R358 += 1, R286 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R358 += 1 };
  s3 -> s3 [70, 65535] { R358 += 1, R286 += 1 };
  s4 -> s4 [0, 65535];
  accepting s3, s4;
};
automaton value2_17 {
  init s0;
  s0 -> s0 [0, 65535] { R359 += 1, R360 += 1 };
  s0 -> s1 [0, 65535] { R360 += 1, R288 += 1, R70 += 1 };
  s0 -> s2 [0, 65535] { R360 += 1, R287 += 1, R288 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R360 += 1, R288 += 1, R70 += 1 };
  s1 -> s4 [0, 65535] { R360 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R360 += 1, R288 += 1, R70 += 1 };
  s2 -> s2 [0, 65535] { R360 += 1, R287 += 1, R288 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R360 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R362 += 1, R290 += 1 };
  s0 -> s2 [0, 65535] { R362 += 1, R290 += 1, R72 += 1 };
  s0 -> s3 [0, 65535] { R362 += 1, R289 += 1, R290 += 1 };
  s0 -> s0 [0, 65535] { R361 += 1, R362 += 1 };
  s0 -> s1 [71, 65535] { R362 += 1, R290 += 1 };
  s1 -> s1 [0, 69] { R362 += 1, R290 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R362 += 1 };
  s1 -> s1 [71, 65535] { R362 += 1, R290 += 1 };
  s2 -> s1 [0, 69] { R362 += 1, R290 += 1 };
  s2 -> s5 [0, 65535] { R362 += 1 };
  s2 -> s2 [0, 65535] { R362 += 1, R290 += 1, R72 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [71, 65535] { R362 += 1, R290 += 1 };
  s3 -> s1 [0, 69] { R362 += 1, R290 += 1 };
  s3 -> s2 [0, 65535] { R362 += 1, R290 += 1, R72 += 1 };
  s3 -> s3 [0, 65535] { R362 += 1, R289 += 1, R290 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [71, 65535] { R362 += 1, R290 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R362 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R364 += 1, R292 += 1, R77 += 1, R78 += 1 };
  s0 -> s2 [0, 65535] { R364 += 1, R292 += 1, R76 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R363 += 1, R364 += 1 };
  s0 -> s3 [0, 65535] { R364 += 1, R291 += 1, R292 += 1 };
  s1 -> s1 [0, 65535] { R364 += 1, R292 += 1, R77 += 1, R78 += 1 };
  s1 -> s6 [0, 65535] { R364 += 1, R292 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R364 += 1 };
  s2 -> s1 [0, 65535] { R364 += 1, R292 += 1, R77 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R364 += 1, R292 += 1, R76 += 1, R77 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R364 += 1 };
  s3 -> s1 [0, 65535] { R364 += 1, R292 += 1, R77 += 1, R78 += 1 };
  s3 -> s2 [0, 65535] { R364 += 1, R292 += 1, R76 += 1, R77 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R364 += 1, R291 += 1, R292 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R364 += 1 };
  s6 -> s6 [0, 65535] { R364 += 1, R292 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R364 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R366 += 1, R294 += 1, R82 += 1 };
  s0 -> s0 [0, 65535] { R365 += 1, R366 += 1 };
  s0 -> s2 [0, 65535] { R366 += 1, R293 += 1, R294 += 1 };
  s0 -> s3 [0, 65535] { R366 += 1, R294 += 1, R81 += 1, R82 += 1 };
  s0 -> s4 [70, 70] { R366 += 1, R294 += 1, R82 += 1 };
  s0 -> s5 [70, 70] { R366 += 1, R294 += 1, R82 += 1 };
  s0 -> s1 [75, 65535] { R366 += 1, R294 += 1, R82 += 1 };
  s1 -> s1 [0, 69] { R366 += 1, R294 += 1, R82 += 1 };
  s1 -> s6 [0, 65535] { R366 += 1 };
  s1 -> s1 [0, 65535] { R366 += 1, R294 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R366 += 1, R294 += 1, R82 += 1 };
  s1 -> s5 [70, 70] { R366 += 1, R294 += 1, R82 += 1 };
  s1 -> s1 [75, 65535] { R366 += 1, R294 += 1, R82 += 1 };
  s2 -> s1 [0, 69] { R366 += 1, R294 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R366 += 1, R293 += 1, R294 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R366 += 1, R294 += 1, R81 += 1, R82 += 1 };
  s2 -> s4 [70, 70] { R366 += 1, R294 += 1, R82 += 1 };
  s2 -> s5 [70, 70] { R366 += 1, R294 += 1, R82 += 1 };
  s2 -> s1 [75, 65535] { R366 += 1, R294 += 1, R82 += 1 };
  s3 -> s1 [0, 69] { R366 += 1, R294 += 1, R82 += 1 };
  s3 -> s6 [0, 65535] { R366 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R366 += 1, R294 += 1, R81 += 1, R82 += 1 };
  s3 -> s4 [70, 70] { R366 += 1, R294 += 1, R82 += 1 };
  s3 -> s5 [70, 70] { R366 += 1, R294 += 1, R82 += 1 };
  s3 -> s1 [75, 65535] { R366 += 1, R294 += 1, R82 += 1 };
  s4 -> s4 [0, 70] { R366 += 1, R294 += 1, R82 += 1 };
  s4 -> s4 [0, 65535] { R366 += 1, R294 += 1 };
  s4 -> s6 [0, 65535] { R366 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [75, 65535] { R366 += 1, R294 += 1, R82 += 1 };
  s5 -> s5 [0, 65535] { R366 += 1, R294 += 1 };
  s5 -> s6 [0, 65535] { R366 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R366 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R368 += 1, R296 += 1, R86 += 1 };
  s0 -> s2 [0, 65535] { R368 += 1, R295 += 1, R296 += 1 };
  s0 -> s0 [0, 65535] { R367 += 1, R368 += 1 };
  s0 -> s3 [0, 65535] { R368 += 1, R296 += 1, R85 += 1, R86 += 1 };
  s0 -> s4 [70, 70] { R368 += 1, R296 += 1, R86 += 1 };
  s0 -> s1 [71, 65535] { R368 += 1, R296 += 1, R86 += 1 };
  s1 -> s1 [0, 69] { R368 += 1, R296 += 1, R86 += 1 };
  s1 -> s4 [70, 70] { R368 += 1, R296 += 1, R86 += 1 };
  s1 -> s1 [71, 65535] { R368 += 1, R296 += 1, R86 += 1 };
  s2 -> s1 [0, 69] { R368 += 1, R296 += 1, R86 += 1 };
  s2 -> s2 [0, 65535] { R368 += 1, R295 += 1, R296 += 1 };
  s2 -> s3 [0, 65535] { R368 += 1, R296 += 1, R85 += 1, R86 += 1 };
  s2 -> s4 [70, 70] { R368 += 1, R296 += 1, R86 += 1 };
  s2 -> s1 [71, 65535] { R368 += 1, R296 += 1, R86 += 1 };
  s3 -> s1 [0, 69] { R368 += 1, R296 += 1, R86 += 1 };
  s3 -> s3 [0, 65535] { R368 += 1, R296 += 1, R85 += 1, R86 += 1 };
  s3 -> s4 [70, 70] { R368 += 1, R296 += 1, R86 += 1 };
  s3 -> s1 [71, 65535] { R368 += 1, R296 += 1, R86 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R368 += 1, R296 += 1 };
  s4 -> s7 [0, 65535] { R368 += 1 };
  s4 -> s4 [0, 65535] { R368 += 1, R296 += 1, R86 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R368 += 1, R296 += 1 };
  s6 -> s7 [0, 65535] { R368 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R368 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_22 {
  init s0;
  s0 -> s0 [0, 65535] { R369 += 1, R370 += 1 };
  s0 -> s1 [0, 65535] { R370 += 1, R298 += 1, R90 += 1, R91 += 1 };
  s0 -> s2 [0, 65535] { R370 += 1, R297 += 1, R298 += 1 };
  s0 -> s3 [0, 65535] { R370 += 1, R298 += 1, R91 += 1, R92 += 1 };
  s1 -> s4 [0, 65535] { R370 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R370 += 1, R298 += 1, R90 += 1, R91 += 1 };
  s1 -> s3 [0, 65535] { R370 += 1, R298 += 1, R91 += 1, R92 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R370 += 1, R298 += 1, R90 += 1, R91 += 1 };
  s2 -> s2 [0, 65535] { R370 += 1, R297 += 1, R298 += 1 };
  s2 -> s3 [0, 65535] { R370 += 1, R298 += 1, R91 += 1, R92 += 1 };
  s3 -> s4 [0, 65535] { R370 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R370 += 1, R298 += 1 };
  s3 -> s3 [0, 65535] { R370 += 1, R298 += 1, R91 += 1, R92 += 1 };
  s4 -> s4 [0, 65535] { R370 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R370 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R370 += 1, R298 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R372 += 1, R300 += 1, R97 += 1 };
  s0 -> s2 [0, 65535] { R372 += 1, R299 += 1, R300 += 1 };
  s0 -> s3 [0, 65535] { R372 += 1, R300 += 1, R97 += 1, R98 += 1 };
  s0 -> s0 [0, 65535] { R371 += 1, R372 += 1 };
  s0 -> s4 [0, 65535] { R372 += 1, R300 += 1, R96 += 1, R97 += 1 };
  s0 -> s1 [71, 65535] { R372 += 1, R300 += 1, R97 += 1 };
  s1 -> s1 [0, 69] { R372 += 1, R300 += 1, R97 += 1 };
  s1 -> s1 [0, 65535] { R372 += 1, R300 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R372 += 1 };
  s1 -> s1 [71, 65535] { R372 += 1, R300 += 1, R97 += 1 };
  s2 -> s1 [0, 69] { R372 += 1, R300 += 1, R97 += 1 };
  s2 -> s2 [0, 65535] { R372 += 1, R299 += 1, R300 += 1 };
  s2 -> s3 [0, 65535] { R372 += 1, R300 += 1, R97 += 1, R98 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R372 += 1, R300 += 1, R96 += 1, R97 += 1 };
  s2 -> s1 [71, 65535] { R372 += 1, R300 += 1, R97 += 1 };
  s3 -> s1 [0, 69] { R372 += 1, R300 += 1, R97 += 1 };
  s3 -> s7 [0, 65535] { R372 += 1, R300 += 1 };
  s3 -> s3 [0, 65535] { R372 += 1, R300 += 1, R97 += 1, R98 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R372 += 1 };
  s3 -> s1 [71, 65535] { R372 += 1, R300 += 1, R97 += 1 };
  s4 -> s1 [0, 69] { R372 += 1, R300 += 1, R97 += 1 };
  s4 -> s3 [0, 65535] { R372 += 1, R300 += 1, R97 += 1, R98 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R372 += 1, R300 += 1, R96 += 1, R97 += 1 };
  s4 -> s6 [0, 65535] { R372 += 1 };
  s4 -> s1 [71, 65535] { R372 += 1, R300 += 1, R97 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R372 += 1 };
  s7 -> s7 [0, 65535] { R372 += 1, R300 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R372 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s0 -> s2 [0, 65535] { R374 += 1, R302 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s0 -> s3 [0, 65535] { R374 += 1, R302 += 1, R103 += 1, R104 += 1 };
  s0 -> s0 [0, 65535] { R373 += 1, R374 += 1 };
  s0 -> s4 [0, 65535] { R374 += 1, R301 += 1, R302 += 1 };
  s0 -> s1 [71, 65535] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s1 -> s1 [0, 69] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s1 -> s6 [0, 65535] { R374 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R374 += 1, R302 += 1, R104 += 1 };
  s1 -> s7 [0, 65535] { R374 += 1, R302 += 1 };
  s1 -> s1 [71, 65535] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s2 -> s1 [0, 69] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s2 -> s6 [0, 65535] { R374 += 1 };
  s2 -> s2 [0, 65535] { R374 += 1, R302 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s7 [0, 65535] { R374 += 1, R302 += 1 };
  s2 -> s1 [71, 65535] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s3 -> s1 [0, 69] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s3 -> s6 [0, 65535] { R374 += 1 };
  s3 -> s2 [0, 65535] { R374 += 1, R302 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R374 += 1, R302 += 1, R103 += 1, R104 += 1 };
  s3 -> s1 [71, 65535] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s4 -> s1 [0, 69] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s4 -> s2 [0, 65535] { R374 += 1, R302 += 1, R104 += 1, R105 += 1, R106 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R374 += 1, R302 += 1, R103 += 1, R104 += 1 };
  s4 -> s4 [0, 65535] { R374 += 1, R301 += 1, R302 += 1 };
  s4 -> s1 [71, 65535] { R374 += 1, R302 += 1, R104 += 1, R106 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R374 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R374 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R374 += 1, R302 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65535] { R376 += 1, R304 += 1, R112 += 1, R113 += 1 };
  s0 -> s2 [0, 65535] { R376 += 1, R304 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s0 -> s0 [0, 65535] { R375 += 1, R376 += 1 };
  s0 -> s3 [0, 65535] { R376 += 1, R303 += 1, R304 += 1 };
  s0 -> s4 [0, 65535] { R376 += 1, R304 += 1, R113 += 1, R114 += 1, R115 += 1 };
  s1 -> s1 [0, 65535] { R376 += 1, R304 += 1, R112 += 1, R113 += 1 };
  s1 -> s2 [0, 65535] { R376 += 1, R304 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s1 -> s6 [0, 65535] { R376 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [0, 65535] { R376 += 1, R304 += 1, R113 += 1, R114 += 1, R115 += 1 };
  s2 -> s2 [0, 65535] { R376 += 1, R304 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s2 -> s5 [0, 65535] { R376 += 1, R304 += 1 };
  s2 -> s6 [0, 65535] { R376 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R376 += 1, R304 += 1, R113 += 1 };
  s3 -> s1 [0, 65535] { R376 += 1, R304 += 1, R112 += 1, R113 += 1 };
  s3 -> s2 [0, 65535] { R376 += 1, R304 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R376 += 1, R303 += 1, R304 += 1 };
  s3 -> s4 [0, 65535] { R376 += 1, R304 += 1, R113 += 1, R114 += 1, R115 += 1 };
  s4 -> s2 [0, 65535] { R376 += 1, R304 += 1, R113 += 1, R115 += 1, R116 += 1 };
  s4 -> s5 [0, 65535] { R376 += 1, R304 += 1 };
  s4 -> s6 [0, 65535] { R376 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R376 += 1, R304 += 1, R113 += 1, R114 += 1, R115 += 1 };
  s5 -> s5 [0, 65535] { R376 += 1, R304 += 1 };
  s5 -> s6 [0, 65535] { R376 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R376 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R376 += 1, R304 += 1 };
  s8 -> s6 [0, 65535] { R376 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R376 += 1, R304 += 1, R113 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 70] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s0 -> s2 [0, 65535] { R378 += 1, R306 += 1, R122 += 1, R123 += 1, R124 += 1 };
  s0 -> s0 [0, 65535] { R377 += 1, R378 += 1 };
  s0 -> s3 [0, 65535] { R378 += 1, R306 += 1, R121 += 1, R122 += 1 };
  s0 -> s4 [0, 65535] { R378 += 1, R305 += 1, R306 += 1 };
  s0 -> s1 [74, 65535] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s1 -> s1 [0, 70] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s1 -> s7 [0, 65535] { R378 += 1, R306 += 1 };
  s1 -> s6 [0, 65535] { R378 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R378 += 1, R306 += 1, R122 += 1 };
  s1 -> s1 [74, 65535] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s2 -> s1 [0, 70] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s2 -> s2 [0, 65535] { R378 += 1, R306 += 1, R122 += 1, R123 += 1, R124 += 1 };
  s2 -> s7 [0, 65535] { R378 += 1, R306 += 1 };
  s2 -> s6 [0, 65535] { R378 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [74, 65535] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s3 -> s1 [0, 70] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s3 -> s2 [0, 65535] { R378 += 1, R306 += 1, R122 += 1, R123 += 1, R124 += 1 };
  s3 -> s6 [0, 65535] { R378 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R378 += 1, R306 += 1, R121 += 1, R122 += 1 };
  s3 -> s1 [74, 65535] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s4 -> s1 [0, 70] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s4 -> s2 [0, 65535] { R378 += 1, R306 += 1, R122 += 1, R123 += 1, R124 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s3 [0, 65535] { R378 += 1, R306 += 1, R121 += 1, R122 += 1 };
  s4 -> s4 [0, 65535] { R378 += 1, R305 += 1, R306 += 1 };
  s4 -> s1 [74, 65535] { R378 += 1, R306 += 1, R122 += 1, R124 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R378 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R378 += 1, R306 += 1 };
  s7 -> s6 [0, 65535] { R378 += 1 };
  s7 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R380 += 1, R307 += 1, R308 += 1 };
  s0 -> s2 [0, 65535] { R380 += 1, R308 += 1, R131 += 1, R132 += 1, R133 += 1 };
  s0 -> s3 [0, 65535] { R380 += 1, R308 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s0 -> s0 [0, 65535] { R379 += 1, R380 += 1 };
  s0 -> s4 [0, 65535] { R380 += 1, R308 += 1, R130 += 1, R131 += 1 };
  s1 -> s1 [0, 65535] { R380 += 1, R307 += 1, R308 += 1 };
  s1 -> s2 [0, 65535] { R380 += 1, R308 += 1, R131 += 1, R132 += 1, R133 += 1 };
  s1 -> s3 [0, 65535] { R380 += 1, R308 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [0, 65535] { R380 += 1, R308 += 1, R130 += 1, R131 += 1 };
  s2 -> s2 [0, 65535] { R380 += 1, R308 += 1, R131 += 1, R132 += 1, R133 += 1 };
  s2 -> s5 [0, 65535] { R380 += 1 };
  s2 -> s3 [0, 65535] { R380 += 1, R308 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s8 [0, 65535] { R380 += 1, R308 += 1 };
  s3 -> s5 [0, 65535] { R380 += 1 };
  s3 -> s3 [0, 65535] { R380 += 1, R308 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s3 -> s7 [0, 65535] { R380 += 1, R308 += 1, R131 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s8 [0, 65535] { R380 += 1, R308 += 1 };
  s4 -> s2 [0, 65535] { R380 += 1, R308 += 1, R131 += 1, R132 += 1, R133 += 1 };
  s4 -> s5 [0, 65535] { R380 += 1 };
  s4 -> s3 [0, 65535] { R380 += 1, R308 += 1, R131 += 1, R133 += 1, R134 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R380 += 1, R308 += 1, R130 += 1, R131 += 1 };
  s5 -> s5 [0, 65535] { R380 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R380 += 1 };
  s7 -> s7 [0, 65535] { R380 += 1, R308 += 1, R131 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s8 [0, 65535] { R380 += 1, R308 += 1 };
  s8 -> s5 [0, 65535] { R380 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R380 += 1, R308 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s0 -> s0 [0, 65535] { R381 += 1, R382 += 1 };
  s0 -> s2 [0, 65535] { R382 += 1, R309 += 1, R310 += 1 };
  s0 -> s3 [70, 70] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s0 -> s4 [74, 74] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s0 -> s1 [75, 65535] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s1 -> s1 [0, 69] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s1 -> s3 [70, 70] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s1 -> s4 [74, 74] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s1 -> s1 [75, 65535] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s2 -> s1 [0, 69] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s2 -> s2 [0, 65535] { R382 += 1, R309 += 1, R310 += 1 };
  s2 -> s3 [70, 70] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s2 -> s4 [74, 74] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s2 -> s1 [75, 65535] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s3 -> s3 [0, 70] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s3 -> s9 [74, 74] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s3 -> s3 [75, 65535] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s4 -> s4 [0, 69] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R382 += 1 };
  s4 -> s7 [0, 65535] { R382 += 1, R310 += 1 };
  s4 -> s4 [0, 65535] { R382 += 1, R310 += 1, R278 += 1 };
  s4 -> s8 [70, 70] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s4 -> s9 [70, 70] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s4 -> s4 [74, 65535] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R382 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R382 += 1 };
  s7 -> s7 [0, 65535] { R382 += 1, R310 += 1 };
  s8 -> s8 [0, 65535] { R382 += 1, R310 += 1, R278 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R382 += 1 };
  s8 -> s7 [0, 65535] { R382 += 1, R310 += 1 };
  s9 -> s9 [0, 70] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  s9 -> s5 [0, 65535];
  s9 -> s6 [0, 65535] { R382 += 1 };
  s9 -> s9 [0, 65535] { R382 += 1, R310 += 1, R278 += 1 };
  s9 -> s7 [0, 65535] { R382 += 1, R310 += 1 };
  s9 -> s9 [74, 65535] { R382 += 1, R310 += 1, R278 += 1, R280 += 1 };
  accepting s4, s8, s5, s9, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R384 += 1, R312 += 1, R22 += 1 };
  s0 -> s2 [0, 65535] { R384 += 1, R311 += 1, R312 += 1 };
  s0 -> s0 [0, 65535] { R383 += 1, R384 += 1 };
  s1 -> s1 [0, 65535] { R384 += 1, R312 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R384 += 1 };
  s2 -> s1 [0, 65535] { R384 += 1, R312 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R384 += 1, R311 += 1, R312 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R384 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 66] { R386 += 1, R314 += 1 };
  s0 -> s0 [0, 65535] { R385 += 1, R386 += 1 };
  s0 -> s2 [0, 65535] { R386 += 1, R313 += 1, R314 += 1 };
  s0 -> s3 [67, 67] { R386 += 1, R314 += 1 };
  s0 -> s4 [67, 67] { R386 += 1, R314 += 1 };
  s0 -> s1 [71, 65535] { R386 += 1, R314 += 1 };
  s1 -> s1 [0, 66] { R386 += 1, R314 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R386 += 1 };
  s1 -> s3 [67, 67] { R386 += 1, R314 += 1 };
  s1 -> s4 [67, 67] { R386 += 1, R314 += 1 };
  s1 -> s1 [71, 65535] { R386 += 1, R314 += 1 };
  s2 -> s1 [0, 66] { R386 += 1, R314 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R386 += 1, R313 += 1, R314 += 1 };
  s2 -> s3 [67, 67] { R386 += 1, R314 += 1 };
  s2 -> s4 [67, 67] { R386 += 1, R314 += 1 };
  s2 -> s1 [71, 65535] { R386 += 1, R314 += 1 };
  s3 -> s3 [0, 65535] { R386 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 67] { R386 += 1, R314 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R386 += 1 };
  s4 -> s4 [71, 65535] { R386 += 1, R314 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 66] { R388 += 1, R316 += 1, R69 += 1 };
  s0 -> s2 [0, 65535] { R388 += 1, R315 += 1, R316 += 1 };
  s0 -> s0 [0, 65535] { R387 += 1, R388 += 1 };
  s0 -> s3 [67, 67] { R388 += 1, R316 += 1, R69 += 1 };
  s0 -> s4 [67, 67] { R388 += 1, R316 += 1, R69 += 1 };
  s0 -> s1 [68, 65535] { R388 += 1, R316 += 1, R69 += 1 };
  s1 -> s1 [0, 66] { R388 += 1, R316 += 1, R69 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R388 += 1 };
  s1 -> s3 [67, 67] { R388 += 1, R316 += 1, R69 += 1 };
  s1 -> s4 [67, 67] { R388 += 1, R316 += 1, R69 += 1 };
  s1 -> s1 [68, 65535] { R388 += 1, R316 += 1, R69 += 1 };
  s2 -> s1 [0, 66] { R388 += 1, R316 += 1, R69 += 1 };
  s2 -> s2 [0, 65535] { R388 += 1, R315 += 1, R316 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R388 += 1, R316 += 1, R69 += 1 };
  s2 -> s4 [67, 67] { R388 += 1, R316 += 1, R69 += 1 };
  s2 -> s1 [68, 65535] { R388 += 1, R316 += 1, R69 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R388 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R388 += 1 };
  s4 -> s4 [0, 65535] { R388 += 1, R316 += 1, R69 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R388 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 66] { R390 += 1, R318 += 1, R71 += 1 };
  s0 -> s0 [0, 65535] { R389 += 1, R390 += 1 };
  s0 -> s2 [0, 65535] { R390 += 1, R317 += 1, R318 += 1 };
  s0 -> s3 [67, 67] { R390 += 1, R318 += 1, R71 += 1 };
  s0 -> s4 [67, 67] { R390 += 1, R318 += 1, R71 += 1 };
  s0 -> s1 [68, 65535] { R390 += 1, R318 += 1, R71 += 1 };
  s1 -> s1 [0, 66] { R390 += 1, R318 += 1, R71 += 1 };
  s1 -> s1 [0, 65535] { R390 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R390 += 1, R318 += 1, R71 += 1 };
  s1 -> s4 [67, 67] { R390 += 1, R318 += 1, R71 += 1 };
  s1 -> s1 [68, 65535] { R390 += 1, R318 += 1, R71 += 1 };
  s2 -> s1 [0, 66] { R390 += 1, R318 += 1, R71 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R390 += 1, R317 += 1, R318 += 1 };
  s2 -> s3 [67, 67] { R390 += 1, R318 += 1, R71 += 1 };
  s2 -> s4 [67, 67] { R390 += 1, R318 += 1, R71 += 1 };
  s2 -> s1 [68, 65535] { R390 += 1, R318 += 1, R71 += 1 };
  s3 -> s6 [0, 65535] { R390 += 1 };
  s3 -> s3 [0, 65535] { R390 += 1, R318 += 1, R71 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R390 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R390 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 66] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s0 -> s2 [0, 65535] { R392 += 1, R319 += 1, R320 += 1 };
  s0 -> s0 [0, 65535] { R391 += 1, R392 += 1 };
  s0 -> s3 [67, 67] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [67, 67] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [68, 65535] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 66] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R392 += 1 };
  s1 -> s3 [67, 67] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [67, 67] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [68, 65535] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 66] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R392 += 1, R319 += 1, R320 += 1 };
  s2 -> s3 [67, 67] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [67, 67] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [68, 65535] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R392 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R392 += 1 };
  s4 -> s4 [0, 65535] { R392 += 1, R320 += 1, R73 += 1, R74 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R392 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 66] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s0 -> s2 [0, 65535] { R394 += 1, R321 += 1, R322 += 1 };
  s0 -> s0 [0, 65535] { R393 += 1, R394 += 1 };
  s0 -> s3 [67, 67] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s0 -> s4 [67, 67] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s0 -> s1 [68, 65535] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [0, 66] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R394 += 1 };
  s1 -> s3 [67, 67] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s1 -> s4 [67, 67] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s1 -> s1 [68, 65535] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [0, 66] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R394 += 1, R321 += 1, R322 += 1 };
  s2 -> s3 [67, 67] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s2 -> s4 [67, 67] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s2 -> s1 [68, 65535] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R394 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R394 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R394 += 1, R322 += 1, R79 += 1, R80 += 1 };
  s5 -> s5 [0, 65535] { R394 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 66] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R395 += 1, R396 += 1 };
  s0 -> s2 [0, 65535] { R396 += 1, R323 += 1, R324 += 1 };
  s0 -> s3 [67, 67] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s0 -> s4 [67, 67] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s0 -> s1 [68, 65535] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s1 -> s1 [0, 66] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R396 += 1 };
  s1 -> s3 [67, 67] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s1 -> s4 [67, 67] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s1 -> s1 [68, 65535] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s2 -> s1 [0, 66] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R396 += 1, R323 += 1, R324 += 1 };
  s2 -> s3 [67, 67] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s2 -> s4 [67, 67] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s2 -> s1 [68, 65535] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R396 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R396 += 1 };
  s4 -> s4 [0, 65535] { R396 += 1, R324 += 1, R83 += 1, R84 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R396 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 66] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s0 -> s2 [0, 65535] { R398 += 1, R325 += 1, R326 += 1 };
  s0 -> s0 [0, 65535] { R397 += 1, R398 += 1 };
  s0 -> s3 [67, 67] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s0 -> s4 [67, 67] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s0 -> s1 [68, 65535] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 66] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [0, 65535] { R398 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s1 -> s4 [67, 67] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s1 -> s1 [68, 65535] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [0, 66] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R398 += 1, R325 += 1, R326 += 1 };
  s2 -> s3 [67, 67] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s2 -> s4 [67, 67] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s2 -> s1 [68, 65535] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s3 -> s3 [0, 65535] { R398 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R398 += 1 };
  s4 -> s4 [0, 65535] { R398 += 1, R326 += 1, R87 += 1, R88 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R398 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 66] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s0 -> s2 [0, 65535] { R400 += 1, R327 += 1, R328 += 1 };
  s0 -> s0 [0, 65535] { R399 += 1, R400 += 1 };
  s0 -> s3 [67, 67] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s0 -> s4 [67, 67] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s0 -> s1 [68, 65535] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 66] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [0, 65535] { R400 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s1 -> s4 [67, 67] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s1 -> s1 [68, 65535] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s2 -> s1 [0, 66] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s2 -> s2 [0, 65535] { R400 += 1, R327 += 1, R328 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s2 -> s4 [67, 67] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s2 -> s1 [68, 65535] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s3 -> s3 [0, 65535] { R400 += 1, R328 += 1, R93 += 1, R94 += 1 };
  s3 -> s6 [0, 65535] { R400 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R400 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R400 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 66] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s0 -> s0 [0, 65535] { R401 += 1, R402 += 1 };
  s0 -> s2 [0, 65535] { R402 += 1, R329 += 1, R330 += 1 };
  s0 -> s3 [67, 67] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s0 -> s4 [67, 67] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s0 -> s1 [68, 65535] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s1 -> s1 [0, 66] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s1 -> s1 [0, 65535] { R402 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s1 -> s4 [67, 67] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s1 -> s1 [68, 65535] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s2 -> s1 [0, 66] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s2 -> s2 [0, 65535] { R402 += 1, R329 += 1, R330 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s2 -> s4 [67, 67] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s2 -> s1 [68, 65535] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s3 -> s6 [0, 65535] { R402 += 1 };
  s3 -> s3 [0, 65535] { R402 += 1, R330 += 1, R99 += 1, R100 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R402 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R402 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 66] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s0 -> s2 [0, 65535] { R404 += 1, R331 += 1, R332 += 1 };
  s0 -> s0 [0, 65535] { R403 += 1, R404 += 1 };
  s0 -> s3 [67, 67] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s0 -> s4 [67, 67] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s0 -> s1 [68, 65535] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 66] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [0, 65535] { R404 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s1 -> s4 [67, 67] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s1 -> s1 [68, 65535] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s2 -> s1 [0, 66] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R404 += 1, R331 += 1, R332 += 1 };
  s2 -> s3 [67, 67] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s2 -> s4 [67, 67] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s2 -> s1 [68, 65535] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s3 -> s3 [0, 65535] { R404 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R404 += 1 };
  s4 -> s4 [0, 65535] { R404 += 1, R332 += 1, R107 += 1, R108 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R404 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 66] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s0 -> s2 [0, 65535] { R406 += 1, R333 += 1, R334 += 1 };
  s0 -> s0 [0, 65535] { R405 += 1, R406 += 1 };
  s0 -> s3 [67, 67] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s0 -> s4 [67, 67] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s0 -> s1 [68, 65535] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [0, 66] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [0, 65535] { R406 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s1 -> s4 [67, 67] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s1 -> s1 [68, 65535] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s2 -> s1 [0, 66] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s2 -> s2 [0, 65535] { R406 += 1, R333 += 1, R334 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s2 -> s4 [67, 67] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s2 -> s1 [68, 65535] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R406 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R406 += 1 };
  s4 -> s4 [0, 65535] { R406 += 1, R334 += 1, R117 += 1, R118 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R406 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 66] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s0 -> s0 [0, 65535] { R407 += 1, R408 += 1 };
  s0 -> s2 [0, 65535] { R408 += 1, R335 += 1, R336 += 1 };
  s0 -> s3 [67, 67] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s0 -> s4 [67, 67] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s0 -> s1 [68, 65535] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s1 -> s1 [0, 66] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s1 -> s1 [0, 65535] { R408 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s1 -> s4 [67, 67] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s1 -> s1 [68, 65535] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s2 -> s1 [0, 66] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R408 += 1, R335 += 1, R336 += 1 };
  s2 -> s3 [67, 67] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s2 -> s4 [67, 67] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s2 -> s1 [68, 65535] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R408 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R408 += 1 };
  s4 -> s4 [0, 65535] { R408 += 1, R336 += 1, R125 += 1, R126 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R408 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 66] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s0 -> s2 [0, 66] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s0 -> s3 [0, 66] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s0 -> s0 [0, 65535] { R409 += 1, R410 += 1 };
  s0 -> s4 [0, 65535] { R410 += 1, R337 += 1, R338 += 1 };
  s0 -> s5 [67, 67] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s0 -> s6 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s0 -> s7 [67, 67] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s0 -> s8 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s0 -> s9 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s0 -> s10 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s0 -> s3 [68, 69] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s0 -> s1 [68, 65535] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s0 -> s2 [68, 65535] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s0 -> s3 [75, 65535] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s1 -> s1 [0, 66] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s1 -> s3 [0, 66] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s1 -> s6 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s1 -> s8 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s1 -> s9 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s1 -> s10 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s1 -> s3 [68, 69] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s1 -> s1 [68, 65535] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s1 -> s3 [75, 65535] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s2 -> s1 [0, 66] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s2 -> s2 [0, 66] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s2 -> s3 [0, 66] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s2 -> s5 [67, 67] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s2 -> s6 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s2 -> s7 [67, 67] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s2 -> s8 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s2 -> s9 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s2 -> s10 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s2 -> s3 [68, 69] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s2 -> s1 [68, 65535] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s2 -> s2 [68, 65535] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s2 -> s3 [75, 65535] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s3 -> s3 [0, 66] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s3 -> s3 [0, 65535] { R410 += 1 };
  s3 -> s11 [0, 65535];
  s3 -> s8 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s3 -> s10 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s3 -> s3 [68, 69] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s3 -> s3 [75, 65535] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s4 -> s1 [0, 66] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s4 -> s2 [0, 66] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s4 -> s3 [0, 66] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s4 -> s4 [0, 65535] { R410 += 1, R337 += 1, R338 += 1 };
  s4 -> s5 [67, 67] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s4 -> s6 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s4 -> s7 [67, 67] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s4 -> s8 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s4 -> s9 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s4 -> s10 [67, 67] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s4 -> s3 [68, 69] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s4 -> s1 [68, 65535] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s4 -> s2 [68, 65535] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s4 -> s3 [75, 65535] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s5 -> s8 [0, 69] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s5 -> s5 [0, 65535] { R410 += 1, R338 += 1, R273 += 1, R274 += 1 };
  s5 -> s9 [0, 65535] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s5 -> s8 [75, 65535] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s8 -> s8 [0, 69] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s8 -> s8 [0, 65535] { R410 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s8 [75, 65535] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s9 -> s8 [0, 69] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s9 -> s9 [0, 65535] { R410 += 1, R338 += 1, R274 += 1, R275 += 1, R276 += 1 };
  s9 -> s8 [75, 65535] { R410 += 1, R338 += 1, R274 += 1, R276 += 1 };
  s10 -> s10 [0, 65535] { R410 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  accepting s3, s8, s10, s11;
};
};
constraint R2 = R310 && R3 - R410 = 1 && R23 - R310 = -1 && R24 = R310 && R25 - R310 = -1 && R26 = R310 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R410 && R32 - R410 = 1 && R33 = R410 && R34 - R410 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R70 + R69 + -1*R278 + -1*R274 = 0 && R85 + R83 = 0 && R86 + R84 + -1*R278 + -1*R274 = 0 && R277 + R273 = 0 && R279 + R275 = 0 && R280 + R276 = 0 && R281 = 0 && R282 = R310 && R283 = 0 && R284 = R310 && R285 = 0 && R286 = R310 && R287 = 0 && R288 = R310 && R289 = 0 && R290 = R310 && R291 = 0 && R292 = R310 && R293 = 0 && R294 = R310 && R295 = 0 && R296 = R310 && R297 = 0 && R298 = R310 && R299 = 0 && R300 = R310 && R301 = 0 && R302 = R310 && R303 = 0 && R304 = R310 && R305 = 0 && R306 = R310 && R307 = 0 && R308 = R310 && R309 = 0 && R337 = 0 && R338 = 0 && R339 = 0 && R340 = R410 && R341 = 0 && R342 = R410 && R343 = 0 && R344 = R410 && R345 = 0 && R346 = R410 && R347 = 0 && R348 = R410 && R349 = 0 && R350 = R410 && R351 = 0 && R352 = R410 && R353 = 0 && R354 = R410 && R355 = 0 && R356 = R410 && R357 = 0 && R358 = R410 && R359 = 0 && R360 = R410 && R361 = 0 && R362 = R410 && R363 = 0 && R364 = R410 && R365 = 0 && R366 = R410 && R367 = 0 && R368 = R410 && R369 = 0 && R370 = R410 && R371 = 0 && R372 = R410 && R373 = 0 && R374 = R410 && R375 = 0 && R376 = R410 && R377 = 0 && R378 = R410 && R379 = 0 && R380 = R410 && R381 = 0 && R382 = R410 && R383 = 0 && R384 = R410 && R385 = 0 && R386 = R410 && R387 = 0 && R388 = R410 && R389 = 0 && R390 = R410 && R391 = 0 && R392 = R410 && R393 = 0 && R394 = R410 && R395 = 0 && R396 = R410 && R397 = 0 && R398 = R410 && R399 = 0 && R400 = R410 && R401 = 0 && R402 = R410 && R403 = 0 && R404 = R410 && R405 = 0 && R406 = R410 && R407 = 0 && R408 = R410 && R409 = 0 && R14 < 1 && R17 < 1 && R72 + R71 < 1 && -1*R92 + -1*R89 < 1 && R98 + R95 < 1 && -1*R278 + -1*R274 < 1 && 0 < R310 && -1 < R410 && (R90 + R87 != 0 || R91 + R88 + -1*R278 + -1*R274 = 0 || R92 + R89 < 1) && (R92 + R89 != 0 || R116 + R111 = 0 || (R105 + R101 = 0 && R106 + R102 = 0)) && (R92 + R89 != 0 || R116 + R111 = 0 || (R114 + R109 = 0 && R115 + R110 = 0)) && (R92 + R89 != 0 || R116 + R111 = 0 || (R123 + R119 = 0 && R124 + R120 = 0)) && (R92 + R89 != 0 || ((R90 + R87 != 0 || R91 + R88 + -1*R278 + -1*R274 = 0 || R278 + R274 < 1) && (R90 + R87 = 0 || R278 + R274 < 1))) && (R96 + R93 != 0 || R97 + R94 + -1*R278 + -1*R274 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R103 + R99 != 0 || R104 + R100 + -1*R278 + -1*R274 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R105 + R101 != 0 || R92 + R89 + -1*R106 + -1*R102 = 0 || R92 + R89 < 1) && (R112 + R107 != 0 || R113 + R108 + -1*R278 + -1*R274 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R114 + R109 != 0 || R92 + R89 + -1*R115 + -1*R110 = 0 || R92 + R89 < 1) && (R121 + R117 != 0 || R122 + R118 + -1*R278 + -1*R274 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R123 + R119 != 0 || R92 + R89 + -1*R124 + -1*R120 = 0 || R92 + R89 < 1) && (R130 + R125 != 0 || R131 + R126 + -1*R278 + -1*R274 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R22 = 0 || (R311 = 0 && R312 = 0)) && (R22 = 0 || (R313 = 0 && R314 = 0)) && (R22 = 0 || (R315 = 0 && R316 = 0)) && (R22 = 0 || (R317 = 0 && R318 = 0)) && (R22 = 0 || (R319 = 0 && R320 = 0)) && (R22 = 0 || (R321 = 0 && R322 = 0)) && (R22 = 0 || (R323 = 0 && R324 = 0)) && (R22 = 0 || (R325 = 0 && R326 = 0)) && (R22 = 0 || (R327 = 0 && R328 = 0)) && (R22 = 0 || (R329 = 0 && R330 = 0)) && (R22 = 0 || (R331 = 0 && R332 = 0)) && (R22 = 0 || (R333 = 0 && R334 = 0)) && (R22 = 0 || (R335 = 0 && R336 = 0)) && (R78 + R75 = 0 || (R76 + R73 = 0 && R77 + R74 = 0)) && (R78 + R75 = 0 || (R81 + R79 = 0 && R82 + R80 = 0)) && (R90 + R87 = 0 || R92 + R89 < 1) && (R96 + R93 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R103 + R99 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R105 + R101 = 0 || R92 + R89 < 1) && (R112 + R107 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R114 + R109 = 0 || R92 + R89 < 1) && (R121 + R117 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R123 + R119 = 0 || R92 + R89 < 1) && (R130 + R125 = 0 || (R92 + R89 = 0 && R278 + R274 = 0)) && (R134 + R129 = 0 || (R132 + R127 = 0 && R133 + R128 = 0));
// End of Parikh automata intersection problem
