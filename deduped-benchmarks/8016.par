// Parikh automata intersection problem, generated by OSTRICH+
counter int R1773, R1774, R1775, R1776, R1777, R1778, R1779, R1780, R1781, R1782, R1783, R1784, R1785, R1786, R1787, R1788, R1789, R1790, R1791, R1792, R1793, R1794, R1795, R1796, R1797, R1798, R1799, R18, R1800, R1801, R1802, R1803, R1804, R1805, R1806, R1807, R1808, R1809, R1810, R1811, R1812, R1813, R1814, R1815, R1816, R1817, R1818, R1819, R1820, R1821, R1822, R1823, R1824, R1825, R1826, R1827, R1828, R1829, R1830, R1831, R1832, R1833, R1834, R1835, R1836, R1837, R1838, R1839, R1840, R1841, R1842, R1843, R1844, R1845, R1846, R1847, R1848, R1849, R1850, R1851, R1852, R1853, R1854, R1855, R1856, R1857, R1858, R1859, R1860, R1861, R1862, R1863, R1864, R1865, R1866, R1867, R1868, R1869, R1870, R1871, R1872, R1873, R1874, R1875, R1876, R1877, R1878, R1879, R1880, R1881, R1882, R1883, R1884, R1885, R1886, R1887, R1888, R1889, R1890, R1891, R1892, R1893, R1894, R1895, R1896, R1897, R1898, R1899, R1900, R1901, R1902, R1903, R1904, R1905, R1906, R1907, R1908, R1909, R1910, R1911, R1912, R1913, R1914, R1915, R1916, R1917, R1918, R1919, R1920, R1921, R1922, R1923, R1924, R1925, R1926, R1927, R1928, R1929, R1930, R1931, R1932, R1933, R1934, R1935, R1936, R1937, R1938, R1939, R1940, R1941, R1942, R1943, R1944, R1945, R1946, R1947, R1948, R1949, R1950, R1951, R1952, R1953, R1954, R1955, R1956, R1957, R1958, R1959, R1960, R1961, R1962, R1963, R1964, R1965, R1966, R1967, R1968, R1969, R1970, R1971, R1972, R1973, R1974, R1975, R1976, R1977, R1978, R1979, R1980, R1981, R1982, R1983, R1984, R1985, R1986, R1987, R1988, R1989, R1990, R1991, R1992, R1993, R1994, R1995, R1996, R1997, R1998, R1999, R2000, R2001, R2002, R2003, R2004, R2005, R2006, R2007, R2008, R2009, R2010, R2011, R2012, R2013, R2014, R2015, R2016, R2017, R2018, R2019, R2020, R2021, R2022, R2023, R2024, R2025, R2026, R2027, R2028, R2029, R2030, R2031, R2032, R2033, R2034, R2035, R2036, R2037, R2038, R2039, R2040, R2041, R2042, R2043, R2044, R2045, R2046, R2047, R2048, R2049, R2050, R2051, R2052, R2053, R2054, R2055, R2056, R2057, R2058, R21, R27, R28, R29, R2989, R2990, R2991, R2992, R2993, R2994, R2995, R2996, R2997, R2998, R2999, R3, R30, R3000, R3001, R3002, R3003, R3004, R3005, R3006, R3007, R3008, R3009, R3010, R3011, R3012, R3013, R3014, R3015, R3016, R3017, R3018, R3019, R3020, R3021, R3022, R3023, R3024, R3025, R3026, R3027, R3028, R3029, R3030, R3031, R3032, R3033, R3034, R3035, R3036, R3037, R3038, R3039, R3040, R3041, R3042, R3043, R3044, R3045, R3046, R3047, R3048, R3049, R3050, R3051, R3052, R3053, R3054, R3055, R3056, R3057, R3058, R3059, R3060, R3061, R3062, R3063, R3064, R3065, R3066, R3067, R3068, R3069, R3070, R3071, R3072, R3073, R3074, R3075, R3076, R3077, R3078, R3079, R3080, R3081, R3082, R3083, R3084, R3085, R3086, R3087, R3088, R3089, R3090, R3091, R3092, R3093, R3094, R3095, R3096, R3097, R3098, R3099, R31, R3100, R3101, R3102, R3103, R3104, R3105, R3106, R3107, R3108, R3109, R3110, R3111, R3112, R3113, R3114, R3115, R3116, R3117, R3118, R3119, R3120, R3121, R3122, R3123, R3124, R3125, R3126, R3127, R3128, R3129, R3130, R3131, R3132, R3133, R3134, R3135, R3136, R3137, R3138, R3139, R3140, R3141, R3142, R3143, R3144, R3145, R3146, R3147, R3148, R3149, R3150, R3151, R3152, R3153, R3154, R3155, R3156, R3157, R3158, R3159, R3160, R3161, R3162, R3163, R3164, R3165, R3166, R3167, R3168, R3169, R3170, R3171, R3172, R3173, R3174, R3175, R3176, R3177, R3178, R3179, R3180, R3181, R3182, R3183, R3184, R3185, R3186, R3187, R3188, R3189, R3190, R3191, R3192, R3193, R3194, R3195, R3196, R3197, R3198, R3199, R32, R3200, R3201, R3202, R3203, R3204, R3205, R3206, R3207, R3208, R3209, R3210, R3211, R3212, R3213, R3214, R3215, R3216, R3217, R3218, R3219, R3220, R3221, R3222, R3223, R3224, R3225, R3226, R3227, R3228, R3229, R3230, R3231, R3232, R3233, R3234, R3235, R3236, R3237, R3238, R3239, R3240, R3241, R3242, R3243, R3244, R3245, R3246, R3247, R3248, R3249, R3250, R3251, R3252, R3253, R3254, R3255, R3256, R3257, R3258, R3259, R3260, R3261, R3262, R3263, R3264, R3265, R3266, R3267, R3268, R3269, R3270, R3271, R3272, R3273, R3274, R3275, R3276, R3277, R3278, R3279, R3280, R3281, R3282, R3283, R3284, R3285, R3286, R3287, R3288, R3289, R3290, R3291, R3292, R3293, R3294, R3295, R3296, R3297, R3298, R33, R34, R35, R36, R37, R38, R39, R4, R40, R41, R42, R43, R44, R5, R6, R7, R8;
synchronised {  // Automata constraining P17
automaton P17_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining P6
automaton P6_0 {
  init s0;
  s0 -> s1 [99, 99];
  accepting s1;
};
};
synchronised {  // Automata constraining P27
automaton P27_0 {
  init s0;
  s0 -> s1 [108, 108];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R4 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R21 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [32, 32] { R38 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s0 [0, 65535] { R39 += 1, R40 += 1 };
  s0 -> s1 [0, 65535] { R40 += 1, R7 += 1 };
  s1 -> s1 [0, 65535] { R40 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R42 += 1 };
  s0 -> s0 [0, 65535] { R41 += 1, R42 += 1 };
  s0 -> s2 [9, 13] { R42 += 1 };
  s0 -> s1 [14, 31] { R42 += 1 };
  s0 -> s2 [32, 32] { R42 += 1 };
  s0 -> s1 [33, 65535] { R42 += 1 };
  s1 -> s1 [0, 65535] { R42 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R42 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R44 += 1, R8 += 1 };
  s0 -> s0 [0, 65535] { R43 += 1, R44 += 1 };
  s1 -> s1 [0, 65535] { R44 += 1, R8 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R3144 += 1 };
  s0 -> s0 [0, 65535] { R3143 += 1, R3144 += 1 };
  s0 -> s2 [67, 67] { R3144 += 1 };
  s0 -> s1 [68, 65535] { R3144 += 1 };
  s1 -> s1 [0, 64] { R3144 += 1 };
  s1 -> s2 [67, 67] { R3144 += 1 };
  s1 -> s1 [68, 65535] { R3144 += 1 };
  s2 -> s2 [0, 64] { R3144 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [67, 65535] { R3144 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R3146 += 1, R3 += 1 };
  s0 -> s0 [0, 65535] { R3145 += 1, R3146 += 1 };
  s1 -> s1 [0, 65535] { R3146 += 1, R3 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 66] { R3148 += 1 };
  s0 -> s2 [0, 65535] { R3148 += 1, R18 += 1 };
  s0 -> s0 [0, 65535] { R3147 += 1, R3148 += 1 };
  s0 -> s3 [67, 67] { R3148 += 1 };
  s0 -> s1 [68, 65535] { R3148 += 1 };
  s1 -> s1 [0, 66] { R3148 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [67, 67] { R3148 += 1 };
  s1 -> s1 [68, 65535] { R3148 += 1 };
  s2 -> s1 [0, 66] { R3148 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3148 += 1, R18 += 1 };
  s2 -> s3 [67, 67] { R3148 += 1 };
  s2 -> s1 [68, 65535] { R3148 += 1 };
  s3 -> s3 [0, 65535] { R3148 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R3150 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R3149 += 1, R3150 += 1 };
  s0 -> s2 [0, 65535] { R3150 += 1, R29 += 1, R30 += 1 };
  s0 -> s3 [9, 13] { R3150 += 1, R30 += 1 };
  s0 -> s1 [14, 31] { R3150 += 1, R30 += 1 };
  s0 -> s3 [32, 32] { R3150 += 1, R30 += 1 };
  s0 -> s1 [33, 65535] { R3150 += 1, R30 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3150 += 1 };
  s1 -> s1 [0, 65535] { R3150 += 1, R30 += 1 };
  s2 -> s1 [0, 8] { R3150 += 1, R30 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3150 += 1, R29 += 1, R30 += 1 };
  s2 -> s3 [9, 13] { R3150 += 1, R30 += 1 };
  s2 -> s1 [14, 31] { R3150 += 1, R30 += 1 };
  s2 -> s3 [32, 32] { R3150 += 1, R30 += 1 };
  s2 -> s1 [33, 65535] { R3150 += 1, R30 += 1 };
  s3 -> s1 [0, 65535] { R3150 += 1, R30 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3150 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R3152 += 1, R32 += 1, R5 += 1 };
  s0 -> s0 [0, 65535] { R3151 += 1, R3152 += 1 };
  s0 -> s2 [0, 65535] { R3152 += 1, R31 += 1, R32 += 1 };
  s1 -> s4 [0, 65535] { R3152 += 1 };
  s1 -> s1 [0, 65535] { R3152 += 1, R32 += 1, R5 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R3152 += 1, R32 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R3152 += 1, R31 += 1, R32 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3152 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R3154 += 1, R34 += 1 };
  s0 -> s0 [0, 65535] { R3153 += 1, R3154 += 1 };
  s0 -> s2 [0, 65535] { R3154 += 1, R33 += 1, R34 += 1 };
  s0 -> s3 [9, 13] { R3154 += 1, R34 += 1 };
  s0 -> s1 [14, 31] { R3154 += 1, R34 += 1 };
  s0 -> s3 [32, 32] { R3154 += 1, R34 += 1 };
  s0 -> s1 [33, 65535] { R3154 += 1, R34 += 1 };
  s1 -> s5 [0, 65535] { R3154 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3154 += 1, R34 += 1 };
  s2 -> s1 [0, 8] { R3154 += 1, R34 += 1 };
  s2 -> s2 [0, 65535] { R3154 += 1, R33 += 1, R34 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R3154 += 1, R34 += 1 };
  s2 -> s1 [14, 31] { R3154 += 1, R34 += 1 };
  s2 -> s3 [32, 32] { R3154 += 1, R34 += 1 };
  s2 -> s1 [33, 65535] { R3154 += 1, R34 += 1 };
  s3 -> s1 [0, 65535] { R3154 += 1, R34 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3154 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R3155 += 1, R3156 += 1 };
  s0 -> s1 [0, 65535] { R3156 += 1, R35 += 1, R36 += 1 };
  s0 -> s2 [0, 65535] { R3156 += 1, R36 += 1, R6 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3156 += 1, R35 += 1, R36 += 1 };
  s1 -> s2 [0, 65535] { R3156 += 1, R36 += 1, R6 += 1 };
  s2 -> s3 [0, 65535] { R3156 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3156 += 1, R36 += 1, R6 += 1 };
  s3 -> s3 [0, 65535] { R3156 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 66] { R3158 += 1, R3002 += 1 };
  s0 -> s2 [0, 65535] { R3158 += 1, R3001 += 1, R3002 += 1 };
  s0 -> s0 [0, 65535] { R3157 += 1, R3158 += 1 };
  s0 -> s1 [68, 65535] { R3158 += 1, R3002 += 1 };
  s1 -> s1 [0, 66] { R3158 += 1, R3002 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3158 += 1 };
  s1 -> s1 [68, 65535] { R3158 += 1, R3002 += 1 };
  s2 -> s1 [0, 66] { R3158 += 1, R3002 += 1 };
  s2 -> s2 [0, 65535] { R3158 += 1, R3001 += 1, R3002 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [68, 65535] { R3158 += 1, R3002 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65535] { R3160 += 1, R3004 += 1, R27 += 1 };
  s0 -> s2 [0, 65535] { R3160 += 1, R3003 += 1, R3004 += 1 };
  s0 -> s0 [0, 65535] { R3159 += 1, R3160 += 1 };
  s1 -> s1 [0, 65535] { R3160 += 1, R3004 += 1, R27 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3160 += 1 };
  s2 -> s1 [0, 65535] { R3160 += 1, R3004 += 1, R27 += 1 };
  s2 -> s2 [0, 65535] { R3160 += 1, R3003 += 1, R3004 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3160 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 67] { R3162 += 1, R3006 += 1 };
  s0 -> s0 [0, 65535] { R3161 += 1, R3162 += 1 };
  s0 -> s2 [0, 65535] { R3162 += 1, R3005 += 1, R3006 += 1 };
  s0 -> s1 [70, 65535] { R3162 += 1, R3006 += 1 };
  s1 -> s1 [0, 67] { R3162 += 1, R3006 += 1 };
  s1 -> s1 [0, 65535] { R3162 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [70, 65535] { R3162 += 1, R3006 += 1 };
  s2 -> s1 [0, 67] { R3162 += 1, R3006 += 1 };
  s2 -> s2 [0, 65535] { R3162 += 1, R3005 += 1, R3006 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [70, 65535] { R3162 += 1, R3006 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s2, s3;
};
automaton value2_17 {
  init s0;
  s0 -> s0 [0, 65535] { R3163 += 1, R3164 += 1 };
  s0 -> s1 [0, 65535] { R3164 += 1, R3007 += 1, R3008 += 1 };
  s0 -> s2 [0, 65535] { R3164 += 1, R3008 += 1, R1774 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R3164 += 1, R3007 += 1, R3008 += 1 };
  s1 -> s2 [0, 65535] { R3164 += 1, R3008 += 1, R1774 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R3164 += 1 };
  s2 -> s2 [0, 65535] { R3164 += 1, R3008 += 1, R1774 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3164 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 69] { R3166 += 1, R3010 += 1 };
  s0 -> s2 [0, 65535] { R3166 += 1, R3009 += 1, R3010 += 1 };
  s0 -> s3 [0, 65535] { R3166 += 1, R3010 += 1, R1776 += 1 };
  s0 -> s0 [0, 65535] { R3165 += 1, R3166 += 1 };
  s0 -> s1 [71, 65535] { R3166 += 1, R3010 += 1 };
  s1 -> s1 [0, 69] { R3166 += 1, R3010 += 1 };
  s1 -> s1 [0, 65535] { R3166 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [71, 65535] { R3166 += 1, R3010 += 1 };
  s2 -> s1 [0, 69] { R3166 += 1, R3010 += 1 };
  s2 -> s2 [0, 65535] { R3166 += 1, R3009 += 1, R3010 += 1 };
  s2 -> s3 [0, 65535] { R3166 += 1, R3010 += 1, R1776 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [71, 65535] { R3166 += 1, R3010 += 1 };
  s3 -> s1 [0, 69] { R3166 += 1, R3010 += 1 };
  s3 -> s3 [0, 65535] { R3166 += 1, R3010 += 1, R1776 += 1 };
  s3 -> s4 [0, 65535] { R3166 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [71, 65535] { R3166 += 1, R3010 += 1 };
  s4 -> s4 [0, 65535] { R3166 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65535] { R3168 += 1, R3012 += 1, R1781 += 1, R1782 += 1 };
  s0 -> s2 [0, 65535] { R3168 += 1, R3012 += 1, R1780 += 1, R1781 += 1 };
  s0 -> s3 [0, 65535] { R3168 += 1, R3011 += 1, R3012 += 1 };
  s0 -> s0 [0, 65535] { R3167 += 1, R3168 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3168 += 1, R3012 += 1, R1781 += 1, R1782 += 1 };
  s1 -> s6 [0, 65535] { R3168 += 1, R3012 += 1 };
  s1 -> s5 [0, 65535] { R3168 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R3168 += 1, R3012 += 1, R1781 += 1, R1782 += 1 };
  s2 -> s5 [0, 65535] { R3168 += 1 };
  s2 -> s2 [0, 65535] { R3168 += 1, R3012 += 1, R1780 += 1, R1781 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3168 += 1, R3012 += 1, R1781 += 1, R1782 += 1 };
  s3 -> s2 [0, 65535] { R3168 += 1, R3012 += 1, R1780 += 1, R1781 += 1 };
  s3 -> s3 [0, 65535] { R3168 += 1, R3011 += 1, R3012 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3168 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3168 += 1, R3012 += 1 };
  s6 -> s5 [0, 65535] { R3168 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 69] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s0 -> s0 [0, 65535] { R3169 += 1, R3170 += 1 };
  s0 -> s2 [0, 65535] { R3170 += 1, R3014 += 1, R1785 += 1, R1786 += 1 };
  s0 -> s3 [0, 65535] { R3170 += 1, R3013 += 1, R3014 += 1 };
  s0 -> s4 [70, 70] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s0 -> s5 [70, 70] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s0 -> s1 [77, 65535] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s1 -> s1 [0, 69] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s1 -> s1 [0, 65535] { R3170 += 1, R3014 += 1 };
  s1 -> s6 [0, 65535] { R3170 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s1 -> s5 [70, 70] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s1 -> s1 [77, 65535] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s2 -> s1 [0, 69] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s2 -> s6 [0, 65535] { R3170 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3170 += 1, R3014 += 1, R1785 += 1, R1786 += 1 };
  s2 -> s4 [70, 70] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s2 -> s5 [70, 70] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s2 -> s1 [77, 65535] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s3 -> s1 [0, 69] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s2 [0, 65535] { R3170 += 1, R3014 += 1, R1785 += 1, R1786 += 1 };
  s3 -> s3 [0, 65535] { R3170 += 1, R3013 += 1, R3014 += 1 };
  s3 -> s4 [70, 70] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s3 -> s5 [70, 70] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s3 -> s1 [77, 65535] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s4 -> s4 [0, 70] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s4 -> s4 [0, 65535] { R3170 += 1, R3014 += 1 };
  s4 -> s6 [0, 65535] { R3170 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [77, 65535] { R3170 += 1, R3014 += 1, R1786 += 1 };
  s5 -> s6 [0, 65535] { R3170 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R3170 += 1, R3014 += 1 };
  s6 -> s6 [0, 65535] { R3170 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 69] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s0 [0, 65535] { R3171 += 1, R3172 += 1 };
  s0 -> s2 [0, 65535] { R3172 += 1, R3016 += 1, R1790 += 1, R1791 += 1 };
  s0 -> s3 [0, 65535] { R3172 += 1, R3015 += 1, R3016 += 1 };
  s0 -> s4 [70, 70] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s5 [70, 70] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s0 -> s1 [71, 65535] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s1 [0, 69] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3172 += 1 };
  s1 -> s1 [0, 65535] { R3172 += 1, R3016 += 1 };
  s1 -> s4 [70, 70] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s5 [70, 70] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s1 -> s1 [71, 65535] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s1 [0, 69] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s2 [0, 65535] { R3172 += 1, R3016 += 1, R1790 += 1, R1791 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R3172 += 1 };
  s2 -> s4 [70, 70] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s5 [70, 70] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s2 -> s1 [71, 65535] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s1 [0, 69] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s2 [0, 65535] { R3172 += 1, R3016 += 1, R1790 += 1, R1791 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3172 += 1, R3015 += 1, R3016 += 1 };
  s3 -> s4 [70, 70] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s5 [70, 70] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s3 -> s1 [71, 65535] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s4 -> s4 [0, 65535] { R3172 += 1, R3016 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3172 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3172 += 1, R3016 += 1, R1791 += 1, R1792 += 1 };
  s5 -> s7 [0, 65535] { R3172 += 1 };
  s5 -> s8 [0, 65535] { R3172 += 1, R3016 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3172 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3172 += 1 };
  s8 -> s8 [0, 65535] { R3172 += 1, R3016 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 69] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s2 [0, 65535] { R3174 += 1, R3018 += 1, R1796 += 1, R1797 += 1 };
  s0 -> s3 [0, 65535] { R3174 += 1, R3017 += 1, R3018 += 1 };
  s0 -> s0 [0, 65535] { R3173 += 1, R3174 += 1 };
  s0 -> s4 [70, 70] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s5 [70, 70] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s0 -> s1 [71, 65535] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s1 [0, 69] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3174 += 1 };
  s1 -> s1 [0, 65535] { R3174 += 1, R3018 += 1 };
  s1 -> s4 [70, 70] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s5 [70, 70] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s1 -> s1 [71, 65535] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s1 [0, 69] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3174 += 1, R3018 += 1, R1796 += 1, R1797 += 1 };
  s2 -> s7 [0, 65535] { R3174 += 1 };
  s2 -> s4 [70, 70] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s5 [70, 70] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s2 -> s1 [71, 65535] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s1 [0, 69] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R3174 += 1, R3018 += 1, R1796 += 1, R1797 += 1 };
  s3 -> s3 [0, 65535] { R3174 += 1, R3017 += 1, R3018 += 1 };
  s3 -> s4 [70, 70] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s5 [70, 70] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s3 -> s1 [71, 65535] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3174 += 1 };
  s4 -> s8 [0, 65535] { R3174 += 1, R3018 += 1 };
  s4 -> s4 [0, 65535] { R3174 += 1, R3018 += 1, R1797 += 1, R1798 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3174 += 1 };
  s5 -> s5 [0, 65535] { R3174 += 1, R3018 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3174 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3174 += 1 };
  s8 -> s8 [0, 65535] { R3174 += 1, R3018 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 69] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s2 [0, 65535] { R3176 += 1, R3019 += 1, R3020 += 1 };
  s0 -> s0 [0, 65535] { R3175 += 1, R3176 += 1 };
  s0 -> s3 [0, 65535] { R3176 += 1, R3020 += 1, R1803 += 1, R1804 += 1 };
  s0 -> s4 [70, 70] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s5 [70, 70] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s0 -> s1 [71, 65535] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [0, 69] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [0, 65535] { R3176 += 1, R3020 += 1 };
  s1 -> s7 [0, 65535] { R3176 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s5 [70, 70] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s1 -> s1 [71, 65535] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s1 [0, 69] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s2 [0, 65535] { R3176 += 1, R3019 += 1, R3020 += 1 };
  s2 -> s3 [0, 65535] { R3176 += 1, R3020 += 1, R1803 += 1, R1804 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s5 [70, 70] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s2 -> s1 [71, 65535] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s1 [0, 69] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s7 [0, 65535] { R3176 += 1 };
  s3 -> s3 [0, 65535] { R3176 += 1, R3020 += 1, R1803 += 1, R1804 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [70, 70] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s5 [70, 70] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s3 -> s1 [71, 65535] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s4 -> s4 [0, 65535] { R3176 += 1, R3020 += 1 };
  s4 -> s7 [0, 65535] { R3176 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R3176 += 1, R3020 += 1 };
  s5 -> s7 [0, 65535] { R3176 += 1 };
  s5 -> s5 [0, 65535] { R3176 += 1, R3020 += 1, R1804 += 1, R1805 += 1, R1806 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3176 += 1, R3020 += 1 };
  s6 -> s7 [0, 65535] { R3176 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R3176 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 69] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s2 [0, 65535] { R3178 += 1, R3021 += 1, R3022 += 1 };
  s0 -> s3 [0, 65535] { R3178 += 1, R3022 += 1, R1812 += 1, R1813 += 1 };
  s0 -> s0 [0, 65535] { R3177 += 1, R3178 += 1 };
  s0 -> s4 [70, 70] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s5 [70, 70] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s0 -> s1 [71, 65535] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [0, 69] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3178 += 1, R3022 += 1 };
  s1 -> s8 [0, 65535] { R3178 += 1 };
  s1 -> s4 [70, 70] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s5 [70, 70] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s1 -> s1 [71, 65535] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s1 [0, 69] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3178 += 1, R3021 += 1, R3022 += 1 };
  s2 -> s3 [0, 65535] { R3178 += 1, R3022 += 1, R1812 += 1, R1813 += 1 };
  s2 -> s4 [70, 70] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s5 [70, 70] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s2 -> s1 [71, 65535] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s1 [0, 69] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3178 += 1, R3022 += 1, R1812 += 1, R1813 += 1 };
  s3 -> s8 [0, 65535] { R3178 += 1 };
  s3 -> s4 [70, 70] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s5 [70, 70] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s3 -> s1 [71, 65535] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3178 += 1, R3022 += 1 };
  s4 -> s8 [0, 65535] { R3178 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3178 += 1, R3022 += 1 };
  s5 -> s5 [0, 65535] { R3178 += 1, R3022 += 1, R1813 += 1, R1814 += 1, R1815 += 1 };
  s5 -> s8 [0, 65535] { R3178 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3178 += 1, R3022 += 1 };
  s7 -> s8 [0, 65535] { R3178 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3178 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 69] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s0 [0, 65535] { R3179 += 1, R3180 += 1 };
  s0 -> s2 [0, 65535] { R3180 += 1, R3024 += 1, R1821 += 1, R1822 += 1 };
  s0 -> s3 [0, 65535] { R3180 += 1, R3023 += 1, R3024 += 1 };
  s0 -> s4 [70, 70] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s5 [70, 70] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s0 -> s1 [71, 65535] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [0, 69] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [0, 65535] { R3180 += 1, R3024 += 1 };
  s1 -> s6 [0, 65535] { R3180 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [70, 70] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s5 [70, 70] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s1 -> s1 [71, 65535] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s1 [0, 69] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s6 [0, 65535] { R3180 += 1 };
  s2 -> s2 [0, 65535] { R3180 += 1, R3024 += 1, R1821 += 1, R1822 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [70, 70] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s5 [70, 70] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s2 -> s1 [71, 65535] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s1 [0, 69] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s2 [0, 65535] { R3180 += 1, R3024 += 1, R1821 += 1, R1822 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3180 += 1, R3023 += 1, R3024 += 1 };
  s3 -> s4 [70, 70] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s5 [70, 70] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s3 -> s1 [71, 65535] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s4 -> s6 [0, 65535] { R3180 += 1 };
  s4 -> s4 [0, 65535] { R3180 += 1, R3024 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R3180 += 1 };
  s5 -> s5 [0, 65535] { R3180 += 1, R3024 += 1, R1822 += 1, R1823 += 1, R1824 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3180 += 1, R3024 += 1 };
  s6 -> s6 [0, 65535] { R3180 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3180 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3180 += 1, R3024 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 69] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s2 [0, 65535] { R3182 += 1, R3026 += 1, R1830 += 1, R1831 += 1 };
  s0 -> s0 [0, 65535] { R3181 += 1, R3182 += 1 };
  s0 -> s3 [0, 65535] { R3182 += 1, R3025 += 1, R3026 += 1 };
  s0 -> s4 [70, 70] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s5 [70, 70] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s0 -> s1 [71, 65535] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [0, 69] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3182 += 1, R3026 += 1 };
  s1 -> s8 [0, 65535] { R3182 += 1 };
  s1 -> s4 [70, 70] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s5 [70, 70] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s1 -> s1 [71, 65535] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s1 [0, 69] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s2 [0, 65535] { R3182 += 1, R3026 += 1, R1830 += 1, R1831 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s8 [0, 65535] { R3182 += 1 };
  s2 -> s4 [70, 70] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s5 [70, 70] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s2 -> s1 [71, 65535] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s1 [0, 69] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s2 [0, 65535] { R3182 += 1, R3026 += 1, R1830 += 1, R1831 += 1 };
  s3 -> s3 [0, 65535] { R3182 += 1, R3025 += 1, R3026 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [70, 70] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s5 [70, 70] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s3 -> s1 [71, 65535] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s4 -> s4 [0, 65535] { R3182 += 1, R3026 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R3182 += 1 };
  s5 -> s6 [0, 65535] { R3182 += 1, R3026 += 1 };
  s5 -> s5 [0, 65535] { R3182 += 1, R3026 += 1, R1831 += 1, R1832 += 1, R1833 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3182 += 1 };
  s6 -> s6 [0, 65535] { R3182 += 1, R3026 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R3182 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3182 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 69] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s0 [0, 65535] { R3183 += 1, R3184 += 1 };
  s0 -> s2 [0, 65535] { R3184 += 1, R3028 += 1, R1839 += 1, R1840 += 1 };
  s0 -> s3 [0, 65535] { R3184 += 1, R3027 += 1, R3028 += 1 };
  s0 -> s4 [70, 70] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s5 [70, 70] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s0 -> s1 [71, 65535] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [0, 69] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s6 [0, 65535] { R3184 += 1 };
  s1 -> s1 [0, 65535] { R3184 += 1, R3028 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [70, 70] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s5 [70, 70] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s1 -> s1 [71, 65535] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s1 [0, 69] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s2 [0, 65535] { R3184 += 1, R3028 += 1, R1839 += 1, R1840 += 1 };
  s2 -> s6 [0, 65535] { R3184 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [70, 70] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s5 [70, 70] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s2 -> s1 [71, 65535] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s1 [0, 69] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s2 [0, 65535] { R3184 += 1, R3028 += 1, R1839 += 1, R1840 += 1 };
  s3 -> s3 [0, 65535] { R3184 += 1, R3027 += 1, R3028 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [70, 70] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s5 [70, 70] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s3 -> s1 [71, 65535] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s4 -> s6 [0, 65535] { R3184 += 1 };
  s4 -> s4 [0, 65535] { R3184 += 1, R3028 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R3184 += 1 };
  s5 -> s5 [0, 65535] { R3184 += 1, R3028 += 1, R1840 += 1, R1841 += 1, R1842 += 1 };
  s5 -> s7 [0, 65535] { R3184 += 1, R3028 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R3184 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R3184 += 1 };
  s7 -> s7 [0, 65535] { R3184 += 1, R3028 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 69] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s0 -> s0 [0, 65535] { R3185 += 1, R3186 += 1 };
  s0 -> s2 [0, 65535] { R3186 += 1, R3030 += 1, R1845 += 1, R1846 += 1 };
  s0 -> s3 [0, 65535] { R3186 += 1, R3029 += 1, R3030 += 1 };
  s0 -> s4 [70, 70] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s0 -> s1 [71, 65535] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s1 -> s1 [0, 69] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s1 -> s4 [70, 70] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s1 -> s1 [71, 65535] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s2 -> s1 [0, 69] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s2 -> s2 [0, 65535] { R3186 += 1, R3030 += 1, R1845 += 1, R1846 += 1 };
  s2 -> s4 [70, 70] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s2 -> s1 [71, 65535] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s3 -> s1 [0, 69] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s3 -> s2 [0, 65535] { R3186 += 1, R3030 += 1, R1845 += 1, R1846 += 1 };
  s3 -> s3 [0, 65535] { R3186 += 1, R3029 += 1, R3030 += 1 };
  s3 -> s4 [70, 70] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s3 -> s1 [71, 65535] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s4 -> s5 [0, 65535] { R3186 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3186 += 1, R3030 += 1, R1846 += 1 };
  s4 -> s7 [0, 65535] { R3186 += 1, R3030 += 1 };
  s5 -> s5 [0, 65535] { R3186 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R3186 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3186 += 1, R3030 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R3187 += 1, R3188 += 1 };
  s0 -> s1 [0, 65535] { R3188 += 1, R3032 += 1, R1850 += 1, R1851 += 1 };
  s0 -> s2 [0, 65535] { R3188 += 1, R3032 += 1, R1851 += 1, R1852 += 1 };
  s0 -> s3 [0, 65535] { R3188 += 1, R3031 += 1, R3032 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R3188 += 1, R3032 += 1, R1850 += 1, R1851 += 1 };
  s1 -> s6 [0, 65535] { R3188 += 1 };
  s1 -> s2 [0, 65535] { R3188 += 1, R3032 += 1, R1851 += 1, R1852 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R3188 += 1, R3032 += 1 };
  s2 -> s6 [0, 65535] { R3188 += 1 };
  s2 -> s2 [0, 65535] { R3188 += 1, R3032 += 1, R1851 += 1, R1852 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R3188 += 1, R3032 += 1, R1850 += 1, R1851 += 1 };
  s3 -> s2 [0, 65535] { R3188 += 1, R3032 += 1, R1851 += 1, R1852 += 1 };
  s3 -> s3 [0, 65535] { R3188 += 1, R3031 += 1, R3032 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3188 += 1, R3032 += 1 };
  s5 -> s6 [0, 65535] { R3188 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R3188 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s0 -> s2 [0, 65535] { R3190 += 1, R3034 += 1, R1856 += 1, R1857 += 1 };
  s0 -> s3 [0, 65535] { R3190 += 1, R3033 += 1, R3034 += 1 };
  s0 -> s4 [0, 65535] { R3190 += 1, R3034 += 1, R1857 += 1, R1858 += 1 };
  s0 -> s0 [0, 65535] { R3189 += 1, R3190 += 1 };
  s0 -> s1 [71, 65535] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s1 -> s1 [0, 69] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R3190 += 1 };
  s1 -> s1 [0, 65535] { R3190 += 1, R3034 += 1 };
  s1 -> s1 [71, 65535] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s2 -> s1 [0, 69] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s2 -> s2 [0, 65535] { R3190 += 1, R3034 += 1, R1856 += 1, R1857 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R3190 += 1, R3034 += 1, R1857 += 1, R1858 += 1 };
  s2 -> s7 [0, 65535] { R3190 += 1 };
  s2 -> s1 [71, 65535] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s3 -> s1 [0, 69] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s3 -> s2 [0, 65535] { R3190 += 1, R3034 += 1, R1856 += 1, R1857 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3190 += 1, R3033 += 1, R3034 += 1 };
  s3 -> s4 [0, 65535] { R3190 += 1, R3034 += 1, R1857 += 1, R1858 += 1 };
  s3 -> s1 [71, 65535] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s4 -> s1 [0, 69] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3190 += 1, R3034 += 1, R1857 += 1, R1858 += 1 };
  s4 -> s6 [0, 65535] { R3190 += 1, R3034 += 1 };
  s4 -> s7 [0, 65535] { R3190 += 1 };
  s4 -> s1 [71, 65535] { R3190 += 1, R3034 += 1, R1857 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3190 += 1, R3034 += 1 };
  s6 -> s7 [0, 65535] { R3190 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3190 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s0 -> s2 [0, 65535] { R3192 += 1, R3036 += 1, R1863 += 1, R1864 += 1 };
  s0 -> s0 [0, 65535] { R3191 += 1, R3192 += 1 };
  s0 -> s3 [0, 65535] { R3192 += 1, R3035 += 1, R3036 += 1 };
  s0 -> s4 [0, 65535] { R3192 += 1, R3036 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s0 -> s1 [71, 65535] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s1 -> s1 [0, 69] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3192 += 1, R3036 += 1, R1864 += 1 };
  s1 -> s6 [0, 65535] { R3192 += 1 };
  s1 -> s7 [0, 65535] { R3192 += 1, R3036 += 1 };
  s1 -> s1 [71, 65535] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s2 -> s1 [0, 69] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s2 -> s2 [0, 65535] { R3192 += 1, R3036 += 1, R1863 += 1, R1864 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3192 += 1 };
  s2 -> s4 [0, 65535] { R3192 += 1, R3036 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s2 -> s1 [71, 65535] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s3 -> s1 [0, 69] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s3 -> s2 [0, 65535] { R3192 += 1, R3036 += 1, R1863 += 1, R1864 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3192 += 1, R3035 += 1, R3036 += 1 };
  s3 -> s4 [0, 65535] { R3192 += 1, R3036 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s3 -> s1 [71, 65535] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s4 -> s1 [0, 69] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3192 += 1 };
  s4 -> s7 [0, 65535] { R3192 += 1, R3036 += 1 };
  s4 -> s4 [0, 65535] { R3192 += 1, R3036 += 1, R1864 += 1, R1865 += 1, R1866 += 1 };
  s4 -> s1 [71, 65535] { R3192 += 1, R3036 += 1, R1864 += 1, R1866 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3192 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3192 += 1 };
  s7 -> s7 [0, 65535] { R3192 += 1, R3036 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R3193 += 1, R3194 += 1 };
  s0 -> s1 [0, 65535] { R3194 += 1, R3038 += 1, R1872 += 1, R1873 += 1 };
  s0 -> s2 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s0 -> s3 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s0 -> s4 [0, 65535] { R3194 += 1, R3037 += 1, R3038 += 1 };
  s1 -> s1 [0, 65535] { R3194 += 1, R3038 += 1, R1872 += 1, R1873 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s1 -> s3 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s1 -> s7 [0, 65535] { R3194 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s2 -> s3 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s2 -> s7 [0, 65535] { R3194 += 1 };
  s2 -> s8 [0, 65535] { R3194 += 1, R3038 += 1 };
  s3 -> s6 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s3 -> s7 [0, 65535] { R3194 += 1 };
  s3 -> s8 [0, 65535] { R3194 += 1, R3038 += 1 };
  s4 -> s1 [0, 65535] { R3194 += 1, R3038 += 1, R1872 += 1, R1873 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1, R1874 += 1, R1875 += 1 };
  s4 -> s3 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1, R1875 += 1, R1876 += 1 };
  s4 -> s4 [0, 65535] { R3194 += 1, R3037 += 1, R3038 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3194 += 1, R3038 += 1, R1873 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s7 [0, 65535] { R3194 += 1 };
  s6 -> s8 [0, 65535] { R3194 += 1, R3038 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3194 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R3194 += 1 };
  s8 -> s8 [0, 65535] { R3194 += 1, R3038 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s0 -> s0 [0, 65535] { R3195 += 1, R3196 += 1 };
  s0 -> s2 [0, 65535] { R3196 += 1, R3040 += 1, R1881 += 1, R1882 += 1 };
  s0 -> s3 [0, 65535] { R3196 += 1, R3040 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s0 -> s4 [0, 65535] { R3196 += 1, R3039 += 1, R3040 += 1 };
  s0 -> s1 [76, 65535] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s1 -> s1 [0, 70] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s1 -> s1 [0, 65535] { R3196 += 1, R3040 += 1, R1882 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R3196 += 1 };
  s1 -> s7 [0, 65535] { R3196 += 1, R3040 += 1 };
  s1 -> s1 [76, 65535] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s2 -> s1 [0, 70] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s2 -> s2 [0, 65535] { R3196 += 1, R3040 += 1, R1881 += 1, R1882 += 1 };
  s2 -> s3 [0, 65535] { R3196 += 1, R3040 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R3196 += 1 };
  s2 -> s1 [76, 65535] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s3 -> s1 [0, 70] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s3 -> s3 [0, 65535] { R3196 += 1, R3040 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3196 += 1 };
  s3 -> s7 [0, 65535] { R3196 += 1, R3040 += 1 };
  s3 -> s1 [76, 65535] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s4 -> s1 [0, 70] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s4 -> s2 [0, 65535] { R3196 += 1, R3040 += 1, R1881 += 1, R1882 += 1 };
  s4 -> s3 [0, 65535] { R3196 += 1, R3040 += 1, R1882 += 1, R1883 += 1, R1884 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3196 += 1, R3039 += 1, R3040 += 1 };
  s4 -> s1 [76, 65535] { R3196 += 1, R3040 += 1, R1882 += 1, R1884 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3196 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3196 += 1 };
  s7 -> s7 [0, 65535] { R3196 += 1, R3040 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s0 -> s2 [0, 65535] { R3198 += 1, R3042 += 1, R1890 += 1, R1891 += 1 };
  s0 -> s3 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s0 -> s0 [0, 65535] { R3197 += 1, R3198 += 1 };
  s0 -> s4 [0, 65535] { R3198 += 1, R3041 += 1, R3042 += 1 };
  s1 -> s1 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s1 -> s6 [0, 65535] { R3198 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s8 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1 };
  s1 -> s7 [0, 65535] { R3198 += 1, R3042 += 1 };
  s2 -> s1 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s2 -> s6 [0, 65535] { R3198 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3198 += 1, R3042 += 1, R1890 += 1, R1891 += 1 };
  s2 -> s3 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s3 -> s1 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s3 -> s6 [0, 65535] { R3198 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s3 -> s7 [0, 65535] { R3198 += 1, R3042 += 1 };
  s4 -> s1 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1, R1893 += 1, R1894 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R3198 += 1, R3042 += 1, R1890 += 1, R1891 += 1 };
  s4 -> s3 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1, R1892 += 1, R1893 += 1 };
  s4 -> s4 [0, 65535] { R3198 += 1, R3041 += 1, R3042 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3198 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R3198 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R3198 += 1, R3042 += 1 };
  s8 -> s6 [0, 65535] { R3198 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R3198 += 1, R3042 += 1, R1891 += 1 };
  s8 -> s7 [0, 65535] { R3198 += 1, R3042 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 75] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s0 -> s2 [0, 65535] { R3200 += 1, R3044 += 1, R1900 += 1, R1901 += 1 };
  s0 -> s3 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s0 -> s4 [0, 65535] { R3200 += 1, R3043 += 1, R3044 += 1 };
  s0 -> s5 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s0 -> s0 [0, 65535] { R3199 += 1, R3200 += 1 };
  s0 -> s1 [77, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s1 -> s1 [0, 75] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s1 -> s6 [0, 65535] { R3200 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1 };
  s1 -> s9 [0, 65535] { R3200 += 1, R3044 += 1 };
  s1 -> s1 [77, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s2 -> s1 [0, 75] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s2 -> s6 [0, 65535] { R3200 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3200 += 1, R3044 += 1, R1900 += 1, R1901 += 1 };
  s2 -> s3 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s2 -> s5 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s2 -> s1 [77, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s3 -> s1 [0, 75] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s3 -> s6 [0, 65535] { R3200 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s3 -> s5 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s3 -> s9 [0, 65535] { R3200 += 1, R3044 += 1 };
  s3 -> s1 [77, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s4 -> s1 [0, 75] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s2 [0, 65535] { R3200 += 1, R3044 += 1, R1900 += 1, R1901 += 1 };
  s4 -> s3 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1902 += 1, R1903 += 1 };
  s4 -> s4 [0, 65535] { R3200 += 1, R3043 += 1, R3044 += 1 };
  s4 -> s5 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s4 -> s1 [77, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s5 -> s1 [0, 75] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s5 -> s6 [0, 65535] { R3200 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1 };
  s5 -> s5 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1, R1904 += 1 };
  s5 -> s9 [0, 65535] { R3200 += 1, R3044 += 1 };
  s5 -> s1 [77, 65535] { R3200 += 1, R3044 += 1, R1901 += 1, R1903 += 1 };
  s6 -> s6 [0, 65535] { R3200 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R3200 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3200 += 1, R3044 += 1, R1901 += 1 };
  s8 -> s9 [0, 65535] { R3200 += 1, R3044 += 1 };
  s9 -> s6 [0, 65535] { R3200 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R3200 += 1, R3044 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 75] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s0 -> s2 [0, 65535] { R3202 += 1, R3046 += 1, R1911 += 1, R1912 += 1 };
  s0 -> s3 [0, 65535] { R3202 += 1, R3045 += 1, R3046 += 1 };
  s0 -> s4 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s0 -> s5 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s0 -> s0 [0, 65535] { R3201 += 1, R3202 += 1 };
  s0 -> s1 [77, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s1 -> s1 [0, 75] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1 };
  s1 -> s7 [0, 65535] { R3202 += 1, R3046 += 1 };
  s1 -> s8 [0, 65535] { R3202 += 1 };
  s1 -> s9 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1 };
  s1 -> s1 [77, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s2 -> s1 [0, 75] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s2 -> s2 [0, 65535] { R3202 += 1, R3046 += 1, R1911 += 1, R1912 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s2 -> s5 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s2 -> s8 [0, 65535] { R3202 += 1 };
  s2 -> s1 [77, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s3 -> s1 [0, 75] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s3 -> s2 [0, 65535] { R3202 += 1, R3046 += 1, R1911 += 1, R1912 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3202 += 1, R3045 += 1, R3046 += 1 };
  s3 -> s4 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s3 -> s5 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s3 -> s1 [77, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s4 -> s1 [0, 75] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1913 += 1, R1914 += 1 };
  s4 -> s5 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s4 -> s7 [0, 65535] { R3202 += 1, R3046 += 1 };
  s4 -> s8 [0, 65535] { R3202 += 1 };
  s4 -> s1 [77, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s5 -> s1 [0, 75] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1915 += 1, R1916 += 1 };
  s5 -> s7 [0, 65535] { R3202 += 1, R3046 += 1 };
  s5 -> s8 [0, 65535] { R3202 += 1 };
  s5 -> s9 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1 };
  s5 -> s1 [77, 65535] { R3202 += 1, R3046 += 1, R1912 += 1, R1914 += 1, R1916 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3202 += 1, R3046 += 1 };
  s7 -> s8 [0, 65535] { R3202 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3202 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R3202 += 1, R3046 += 1 };
  s9 -> s8 [0, 65535] { R3202 += 1 };
  s9 -> s9 [0, 65535] { R3202 += 1, R3046 += 1, R1912 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65535] { R3204 += 1, R3047 += 1, R3048 += 1 };
  s0 -> s2 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s0 -> s3 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s0 -> s4 [0, 65535] { R3204 += 1, R3048 += 1, R1924 += 1, R1925 += 1 };
  s0 -> s0 [0, 65535] { R3203 += 1, R3204 += 1 };
  s0 -> s5 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s1 -> s1 [0, 65535] { R3204 += 1, R3047 += 1, R3048 += 1 };
  s1 -> s2 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s1 -> s3 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s1 -> s4 [0, 65535] { R3204 += 1, R3048 += 1, R1924 += 1, R1925 += 1 };
  s1 -> s5 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s1 -> s9 [0, 65535];
  s2 -> s2 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s2 -> s3 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s2 -> s7 [0, 65535] { R3204 += 1, R3048 += 1 };
  s2 -> s8 [0, 65535] { R3204 += 1 };
  s2 -> s5 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s2 -> s9 [0, 65535];
  s3 -> s6 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1 };
  s3 -> s3 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s3 -> s7 [0, 65535] { R3204 += 1, R3048 += 1 };
  s3 -> s8 [0, 65535] { R3204 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s10 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1 };
  s4 -> s2 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1926 += 1, R1927 += 1 };
  s4 -> s3 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s4 -> s8 [0, 65535] { R3204 += 1 };
  s4 -> s4 [0, 65535] { R3204 += 1, R3048 += 1, R1924 += 1, R1925 += 1 };
  s4 -> s5 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s4 -> s9 [0, 65535];
  s5 -> s6 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1 };
  s5 -> s3 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1929 += 1, R1930 += 1 };
  s5 -> s7 [0, 65535] { R3204 += 1, R3048 += 1 };
  s5 -> s8 [0, 65535] { R3204 += 1 };
  s5 -> s5 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1, R1928 += 1, R1929 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1 };
  s6 -> s7 [0, 65535] { R3204 += 1, R3048 += 1 };
  s6 -> s8 [0, 65535] { R3204 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R3204 += 1, R3048 += 1 };
  s7 -> s8 [0, 65535] { R3204 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s8 [0, 65535] { R3204 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s6 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1 };
  s10 -> s7 [0, 65535] { R3204 += 1, R3048 += 1 };
  s10 -> s8 [0, 65535] { R3204 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3204 += 1, R3048 += 1, R1925 += 1, R1927 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1 };
  s0 -> s2 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s0 -> s3 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s0 -> s4 [0, 65535] { R3206 += 1, R3050 += 1, R1937 += 1, R1938 += 1 };
  s0 -> s0 [0, 65535] { R3205 += 1, R3206 += 1 };
  s0 -> s5 [0, 65535] { R3206 += 1, R3049 += 1, R3050 += 1 };
  s1 -> s1 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1 };
  s1 -> s9 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1 };
  s1 -> s8 [0, 65535] { R3206 += 1, R3050 += 1 };
  s1 -> s7 [0, 65535] { R3206 += 1 };
  s1 -> s6 [0, 65535];
  s2 -> s1 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1 };
  s2 -> s2 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s2 -> s9 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1 };
  s2 -> s8 [0, 65535] { R3206 += 1, R3050 += 1 };
  s2 -> s7 [0, 65535] { R3206 += 1 };
  s2 -> s6 [0, 65535];
  s3 -> s1 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1 };
  s3 -> s2 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s3 -> s3 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s3 -> s8 [0, 65535] { R3206 += 1, R3050 += 1 };
  s3 -> s7 [0, 65535] { R3206 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s1 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1 };
  s4 -> s2 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s4 -> s3 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s4 -> s4 [0, 65535] { R3206 += 1, R3050 += 1, R1937 += 1, R1938 += 1 };
  s4 -> s7 [0, 65535] { R3206 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s1 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1 };
  s5 -> s2 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1940 += 1, R1942 += 1 };
  s5 -> s3 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1, R1939 += 1, R1940 += 1 };
  s5 -> s4 [0, 65535] { R3206 += 1, R3050 += 1, R1937 += 1, R1938 += 1 };
  s5 -> s5 [0, 65535] { R3206 += 1, R3049 += 1, R3050 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3206 += 1 };
  s7 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3206 += 1, R3050 += 1 };
  s8 -> s7 [0, 65535] { R3206 += 1 };
  s8 -> s6 [0, 65535];
  s9 -> s9 [0, 65535] { R3206 += 1, R3050 += 1, R1938 += 1 };
  s9 -> s8 [0, 65535] { R3206 += 1, R3050 += 1 };
  s9 -> s7 [0, 65535] { R3206 += 1 };
  s9 -> s6 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65535] { R3208 += 1, R3051 += 1, R3052 += 1 };
  s0 -> s2 [0, 65535] { R3208 += 1, R3052 += 1, R1950 += 1, R1951 += 1 };
  s0 -> s3 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s0 -> s4 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s0 -> s0 [0, 65535] { R3207 += 1, R3208 += 1 };
  s0 -> s5 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s1 -> s1 [0, 65535] { R3208 += 1, R3051 += 1, R3052 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s2 [0, 65535] { R3208 += 1, R3052 += 1, R1950 += 1, R1951 += 1 };
  s1 -> s3 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s1 -> s4 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s1 -> s5 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R3208 += 1 };
  s2 -> s3 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s2 -> s2 [0, 65535] { R3208 += 1, R3052 += 1, R1950 += 1, R1951 += 1 };
  s2 -> s4 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s2 -> s5 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R3208 += 1 };
  s3 -> s3 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s3 -> s8 [0, 65535] { R3208 += 1, R3052 += 1 };
  s3 -> s4 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s3 -> s9 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3208 += 1 };
  s4 -> s8 [0, 65535] { R3208 += 1, R3052 += 1 };
  s4 -> s4 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s4 -> s9 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1 };
  s4 -> s10 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R3208 += 1 };
  s5 -> s3 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1954 += 1, R1955 += 1 };
  s5 -> s8 [0, 65535] { R3208 += 1, R3052 += 1 };
  s5 -> s4 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1, R1955 += 1, R1956 += 1 };
  s5 -> s5 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1952 += 1, R1953 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3208 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3208 += 1 };
  s8 -> s8 [0, 65535] { R3208 += 1, R3052 += 1 };
  s9 -> s6 [0, 65535];
  s9 -> s7 [0, 65535] { R3208 += 1 };
  s9 -> s8 [0, 65535] { R3208 += 1, R3052 += 1 };
  s9 -> s9 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1 };
  s10 -> s6 [0, 65535];
  s10 -> s7 [0, 65535] { R3208 += 1 };
  s10 -> s8 [0, 65535] { R3208 += 1, R3052 += 1 };
  s10 -> s9 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1 };
  s10 -> s10 [0, 65535] { R3208 += 1, R3052 += 1, R1951 += 1, R1953 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 75] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s2 [0, 65535] { R3210 += 1, R3054 += 1, R1963 += 1, R1964 += 1 };
  s0 -> s3 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s0 -> s4 [0, 65535] { R3210 += 1, R3053 += 1, R3054 += 1 };
  s0 -> s0 [0, 65535] { R3209 += 1, R3210 += 1 };
  s0 -> s5 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s0 -> s6 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s7 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s0 -> s1 [78, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [0, 75] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1 };
  s1 -> s8 [0, 65535] { R3210 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s10 [0, 65535] { R3210 += 1, R3054 += 1 };
  s1 -> s11 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1 };
  s1 -> s6 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s7 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s1 -> s1 [78, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s1 [0, 75] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s2 [0, 65535] { R3210 += 1, R3054 += 1, R1963 += 1, R1964 += 1 };
  s2 -> s8 [0, 65535] { R3210 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s3 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s2 -> s5 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s2 -> s6 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s7 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s2 -> s1 [78, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s1 [0, 75] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s8 [0, 65535] { R3210 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s3 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s3 -> s5 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s3 -> s10 [0, 65535] { R3210 += 1, R3054 += 1 };
  s3 -> s6 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s7 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s3 -> s1 [78, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s1 [0, 75] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s2 [0, 65535] { R3210 += 1, R3054 += 1, R1963 += 1, R1964 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s3 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1965 += 1, R1966 += 1 };
  s4 -> s4 [0, 65535] { R3210 += 1, R3053 += 1, R3054 += 1 };
  s4 -> s5 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s4 -> s6 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s7 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s4 -> s1 [78, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s1 [0, 75] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s8 [0, 65535] { R3210 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s5 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1967 += 1, R1968 += 1 };
  s5 -> s10 [0, 65535] { R3210 += 1, R3054 += 1 };
  s5 -> s11 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1 };
  s5 -> s6 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s7 [76, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s5 -> s1 [78, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s6 -> s8 [0, 65535] { R3210 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1 };
  s6 -> s10 [0, 65535] { R3210 += 1, R3054 += 1 };
  s6 -> s11 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1 };
  s7 -> s7 [0, 76] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s7 -> s8 [0, 65535] { R3210 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s10 [0, 65535] { R3210 += 1, R3054 += 1 };
  s7 -> s11 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1 };
  s7 -> s7 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1 };
  s7 -> s7 [78, 65535] { R3210 += 1, R3054 += 1, R1964 += 1, R1966 += 1, R1968 += 1 };
  s8 -> s8 [0, 65535] { R3210 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s8 [0, 65535] { R3210 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3210 += 1, R3054 += 1 };
  s11 -> s8 [0, 65535] { R3210 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s10 [0, 65535] { R3210 += 1, R3054 += 1 };
  s11 -> s11 [0, 65535] { R3210 += 1, R3054 += 1, R1964 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10, s11;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65535] { R3212 += 1, R3056 += 1, R1974 += 1, R1975 += 1 };
  s0 -> s0 [0, 65535] { R3211 += 1, R3212 += 1 };
  s0 -> s2 [0, 65535] { R3212 += 1, R3055 += 1, R3056 += 1 };
  s0 -> s3 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s0 -> s4 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s1 -> s1 [0, 65535] { R3212 += 1, R3056 += 1, R1974 += 1, R1975 += 1 };
  s1 -> s6 [0, 65535] { R3212 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s3 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s1 -> s4 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s2 -> s1 [0, 65535] { R3212 += 1, R3056 += 1, R1974 += 1, R1975 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R3212 += 1, R3055 += 1, R3056 += 1 };
  s2 -> s3 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s2 -> s4 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s3 -> s5 [0, 65535] { R3212 += 1, R3056 += 1 };
  s3 -> s6 [0, 65535] { R3212 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1 };
  s3 -> s3 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s4 -> s5 [0, 65535] { R3212 += 1, R3056 += 1 };
  s4 -> s6 [0, 65535] { R3212 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s3 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1, R1977 += 1, R1978 += 1 };
  s4 -> s4 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1, R1976 += 1, R1977 += 1 };
  s5 -> s5 [0, 65535] { R3212 += 1, R3056 += 1 };
  s5 -> s6 [0, 65535] { R3212 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R3212 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R3212 += 1, R3056 += 1 };
  s8 -> s6 [0, 65535] { R3212 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3212 += 1, R3056 += 1, R1975 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 69] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s2 [0, 65535] { R3214 += 1, R3058 += 1, R1983 += 1, R1984 += 1 };
  s0 -> s0 [0, 65535] { R3213 += 1, R3214 += 1 };
  s0 -> s3 [0, 65535] { R3214 += 1, R3057 += 1, R3058 += 1 };
  s0 -> s4 [0, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s0 -> s5 [70, 70] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s6 [76, 76] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s0 -> s1 [77, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s1 [0, 69] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s5 [70, 70] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s6 [76, 76] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s1 -> s1 [77, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s1 [0, 69] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s2 [0, 65535] { R3214 += 1, R3058 += 1, R1983 += 1, R1984 += 1 };
  s2 -> s4 [0, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s2 -> s5 [70, 70] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s6 [76, 76] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s2 -> s1 [77, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s1 [0, 69] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s2 [0, 65535] { R3214 += 1, R3058 += 1, R1983 += 1, R1984 += 1 };
  s3 -> s3 [0, 65535] { R3214 += 1, R3057 += 1, R3058 += 1 };
  s3 -> s4 [0, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s3 -> s5 [70, 70] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s6 [76, 76] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s3 -> s1 [77, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s1 [0, 69] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s4 [0, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1985 += 1, R1986 += 1 };
  s4 -> s5 [70, 70] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s6 [76, 76] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s4 -> s1 [77, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s5 [0, 70] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s11 [76, 76] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s5 -> s5 [77, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s6 [0, 69] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s7 [0, 65535] { R3214 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R3214 += 1, R3058 += 1 };
  s6 -> s6 [0, 65535] { R3214 += 1, R3058 += 1, R1984 += 1 };
  s6 -> s10 [70, 70] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s11 [70, 70] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s6 -> s6 [76, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s7 -> s7 [0, 65535] { R3214 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R3214 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3214 += 1, R3058 += 1 };
  s10 -> s10 [0, 65535] { R3214 += 1, R3058 += 1, R1984 += 1 };
  s10 -> s7 [0, 65535] { R3214 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s9 [0, 65535] { R3214 += 1, R3058 += 1 };
  s11 -> s11 [0, 70] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  s11 -> s11 [0, 65535] { R3214 += 1, R3058 += 1, R1984 += 1 };
  s11 -> s7 [0, 65535] { R3214 += 1 };
  s11 -> s8 [0, 65535];
  s11 -> s9 [0, 65535] { R3214 += 1, R3058 += 1 };
  s11 -> s11 [76, 65535] { R3214 += 1, R3058 += 1, R1984 += 1, R1986 += 1 };
  accepting s8, s9, s6, s7, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 69] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s2 [0, 65535] { R3216 += 1, R3059 += 1, R3060 += 1 };
  s0 -> s3 [0, 65535] { R3216 += 1, R3060 += 1, R1992 += 1, R1993 += 1 };
  s0 -> s0 [0, 65535] { R3215 += 1, R3216 += 1 };
  s0 -> s4 [0, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s0 -> s5 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s6 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s0 -> s1 [71, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s1 [0, 69] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s7 [0, 65535] { R3216 += 1 };
  s1 -> s8 [0, 65535] { R3216 += 1, R3060 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R3216 += 1, R3060 += 1, R1993 += 1 };
  s1 -> s5 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s6 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s1 -> s1 [71, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s1 [0, 69] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s2 [0, 65535] { R3216 += 1, R3059 += 1, R3060 += 1 };
  s2 -> s3 [0, 65535] { R3216 += 1, R3060 += 1, R1992 += 1, R1993 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s4 [0, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s2 -> s5 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s6 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s2 -> s1 [71, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s1 [0, 69] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s3 [0, 65535] { R3216 += 1, R3060 += 1, R1992 += 1, R1993 += 1 };
  s3 -> s7 [0, 65535] { R3216 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s4 [0, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s3 -> s5 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s6 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s3 -> s1 [71, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s1 [0, 69] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s7 [0, 65535] { R3216 += 1 };
  s4 -> s8 [0, 65535] { R3216 += 1, R3060 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s4 [0, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1994 += 1, R1995 += 1 };
  s4 -> s5 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s6 [70, 70] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s4 -> s1 [71, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s5 -> s5 [0, 65535] { R3216 += 1, R3060 += 1, R1993 += 1, R1995 += 1, R1996 += 1 };
  s5 -> s10 [0, 65535] { R3216 += 1, R3060 += 1, R1993 += 1 };
  s5 -> s7 [0, 65535] { R3216 += 1 };
  s5 -> s8 [0, 65535] { R3216 += 1, R3060 += 1 };
  s5 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R3216 += 1, R3060 += 1, R1993 += 1 };
  s6 -> s7 [0, 65535] { R3216 += 1 };
  s6 -> s8 [0, 65535] { R3216 += 1, R3060 += 1 };
  s6 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R3216 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R3216 += 1 };
  s8 -> s8 [0, 65535] { R3216 += 1, R3060 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3216 += 1, R3060 += 1, R1993 += 1 };
  s10 -> s7 [0, 65535] { R3216 += 1 };
  s10 -> s8 [0, 65535] { R3216 += 1, R3060 += 1 };
  s10 -> s9 [0, 65535];
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 69] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s2 [0, 65535] { R3218 += 1, R3062 += 1, R2002 += 1, R2003 += 1 };
  s0 -> s3 [0, 65535] { R3218 += 1, R3061 += 1, R3062 += 1 };
  s0 -> s0 [0, 65535] { R3217 += 1, R3218 += 1 };
  s0 -> s4 [0, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s0 -> s5 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s6 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s0 -> s1 [71, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s1 [0, 69] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s7 [0, 65535] { R3218 += 1 };
  s1 -> s8 [0, 65535] { R3218 += 1, R3062 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R3218 += 1, R3062 += 1, R2003 += 1 };
  s1 -> s5 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s6 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s1 -> s1 [71, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s1 [0, 69] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s7 [0, 65535] { R3218 += 1 };
  s2 -> s2 [0, 65535] { R3218 += 1, R3062 += 1, R2002 += 1, R2003 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s4 [0, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s2 -> s5 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s6 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s2 -> s1 [71, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s1 [0, 69] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s2 [0, 65535] { R3218 += 1, R3062 += 1, R2002 += 1, R2003 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s3 [0, 65535] { R3218 += 1, R3061 += 1, R3062 += 1 };
  s3 -> s4 [0, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s3 -> s5 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s6 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s3 -> s1 [71, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s1 [0, 69] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s7 [0, 65535] { R3218 += 1 };
  s4 -> s8 [0, 65535] { R3218 += 1, R3062 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s4 [0, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2004 += 1, R2005 += 1 };
  s4 -> s5 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s6 [70, 70] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s4 -> s1 [71, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s5 -> s7 [0, 65535] { R3218 += 1 };
  s5 -> s5 [0, 65535] { R3218 += 1, R3062 += 1, R2003 += 1, R2005 += 1, R2006 += 1 };
  s5 -> s8 [0, 65535] { R3218 += 1, R3062 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R3218 += 1, R3062 += 1, R2003 += 1 };
  s6 -> s7 [0, 65535] { R3218 += 1 };
  s6 -> s8 [0, 65535] { R3218 += 1, R3062 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R3218 += 1, R3062 += 1, R2003 += 1 };
  s7 -> s7 [0, 65535] { R3218 += 1 };
  s7 -> s9 [0, 65535];
  s8 -> s7 [0, 65535] { R3218 += 1 };
  s8 -> s8 [0, 65535] { R3218 += 1, R3062 += 1 };
  s8 -> s9 [0, 65535];
  s9 -> s9 [0, 65535];
  s10 -> s7 [0, 65535] { R3218 += 1 };
  s10 -> s8 [0, 65535] { R3218 += 1, R3062 += 1 };
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3218 += 1, R3062 += 1, R2003 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_45 {
  init s0;
  s0 -> s1 [0, 69] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s2 [0, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s0 -> s3 [0, 65535] { R3220 += 1, R3064 += 1, R2013 += 1, R2014 += 1 };
  s0 -> s4 [0, 65535] { R3220 += 1, R3063 += 1, R3064 += 1 };
  s0 -> s0 [0, 65535] { R3219 += 1, R3220 += 1 };
  s0 -> s5 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s6 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s0 -> s1 [71, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s1 [0, 69] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R3220 += 1, R3064 += 1, R2014 += 1 };
  s1 -> s9 [0, 65535] { R3220 += 1 };
  s1 -> s10 [0, 65535] { R3220 += 1, R3064 += 1 };
  s1 -> s5 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s6 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s1 -> s1 [71, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s1 [0, 69] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s2 [0, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s9 [0, 65535] { R3220 += 1 };
  s2 -> s10 [0, 65535] { R3220 += 1, R3064 += 1 };
  s2 -> s5 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s6 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s2 -> s1 [71, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s1 [0, 69] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s2 [0, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R3220 += 1, R3064 += 1, R2013 += 1, R2014 += 1 };
  s3 -> s9 [0, 65535] { R3220 += 1 };
  s3 -> s5 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s6 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s3 -> s1 [71, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s1 [0, 69] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s2 [0, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2015 += 1, R2016 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s3 [0, 65535] { R3220 += 1, R3064 += 1, R2013 += 1, R2014 += 1 };
  s4 -> s4 [0, 65535] { R3220 += 1, R3063 += 1, R3064 += 1 };
  s4 -> s5 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s6 [70, 70] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s4 -> s1 [71, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s5 -> s5 [0, 65535] { R3220 += 1, R3064 += 1, R2014 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s9 [0, 65535] { R3220 += 1 };
  s5 -> s10 [0, 65535] { R3220 += 1, R3064 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R3220 += 1, R3064 += 1, R2014 += 1 };
  s6 -> s9 [0, 65535] { R3220 += 1 };
  s6 -> s10 [0, 65535] { R3220 += 1, R3064 += 1 };
  s6 -> s6 [0, 65535] { R3220 += 1, R3064 += 1, R2014 += 1, R2016 += 1, R2017 += 1, R2018 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R3220 += 1, R3064 += 1, R2014 += 1 };
  s8 -> s9 [0, 65535] { R3220 += 1 };
  s8 -> s10 [0, 65535] { R3220 += 1, R3064 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s9 [0, 65535] { R3220 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s9 [0, 65535] { R3220 += 1 };
  s10 -> s10 [0, 65535] { R3220 += 1, R3064 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_46 {
  init s0;
  s0 -> s1 [0, 69] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s0 [0, 65535] { R3221 += 1, R3222 += 1 };
  s0 -> s2 [0, 65535] { R3222 += 1, R3065 += 1, R3066 += 1 };
  s0 -> s3 [0, 65535] { R3222 += 1, R3066 += 1, R2026 += 1, R2027 += 1 };
  s0 -> s4 [0, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s0 -> s5 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s6 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s0 -> s1 [71, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [0, 69] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [0, 65535] { R3222 += 1, R3066 += 1, R2027 += 1 };
  s1 -> s7 [0, 65535] { R3222 += 1, R3066 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s10 [0, 65535] { R3222 += 1 };
  s1 -> s5 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s6 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s1 -> s1 [71, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s1 [0, 69] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s2 [0, 65535] { R3222 += 1, R3065 += 1, R3066 += 1 };
  s2 -> s3 [0, 65535] { R3222 += 1, R3066 += 1, R2026 += 1, R2027 += 1 };
  s2 -> s4 [0, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s2 -> s9 [0, 65535];
  s2 -> s5 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s6 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s2 -> s1 [71, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s1 [0, 69] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s3 [0, 65535] { R3222 += 1, R3066 += 1, R2026 += 1, R2027 += 1 };
  s3 -> s4 [0, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s3 -> s9 [0, 65535];
  s3 -> s10 [0, 65535] { R3222 += 1 };
  s3 -> s5 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s6 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s3 -> s1 [71, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s1 [0, 69] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s7 [0, 65535] { R3222 += 1, R3066 += 1 };
  s4 -> s4 [0, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2028 += 1, R2029 += 1 };
  s4 -> s9 [0, 65535];
  s4 -> s10 [0, 65535] { R3222 += 1 };
  s4 -> s5 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s6 [70, 70] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s4 -> s1 [71, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s5 -> s7 [0, 65535] { R3222 += 1, R3066 += 1 };
  s5 -> s5 [0, 65535] { R3222 += 1, R3066 += 1, R2027 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R3222 += 1 };
  s6 -> s7 [0, 65535] { R3222 += 1, R3066 += 1 };
  s6 -> s8 [0, 65535] { R3222 += 1, R3066 += 1, R2027 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R3222 += 1 };
  s6 -> s6 [0, 65535] { R3222 += 1, R3066 += 1, R2027 += 1, R2029 += 1, R2030 += 1, R2031 += 1 };
  s7 -> s7 [0, 65535] { R3222 += 1, R3066 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s10 [0, 65535] { R3222 += 1 };
  s8 -> s7 [0, 65535] { R3222 += 1, R3066 += 1 };
  s8 -> s8 [0, 65535] { R3222 += 1, R3066 += 1, R2027 += 1 };
  s8 -> s9 [0, 65535];
  s8 -> s10 [0, 65535] { R3222 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R3222 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_47 {
  init s0;
  s0 -> s1 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s2 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s3 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s0 -> s4 [0, 65535] { R3224 += 1, R3068 += 1, R2039 += 1, R2040 += 1 };
  s0 -> s5 [0, 65535] { R3224 += 1, R3067 += 1, R3068 += 1 };
  s0 -> s0 [0, 65535] { R3223 += 1, R3224 += 1 };
  s0 -> s6 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s7 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s2 [71, 76] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s1 [71, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s0 -> s8 [77, 77] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s0 -> s2 [78, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s1 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s1 -> s2 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s6 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s7 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s1 -> s2 [71, 76] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s1 [71, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s1 -> s8 [77, 77] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s1 -> s2 [78, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s6 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [71, 76] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s8 [77, 77] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s2 -> s2 [78, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s1 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s2 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s3 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s3 -> s6 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s7 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s2 [71, 76] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s1 [71, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s3 -> s8 [77, 77] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s3 -> s2 [78, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s1 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s2 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s3 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s4 -> s4 [0, 65535] { R3224 += 1, R3068 += 1, R2039 += 1, R2040 += 1 };
  s4 -> s6 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s7 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s2 [71, 76] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s1 [71, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s4 -> s8 [77, 77] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s4 -> s2 [78, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s1 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s2 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s3 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2041 += 1, R2042 += 1 };
  s5 -> s4 [0, 65535] { R3224 += 1, R3068 += 1, R2039 += 1, R2040 += 1 };
  s5 -> s5 [0, 65535] { R3224 += 1, R3067 += 1, R3068 += 1 };
  s5 -> s6 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s7 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s2 [71, 76] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s1 [71, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s5 -> s8 [77, 77] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s5 -> s2 [78, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s6 [0, 76] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s12 [77, 77] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s6 -> s6 [78, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s6 [0, 76] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s7 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2043 += 1, R2044 += 1 };
  s7 -> s12 [77, 77] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s7 -> s6 [78, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s8 [0, 69] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s9 [0, 65535] { R3224 += 1, R3068 += 1 };
  s8 -> s8 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1 };
  s8 -> s10 [0, 65535] { R3224 += 1 };
  s8 -> s11 [0, 65535];
  s8 -> s12 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s13 [70, 70] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s8 -> s8 [71, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s9 -> s9 [0, 65535] { R3224 += 1, R3068 += 1 };
  s9 -> s10 [0, 65535] { R3224 += 1 };
  s9 -> s11 [0, 65535];
  s10 -> s10 [0, 65535] { R3224 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1, R2042 += 1, R2044 += 1 };
  s12 -> s9 [0, 65535] { R3224 += 1, R3068 += 1 };
  s12 -> s14 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1 };
  s12 -> s10 [0, 65535] { R3224 += 1 };
  s12 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1 };
  s13 -> s9 [0, 65535] { R3224 += 1, R3068 += 1 };
  s13 -> s10 [0, 65535] { R3224 += 1 };
  s13 -> s11 [0, 65535];
  s14 -> s9 [0, 65535] { R3224 += 1, R3068 += 1 };
  s14 -> s14 [0, 65535] { R3224 += 1, R3068 += 1, R2040 += 1 };
  s14 -> s10 [0, 65535] { R3224 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s8, s13, s9, s14, s10, s11;
};
automaton value2_48 {
  init s0;
  s0 -> s1 [0, 69] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s0 -> s2 [0, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s0 -> s3 [0, 65535] { R3226 += 1, R3069 += 1, R3070 += 1 };
  s0 -> s0 [0, 65535] { R3225 += 1, R3226 += 1 };
  s0 -> s4 [0, 65535] { R3226 += 1, R3070 += 1, R2052 += 1, R2053 += 1 };
  s0 -> s5 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s0 -> s6 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s0 -> s1 [71, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s1 [0, 69] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s7 [0, 65535] { R3226 += 1, R3070 += 1 };
  s1 -> s1 [0, 65535] { R3226 += 1, R3070 += 1, R2053 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s10 [0, 65535] { R3226 += 1 };
  s1 -> s5 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s6 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s1 -> s1 [71, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s1 [0, 69] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s7 [0, 65535] { R3226 += 1, R3070 += 1 };
  s2 -> s2 [0, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s10 [0, 65535] { R3226 += 1 };
  s2 -> s5 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s6 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s2 -> s1 [71, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s1 [0, 69] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s2 [0, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s3 -> s3 [0, 65535] { R3226 += 1, R3069 += 1, R3070 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [0, 65535] { R3226 += 1, R3070 += 1, R2052 += 1, R2053 += 1 };
  s3 -> s5 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s6 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s3 -> s1 [71, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s1 [0, 69] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s2 [0, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2054 += 1, R2055 += 1 };
  s4 -> s8 [0, 65535];
  s4 -> s4 [0, 65535] { R3226 += 1, R3070 += 1, R2052 += 1, R2053 += 1 };
  s4 -> s10 [0, 65535] { R3226 += 1 };
  s4 -> s5 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s6 [70, 70] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s4 -> s1 [71, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s5 -> s5 [0, 65535] { R3226 += 1, R3070 += 1, R2053 += 1 };
  s5 -> s7 [0, 65535] { R3226 += 1, R3070 += 1 };
  s5 -> s8 [0, 65535];
  s5 -> s10 [0, 65535] { R3226 += 1 };
  s6 -> s7 [0, 65535] { R3226 += 1, R3070 += 1 };
  s6 -> s6 [0, 65535] { R3226 += 1, R3070 += 1, R2053 += 1, R2055 += 1, R2056 += 1, R2057 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [0, 65535] { R3226 += 1, R3070 += 1, R2053 += 1 };
  s6 -> s10 [0, 65535] { R3226 += 1 };
  s7 -> s7 [0, 65535] { R3226 += 1, R3070 += 1 };
  s7 -> s8 [0, 65535];
  s7 -> s10 [0, 65535] { R3226 += 1 };
  s8 -> s8 [0, 65535];
  s9 -> s7 [0, 65535] { R3226 += 1, R3070 += 1 };
  s9 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R3226 += 1, R3070 += 1, R2053 += 1 };
  s9 -> s10 [0, 65535] { R3226 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [0, 65535] { R3226 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0, s10;
};
automaton value2_49 {
  init s0;
  s0 -> s1 [0, 65535] { R3228 += 1, R3072 += 1, R2996 += 1 };
  s0 -> s0 [0, 65535] { R3227 += 1, R3228 += 1 };
  s0 -> s2 [0, 65535] { R3228 += 1, R3071 += 1, R3072 += 1 };
  s0 -> s3 [0, 65535] { R3228 += 1, R3072 += 1 };
  s1 -> s1 [0, 65535] { R3228 += 1, R3072 += 1, R2996 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R3228 += 1 };
  s1 -> s3 [0, 65535] { R3228 += 1, R3072 += 1 };
  s2 -> s1 [0, 65535] { R3228 += 1, R3072 += 1, R2996 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R3228 += 1, R3071 += 1, R3072 += 1 };
  s2 -> s3 [0, 65535] { R3228 += 1, R3072 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R3228 += 1 };
  s3 -> s3 [0, 65535] { R3228 += 1, R3072 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R3228 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_50 {
  init s0;
  s0 -> s1 [0, 65535] { R3230 += 1, R3074 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R3230 += 1, R3073 += 1, R3074 += 1 };
  s0 -> s0 [0, 65535] { R3229 += 1, R3230 += 1 };
  s1 -> s1 [0, 65535] { R3230 += 1, R3074 += 1, R28 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s4 [0, 65535] { R3230 += 1 };
  s2 -> s1 [0, 65535] { R3230 += 1, R3074 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R3230 += 1, R3073 += 1, R3074 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R3230 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_51 {
  init s0;
  s0 -> s1 [0, 66] { R3232 += 1, R3076 += 1 };
  s0 -> s0 [0, 65535] { R3231 += 1, R3232 += 1 };
  s0 -> s2 [0, 65535] { R3232 += 1, R3075 += 1, R3076 += 1 };
  s0 -> s3 [67, 67] { R3232 += 1, R3076 += 1 };
  s0 -> s4 [67, 67] { R3232 += 1, R3076 += 1 };
  s0 -> s5 [70, 70] { R3232 += 1, R3076 += 1 };
  s0 -> s1 [71, 65535] { R3232 += 1, R3076 += 1 };
  s1 -> s1 [0, 66] { R3232 += 1, R3076 += 1 };
  s1 -> s3 [67, 67] { R3232 += 1, R3076 += 1 };
  s1 -> s4 [67, 67] { R3232 += 1, R3076 += 1 };
  s1 -> s5 [70, 70] { R3232 += 1, R3076 += 1 };
  s1 -> s1 [71, 65535] { R3232 += 1, R3076 += 1 };
  s2 -> s1 [0, 66] { R3232 += 1, R3076 += 1 };
  s2 -> s2 [0, 65535] { R3232 += 1, R3075 += 1, R3076 += 1 };
  s2 -> s3 [67, 67] { R3232 += 1, R3076 += 1 };
  s2 -> s4 [67, 67] { R3232 += 1, R3076 += 1 };
  s2 -> s5 [70, 70] { R3232 += 1, R3076 += 1 };
  s2 -> s1 [71, 65535] { R3232 += 1, R3076 += 1 };
  s3 -> s3 [0, 67] { R3232 += 1, R3076 += 1 };
  s3 -> s7 [70, 70] { R3232 += 1, R3076 += 1 };
  s3 -> s3 [71, 65535] { R3232 += 1, R3076 += 1 };
  s5 -> s5 [0, 66] { R3232 += 1, R3076 += 1 };
  s5 -> s5 [0, 65535] { R3232 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [67, 67] { R3232 += 1, R3076 += 1 };
  s5 -> s8 [67, 67] { R3232 += 1, R3076 += 1 };
  s5 -> s5 [70, 65535] { R3232 += 1, R3076 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 67] { R3232 += 1, R3076 += 1 };
  s7 -> s7 [0, 65535] { R3232 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [70, 65535] { R3232 += 1, R3076 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R3232 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_52 {
  init s0;
  s0 -> s1 [0, 66] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s0 -> s2 [0, 65535] { R3234 += 1, R3077 += 1, R3078 += 1 };
  s0 -> s0 [0, 65535] { R3233 += 1, R3234 += 1 };
  s0 -> s3 [67, 67] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s0 -> s4 [67, 67] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s0 -> s1 [68, 65535] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s1 -> s1 [0, 66] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s1 -> s1 [0, 65535] { R3234 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s1 -> s4 [67, 67] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s1 -> s1 [68, 65535] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s2 -> s1 [0, 66] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3234 += 1, R3077 += 1, R3078 += 1 };
  s2 -> s3 [67, 67] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s2 -> s4 [67, 67] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s2 -> s1 [68, 65535] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s3 -> s6 [0, 65535] { R3234 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3234 += 1, R3078 += 1, R1773 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3234 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3234 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_53 {
  init s0;
  s0 -> s1 [0, 66] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s0 -> s0 [0, 65535] { R3235 += 1, R3236 += 1 };
  s0 -> s2 [0, 65535] { R3236 += 1, R3079 += 1, R3080 += 1 };
  s0 -> s3 [67, 67] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s0 -> s4 [67, 67] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s0 -> s1 [68, 65535] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s1 -> s1 [0, 66] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s1 -> s1 [0, 65535] { R3236 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s1 -> s4 [67, 67] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s1 -> s1 [68, 65535] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s2 -> s1 [0, 66] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s2 -> s2 [0, 65535] { R3236 += 1, R3079 += 1, R3080 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s2 -> s4 [67, 67] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s2 -> s1 [68, 65535] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s3 -> s3 [0, 65535] { R3236 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3236 += 1, R3080 += 1, R1775 += 1 };
  s4 -> s5 [0, 65535] { R3236 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3236 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_54 {
  init s0;
  s0 -> s1 [0, 66] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s2 [0, 65535] { R3238 += 1, R3081 += 1, R3082 += 1 };
  s0 -> s0 [0, 65535] { R3237 += 1, R3238 += 1 };
  s0 -> s3 [67, 67] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s4 [67, 67] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s0 -> s1 [68, 65535] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [0, 66] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3238 += 1 };
  s1 -> s3 [67, 67] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s4 [67, 67] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s1 -> s1 [68, 65535] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [0, 66] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s2 [0, 65535] { R3238 += 1, R3081 += 1, R3082 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s4 [67, 67] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s2 -> s1 [68, 65535] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s3 -> s3 [0, 65535] { R3238 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3238 += 1 };
  s4 -> s4 [0, 65535] { R3238 += 1, R3082 += 1, R1777 += 1, R1778 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3238 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_55 {
  init s0;
  s0 -> s1 [0, 66] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s0 [0, 65535] { R3239 += 1, R3240 += 1 };
  s0 -> s2 [0, 65535] { R3240 += 1, R3083 += 1, R3084 += 1 };
  s0 -> s3 [67, 67] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s4 [67, 67] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s0 -> s1 [68, 65535] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [0, 66] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [0, 65535] { R3240 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s4 [67, 67] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s1 -> s1 [68, 65535] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s1 [0, 66] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s2 [0, 65535] { R3240 += 1, R3083 += 1, R3084 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s4 [67, 67] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s2 -> s1 [68, 65535] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s3 -> s3 [0, 65535] { R3240 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3240 += 1 };
  s4 -> s4 [0, 65535] { R3240 += 1, R3084 += 1, R1783 += 1, R1784 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3240 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_56 {
  init s0;
  s0 -> s1 [0, 66] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s2 [0, 65535] { R3242 += 1, R3085 += 1, R3086 += 1 };
  s0 -> s0 [0, 65535] { R3241 += 1, R3242 += 1 };
  s0 -> s3 [67, 67] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s4 [67, 67] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s0 -> s1 [68, 65535] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s1 [0, 66] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s1 [0, 65535] { R3242 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s4 [67, 67] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s1 -> s1 [68, 65535] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s1 [0, 66] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s2 [0, 65535] { R3242 += 1, R3085 += 1, R3086 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s4 [67, 67] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s2 -> s1 [68, 65535] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s3 -> s6 [0, 65535] { R3242 += 1 };
  s3 -> s3 [0, 65535] { R3242 += 1, R3086 += 1, R1787 += 1, R1788 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3242 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3242 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_57 {
  init s0;
  s0 -> s1 [0, 66] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s2 [0, 65535] { R3244 += 1, R3087 += 1, R3088 += 1 };
  s0 -> s0 [0, 65535] { R3243 += 1, R3244 += 1 };
  s0 -> s3 [67, 67] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s4 [67, 67] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s0 -> s1 [68, 65535] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [0, 66] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [0, 65535] { R3244 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s4 [67, 67] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s1 -> s1 [68, 65535] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s1 [0, 66] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3244 += 1, R3087 += 1, R3088 += 1 };
  s2 -> s3 [67, 67] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s4 [67, 67] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s2 -> s1 [68, 65535] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3244 += 1 };
  s3 -> s3 [0, 65535] { R3244 += 1, R3088 += 1, R1793 += 1, R1794 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3244 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3244 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_58 {
  init s0;
  s0 -> s1 [0, 66] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s0 [0, 65535] { R3245 += 1, R3246 += 1 };
  s0 -> s2 [0, 65535] { R3246 += 1, R3089 += 1, R3090 += 1 };
  s0 -> s3 [67, 67] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s4 [67, 67] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s0 -> s1 [68, 65535] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s1 [0, 66] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3246 += 1 };
  s1 -> s3 [67, 67] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s4 [67, 67] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s1 -> s1 [68, 65535] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s1 [0, 66] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3246 += 1, R3089 += 1, R3090 += 1 };
  s2 -> s3 [67, 67] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s4 [67, 67] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s2 -> s1 [68, 65535] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s3 -> s3 [0, 65535] { R3246 += 1, R3090 += 1, R1799 += 1, R1800 += 1 };
  s3 -> s6 [0, 65535] { R3246 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3246 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3246 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_59 {
  init s0;
  s0 -> s1 [0, 66] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s0 [0, 65535] { R3247 += 1, R3248 += 1 };
  s0 -> s2 [0, 65535] { R3248 += 1, R3091 += 1, R3092 += 1 };
  s0 -> s3 [67, 67] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s4 [67, 67] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s0 -> s1 [68, 65535] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [0, 66] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3248 += 1 };
  s1 -> s3 [67, 67] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s4 [67, 67] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s1 -> s1 [68, 65535] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [0, 66] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s2 [0, 65535] { R3248 += 1, R3091 += 1, R3092 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s4 [67, 67] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s2 -> s1 [68, 65535] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s3 -> s3 [0, 65535] { R3248 += 1, R3092 += 1, R1807 += 1, R1808 += 1 };
  s3 -> s6 [0, 65535] { R3248 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3248 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3248 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_60 {
  init s0;
  s0 -> s1 [0, 66] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s2 [0, 65535] { R3250 += 1, R3093 += 1, R3094 += 1 };
  s0 -> s0 [0, 65535] { R3249 += 1, R3250 += 1 };
  s0 -> s3 [67, 67] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s4 [67, 67] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s0 -> s1 [68, 65535] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [0, 66] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3250 += 1 };
  s1 -> s3 [67, 67] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s4 [67, 67] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s1 -> s1 [68, 65535] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s1 [0, 66] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3250 += 1, R3093 += 1, R3094 += 1 };
  s2 -> s3 [67, 67] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s4 [67, 67] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s2 -> s1 [68, 65535] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3250 += 1 };
  s3 -> s3 [0, 65535] { R3250 += 1, R3094 += 1, R1817 += 1, R1818 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3250 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3250 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_61 {
  init s0;
  s0 -> s1 [0, 66] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s2 [0, 65535] { R3252 += 1, R3095 += 1, R3096 += 1 };
  s0 -> s0 [0, 65535] { R3251 += 1, R3252 += 1 };
  s0 -> s3 [67, 67] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s4 [67, 67] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s0 -> s1 [68, 65535] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [0, 66] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3252 += 1 };
  s1 -> s3 [67, 67] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s4 [67, 67] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s1 -> s1 [68, 65535] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s1 [0, 66] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s2 [0, 65535] { R3252 += 1, R3095 += 1, R3096 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s4 [67, 67] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s2 -> s1 [68, 65535] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3252 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3252 += 1 };
  s4 -> s4 [0, 65535] { R3252 += 1, R3096 += 1, R1825 += 1, R1826 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3252 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_62 {
  init s0;
  s0 -> s1 [0, 66] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s0 [0, 65535] { R3253 += 1, R3254 += 1 };
  s0 -> s2 [0, 65535] { R3254 += 1, R3097 += 1, R3098 += 1 };
  s0 -> s3 [67, 67] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s4 [67, 67] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s0 -> s1 [68, 65535] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [0, 66] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [0, 65535] { R3254 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s4 [67, 67] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s1 -> s1 [68, 65535] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s1 [0, 66] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s2 [0, 65535] { R3254 += 1, R3097 += 1, R3098 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s4 [67, 67] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s2 -> s1 [68, 65535] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s3 -> s3 [0, 65535] { R3254 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3254 += 1 };
  s4 -> s4 [0, 65535] { R3254 += 1, R3098 += 1, R1835 += 1, R1836 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3254 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_63 {
  init s0;
  s0 -> s1 [0, 66] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s2 [0, 65535] { R3256 += 1, R3099 += 1, R3100 += 1 };
  s0 -> s0 [0, 65535] { R3255 += 1, R3256 += 1 };
  s0 -> s3 [67, 67] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s4 [67, 67] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s0 -> s1 [68, 65535] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s1 [0, 66] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3256 += 1 };
  s1 -> s3 [67, 67] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s4 [67, 67] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s1 -> s1 [68, 65535] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s1 [0, 66] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3256 += 1, R3099 += 1, R3100 += 1 };
  s2 -> s3 [67, 67] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s4 [67, 67] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s2 -> s1 [68, 65535] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s3 -> s3 [0, 65535] { R3256 += 1, R3100 += 1, R1843 += 1, R1844 += 1 };
  s3 -> s6 [0, 65535] { R3256 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3256 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3256 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_64 {
  init s0;
  s0 -> s1 [0, 66] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s2 [0, 65535] { R3258 += 1, R3101 += 1, R3102 += 1 };
  s0 -> s0 [0, 65535] { R3257 += 1, R3258 += 1 };
  s0 -> s3 [67, 67] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s4 [67, 67] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s0 -> s1 [68, 65535] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [0, 66] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3258 += 1 };
  s1 -> s3 [67, 67] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s4 [67, 67] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s1 -> s1 [68, 65535] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s1 [0, 66] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3258 += 1, R3101 += 1, R3102 += 1 };
  s2 -> s3 [67, 67] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s4 [67, 67] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s2 -> s1 [68, 65535] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s3 -> s3 [0, 65535] { R3258 += 1, R3102 += 1, R1847 += 1, R1848 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3258 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3258 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3258 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_65 {
  init s0;
  s0 -> s1 [0, 66] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s0 [0, 65535] { R3259 += 1, R3260 += 1 };
  s0 -> s2 [0, 65535] { R3260 += 1, R3103 += 1, R3104 += 1 };
  s0 -> s3 [67, 67] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s4 [67, 67] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s0 -> s1 [68, 65535] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s1 [0, 66] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s1 [0, 65535] { R3260 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s4 [67, 67] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s1 -> s1 [68, 65535] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s1 [0, 66] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s2 [0, 65535] { R3260 += 1, R3103 += 1, R3104 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s4 [67, 67] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s2 -> s1 [68, 65535] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s3 -> s3 [0, 65535] { R3260 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3260 += 1, R3104 += 1, R1853 += 1, R1854 += 1 };
  s4 -> s5 [0, 65535] { R3260 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3260 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_66 {
  init s0;
  s0 -> s1 [0, 66] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s0 [0, 65535] { R3261 += 1, R3262 += 1 };
  s0 -> s2 [0, 65535] { R3262 += 1, R3105 += 1, R3106 += 1 };
  s0 -> s3 [67, 67] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s4 [67, 67] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s0 -> s1 [68, 65535] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s1 [0, 66] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3262 += 1 };
  s1 -> s3 [67, 67] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s4 [67, 67] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s1 -> s1 [68, 65535] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s1 [0, 66] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3262 += 1, R3105 += 1, R3106 += 1 };
  s2 -> s3 [67, 67] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s4 [67, 67] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s2 -> s1 [68, 65535] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3262 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3262 += 1 };
  s4 -> s4 [0, 65535] { R3262 += 1, R3106 += 1, R1859 += 1, R1860 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3262 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_67 {
  init s0;
  s0 -> s1 [0, 66] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s0 [0, 65535] { R3263 += 1, R3264 += 1 };
  s0 -> s2 [0, 65535] { R3264 += 1, R3107 += 1, R3108 += 1 };
  s0 -> s3 [67, 67] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s4 [67, 67] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s0 -> s1 [68, 65535] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [0, 66] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3264 += 1 };
  s1 -> s3 [67, 67] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s4 [67, 67] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s1 -> s1 [68, 65535] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s1 [0, 66] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3264 += 1, R3107 += 1, R3108 += 1 };
  s2 -> s3 [67, 67] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s4 [67, 67] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s2 -> s1 [68, 65535] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s3 -> s3 [0, 65535] { R3264 += 1, R3108 += 1, R1867 += 1, R1868 += 1 };
  s3 -> s6 [0, 65535] { R3264 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3264 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3264 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_68 {
  init s0;
  s0 -> s1 [0, 66] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s0 [0, 65535] { R3265 += 1, R3266 += 1 };
  s0 -> s2 [0, 65535] { R3266 += 1, R3109 += 1, R3110 += 1 };
  s0 -> s3 [67, 67] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s4 [67, 67] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s0 -> s1 [68, 65535] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [0, 66] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [0, 65535] { R3266 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s4 [67, 67] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s1 -> s1 [68, 65535] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s1 [0, 66] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3266 += 1, R3109 += 1, R3110 += 1 };
  s2 -> s3 [67, 67] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s4 [67, 67] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s2 -> s1 [68, 65535] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3266 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3266 += 1 };
  s4 -> s4 [0, 65535] { R3266 += 1, R3110 += 1, R1877 += 1, R1878 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3266 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_69 {
  init s0;
  s0 -> s1 [0, 66] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s0 [0, 65535] { R3267 += 1, R3268 += 1 };
  s0 -> s2 [0, 65535] { R3268 += 1, R3111 += 1, R3112 += 1 };
  s0 -> s3 [67, 67] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s4 [67, 67] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s0 -> s1 [68, 65535] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [0, 66] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3268 += 1 };
  s1 -> s3 [67, 67] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s4 [67, 67] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s1 -> s1 [68, 65535] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s1 [0, 66] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3268 += 1, R3111 += 1, R3112 += 1 };
  s2 -> s3 [67, 67] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s4 [67, 67] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s2 -> s1 [68, 65535] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3268 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3268 += 1 };
  s4 -> s4 [0, 65535] { R3268 += 1, R3112 += 1, R1885 += 1, R1886 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3268 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_70 {
  init s0;
  s0 -> s1 [0, 66] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s2 [0, 65535] { R3270 += 1, R3113 += 1, R3114 += 1 };
  s0 -> s0 [0, 65535] { R3269 += 1, R3270 += 1 };
  s0 -> s3 [67, 67] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s4 [67, 67] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s0 -> s1 [68, 65535] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [0, 66] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [0, 65535] { R3270 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s4 [67, 67] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s1 -> s1 [68, 65535] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s1 [0, 66] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s2 [0, 65535] { R3270 += 1, R3113 += 1, R3114 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s4 [67, 67] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s2 -> s1 [68, 65535] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s3 -> s3 [0, 65535] { R3270 += 1, R3114 += 1, R1895 += 1, R1896 += 1 };
  s3 -> s6 [0, 65535] { R3270 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3270 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3270 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_71 {
  init s0;
  s0 -> s1 [0, 66] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s0 [0, 65535] { R3271 += 1, R3272 += 1 };
  s0 -> s2 [0, 65535] { R3272 += 1, R3115 += 1, R3116 += 1 };
  s0 -> s3 [67, 67] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s4 [67, 67] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s0 -> s1 [68, 65535] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [0, 66] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3272 += 1 };
  s1 -> s3 [67, 67] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s4 [67, 67] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s1 -> s1 [68, 65535] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s1 [0, 66] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3272 += 1, R3115 += 1, R3116 += 1 };
  s2 -> s3 [67, 67] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s4 [67, 67] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s2 -> s1 [68, 65535] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3272 += 1 };
  s3 -> s3 [0, 65535] { R3272 += 1, R3116 += 1, R1905 += 1, R1906 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3272 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3272 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_72 {
  init s0;
  s0 -> s1 [0, 66] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s2 [0, 65535] { R3274 += 1, R3117 += 1, R3118 += 1 };
  s0 -> s0 [0, 65535] { R3273 += 1, R3274 += 1 };
  s0 -> s3 [67, 67] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s4 [67, 67] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s0 -> s1 [68, 65535] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [0, 66] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [0, 65535] { R3274 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s4 [67, 67] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s1 -> s1 [68, 65535] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s1 [0, 66] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s2 [0, 65535] { R3274 += 1, R3117 += 1, R3118 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s4 [67, 67] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s2 -> s1 [68, 65535] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s3 -> s3 [0, 65535] { R3274 += 1, R3118 += 1, R1917 += 1, R1918 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3274 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3274 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3274 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_73 {
  init s0;
  s0 -> s1 [0, 66] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s0 [0, 65535] { R3275 += 1, R3276 += 1 };
  s0 -> s2 [0, 65535] { R3276 += 1, R3119 += 1, R3120 += 1 };
  s0 -> s3 [67, 67] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s4 [67, 67] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s0 -> s1 [68, 65535] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s1 [0, 66] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3276 += 1 };
  s1 -> s3 [67, 67] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s4 [67, 67] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s1 -> s1 [68, 65535] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s1 [0, 66] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3276 += 1, R3119 += 1, R3120 += 1 };
  s2 -> s3 [67, 67] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s4 [67, 67] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s2 -> s1 [68, 65535] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3276 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3276 += 1 };
  s4 -> s4 [0, 65535] { R3276 += 1, R3120 += 1, R1931 += 1, R1932 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3276 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_74 {
  init s0;
  s0 -> s1 [0, 66] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s0 [0, 65535] { R3277 += 1, R3278 += 1 };
  s0 -> s2 [0, 65535] { R3278 += 1, R3121 += 1, R3122 += 1 };
  s0 -> s3 [67, 67] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s4 [67, 67] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s0 -> s1 [68, 65535] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [0, 66] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [0, 65535] { R3278 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s4 [67, 67] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s1 -> s1 [68, 65535] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s1 [0, 66] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R3278 += 1, R3121 += 1, R3122 += 1 };
  s2 -> s3 [67, 67] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s4 [67, 67] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s2 -> s1 [68, 65535] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s3 -> s3 [0, 65535] { R3278 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3278 += 1 };
  s4 -> s4 [0, 65535] { R3278 += 1, R3122 += 1, R1943 += 1, R1944 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3278 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_75 {
  init s0;
  s0 -> s1 [0, 66] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s0 [0, 65535] { R3279 += 1, R3280 += 1 };
  s0 -> s2 [0, 65535] { R3280 += 1, R3123 += 1, R3124 += 1 };
  s0 -> s3 [67, 67] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s4 [67, 67] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s0 -> s1 [68, 65535] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [0, 66] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3280 += 1 };
  s1 -> s3 [67, 67] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s4 [67, 67] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s1 -> s1 [68, 65535] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s1 [0, 66] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3280 += 1, R3123 += 1, R3124 += 1 };
  s2 -> s3 [67, 67] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s4 [67, 67] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s2 -> s1 [68, 65535] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s3 -> s3 [0, 65535] { R3280 += 1, R3124 += 1, R1957 += 1, R1958 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3280 += 1 };
  s4 -> s4 [0, 65535] { R3280 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3280 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_76 {
  init s0;
  s0 -> s1 [0, 66] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s0 [0, 65535] { R3281 += 1, R3282 += 1 };
  s0 -> s2 [0, 65535] { R3282 += 1, R3125 += 1, R3126 += 1 };
  s0 -> s3 [67, 67] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s4 [67, 67] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s0 -> s1 [68, 65535] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [0, 66] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [0, 65535] { R3282 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s4 [67, 67] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s1 -> s1 [68, 65535] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s1 [0, 66] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s2 [0, 65535] { R3282 += 1, R3125 += 1, R3126 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s4 [67, 67] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s2 -> s1 [68, 65535] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s3 -> s3 [0, 65535] { R3282 += 1, R3126 += 1, R1969 += 1, R1970 += 1 };
  s3 -> s6 [0, 65535] { R3282 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3282 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3282 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_77 {
  init s0;
  s0 -> s1 [0, 66] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s0 [0, 65535] { R3283 += 1, R3284 += 1 };
  s0 -> s2 [0, 65535] { R3284 += 1, R3127 += 1, R3128 += 1 };
  s0 -> s3 [67, 67] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s4 [67, 67] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s0 -> s1 [68, 65535] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [0, 66] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3284 += 1 };
  s1 -> s3 [67, 67] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s4 [67, 67] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s1 -> s1 [68, 65535] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s1 [0, 66] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s2 [0, 65535] { R3284 += 1, R3127 += 1, R3128 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s4 [67, 67] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s2 -> s1 [68, 65535] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s3 -> s6 [0, 65535] { R3284 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3284 += 1, R3128 += 1, R1979 += 1, R1980 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3284 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3284 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_78 {
  init s0;
  s0 -> s1 [0, 66] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s0 [0, 65535] { R3285 += 1, R3286 += 1 };
  s0 -> s2 [0, 65535] { R3286 += 1, R3129 += 1, R3130 += 1 };
  s0 -> s3 [67, 67] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s4 [67, 67] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s0 -> s1 [68, 65535] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [0, 66] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3286 += 1 };
  s1 -> s3 [67, 67] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s4 [67, 67] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s1 -> s1 [68, 65535] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s1 [0, 66] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3286 += 1, R3129 += 1, R3130 += 1 };
  s2 -> s3 [67, 67] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s4 [67, 67] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s2 -> s1 [68, 65535] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R3286 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R3286 += 1 };
  s4 -> s4 [0, 65535] { R3286 += 1, R3130 += 1, R1987 += 1, R1988 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3286 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_79 {
  init s0;
  s0 -> s1 [0, 66] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s2 [0, 65535] { R3288 += 1, R3131 += 1, R3132 += 1 };
  s0 -> s0 [0, 65535] { R3287 += 1, R3288 += 1 };
  s0 -> s3 [67, 67] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s4 [67, 67] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s0 -> s1 [68, 65535] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s1 [0, 66] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3288 += 1 };
  s1 -> s3 [67, 67] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s4 [67, 67] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s1 -> s1 [68, 65535] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s1 [0, 66] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3288 += 1, R3131 += 1, R3132 += 1 };
  s2 -> s3 [67, 67] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s4 [67, 67] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s2 -> s1 [68, 65535] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3288 += 1 };
  s3 -> s3 [0, 65535] { R3288 += 1, R3132 += 1, R1997 += 1, R1998 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3288 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3288 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_80 {
  init s0;
  s0 -> s1 [0, 66] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s0 [0, 65535] { R3289 += 1, R3290 += 1 };
  s0 -> s2 [0, 65535] { R3290 += 1, R3133 += 1, R3134 += 1 };
  s0 -> s3 [67, 67] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s4 [67, 67] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s0 -> s1 [68, 65535] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [0, 66] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [0, 65535] { R3290 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s4 [67, 67] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s1 -> s1 [68, 65535] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s1 [0, 66] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3290 += 1, R3133 += 1, R3134 += 1 };
  s2 -> s3 [67, 67] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s4 [67, 67] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s2 -> s1 [68, 65535] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s3 -> s3 [0, 65535] { R3290 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3290 += 1, R3134 += 1, R2007 += 1, R2008 += 1 };
  s4 -> s6 [0, 65535] { R3290 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3290 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_81 {
  init s0;
  s0 -> s1 [0, 66] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s2 [0, 65535] { R3292 += 1, R3135 += 1, R3136 += 1 };
  s0 -> s0 [0, 65535] { R3291 += 1, R3292 += 1 };
  s0 -> s3 [67, 67] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s4 [67, 67] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s0 -> s1 [68, 65535] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [0, 66] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R3292 += 1 };
  s1 -> s3 [67, 67] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s4 [67, 67] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s1 -> s1 [68, 65535] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s1 [0, 66] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s2 [0, 65535] { R3292 += 1, R3135 += 1, R3136 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [67, 67] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s4 [67, 67] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s2 -> s1 [68, 65535] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3292 += 1 };
  s3 -> s3 [0, 65535] { R3292 += 1, R3136 += 1, R2019 += 1, R2020 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R3292 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3292 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_82 {
  init s0;
  s0 -> s1 [0, 66] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s2 [0, 65535] { R3294 += 1, R3137 += 1, R3138 += 1 };
  s0 -> s0 [0, 65535] { R3293 += 1, R3294 += 1 };
  s0 -> s3 [67, 67] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s4 [67, 67] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s0 -> s1 [68, 65535] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [0, 66] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [0, 65535] { R3294 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [67, 67] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s4 [67, 67] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s1 -> s1 [68, 65535] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s1 [0, 66] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s2 [0, 65535] { R3294 += 1, R3137 += 1, R3138 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [67, 67] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s4 [67, 67] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s2 -> s1 [68, 65535] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s3 -> s3 [0, 65535] { R3294 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R3294 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R3294 += 1, R3138 += 1, R2033 += 1, R2034 += 1 };
  s5 -> s5 [0, 65535] { R3294 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_83 {
  init s0;
  s0 -> s1 [0, 66] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s0 -> s0 [0, 65535] { R3295 += 1, R3296 += 1 };
  s0 -> s2 [0, 65535] { R3296 += 1, R3139 += 1, R3140 += 1 };
  s0 -> s3 [67, 67] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s0 -> s4 [67, 67] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s0 -> s1 [68, 65535] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s1 [0, 66] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s1 [0, 65535] { R3296 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [67, 67] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s4 [67, 67] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s1 -> s1 [68, 65535] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s1 [0, 66] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R3296 += 1, R3139 += 1, R3140 += 1 };
  s2 -> s3 [67, 67] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s4 [67, 67] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s2 -> s1 [68, 65535] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s3 -> s3 [0, 65535] { R3296 += 1, R3140 += 1, R2045 += 1, R2046 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R3296 += 1 };
  s4 -> s4 [0, 65535] { R3296 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R3296 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_84 {
  init s0;
  s0 -> s1 [0, 66] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s0 -> s2 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s0 -> s3 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s0 -> s0 [0, 65535] { R3297 += 1, R3298 += 1 };
  s0 -> s4 [0, 65535] { R3298 += 1, R3141 += 1, R3142 += 1 };
  s0 -> s5 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s0 -> s6 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s0 -> s7 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s0 -> s8 [67, 67] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s0 -> s9 [67, 67] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s0 -> s10 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s0 -> s3 [68, 69] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s0 -> s1 [68, 65535] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s0 -> s2 [68, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s0 -> s11 [70, 70] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s0 -> s3 [71, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s1 -> s1 [0, 66] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s1 -> s2 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s1 -> s3 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s1 -> s5 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s1 -> s6 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s1 -> s7 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s1 -> s8 [67, 67] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s1 -> s9 [67, 67] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s1 -> s10 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s1 -> s3 [68, 69] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s1 -> s1 [68, 65535] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s1 -> s2 [68, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s1 -> s11 [70, 70] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s1 -> s3 [71, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s2 -> s2 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s2 -> s3 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s2 -> s5 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s2 -> s6 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s2 -> s7 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s2 -> s10 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s2 -> s3 [68, 69] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s2 -> s2 [68, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s2 -> s11 [70, 70] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s2 -> s3 [71, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s3 -> s3 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s3 -> s5 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1 };
  s3 -> s6 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1 };
  s3 -> s3 [68, 69] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s3 -> s3 [68, 65535] { R3298 += 1, R3142 += 1, R2990 += 1 };
  s3 -> s11 [70, 70] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s3 -> s3 [71, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s4 -> s1 [0, 66] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s4 -> s2 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s4 -> s3 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s4 -> s4 [0, 65535] { R3298 += 1, R3141 += 1, R3142 += 1 };
  s4 -> s5 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s4 -> s6 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s4 -> s7 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s4 -> s8 [67, 67] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s4 -> s9 [67, 67] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s4 -> s10 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s4 -> s3 [68, 69] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s4 -> s1 [68, 65535] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s4 -> s2 [68, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s4 -> s11 [70, 70] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s4 -> s3 [71, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s6 -> s6 [0, 69] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s6 -> s6 [0, 65535] { R3298 += 1, R3142 += 1, R2990 += 1 };
  s6 -> s14 [70, 70] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s6 -> s6 [71, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s9 -> s6 [0, 69] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s9 -> s9 [0, 65535] { R3298 += 1, R3142 += 1, R2989 += 1, R2990 += 1 };
  s9 -> s10 [0, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s9 -> s14 [70, 70] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s9 -> s6 [71, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s10 -> s6 [0, 69] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s10 -> s10 [0, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2991 += 1, R2992 += 1 };
  s10 -> s14 [70, 70] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s10 -> s6 [71, 65535] { R3298 += 1, R3142 += 1, R2990 += 1, R2992 += 1, R2993 += 1, R2994 += 1 };
  s11 -> s11 [0, 66] { R3298 += 1, R3142 += 1, R2990 += 1 };
  s11 -> s12 [0, 65535];
  s11 -> s11 [0, 65535] { R3298 += 1 };
  s11 -> s13 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1 };
  s11 -> s14 [67, 67] { R3298 += 1, R3142 += 1, R2990 += 1 };
  s11 -> s11 [68, 65535] { R3298 += 1, R3142 += 1, R2990 += 1 };
  s12 -> s12 [0, 65535];
  s13 -> s13 [0, 65535] { R3298 += 1 };
  s13 -> s12 [0, 65535];
  s14 -> s14 [0, 65535] { R3298 += 1, R3142 += 1, R2990 += 1 };
  s14 -> s15 [0, 65535] { R3298 += 1 };
  s14 -> s12 [0, 65535];
  s15 -> s15 [0, 65535] { R3298 += 1 };
  s15 -> s12 [0, 65535];
  accepting s12, s13, s14, s15, s11;
};
};
constraint R3 = R3072 && R4 - R3298 = 1 && R29 - R3072 = -1 && R30 = R3072 && R31 - R3072 = -1 && R32 = R3072 && R33 = 0 && R34 = 1 && R35 = 0 && R36 = 1 && R37 = R3298 && R38 - R3298 = 1 && R39 = R3298 && R40 - R3298 = 1 && R41 = 0 && R42 = 1 && R43 = 0 && R44 = 1 && R1774 + R1773 + -1*R2040 + -1*R2034 = 0 && R1792 + R1789 + R1894 + R1889 + R1996 + R1991 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 && R1823 + R1819 + R1941 + R1935 + R2043 + R2037 = 0 && R1845 + R1843 = 0 && R1846 + R1844 + -1*R2040 + -1*R2034 = 0 && R1983 + R1979 = 0 && R1984 + R1980 + -1*R2040 + -1*R2034 = 0 && R1985 + R1981 = 0 && R1986 + R1982 = 0 && R2039 + R2033 = 0 && R2041 + R2035 = 0 && R2042 + R2036 = 0 && R3001 = 0 && R3002 = R3072 && R3003 = 0 && R3004 = R3072 && R3005 = 0 && R3006 = R3072 && R3007 = 0 && R3008 = R3072 && R3009 = 0 && R3010 = R3072 && R3011 = 0 && R3012 = R3072 && R3013 = 0 && R3014 = R3072 && R3015 = 0 && R3016 = R3072 && R3017 = 0 && R3018 = R3072 && R3019 = 0 && R3020 = R3072 && R3021 = 0 && R3022 = R3072 && R3023 = 0 && R3024 = R3072 && R3025 = 0 && R3026 = R3072 && R3027 = 0 && R3028 = R3072 && R3029 = 0 && R3030 = R3072 && R3031 = 0 && R3032 = R3072 && R3033 = 0 && R3034 = R3072 && R3035 = 0 && R3036 = R3072 && R3037 = 0 && R3038 = R3072 && R3039 = 0 && R3040 = R3072 && R3041 = 0 && R3042 = R3072 && R3043 = 0 && R3044 = R3072 && R3045 = 0 && R3046 = R3072 && R3047 = 0 && R3048 = R3072 && R3049 = 0 && R3050 = R3072 && R3051 = 0 && R3052 = R3072 && R3053 = 0 && R3054 = R3072 && R3055 = 0 && R3056 = R3072 && R3057 = 0 && R3058 = R3072 && R3059 = 0 && R3060 = R3072 && R3061 = 0 && R3062 = R3072 && R3063 = 0 && R3064 = R3072 && R3065 = 0 && R3066 = R3072 && R3067 = 0 && R3068 = R3072 && R3069 = 0 && R3070 = R3072 && R3071 = 0 && R3075 = 0 && R3076 = 0 && R3141 = 0 && R3142 = 0 && R3143 = 0 && R3144 = R3298 && R3145 = 0 && R3146 = R3298 && R3147 = 0 && R3148 = R3298 && R3149 = 0 && R3150 = R3298 && R3151 = 0 && R3152 = R3298 && R3153 = 0 && R3154 = R3298 && R3155 = 0 && R3156 = R3298 && R3157 = 0 && R3158 = R3298 && R3159 = 0 && R3160 = R3298 && R3161 = 0 && R3162 = R3298 && R3163 = 0 && R3164 = R3298 && R3165 = 0 && R3166 = R3298 && R3167 = 0 && R3168 = R3298 && R3169 = 0 && R3170 = R3298 && R3171 = 0 && R3172 = R3298 && R3173 = 0 && R3174 = R3298 && R3175 = 0 && R3176 = R3298 && R3177 = 0 && R3178 = R3298 && R3179 = 0 && R3180 = R3298 && R3181 = 0 && R3182 = R3298 && R3183 = 0 && R3184 = R3298 && R3185 = 0 && R3186 = R3298 && R3187 = 0 && R3188 = R3298 && R3189 = 0 && R3190 = R3298 && R3191 = 0 && R3192 = R3298 && R3193 = 0 && R3194 = R3298 && R3195 = 0 && R3196 = R3298 && R3197 = 0 && R3198 = R3298 && R3199 = 0 && R3200 = R3298 && R3201 = 0 && R3202 = R3298 && R3203 = 0 && R3204 = R3298 && R3205 = 0 && R3206 = R3298 && R3207 = 0 && R3208 = R3298 && R3209 = 0 && R3210 = R3298 && R3211 = 0 && R3212 = R3298 && R3213 = 0 && R3214 = R3298 && R3215 = 0 && R3216 = R3298 && R3217 = 0 && R3218 = R3298 && R3219 = 0 && R3220 = R3298 && R3221 = 0 && R3222 = R3298 && R3223 = 0 && R3224 = R3298 && R3225 = 0 && R3226 = R3298 && R3227 = 0 && R3228 = R3298 && R3229 = 0 && R3230 = R3298 && R3231 = 0 && R3232 = R3298 && R3233 = 0 && R3234 = R3298 && R3235 = 0 && R3236 = R3298 && R3237 = 0 && R3238 = R3298 && R3239 = 0 && R3240 = R3298 && R3241 = 0 && R3242 = R3298 && R3243 = 0 && R3244 = R3298 && R3245 = 0 && R3246 = R3298 && R3247 = 0 && R3248 = R3298 && R3249 = 0 && R3250 = R3298 && R3251 = 0 && R3252 = R3298 && R3253 = 0 && R3254 = R3298 && R3255 = 0 && R3256 = R3298 && R3257 = 0 && R3258 = R3298 && R3259 = 0 && R3260 = R3298 && R3261 = 0 && R3262 = R3298 && R3263 = 0 && R3264 = R3298 && R3265 = 0 && R3266 = R3298 && R3267 = 0 && R3268 = R3298 && R3269 = 0 && R3270 = R3298 && R3271 = 0 && R3272 = R3298 && R3273 = 0 && R3274 = R3298 && R3275 = 0 && R3276 = R3298 && R3277 = 0 && R3278 = R3298 && R3279 = 0 && R3280 = R3298 && R3281 = 0 && R3282 = R3298 && R3283 = 0 && R3284 = R3298 && R3285 = 0 && R3286 = R3298 && R3287 = 0 && R3288 = R3298 && R3289 = 0 && R3290 = R3298 && R3291 = 0 && R3292 = R3298 && R3293 = 0 && R3294 = R3298 && R3295 = 0 && R3296 = R3298 && R3297 = 0 && R18 < 1 && R21 < 1 && R1776 + R1775 < 1 && R1798 + R1795 + R1904 + R1899 + R2006 + R2001 < 1 && -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 < 1 && -1*R1852 + -1*R1849 < 1 && R1858 + R1855 < 1 && -1*R2040 + -1*R2034 < 1 && 0 < R3072 && -1 < R3298 && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 != 0 || ((R1805 + R1801 + R1915 + R1909 + R2017 + R2011 != 0 || R1806 + R1802 + R1916 + R1910 + R2018 + R2012 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1) && (R1805 + R1801 + R1915 + R1909 + R2017 + R2011 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1))) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 != 0 || ((R1814 + R1809 + R1928 + R1921 + R2030 + R2023 != 0 || R1815 + R1810 + R1929 + R1922 + R2031 + R2024 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1) && (R1814 + R1809 + R1928 + R1921 + R2030 + R2023 = 0 || R1824 + R1820 + R1942 + R1936 + R2044 + R2038 < 1))) && (R1850 + R1847 != 0 || R1851 + R1848 + -1*R2040 + -1*R2034 = 0 || R1852 + R1849 < 1) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1865 + R1861 = 0 && R1866 + R1862 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1874 + R1869 = 0 && R1875 + R1870 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1883 + R1879 = 0 && R1884 + R1880 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1892 + R1887 = 0 && R1893 + R1888 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1902 + R1897 = 0 && R1903 + R1898 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1913 + R1907 = 0 && R1914 + R1908 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1926 + R1919 = 0 && R1927 + R1920 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1939 + R1933 = 0 && R1940 + R1934 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1952 + R1945 = 0 && R1953 + R1946 = 0)) && (R1852 + R1849 != 0 || R1876 + R1871 = 0 || (R1965 + R1959 = 0 && R1966 + R1960 = 0)) && (R1852 + R1849 != 0 || ((R1850 + R1847 != 0 || R1851 + R1848 + -1*R2040 + -1*R2034 = 0 || R2040 + R2034 < 1) && (R1850 + R1847 = 0 || R2040 + R2034 < 1))) && (R1856 + R1853 != 0 || R1857 + R1854 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1863 + R1859 != 0 || R1864 + R1860 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1865 + R1861 != 0 || R1852 + R1849 + -1*R1866 + -1*R1862 = 0 || R1852 + R1849 < 1) && (R1872 + R1867 != 0 || R1873 + R1868 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1874 + R1869 != 0 || R1852 + R1849 + -1*R1875 + -1*R1870 = 0 || R1852 + R1849 < 1) && (R1881 + R1877 != 0 || R1882 + R1878 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1883 + R1879 != 0 || R1852 + R1849 + -1*R1884 + -1*R1880 = 0 || R1852 + R1849 < 1) && (R1890 + R1885 != 0 || R1891 + R1886 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1892 + R1887 != 0 || R1852 + R1849 + -1*R1893 + -1*R1888 = 0 || R1852 + R1849 < 1) && (R1900 + R1895 != 0 || R1901 + R1896 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1902 + R1897 != 0 || R1852 + R1849 + -1*R1903 + -1*R1898 = 0 || R1852 + R1849 < 1) && (R1911 + R1905 != 0 || R1912 + R1906 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1913 + R1907 != 0 || R1852 + R1849 + -1*R1914 + -1*R1908 = 0 || R1852 + R1849 < 1) && (R1924 + R1917 != 0 || R1925 + R1918 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1926 + R1919 != 0 || R1852 + R1849 + -1*R1927 + -1*R1920 = 0 || R1852 + R1849 < 1) && (R1937 + R1931 != 0 || R1938 + R1932 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1939 + R1933 != 0 || R1852 + R1849 + -1*R1940 + -1*R1934 = 0 || R1852 + R1849 < 1) && (R1950 + R1943 != 0 || R1951 + R1944 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1952 + R1945 != 0 || R1852 + R1849 + -1*R1953 + -1*R1946 = 0 || R1852 + R1849 < 1) && (R1963 + R1957 != 0 || R1964 + R1958 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1965 + R1959 != 0 || R1852 + R1849 + -1*R1966 + -1*R1960 = 0 || R1852 + R1849 < 1) && (R1974 + R1969 != 0 || R1975 + R1970 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1992 + R1987 != 0 || R1993 + R1988 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2002 + R1997 != 0 || R2003 + R1998 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2013 + R2007 != 0 || R2014 + R2008 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2026 + R2019 != 0 || R2027 + R2020 + -1*R2040 + -1*R2034 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2052 + R2045 != 0 || R2040 + R2034 + -1*R2053 + -1*R2046 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2995 + R2989 != 0 || R2040 + R2034 + -1*R2996 + -1*R2990 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R28 = 0 || (R3073 = 0 && R3074 = 0)) && (R28 = 0 || (R3077 = 0 && R3078 = 0)) && (R28 = 0 || (R3079 = 0 && R3080 = 0)) && (R28 = 0 || (R3081 = 0 && R3082 = 0)) && (R28 = 0 || (R3083 = 0 && R3084 = 0)) && (R28 = 0 || (R3085 = 0 && R3086 = 0)) && (R28 = 0 || (R3087 = 0 && R3088 = 0)) && (R28 = 0 || (R3089 = 0 && R3090 = 0)) && (R28 = 0 || (R3091 = 0 && R3092 = 0)) && (R28 = 0 || (R3093 = 0 && R3094 = 0)) && (R28 = 0 || (R3095 = 0 && R3096 = 0)) && (R28 = 0 || (R3097 = 0 && R3098 = 0)) && (R28 = 0 || (R3099 = 0 && R3100 = 0)) && (R28 = 0 || (R3101 = 0 && R3102 = 0)) && (R28 = 0 || (R3103 = 0 && R3104 = 0)) && (R28 = 0 || (R3105 = 0 && R3106 = 0)) && (R28 = 0 || (R3107 = 0 && R3108 = 0)) && (R28 = 0 || (R3109 = 0 && R3110 = 0)) && (R28 = 0 || (R3111 = 0 && R3112 = 0)) && (R28 = 0 || (R3113 = 0 && R3114 = 0)) && (R28 = 0 || (R3115 = 0 && R3116 = 0)) && (R28 = 0 || (R3117 = 0 && R3118 = 0)) && (R28 = 0 || (R3119 = 0 && R3120 = 0)) && (R28 = 0 || (R3121 = 0 && R3122 = 0)) && (R28 = 0 || (R3123 = 0 && R3124 = 0)) && (R28 = 0 || (R3125 = 0 && R3126 = 0)) && (R28 = 0 || (R3127 = 0 && R3128 = 0)) && (R28 = 0 || (R3129 = 0 && R3130 = 0)) && (R28 = 0 || (R3131 = 0 && R3132 = 0)) && (R28 = 0 || (R3133 = 0 && R3134 = 0)) && (R28 = 0 || (R3135 = 0 && R3136 = 0)) && (R28 = 0 || (R3137 = 0 && R3138 = 0)) && (R28 = 0 || (R3139 = 0 && R3140 = 0)) && (R1782 + R1779 = 0 || (R1780 + R1777 = 0 && R1781 + R1778 = 0)) && (R1782 + R1779 = 0 || (R1785 + R1783 = 0 && R1786 + R1784 = 0)) && (R1782 + R1779 = 0 || (R1790 + R1787 = 0 && R1791 + R1788 = 0)) && (R1782 + R1779 = 0 || (R1796 + R1793 = 0 && R1797 + R1794 = 0)) && (R1782 + R1779 = 0 || (R1803 + R1799 = 0 && R1804 + R1800 = 0)) && (R1782 + R1779 = 0 || (R1812 + R1807 = 0 && R1813 + R1808 = 0)) && (R1782 + R1779 = 0 || (R1821 + R1817 = 0 && R1822 + R1818 = 0)) && (R1782 + R1779 = 0 || (R1830 + R1825 = 0 && R1831 + R1826 = 0)) && (R1782 + R1779 = 0 || (R1839 + R1835 = 0 && R1840 + R1836 = 0)) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 = 0 || (R1805 + R1801 + R1915 + R1909 + R2017 + R2011 = 0 && R1806 + R1802 + R1916 + R1910 + R2018 + R2012 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0)) && (R1816 + R1811 + R1930 + R1923 + R2032 + R2025 = 0 || (R1814 + R1809 + R1928 + R1921 + R2030 + R2023 = 0 && R1815 + R1810 + R1929 + R1922 + R2031 + R2024 + -1*R2044 + -1*R2038 - R1936 - R1942 - R1820 - R1824 = 0)) && (R1834 + R1829 + R1956 + R1949 + R2058 + R2051 = 0 || (R1832 + R1827 + R1954 + R1947 + R2056 + R2049 = 0 && R1833 + R1828 + R1955 + R1948 + R2057 + R2050 = 0)) && (R1834 + R1829 + R1956 + R1949 + R2058 + R2051 = 0 || (R1841 + R1837 + R1967 + R1961 + R2999 + R2993 = 0 && R1842 + R1838 + R1968 + R1962 + R3000 + R2994 = 0)) && (R1850 + R1847 = 0 || R1852 + R1849 < 1) && (R1856 + R1853 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1863 + R1859 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1865 + R1861 = 0 || R1852 + R1849 < 1) && (R1872 + R1867 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1874 + R1869 = 0 || R1852 + R1849 < 1) && (R1881 + R1877 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1883 + R1879 = 0 || R1852 + R1849 < 1) && (R1890 + R1885 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1892 + R1887 = 0 || R1852 + R1849 < 1) && (R1900 + R1895 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1902 + R1897 = 0 || R1852 + R1849 < 1) && (R1911 + R1905 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1913 + R1907 = 0 || R1852 + R1849 < 1) && (R1924 + R1917 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1926 + R1919 = 0 || R1852 + R1849 < 1) && (R1937 + R1931 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1939 + R1933 = 0 || R1852 + R1849 < 1) && (R1950 + R1943 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1952 + R1945 = 0 || R1852 + R1849 < 1) && (R1963 + R1957 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1965 + R1959 = 0 || R1852 + R1849 < 1) && (R1974 + R1969 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R1978 + R1973 = 0 || (R1976 + R1971 = 0 && R1977 + R1972 = 0)) && (R1978 + R1973 = 0 || (R1994 + R1989 = 0 && R1995 + R1990 = 0)) && (R1978 + R1973 = 0 || (R2004 + R1999 = 0 && R2005 + R2000 = 0)) && (R1978 + R1973 = 0 || (R2015 + R2009 = 0 && R2016 + R2010 = 0)) && (R1978 + R1973 = 0 || (R2028 + R2021 = 0 && R2029 + R2022 = 0)) && (R1978 + R1973 = 0 || (R2054 + R2047 = 0 && R2055 + R2048 = 0)) && (R1978 + R1973 = 0 || (R2997 + R2991 = 0 && R2998 + R2992 = 0)) && (R1992 + R1987 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2002 + R1997 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2013 + R2007 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2026 + R2019 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2052 + R2045 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0)) && (R2995 + R2989 = 0 || (R1852 + R1849 = 0 && R2040 + R2034 = 0));
// End of Parikh automata intersection problem
