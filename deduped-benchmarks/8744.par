// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R11007, R11008, R11009, R11010, R11737, R11738, R11739, R11740, R11741, R11742, R12103, R12104, R12105, R12106, R12107, R12108, R12109, R12110, R12111, R12112, R12113, R12114, R12115, R12116, R12117, R12118, R12119, R12120, R12121, R12122, R12123, R12124, R12125, R12126, R12127, R12128, R12129, R12130, R12131, R12132, R12133, R12134, R12135, R12136, R12137, R12138, R12139, R12140, R12141, R12142, R12143, R12144, R12145, R12146, R12147, R12148, R12149, R12150, R12151, R12152, R12153, R12154, R12155, R12156, R12157, R12158, R12159, R12160, R12161, R12162, R12163, R12164, R12165, R12166, R12167, R12168, R12169, R12170, R12171, R12172, R12173, R12174, R12175, R12176, R12177, R12178, R12179, R12180, R12181, R12182, R12183, R12184, R12185, R12186, R12187, R12188, R12189, R12190, R12191, R12192, R12193, R12194, R12195, R12196, R12197, R12198, R12199, R12200, R12201, R12202, R12203, R12204, R12205, R12206, R12207, R12208, R12209, R12210, R12211, R12212, R12213, R12214, R12215, R12216, R12217, R12218, R12219, R12220, R12221, R12222, R12223, R12224, R12225, R12226, R12227, R12228, R12229, R12230, R12231, R12232, R12233, R12234, R12235, R12236, R12237, R12238, R12239, R12240, R12241, R12242, R12243, R12244, R12245, R12246, R12247, R12248, R12249, R12250, R12251, R12252, R12253, R12254, R12255, R12256, R12257, R12258, R12259, R12260, R12261, R12262, R12263, R12264, R12265, R12266, R12267, R12268, R12269, R12270, R12271, R12272, R12273, R12274, R12275, R12276, R12277, R12278, R12279, R12280, R12281, R12282, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R6637, R6638, R6639, R6640, R6641, R6642, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R12208 += 1 };
  s0 -> s0 [0, 65535] { R12207 += 1, R12208 += 1 };
  s0 -> s2 [66, 66] { R12208 += 1 };
  s0 -> s1 [67, 65535] { R12208 += 1 };
  s1 -> s1 [0, 64] { R12208 += 1 };
  s1 -> s2 [66, 66] { R12208 += 1 };
  s1 -> s1 [67, 65535] { R12208 += 1 };
  s2 -> s2 [0, 64] { R12208 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R12208 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R12210 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R12209 += 1, R12210 += 1 };
  s1 -> s1 [0, 65535] { R12210 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R12212 += 1 };
  s0 -> s2 [0, 65535] { R12212 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R12211 += 1, R12212 += 1 };
  s0 -> s3 [66, 66] { R12212 += 1 };
  s0 -> s1 [67, 65535] { R12212 += 1 };
  s1 -> s1 [0, 65] { R12212 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R12212 += 1 };
  s1 -> s1 [67, 65535] { R12212 += 1 };
  s2 -> s1 [0, 65] { R12212 += 1 };
  s2 -> s2 [0, 65535] { R12212 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R12212 += 1 };
  s2 -> s1 [67, 65535] { R12212 += 1 };
  s3 -> s3 [0, 65535] { R12212 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R12214 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R12213 += 1, R12214 += 1 };
  s0 -> s2 [0, 65535] { R12214 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R12214 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R12214 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R12214 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R12214 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R12214 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12214 += 1, R24 += 1 };
  s2 -> s1 [0, 8] { R12214 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R12214 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R12214 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R12214 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R12214 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R12214 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R12214 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12214 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R12216 += 1, R25 += 1, R26 += 1 };
  s0 -> s0 [0, 65535] { R12215 += 1, R12216 += 1 };
  s0 -> s2 [0, 65535] { R12216 += 1, R26 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12216 += 1, R25 += 1, R26 += 1 };
  s1 -> s2 [0, 65535] { R12216 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R12216 += 1 };
  s2 -> s2 [0, 65535] { R12216 += 1, R26 += 1, R4 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12216 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R12218 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R12218 += 1, R27 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R12217 += 1, R12218 += 1 };
  s0 -> s3 [9, 13] { R12218 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R12218 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R12218 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R12218 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R12218 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R12218 += 1 };
  s2 -> s1 [0, 8] { R12218 += 1, R28 += 1 };
  s2 -> s2 [0, 65535] { R12218 += 1, R27 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R12218 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R12218 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R12218 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R12218 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R12218 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12218 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R12219 += 1, R12220 += 1 };
  s0 -> s1 [0, 65535] { R12220 += 1, R29 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R12220 += 1, R30 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R12220 += 1, R29 += 1, R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R12220 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R12220 += 1 };
  s2 -> s2 [0, 65535] { R12220 += 1, R30 += 1, R5 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12220 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R12222 += 1, R12128 += 1, R22 += 1 };
  s0 -> s0 [0, 65535] { R12221 += 1, R12222 += 1 };
  s0 -> s2 [0, 65535] { R12222 += 1, R12127 += 1, R12128 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R12222 += 1, R12128 += 1, R22 += 1 };
  s1 -> s4 [0, 65535] { R12222 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12222 += 1, R12128 += 1, R22 += 1 };
  s2 -> s2 [0, 65535] { R12222 += 1, R12127 += 1, R12128 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12222 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R12224 += 1, R12130 += 1 };
  s0 -> s2 [0, 65535] { R12224 += 1, R12129 += 1, R12130 += 1 };
  s0 -> s0 [0, 65535] { R12223 += 1, R12224 += 1 };
  s0 -> s3 [66, 66] { R12224 += 1, R12130 += 1 };
  s0 -> s4 [66, 66] { R12224 += 1, R12130 += 1 };
  s0 -> s1 [71, 65535] { R12224 += 1, R12130 += 1 };
  s1 -> s1 [0, 65] { R12224 += 1, R12130 += 1 };
  s1 -> s1 [0, 65535] { R12224 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12224 += 1, R12130 += 1 };
  s1 -> s4 [66, 66] { R12224 += 1, R12130 += 1 };
  s1 -> s1 [71, 65535] { R12224 += 1, R12130 += 1 };
  s2 -> s1 [0, 65] { R12224 += 1, R12130 += 1 };
  s2 -> s2 [0, 65535] { R12224 += 1, R12129 += 1, R12130 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R12224 += 1, R12130 += 1 };
  s2 -> s4 [66, 66] { R12224 += 1, R12130 += 1 };
  s2 -> s1 [71, 65535] { R12224 += 1, R12130 += 1 };
  s3 -> s3 [0, 65535] { R12224 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R12224 += 1, R12130 += 1 };
  s4 -> s4 [0, 65535] { R12224 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [71, 65535] { R12224 += 1, R12130 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R12226 += 1, R12132 += 1, R49 += 1 };
  s0 -> s2 [0, 65535] { R12226 += 1, R12131 += 1, R12132 += 1 };
  s0 -> s0 [0, 65535] { R12225 += 1, R12226 += 1 };
  s0 -> s3 [66, 66] { R12226 += 1, R12132 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R12226 += 1, R12132 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R12226 += 1, R12132 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R12226 += 1, R12132 += 1, R49 += 1 };
  s1 -> s1 [0, 65535] { R12226 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R12226 += 1, R12132 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R12226 += 1, R12132 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R12226 += 1, R12132 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R12226 += 1, R12132 += 1, R49 += 1 };
  s2 -> s2 [0, 65535] { R12226 += 1, R12131 += 1, R12132 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R12226 += 1, R12132 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R12226 += 1, R12132 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R12226 += 1, R12132 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R12226 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R12226 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R12226 += 1, R12132 += 1, R49 += 1 };
  s5 -> s5 [0, 65535] { R12226 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R12228 += 1, R12134 += 1, R51 += 1 };
  s0 -> s0 [0, 65535] { R12227 += 1, R12228 += 1 };
  s0 -> s2 [0, 65535] { R12228 += 1, R12133 += 1, R12134 += 1 };
  s0 -> s3 [66, 66] { R12228 += 1, R12134 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R12228 += 1, R12134 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R12228 += 1, R12134 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R12228 += 1, R12134 += 1, R51 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12228 += 1 };
  s1 -> s3 [66, 66] { R12228 += 1, R12134 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R12228 += 1, R12134 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R12228 += 1, R12134 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R12228 += 1, R12134 += 1, R51 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12228 += 1, R12133 += 1, R12134 += 1 };
  s2 -> s3 [66, 66] { R12228 += 1, R12134 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R12228 += 1, R12134 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R12228 += 1, R12134 += 1, R51 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12228 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12228 += 1, R12134 += 1, R51 += 1 };
  s4 -> s6 [0, 65535] { R12228 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12228 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s0 -> s2 [0, 65535] { R12230 += 1, R12135 += 1, R12136 += 1 };
  s0 -> s0 [0, 65535] { R12229 += 1, R12230 += 1 };
  s0 -> s3 [66, 66] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12230 += 1 };
  s1 -> s3 [66, 66] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12230 += 1, R12135 += 1, R12136 += 1 };
  s2 -> s3 [66, 66] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R12230 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12230 += 1, R12136 += 1, R53 += 1, R54 += 1 };
  s4 -> s6 [0, 65535] { R12230 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12230 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R12231 += 1, R12232 += 1 };
  s0 -> s2 [0, 65535] { R12232 += 1, R12137 += 1, R12138 += 1 };
  s0 -> s3 [66, 66] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R12232 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R12232 += 1, R12137 += 1, R12138 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R12232 += 1, R12138 += 1, R57 += 1, R58 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R12232 += 1 };
  s4 -> s4 [0, 65535] { R12232 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12232 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s0 -> s0 [0, 65535] { R12233 += 1, R12234 += 1 };
  s0 -> s2 [0, 65535] { R12234 += 1, R12139 += 1, R12140 += 1 };
  s0 -> s3 [66, 66] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65535] { R12234 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R12234 += 1, R12139 += 1, R12140 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s3 -> s3 [0, 65535] { R12234 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R12234 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R12234 += 1, R12140 += 1, R63 += 1, R64 += 1 };
  s5 -> s5 [0, 65535] { R12234 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R12236 += 1, R12141 += 1, R12142 += 1 };
  s0 -> s0 [0, 65535] { R12235 += 1, R12236 += 1 };
  s0 -> s3 [66, 66] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12236 += 1 };
  s1 -> s3 [66, 66] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12236 += 1, R12141 += 1, R12142 += 1 };
  s2 -> s3 [66, 66] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12236 += 1, R12142 += 1, R67 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R12236 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12236 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12236 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R12237 += 1, R12238 += 1 };
  s0 -> s2 [0, 65535] { R12238 += 1, R12143 += 1, R12144 += 1 };
  s0 -> s3 [66, 66] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535] { R12238 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s2 -> s2 [0, 65535] { R12238 += 1, R12143 += 1, R12144 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s3 -> s6 [0, 65535] { R12238 += 1 };
  s3 -> s3 [0, 65535] { R12238 += 1, R12144 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12238 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12238 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R12240 += 1, R12164 += 1 };
  s0 -> s0 [0, 65535] { R12239 += 1, R12240 += 1 };
  s0 -> s2 [0, 65535] { R12240 += 1, R12163 += 1, R12164 += 1 };
  s0 -> s3 [66, 66] { R12240 += 1, R12164 += 1 };
  s0 -> s1 [67, 65535] { R12240 += 1, R12164 += 1 };
  s1 -> s1 [0, 65] { R12240 += 1, R12164 += 1 };
  s1 -> s3 [66, 66] { R12240 += 1, R12164 += 1 };
  s1 -> s1 [67, 65535] { R12240 += 1, R12164 += 1 };
  s2 -> s1 [0, 65] { R12240 += 1, R12164 += 1 };
  s2 -> s2 [0, 65535] { R12240 += 1, R12163 += 1, R12164 += 1 };
  s2 -> s3 [66, 66] { R12240 += 1, R12164 += 1 };
  s2 -> s1 [67, 65535] { R12240 += 1, R12164 += 1 };
  s3 -> s4 [0, 65535] { R12240 += 1 };
  s3 -> s3 [0, 65535] { R12240 += 1, R12164 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12240 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R12242 += 1, R12166 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R12242 += 1, R12165 += 1, R12166 += 1 };
  s0 -> s0 [0, 65535] { R12241 += 1, R12242 += 1 };
  s1 -> s1 [0, 65535] { R12242 += 1, R12166 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R12242 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R12242 += 1, R12166 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R12242 += 1, R12165 += 1, R12166 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R12242 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R12244 += 1, R12168 += 1 };
  s0 -> s2 [0, 65535] { R12244 += 1, R12167 += 1, R12168 += 1 };
  s0 -> s0 [0, 65535] { R12243 += 1, R12244 += 1 };
  s0 -> s3 [0, 65535] { R12244 += 1, R12168 += 1, R11 += 1 };
  s0 -> s4 [66, 66] { R12244 += 1, R12168 += 1 };
  s0 -> s1 [67, 65535] { R12244 += 1, R12168 += 1 };
  s1 -> s1 [0, 65] { R12244 += 1, R12168 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R12244 += 1 };
  s1 -> s4 [66, 66] { R12244 += 1, R12168 += 1 };
  s1 -> s1 [67, 65535] { R12244 += 1, R12168 += 1 };
  s2 -> s1 [0, 65] { R12244 += 1, R12168 += 1 };
  s2 -> s2 [0, 65535] { R12244 += 1, R12167 += 1, R12168 += 1 };
  s2 -> s3 [0, 65535] { R12244 += 1, R12168 += 1, R11 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R12244 += 1, R12168 += 1 };
  s2 -> s1 [67, 65535] { R12244 += 1, R12168 += 1 };
  s3 -> s1 [0, 65] { R12244 += 1, R12168 += 1 };
  s3 -> s5 [0, 65535] { R12244 += 1 };
  s3 -> s3 [0, 65535] { R12244 += 1, R12168 += 1, R11 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [66, 66] { R12244 += 1, R12168 += 1 };
  s3 -> s1 [67, 65535] { R12244 += 1, R12168 += 1 };
  s4 -> s4 [0, 65535] { R12244 += 1, R12168 += 1 };
  s5 -> s5 [0, 65535] { R12244 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R12246 += 1, R12170 += 1, R12108 += 1 };
  s0 -> s2 [0, 65535] { R12246 += 1, R12170 += 1, R12107 += 1, R12108 += 1 };
  s0 -> s3 [0, 65535] { R12246 += 1, R12169 += 1, R12170 += 1 };
  s0 -> s0 [0, 65535] { R12245 += 1, R12246 += 1 };
  s0 -> s1 [67, 65535] { R12246 += 1, R12170 += 1, R12108 += 1 };
  s1 -> s1 [0, 65] { R12246 += 1, R12170 += 1, R12108 += 1 };
  s1 -> s1 [0, 65535] { R12246 += 1, R12170 += 1 };
  s1 -> s5 [0, 65535] { R12246 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [67, 65535] { R12246 += 1, R12170 += 1, R12108 += 1 };
  s2 -> s1 [0, 65] { R12246 += 1, R12170 += 1, R12108 += 1 };
  s2 -> s5 [0, 65535] { R12246 += 1 };
  s2 -> s2 [0, 65535] { R12246 += 1, R12170 += 1, R12107 += 1, R12108 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [67, 65535] { R12246 += 1, R12170 += 1, R12108 += 1 };
  s3 -> s1 [0, 65] { R12246 += 1, R12170 += 1, R12108 += 1 };
  s3 -> s2 [0, 65535] { R12246 += 1, R12170 += 1, R12107 += 1, R12108 += 1 };
  s3 -> s3 [0, 65535] { R12246 += 1, R12169 += 1, R12170 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [67, 65535] { R12246 += 1, R12170 += 1, R12108 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12246 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R12248 += 1, R12171 += 1, R12172 += 1 };
  s0 -> s2 [0, 65535] { R12248 += 1, R12172 += 1, R12110 += 1, R20 += 1 };
  s0 -> s3 [0, 65535] { R12248 += 1, R12172 += 1, R12109 += 1, R12110 += 1 };
  s0 -> s0 [0, 65535] { R12247 += 1, R12248 += 1 };
  s1 -> s1 [0, 65535] { R12248 += 1, R12171 += 1, R12172 += 1 };
  s1 -> s2 [0, 65535] { R12248 += 1, R12172 += 1, R12110 += 1, R20 += 1 };
  s1 -> s3 [0, 65535] { R12248 += 1, R12172 += 1, R12109 += 1, R12110 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s4 [0, 65535] { R12248 += 1 };
  s2 -> s6 [0, 65535] { R12248 += 1, R12172 += 1 };
  s2 -> s2 [0, 65535] { R12248 += 1, R12172 += 1, R12110 += 1, R20 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R12248 += 1 };
  s3 -> s2 [0, 65535] { R12248 += 1, R12172 += 1, R12110 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R12248 += 1, R12172 += 1, R12109 += 1, R12110 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R12248 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R12248 += 1 };
  s6 -> s6 [0, 65535] { R12248 += 1, R12172 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R12250 += 1, R12174 += 1, R12112 += 1 };
  s0 -> s2 [0, 65535] { R12250 += 1, R12173 += 1, R12174 += 1 };
  s0 -> s0 [0, 65535] { R12249 += 1, R12250 += 1 };
  s0 -> s3 [0, 65535] { R12250 += 1, R12174 += 1, R12111 += 1, R12112 += 1 };
  s0 -> s1 [70, 65535] { R12250 += 1, R12174 += 1, R12112 += 1 };
  s1 -> s1 [0, 66] { R12250 += 1, R12174 += 1, R12112 += 1 };
  s1 -> s4 [0, 65535] { R12250 += 1 };
  s1 -> s1 [0, 65535] { R12250 += 1, R12174 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [70, 65535] { R12250 += 1, R12174 += 1, R12112 += 1 };
  s2 -> s1 [0, 66] { R12250 += 1, R12174 += 1, R12112 += 1 };
  s2 -> s2 [0, 65535] { R12250 += 1, R12173 += 1, R12174 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R12250 += 1, R12174 += 1, R12111 += 1, R12112 += 1 };
  s2 -> s1 [70, 65535] { R12250 += 1, R12174 += 1, R12112 += 1 };
  s3 -> s1 [0, 66] { R12250 += 1, R12174 += 1, R12112 += 1 };
  s3 -> s4 [0, 65535] { R12250 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R12250 += 1, R12174 += 1, R12111 += 1, R12112 += 1 };
  s3 -> s1 [70, 65535] { R12250 += 1, R12174 += 1, R12112 += 1 };
  s4 -> s4 [0, 65535] { R12250 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R12252 += 1, R12176 += 1, R12113 += 1, R12114 += 1 };
  s0 -> s2 [0, 65535] { R12252 += 1, R12175 += 1, R12176 += 1 };
  s0 -> s0 [0, 65535] { R12251 += 1, R12252 += 1 };
  s0 -> s3 [0, 65535] { R12252 += 1, R12176 += 1, R12114 += 1, R78 += 1 };
  s1 -> s1 [0, 65535] { R12252 += 1, R12176 += 1, R12113 += 1, R12114 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R12252 += 1 };
  s1 -> s3 [0, 65535] { R12252 += 1, R12176 += 1, R12114 += 1, R78 += 1 };
  s2 -> s1 [0, 65535] { R12252 += 1, R12176 += 1, R12113 += 1, R12114 += 1 };
  s2 -> s2 [0, 65535] { R12252 += 1, R12175 += 1, R12176 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R12252 += 1, R12176 += 1, R12114 += 1, R78 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R12252 += 1 };
  s3 -> s3 [0, 65535] { R12252 += 1, R12176 += 1, R12114 += 1, R78 += 1 };
  s3 -> s6 [0, 65535] { R12252 += 1, R12176 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R12252 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R12252 += 1 };
  s6 -> s6 [0, 65535] { R12252 += 1, R12176 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s0 -> s2 [0, 65535] { R12254 += 1, R12177 += 1, R12178 += 1 };
  s0 -> s0 [0, 65535] { R12253 += 1, R12254 += 1 };
  s0 -> s3 [0, 65535] { R12254 += 1, R12178 += 1, R12115 += 1, R12116 += 1 };
  s0 -> s4 [0, 65535] { R12254 += 1, R12178 += 1, R12116 += 1, R80 += 1 };
  s0 -> s1 [71, 65535] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s1 -> s1 [0, 69] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s1 -> s5 [0, 65535] { R12254 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R12254 += 1, R12178 += 1 };
  s1 -> s1 [71, 65535] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s2 -> s1 [0, 69] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s2 -> s2 [0, 65535] { R12254 += 1, R12177 += 1, R12178 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R12254 += 1, R12178 += 1, R12115 += 1, R12116 += 1 };
  s2 -> s4 [0, 65535] { R12254 += 1, R12178 += 1, R12116 += 1, R80 += 1 };
  s2 -> s1 [71, 65535] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s3 -> s1 [0, 69] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s3 -> s5 [0, 65535] { R12254 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R12254 += 1, R12178 += 1, R12115 += 1, R12116 += 1 };
  s3 -> s4 [0, 65535] { R12254 += 1, R12178 += 1, R12116 += 1, R80 += 1 };
  s3 -> s1 [71, 65535] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s4 -> s1 [0, 69] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s4 -> s5 [0, 65535] { R12254 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R12254 += 1, R12178 += 1 };
  s4 -> s4 [0, 65535] { R12254 += 1, R12178 += 1, R12116 += 1, R80 += 1 };
  s4 -> s1 [71, 65535] { R12254 += 1, R12178 += 1, R12116 += 1 };
  s5 -> s5 [0, 65535] { R12254 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R12254 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12254 += 1, R12178 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R12255 += 1, R12256 += 1 };
  s0 -> s2 [0, 65535] { R12256 += 1, R12180 += 1, R12118 += 1, R83 += 1, R84 += 1 };
  s0 -> s3 [0, 65535] { R12256 += 1, R12180 += 1, R12117 += 1, R12118 += 1 };
  s0 -> s4 [0, 65535] { R12256 += 1, R12179 += 1, R12180 += 1 };
  s0 -> s1 [71, 65535] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R12256 += 1 };
  s1 -> s1 [0, 65535] { R12256 += 1, R12180 += 1, R12118 += 1 };
  s1 -> s7 [0, 65535] { R12256 += 1, R12180 += 1 };
  s1 -> s1 [71, 65535] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s6 [0, 65535] { R12256 += 1 };
  s2 -> s2 [0, 65535] { R12256 += 1, R12180 += 1, R12118 += 1, R83 += 1, R84 += 1 };
  s2 -> s7 [0, 65535] { R12256 += 1, R12180 += 1 };
  s2 -> s1 [71, 65535] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R12256 += 1 };
  s3 -> s2 [0, 65535] { R12256 += 1, R12180 += 1, R12118 += 1, R83 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R12256 += 1, R12180 += 1, R12117 += 1, R12118 += 1 };
  s3 -> s1 [71, 65535] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R12256 += 1, R12180 += 1, R12118 += 1, R83 += 1, R84 += 1 };
  s4 -> s3 [0, 65535] { R12256 += 1, R12180 += 1, R12117 += 1, R12118 += 1 };
  s4 -> s4 [0, 65535] { R12256 += 1, R12179 += 1, R12180 += 1 };
  s4 -> s1 [71, 65535] { R12256 += 1, R12180 += 1, R12118 += 1, R84 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12256 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R12256 += 1 };
  s7 -> s7 [0, 65535] { R12256 += 1, R12180 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R12257 += 1, R12258 += 1 };
  s0 -> s1 [0, 65535] { R12258 += 1, R12182 += 1, R12120 += 1, R6641 += 1, R6642 += 1 };
  s0 -> s2 [0, 65535] { R12258 += 1, R12181 += 1, R12182 += 1 };
  s0 -> s3 [0, 65535] { R12258 += 1, R12182 += 1, R12120 += 1 };
  s0 -> s4 [0, 65535] { R12258 += 1, R12182 += 1, R12119 += 1, R12120 += 1 };
  s1 -> s1 [0, 65535] { R12258 += 1, R12182 += 1, R12120 += 1, R6641 += 1, R6642 += 1 };
  s1 -> s5 [0, 65535] { R12258 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R12258 += 1, R12182 += 1 };
  s1 -> s3 [0, 65535] { R12258 += 1, R12182 += 1, R12120 += 1 };
  s2 -> s1 [0, 65535] { R12258 += 1, R12182 += 1, R12120 += 1, R6641 += 1, R6642 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R12258 += 1, R12181 += 1, R12182 += 1 };
  s2 -> s3 [0, 65535] { R12258 += 1, R12182 += 1, R12120 += 1 };
  s2 -> s4 [0, 65535] { R12258 += 1, R12182 += 1, R12119 += 1, R12120 += 1 };
  s3 -> s5 [0, 65535] { R12258 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R12258 += 1, R12182 += 1 };
  s3 -> s3 [0, 65535] { R12258 += 1, R12182 += 1, R12120 += 1 };
  s4 -> s1 [0, 65535] { R12258 += 1, R12182 += 1, R12120 += 1, R6641 += 1, R6642 += 1 };
  s4 -> s5 [0, 65535] { R12258 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R12258 += 1, R12182 += 1, R12120 += 1 };
  s4 -> s4 [0, 65535] { R12258 += 1, R12182 += 1, R12119 += 1, R12120 += 1 };
  s5 -> s5 [0, 65535] { R12258 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R12258 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12258 += 1, R12182 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s0 -> s2 [0, 65535] { R12260 += 1, R12184 += 1, R12121 += 1, R12122 += 1 };
  s0 -> s0 [0, 65535] { R12259 += 1, R12260 += 1 };
  s0 -> s3 [0, 65535] { R12260 += 1, R12183 += 1, R12184 += 1 };
  s0 -> s4 [77, 77] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s0 -> s1 [78, 65535] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s1 -> s1 [0, 70] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s1 -> s4 [77, 77] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s1 -> s1 [78, 65535] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s2 -> s1 [0, 70] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s2 -> s2 [0, 65535] { R12260 += 1, R12184 += 1, R12121 += 1, R12122 += 1 };
  s2 -> s4 [77, 77] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s2 -> s1 [78, 65535] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s3 -> s1 [0, 70] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s3 -> s2 [0, 65535] { R12260 += 1, R12184 += 1, R12121 += 1, R12122 += 1 };
  s3 -> s3 [0, 65535] { R12260 += 1, R12183 += 1, R12184 += 1 };
  s3 -> s4 [77, 77] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s3 -> s1 [78, 65535] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s4 -> s4 [0, 70] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s4 -> s5 [0, 65535] { R12260 += 1 };
  s4 -> s4 [0, 65535] { R12260 += 1, R12184 += 1, R12122 += 1 };
  s4 -> s6 [0, 65535] { R12260 += 1, R12184 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [77, 65535] { R12260 += 1, R12184 += 1, R12122 += 1, R11010 += 1 };
  s5 -> s5 [0, 65535] { R12260 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s5 [0, 65535] { R12260 += 1 };
  s6 -> s6 [0, 65535] { R12260 += 1, R12184 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  accepting s4, s5, s6, s7;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R12262 += 1, R12186 += 1, R12124 += 1 };
  s0 -> s2 [0, 65535] { R12262 += 1, R12186 += 1, R12124 += 1, R11741 += 1, R11742 += 1 };
  s0 -> s3 [0, 65535] { R12262 += 1, R12186 += 1, R12123 += 1, R12124 += 1 };
  s0 -> s4 [0, 65535] { R12262 += 1, R12185 += 1, R12186 += 1 };
  s0 -> s0 [0, 65535] { R12261 += 1, R12262 += 1 };
  s1 -> s1 [0, 65535] { R12262 += 1, R12186 += 1, R12124 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R12262 += 1, R12186 += 1 };
  s1 -> s6 [0, 65535] { R12262 += 1 };
  s2 -> s1 [0, 65535] { R12262 += 1, R12186 += 1, R12124 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R12262 += 1, R12186 += 1, R12124 += 1, R11741 += 1, R11742 += 1 };
  s2 -> s7 [0, 65535] { R12262 += 1, R12186 += 1 };
  s2 -> s6 [0, 65535] { R12262 += 1 };
  s3 -> s1 [0, 65535] { R12262 += 1, R12186 += 1, R12124 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R12262 += 1, R12186 += 1, R12124 += 1, R11741 += 1, R11742 += 1 };
  s3 -> s3 [0, 65535] { R12262 += 1, R12186 += 1, R12123 += 1, R12124 += 1 };
  s3 -> s6 [0, 65535] { R12262 += 1 };
  s4 -> s1 [0, 65535] { R12262 += 1, R12186 += 1, R12124 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s2 [0, 65535] { R12262 += 1, R12186 += 1, R12124 += 1, R11741 += 1, R11742 += 1 };
  s4 -> s3 [0, 65535] { R12262 += 1, R12186 += 1, R12123 += 1, R12124 += 1 };
  s4 -> s4 [0, 65535] { R12262 += 1, R12185 += 1, R12186 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12262 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R12262 += 1, R12186 += 1 };
  s7 -> s6 [0, 65535] { R12262 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 70] { R12264 += 1, R12188 += 1, R12126 += 1, R12106 += 1 };
  s0 -> s0 [0, 65535] { R12263 += 1, R12264 += 1 };
  s0 -> s1 [0, 65535] { R12264 += 1, R12188 += 1, R12126 += 1 };
  s0 -> s2 [0, 65535] { R12264 += 1, R12187 += 1, R12188 += 1 };
  s0 -> s3 [0, 65535] { R12264 += 1, R12188 += 1, R12125 += 1, R12126 += 1 };
  s0 -> s1 [78, 65535] { R12264 += 1, R12188 += 1, R12126 += 1, R12106 += 1 };
  s1 -> s1 [0, 70] { R12264 += 1, R12188 += 1, R12126 += 1, R12106 += 1 };
  s1 -> s4 [0, 65535] { R12264 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R12264 += 1, R12188 += 1, R12126 += 1 };
  s1 -> s6 [0, 65535] { R12264 += 1, R12188 += 1 };
  s1 -> s1 [78, 65535] { R12264 += 1, R12188 += 1, R12126 += 1, R12106 += 1 };
  s2 -> s1 [0, 70] { R12264 += 1, R12188 += 1, R12126 += 1, R12106 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R12264 += 1, R12188 += 1, R12126 += 1 };
  s2 -> s2 [0, 65535] { R12264 += 1, R12187 += 1, R12188 += 1 };
  s2 -> s3 [0, 65535] { R12264 += 1, R12188 += 1, R12125 += 1, R12126 += 1 };
  s2 -> s1 [78, 65535] { R12264 += 1, R12188 += 1, R12126 += 1, R12106 += 1 };
  s3 -> s1 [0, 70] { R12264 += 1, R12188 += 1, R12126 += 1, R12106 += 1 };
  s3 -> s4 [0, 65535] { R12264 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R12264 += 1, R12188 += 1, R12126 += 1 };
  s3 -> s3 [0, 65535] { R12264 += 1, R12188 += 1, R12125 += 1, R12126 += 1 };
  s3 -> s1 [78, 65535] { R12264 += 1, R12188 += 1, R12126 += 1, R12106 += 1 };
  s4 -> s4 [0, 65535] { R12264 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R12264 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R12264 += 1, R12188 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R12265 += 1, R12266 += 1 };
  s0 -> s1 [0, 65535] { R12266 += 1, R12190 += 1, R12145 += 1, R12146 += 1 };
  s0 -> s2 [0, 65535] { R12266 += 1, R12189 += 1, R12190 += 1 };
  s0 -> s3 [0, 65535] { R12266 += 1, R12190 += 1, R12146 += 1, R21 += 1 };
  s1 -> s1 [0, 65535] { R12266 += 1, R12190 += 1, R12145 += 1, R12146 += 1 };
  s1 -> s5 [0, 65535] { R12266 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [0, 65535] { R12266 += 1, R12190 += 1, R12146 += 1, R21 += 1 };
  s2 -> s1 [0, 65535] { R12266 += 1, R12190 += 1, R12145 += 1, R12146 += 1 };
  s2 -> s2 [0, 65535] { R12266 += 1, R12189 += 1, R12190 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R12266 += 1, R12190 += 1, R12146 += 1, R21 += 1 };
  s3 -> s4 [0, 65535] { R12266 += 1, R12190 += 1 };
  s3 -> s5 [0, 65535] { R12266 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R12266 += 1, R12190 += 1, R12146 += 1, R21 += 1 };
  s4 -> s4 [0, 65535] { R12266 += 1, R12190 += 1 };
  s4 -> s5 [0, 65535] { R12266 += 1 };
  s4 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R12266 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s0 -> s0 [0, 65535] { R12267 += 1, R12268 += 1 };
  s0 -> s2 [0, 65535] { R12268 += 1, R12191 += 1, R12192 += 1 };
  s0 -> s3 [0, 65535] { R12268 += 1, R12192 += 1, R12147 += 1, R12148 += 1 };
  s0 -> s4 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s0 -> s5 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s0 -> s6 [70, 70] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s0 -> s1 [71, 65535] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s1 -> s1 [0, 65] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s1 -> s4 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s1 -> s5 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s1 -> s6 [70, 70] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s1 -> s1 [71, 65535] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s2 -> s1 [0, 65] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s2 -> s2 [0, 65535] { R12268 += 1, R12191 += 1, R12192 += 1 };
  s2 -> s3 [0, 65535] { R12268 += 1, R12192 += 1, R12147 += 1, R12148 += 1 };
  s2 -> s4 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s2 -> s5 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s2 -> s6 [70, 70] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s2 -> s1 [71, 65535] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s3 -> s1 [0, 65] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s3 -> s3 [0, 65535] { R12268 += 1, R12192 += 1, R12147 += 1, R12148 += 1 };
  s3 -> s4 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s3 -> s5 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s3 -> s6 [70, 70] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s3 -> s1 [71, 65535] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s4 -> s4 [0, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s4 -> s10 [70, 70] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s4 -> s4 [71, 65535] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s6 -> s6 [0, 65] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s6 -> s7 [0, 65535] { R12268 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R12268 += 1, R12192 += 1 };
  s6 -> s9 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s6 -> s10 [66, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s6 -> s6 [70, 65535] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s7 -> s7 [0, 65535] { R12268 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R12268 += 1, R12192 += 1 };
  s9 -> s7 [0, 65535] { R12268 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s10 [0, 66] { R12268 += 1, R12192 += 1, R12148 += 1 };
  s10 -> s10 [0, 65535] { R12268 += 1, R12192 += 1 };
  s10 -> s7 [0, 65535] { R12268 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [70, 65535] { R12268 += 1, R12192 += 1, R12148 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R12270 += 1, R12194 += 1, R12149 += 1, R12150 += 1 };
  s0 -> s0 [0, 65535] { R12269 += 1, R12270 += 1 };
  s0 -> s3 [0, 65535] { R12270 += 1, R12193 += 1, R12194 += 1 };
  s0 -> s4 [66, 66] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s1 -> s1 [0, 65535] { R12270 += 1, R12194 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R12270 += 1 };
  s1 -> s4 [66, 66] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s2 -> s2 [0, 65535] { R12270 += 1, R12194 += 1, R12149 += 1, R12150 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R12270 += 1 };
  s2 -> s4 [66, 66] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s3 -> s2 [0, 65535] { R12270 += 1, R12194 += 1, R12149 += 1, R12150 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R12270 += 1, R12193 += 1, R12194 += 1 };
  s3 -> s4 [66, 66] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s4 -> s4 [0, 65535] { R12270 += 1, R12194 += 1, R12150 += 1, R77 += 1 };
  s4 -> s8 [0, 65535] { R12270 += 1, R12194 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R12270 += 1 };
  s5 -> s5 [0, 65535] { R12270 += 1, R12194 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R12270 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12270 += 1 };
  s8 -> s8 [0, 65535] { R12270 += 1, R12194 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R12270 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R12272 += 1, R12195 += 1, R12196 += 1 };
  s0 -> s0 [0, 65535] { R12271 += 1, R12272 += 1 };
  s0 -> s3 [0, 65535] { R12272 += 1, R12196 += 1, R12151 += 1, R12152 += 1 };
  s0 -> s4 [66, 66] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s1 -> s1 [0, 65535] { R12272 += 1, R12196 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R12272 += 1 };
  s1 -> s4 [66, 66] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R12272 += 1, R12195 += 1, R12196 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R12272 += 1, R12196 += 1, R12151 += 1, R12152 += 1 };
  s2 -> s4 [66, 66] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R12272 += 1 };
  s3 -> s3 [0, 65535] { R12272 += 1, R12196 += 1, R12151 += 1, R12152 += 1 };
  s3 -> s4 [66, 66] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R12272 += 1, R12196 += 1, R12152 += 1, R79 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R12272 += 1, R12196 += 1 };
  s4 -> s7 [0, 65535] { R12272 += 1 };
  s5 -> s5 [0, 65535] { R12272 += 1, R12196 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R12272 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12272 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R12272 += 1, R12196 += 1 };
  s8 -> s7 [0, 65535] { R12272 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R12274 += 1, R12197 += 1, R12198 += 1 };
  s0 -> s0 [0, 65535] { R12273 += 1, R12274 += 1 };
  s0 -> s3 [0, 65535] { R12274 += 1, R12198 += 1, R12153 += 1, R12154 += 1 };
  s0 -> s4 [66, 66] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R12274 += 1 };
  s1 -> s1 [0, 65535] { R12274 += 1, R12198 += 1 };
  s1 -> s4 [66, 66] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R12274 += 1, R12197 += 1, R12198 += 1 };
  s2 -> s3 [0, 65535] { R12274 += 1, R12198 += 1, R12153 += 1, R12154 += 1 };
  s2 -> s4 [66, 66] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R12274 += 1 };
  s3 -> s3 [0, 65535] { R12274 += 1, R12198 += 1, R12153 += 1, R12154 += 1 };
  s3 -> s4 [66, 66] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R12274 += 1 };
  s4 -> s8 [0, 65535] { R12274 += 1, R12198 += 1 };
  s4 -> s4 [0, 65535] { R12274 += 1, R12198 += 1, R12154 += 1, R81 += 1, R82 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R12274 += 1 };
  s5 -> s5 [0, 65535] { R12274 += 1, R12198 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R12274 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R12274 += 1 };
  s8 -> s8 [0, 65535] { R12274 += 1, R12198 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s2 [0, 65] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s3 [0, 65535] { R12276 += 1, R12200 += 1, R12155 += 1, R12156 += 1 };
  s0 -> s4 [0, 65535] { R12276 += 1, R12199 += 1, R12200 += 1 };
  s0 -> s0 [0, 65535] { R12275 += 1, R12276 += 1 };
  s0 -> s5 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s6 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s7 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s8 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s0 -> s1 [67, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s0 -> s2 [67, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s1 -> s1 [0, 65] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s1 [0, 65535] { R12276 += 1, R12200 += 1 };
  s1 -> s10 [0, 65535] { R12276 += 1 };
  s1 -> s6 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s7 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s1 -> s1 [67, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s1 [0, 65] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [0, 65] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s5 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s6 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s7 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s8 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s2 -> s1 [67, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s2 -> s2 [67, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s1 [0, 65] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s2 [0, 65] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s3 [0, 65535] { R12276 += 1, R12200 += 1, R12155 += 1, R12156 += 1 };
  s3 -> s5 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s6 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s7 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s8 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s3 -> s1 [67, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s3 -> s2 [67, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s1 [0, 65] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s2 [0, 65] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s3 [0, 65535] { R12276 += 1, R12200 += 1, R12155 += 1, R12156 += 1 };
  s4 -> s4 [0, 65535] { R12276 += 1, R12199 += 1, R12200 += 1 };
  s4 -> s5 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s6 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s7 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s8 [66, 66] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s4 -> s1 [67, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s4 -> s2 [67, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s6 [0, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s6 -> s11 [0, 65535] { R12276 += 1, R12200 += 1 };
  s6 -> s10 [0, 65535] { R12276 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R12276 += 1, R12200 += 1 };
  s7 -> s10 [0, 65535] { R12276 += 1 };
  s8 -> s6 [0, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6638 += 1, R6639 += 1 };
  s8 -> s8 [0, 65535] { R12276 += 1, R12200 += 1, R12156 += 1, R6637 += 1, R6638 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R12276 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s11 [0, 65535] { R12276 += 1, R12200 += 1 };
  s11 -> s10 [0, 65535] { R12276 += 1 };
  accepting s9, s6, s1, s7, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s0 -> s2 [0, 65] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s0 [0, 65535] { R12277 += 1, R12278 += 1 };
  s0 -> s3 [0, 65535] { R12278 += 1, R12202 += 1, R12157 += 1, R12158 += 1 };
  s0 -> s4 [0, 65535] { R12278 += 1, R12201 += 1, R12202 += 1 };
  s0 -> s5 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s0 -> s6 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s0 -> s7 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s8 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s1 [67, 70] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s0 -> s2 [67, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s0 -> s1 [78, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s1 -> s1 [0, 65] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s1 -> s1 [0, 65535] { R12278 += 1, R12202 += 1 };
  s1 -> s9 [0, 65535] { R12278 += 1 };
  s1 -> s10 [0, 65535];
  s1 -> s5 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s1 -> s6 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s1 -> s1 [67, 70] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s1 -> s1 [78, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s2 -> s1 [0, 65] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s2 -> s2 [0, 65] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s5 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s2 -> s6 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s2 -> s7 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s8 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s1 [67, 70] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s2 -> s2 [67, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s2 -> s1 [78, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s3 -> s1 [0, 65] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s3 -> s2 [0, 65] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s3 [0, 65535] { R12278 += 1, R12202 += 1, R12157 += 1, R12158 += 1 };
  s3 -> s5 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s3 -> s6 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s3 -> s7 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s8 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s1 [67, 70] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s3 -> s2 [67, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s3 -> s1 [78, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s4 -> s1 [0, 65] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s4 -> s2 [0, 65] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s3 [0, 65535] { R12278 += 1, R12202 += 1, R12157 += 1, R12158 += 1 };
  s4 -> s4 [0, 65535] { R12278 += 1, R12201 += 1, R12202 += 1 };
  s4 -> s5 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s4 -> s6 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s4 -> s7 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s8 [66, 66] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s1 [67, 70] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s4 -> s2 [67, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s4 -> s1 [78, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s5 -> s5 [0, 70] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s5 -> s5 [0, 65535] { R12278 += 1, R12202 += 1 };
  s5 -> s9 [0, 65535] { R12278 += 1 };
  s5 -> s10 [0, 65535];
  s5 -> s5 [78, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s6 -> s9 [0, 65535] { R12278 += 1 };
  s6 -> s10 [0, 65535];
  s6 -> s6 [0, 65535] { R12278 += 1, R12202 += 1 };
  s8 -> s5 [0, 70] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s8 -> s8 [0, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11007 += 1, R11008 += 1 };
  s8 -> s5 [78, 65535] { R12278 += 1, R12202 += 1, R12158 += 1, R11008 += 1 };
  s9 -> s9 [0, 65535] { R12278 += 1 };
  s9 -> s10 [0, 65535];
  s10 -> s10 [0, 65535];
  accepting s5, s9, s6, s1, s10;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s0 -> s2 [0, 65] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s0 -> s3 [0, 65535] { R12280 += 1, R12204 += 1, R12159 += 1, R12160 += 1 };
  s0 -> s0 [0, 65535] { R12279 += 1, R12280 += 1 };
  s0 -> s4 [0, 65535] { R12280 += 1, R12203 += 1, R12204 += 1 };
  s0 -> s5 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s0 -> s6 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s0 -> s7 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s0 -> s8 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s0 -> s1 [67, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s0 -> s2 [67, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s1 -> s1 [0, 65] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s10 [0, 65535] { R12280 += 1 };
  s1 -> s1 [0, 65535] { R12280 += 1, R12204 += 1 };
  s1 -> s6 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s1 -> s7 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s1 -> s1 [67, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s2 -> s1 [0, 65] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s2 -> s2 [0, 65] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s2 -> s5 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s2 -> s6 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s2 -> s7 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s2 -> s8 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s2 -> s1 [67, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s2 -> s2 [67, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s3 -> s1 [0, 65] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s3 -> s2 [0, 65] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s3 -> s3 [0, 65535] { R12280 += 1, R12204 += 1, R12159 += 1, R12160 += 1 };
  s3 -> s5 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s3 -> s6 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s3 -> s7 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s3 -> s8 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s3 -> s1 [67, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s3 -> s2 [67, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s4 -> s1 [0, 65] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s4 -> s2 [0, 65] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s4 -> s3 [0, 65535] { R12280 += 1, R12204 += 1, R12159 += 1, R12160 += 1 };
  s4 -> s4 [0, 65535] { R12280 += 1, R12203 += 1, R12204 += 1 };
  s4 -> s5 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s4 -> s6 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s4 -> s7 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s4 -> s8 [66, 66] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s4 -> s1 [67, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s4 -> s2 [67, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s6 -> s9 [0, 65535];
  s6 -> s10 [0, 65535] { R12280 += 1 };
  s6 -> s6 [0, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s6 -> s11 [0, 65535] { R12280 += 1, R12204 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s10 [0, 65535] { R12280 += 1 };
  s7 -> s7 [0, 65535] { R12280 += 1, R12204 += 1 };
  s8 -> s6 [0, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11738 += 1, R11739 += 1 };
  s8 -> s8 [0, 65535] { R12280 += 1, R12204 += 1, R12160 += 1, R11737 += 1, R11738 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R12280 += 1 };
  s11 -> s9 [0, 65535];
  s11 -> s10 [0, 65535] { R12280 += 1 };
  s11 -> s11 [0, 65535] { R12280 += 1, R12204 += 1 };
  accepting s9, s6, s1, s7, s10, s11;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s0 -> s2 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s0 -> s3 [0, 65535] { R12282 += 1, R12205 += 1, R12206 += 1 };
  s0 -> s0 [0, 65535] { R12281 += 1, R12282 += 1 };
  s0 -> s4 [0, 65535] { R12282 += 1, R12206 += 1, R12161 += 1, R12162 += 1 };
  s0 -> s5 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s0 -> s6 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s0 -> s7 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s0 -> s8 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s0 -> s1 [67, 69] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s0 -> s2 [67, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s0 -> s9 [70, 70] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s0 -> s1 [78, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s1 -> s1 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s1 -> s7 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1 };
  s1 -> s8 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1 };
  s1 -> s1 [67, 69] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s1 -> s1 [67, 65535] { R12282 += 1, R12206 += 1, R12162 += 1 };
  s1 -> s9 [70, 70] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s1 -> s1 [78, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s2 -> s1 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s2 -> s2 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s2 -> s5 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s2 -> s6 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s2 -> s7 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s2 -> s8 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s2 -> s1 [67, 69] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s2 -> s2 [67, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s2 -> s9 [70, 70] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s2 -> s1 [78, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s3 -> s1 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s3 -> s2 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s3 -> s3 [0, 65535] { R12282 += 1, R12205 += 1, R12206 += 1 };
  s3 -> s4 [0, 65535] { R12282 += 1, R12206 += 1, R12161 += 1, R12162 += 1 };
  s3 -> s5 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s3 -> s6 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s3 -> s7 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s3 -> s8 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s3 -> s1 [67, 69] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s3 -> s2 [67, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s3 -> s9 [70, 70] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s3 -> s1 [78, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s4 -> s1 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s4 -> s2 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s4 -> s4 [0, 65535] { R12282 += 1, R12206 += 1, R12161 += 1, R12162 += 1 };
  s4 -> s5 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s4 -> s6 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s4 -> s7 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s4 -> s8 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s4 -> s1 [67, 69] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s4 -> s2 [67, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s4 -> s9 [70, 70] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s4 -> s1 [78, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s6 -> s8 [0, 69] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s6 -> s6 [0, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12103 += 1, R12104 += 1 };
  s6 -> s13 [70, 70] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s6 -> s8 [78, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s8 -> s8 [0, 69] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s8 -> s8 [0, 65535] { R12282 += 1, R12206 += 1, R12162 += 1 };
  s8 -> s13 [70, 70] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s8 -> s8 [78, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s9 -> s9 [0, 65] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s9 [0, 65535] { R12282 += 1, R12206 += 1 };
  s9 -> s11 [0, 65535] { R12282 += 1 };
  s9 -> s12 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1 };
  s9 -> s13 [66, 66] { R12282 += 1, R12206 += 1, R12162 += 1 };
  s9 -> s9 [67, 70] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s9 -> s9 [67, 65535] { R12282 += 1, R12206 += 1, R12162 += 1 };
  s9 -> s9 [78, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R12282 += 1 };
  s12 -> s12 [0, 65535] { R12282 += 1, R12206 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R12282 += 1 };
  s13 -> s13 [0, 70] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s13 [0, 65535] { R12282 += 1, R12206 += 1, R12162 += 1 };
  s13 -> s14 [0, 65535] { R12282 += 1, R12206 += 1 };
  s13 -> s11 [0, 65535] { R12282 += 1 };
  s13 -> s13 [78, 65535] { R12282 += 1, R12206 += 1, R12162 += 1, R12104 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s14 [0, 65535] { R12282 += 1, R12206 += 1 };
  s14 -> s11 [0, 65535] { R12282 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R1 = R12122 && R2 = R12206 && R3 - R12282 = 1 && R23 - R12206 = -1 && R24 = R12206 && R25 - R12206 = -1 && R26 = R12206 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R12282 && R32 - R12282 = 1 && R33 = R12282 && R34 - R12282 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R11010 + -1*R11008 - R64 = 0 && R63 + R11009 + R11007 = 0 && R12121 = 0 && R12147 = 0 && R12148 = 0 && R12155 = 0 && R12156 = 0 && R12157 = 0 && R12158 = 0 && R12159 = 0 && R12160 = 0 && R12161 = 0 && R12162 = 0 && R12163 = 0 && R12164 = R12206 && R12165 = 0 && R12166 = R12206 && R12167 = 0 && R12168 = R12206 && R12169 = 0 && R12170 = R12206 && R12171 = 0 && R12172 = R12206 && R12173 = 0 && R12174 = R12206 && R12175 = 0 && R12176 = R12206 && R12177 = 0 && R12178 = R12206 && R12179 = 0 && R12180 = R12206 && R12181 = 0 && R12182 = R12206 && R12183 = 0 && R12184 = R12206 && R12185 = 0 && R12186 = R12206 && R12187 = 0 && R12188 = R12206 && R12189 = 0 && R12190 = R12206 && R12191 = 0 && R12192 = R12206 && R12193 = 0 && R12194 = R12206 && R12195 = 0 && R12196 = R12206 && R12197 = 0 && R12198 = R12206 && R12199 = 0 && R12200 = R12206 && R12201 = 0 && R12202 = R12206 && R12203 = 0 && R12204 = R12206 && R12205 = 0 && R12207 = 0 && R12208 = R12282 && R12209 = 0 && R12210 = R12282 && R12211 = 0 && R12212 = R12282 && R12213 = 0 && R12214 = R12282 && R12215 = 0 && R12216 = R12282 && R12217 = 0 && R12218 = R12282 && R12219 = 0 && R12220 = R12282 && R12221 = 0 && R12222 = R12282 && R12223 = 0 && R12224 = R12282 && R12225 = 0 && R12226 = R12282 && R12227 = 0 && R12228 = R12282 && R12229 = 0 && R12230 = R12282 && R12231 = 0 && R12232 = R12282 && R12233 = 0 && R12234 = R12282 && R12235 = 0 && R12236 = R12282 && R12237 = 0 && R12238 = R12282 && R12239 = 0 && R12240 = R12282 && R12241 = 0 && R12242 = R12282 && R12243 = 0 && R12244 = R12282 && R12245 = 0 && R12246 = R12282 && R12247 = 0 && R12248 = R12282 && R12249 = 0 && R12250 = R12282 && R12251 = 0 && R12252 = R12282 && R12253 = 0 && R12254 = R12282 && R12255 = 0 && R12256 = R12282 && R12257 = 0 && R12258 = R12282 && R12259 = 0 && R12260 = R12282 && R12261 = 0 && R12262 = R12282 && R12263 = 0 && R12264 = R12282 && R12265 = 0 && R12266 = R12282 && R12267 = 0 && R12268 = R12282 && R12269 = 0 && R12270 = R12282 && R12271 = 0 && R12272 = R12282 && R12273 = 0 && R12274 = R12282 && R12275 = 0 && R12276 = R12282 && R12277 = 0 && R12278 = R12282 && R12279 = 0 && R12280 = R12282 && R12281 = 0 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R11010 + -1*R11008 - R64 < 1 && -1 < R12122 && 0 < R12206 && -1 < R12282 && (R59 + R6642 + R6639 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R11010 + -1*R11008 - R64 = 0 || R64 + R11010 + R11008 < 1) && (R53 + R83 + R81 = 0 || R64 + R11010 + R11008 < 1))) && (R59 + R6642 + R6639 != 0 || ((R57 + R6640 + R6637 != 0 || R58 + R6641 + R6638 + -1*R11010 + -1*R11008 - R64 = 0 || R64 + R11010 + R11008 < 1) && (R57 + R6640 + R6637 = 0 || R64 + R11010 + R11008 < 1))) && (R12107 != 0 || R12108 = R12122 || (R20 = 0 && R12122 = 0)) && (R12109 != 0 || R12110 = R12122 || (R20 = 0 && R12122 = 0)) && (R12111 != 0 || R12112 = R12122 || (R20 = 0 && R12122 = 0)) && (R12113 != 0 || R12114 = R12122 || (R20 = 0 && R12122 = 0)) && (R12115 != 0 || R12116 = R12122 || (R20 = 0 && R12122 = 0)) && (R12117 != 0 || R12118 = R12122 || (R20 = 0 && R12122 = 0)) && (R12119 != 0 || R12120 = R12122 || (R20 = 0 && R12122 = 0)) && (R12123 != 0 || R12122 = R12124 || (R20 = 0 && R12122 = 0)) && (R12125 != 0 || R12122 = R12126 || (R20 = 0 && R12122 = 0)) && (R21 = 0 || (R12145 = 0 && R12146 = 0)) && (R21 = 0 || (R12149 = 0 && R12150 = 0)) && (R21 = 0 || (R12151 = 0 && R12152 = 0)) && (R21 = 0 || (R12153 = 0 && R12154 = 0)) && (R22 = 0 || (R12127 = 0 && R12128 = 0)) && (R22 = 0 || (R12129 = 0 && R12130 = 0)) && (R22 = 0 || (R12131 = 0 && R12132 = 0)) && (R22 = 0 || (R12133 = 0 && R12134 = 0)) && (R22 = 0 || (R12135 = 0 && R12136 = 0)) && (R22 = 0 || (R12137 = 0 && R12138 = 0)) && (R22 = 0 || (R12139 = 0 && R12140 = 0)) && (R22 = 0 || (R12141 = 0 && R12142 = 0)) && (R22 = 0 || (R12143 = 0 && R12144 = 0)) && (R59 + R6642 + R6639 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R11010 + -1*R11008 - R64 = 0)) && (R59 + R6642 + R6639 = 0 || (R57 + R6640 + R6637 = 0 && R58 + R6641 + R6638 + -1*R11010 + -1*R11008 - R64 = 0)) && (R69 + R11742 + R11739 = 0 || (R67 + R11740 + R11737 = 0 && R68 + R11741 + R11738 = 0)) && (R69 + R11742 + R11739 = 0 || (R73 + R12105 + R12103 = 0 && R74 + R12106 + R12104 = 0)) && (R12107 = 0 || (R20 = 0 && R12122 = 0)) && (R12109 = 0 || (R20 = 0 && R12122 = 0)) && (R12111 = 0 || (R20 = 0 && R12122 = 0)) && (R12113 = 0 || (R20 = 0 && R12122 = 0)) && (R12115 = 0 || (R20 = 0 && R12122 = 0)) && (R12117 = 0 || (R20 = 0 && R12122 = 0)) && (R12119 = 0 || (R20 = 0 && R12122 = 0)) && (R12123 = 0 || (R20 = 0 && R12122 = 0)) && (R12125 = 0 || (R20 = 0 && R12122 = 0));
// End of Parikh automata intersection problem
