// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R14, R17, R2, R20, R21, R22, R2273, R2274, R2275, R2276, R2277, R2278, R2279, R2280, R2281, R2282, R23, R24, R25, R26, R27, R28, R2823, R2824, R2825, R2826, R2827, R2828, R2829, R2830, R2831, R2832, R2833, R2834, R2835, R2836, R2837, R2838, R2839, R2840, R2841, R2842, R2843, R2844, R2845, R2846, R2847, R2848, R2849, R2850, R2851, R2852, R2853, R2854, R2855, R2856, R2857, R2858, R2859, R2860, R2861, R2862, R2863, R2864, R2865, R2866, R2867, R2868, R2869, R2870, R2871, R2872, R2873, R2874, R2875, R2876, R2877, R2878, R2879, R2880, R2881, R2882, R2883, R2884, R2885, R2886, R2887, R2888, R2889, R2890, R2891, R2892, R2893, R2894, R2895, R2896, R2897, R2898, R2899, R29, R2900, R2901, R2902, R2903, R2904, R2905, R2906, R2907, R2908, R2909, R2910, R2911, R2912, R2913, R2914, R2915, R2916, R2917, R2918, R2919, R2920, R2921, R2922, R2923, R2924, R2925, R2926, R2927, R2928, R2929, R2930, R2931, R2932, R2933, R2934, R2935, R2936, R2937, R2938, R2939, R2940, R2941, R2942, R2943, R2944, R2945, R2946, R2947, R2948, R2949, R2950, R2951, R2952, R2953, R2954, R2955, R2956, R2957, R2958, R2959, R2960, R2961, R2962, R2963, R2964, R2965, R2966, R2967, R2968, R2969, R2970, R2971, R2972, R2973, R2974, R2975, R2976, R2977, R2978, R2979, R2980, R2981, R2982, R2983, R2984, R2985, R2986, R2987, R2988, R2989, R2990, R2991, R2992, R2993, R2994, R2995, R2996, R2997, R2998, R2999, R3, R30, R3000, R3001, R3002, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84, R85, R86, R87, R88, R89, R90;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R2928 += 1 };
  s0 -> s0 [0, 65535] { R2927 += 1, R2928 += 1 };
  s0 -> s2 [66, 66] { R2928 += 1 };
  s0 -> s1 [67, 65535] { R2928 += 1 };
  s1 -> s1 [0, 64] { R2928 += 1 };
  s1 -> s2 [66, 66] { R2928 += 1 };
  s1 -> s1 [67, 65535] { R2928 += 1 };
  s2 -> s2 [0, 64] { R2928 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R2928 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R2929 += 1, R2930 += 1 };
  s0 -> s1 [0, 65535] { R2930 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R2930 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R2932 += 1 };
  s0 -> s2 [0, 65535] { R2932 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R2931 += 1, R2932 += 1 };
  s0 -> s3 [66, 66] { R2932 += 1 };
  s0 -> s1 [67, 65535] { R2932 += 1 };
  s1 -> s1 [0, 65] { R2932 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R2932 += 1 };
  s1 -> s1 [67, 65535] { R2932 += 1 };
  s2 -> s1 [0, 65] { R2932 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2932 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R2932 += 1 };
  s2 -> s1 [67, 65535] { R2932 += 1 };
  s3 -> s3 [0, 65535] { R2932 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R2934 += 1, R24 += 1 };
  s0 -> s2 [0, 65535] { R2934 += 1, R23 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R2933 += 1, R2934 += 1 };
  s0 -> s3 [9, 13] { R2934 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R2934 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R2934 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R2934 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R2934 += 1 };
  s1 -> s1 [0, 65535] { R2934 += 1, R24 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R2934 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R2934 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R2934 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R2934 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R2934 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R2934 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R2934 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2934 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R2936 += 1, R25 += 1, R26 += 1 };
  s0 -> s0 [0, 65535] { R2935 += 1, R2936 += 1 };
  s0 -> s2 [0, 65535] { R2936 += 1, R26 += 1, R4 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R2936 += 1, R25 += 1, R26 += 1 };
  s1 -> s2 [0, 65535] { R2936 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R2936 += 1 };
  s2 -> s2 [0, 65535] { R2936 += 1, R26 += 1, R4 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2936 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R2938 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R2937 += 1, R2938 += 1 };
  s0 -> s2 [0, 65535] { R2938 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R2938 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R2938 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R2938 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R2938 += 1, R28 += 1 };
  s1 -> s5 [0, 65535] { R2938 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2938 += 1, R28 += 1 };
  s2 -> s1 [0, 8] { R2938 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R2938 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R2938 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R2938 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R2938 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R2938 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R2938 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2938 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s0 [0, 65535] { R2939 += 1, R2940 += 1 };
  s0 -> s1 [0, 65535] { R2940 += 1, R29 += 1, R30 += 1 };
  s0 -> s2 [0, 65535] { R2940 += 1, R30 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R2940 += 1, R29 += 1, R30 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R2940 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R2940 += 1, R30 += 1, R5 += 1 };
  s2 -> s4 [0, 65535] { R2940 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2940 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s0 [0, 65535] { R2941 += 1, R2942 += 1 };
  s0 -> s1 [0, 65535] { R2942 += 1, R2847 += 1, R2848 += 1 };
  s0 -> s2 [0, 65535] { R2942 += 1, R2848 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R2942 += 1, R2847 += 1, R2848 += 1 };
  s1 -> s2 [0, 65535] { R2942 += 1, R2848 += 1, R22 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R2942 += 1 };
  s2 -> s2 [0, 65535] { R2942 += 1, R2848 += 1, R22 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2942 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R2944 += 1, R2850 += 1 };
  s0 -> s2 [0, 65535] { R2944 += 1, R2849 += 1, R2850 += 1 };
  s0 -> s0 [0, 65535] { R2943 += 1, R2944 += 1 };
  s0 -> s3 [66, 66] { R2944 += 1, R2850 += 1 };
  s0 -> s4 [66, 66] { R2944 += 1, R2850 += 1 };
  s0 -> s1 [71, 65535] { R2944 += 1, R2850 += 1 };
  s1 -> s1 [0, 65] { R2944 += 1, R2850 += 1 };
  s1 -> s1 [0, 65535] { R2944 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2944 += 1, R2850 += 1 };
  s1 -> s4 [66, 66] { R2944 += 1, R2850 += 1 };
  s1 -> s1 [71, 65535] { R2944 += 1, R2850 += 1 };
  s2 -> s1 [0, 65] { R2944 += 1, R2850 += 1 };
  s2 -> s2 [0, 65535] { R2944 += 1, R2849 += 1, R2850 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2944 += 1, R2850 += 1 };
  s2 -> s4 [66, 66] { R2944 += 1, R2850 += 1 };
  s2 -> s1 [71, 65535] { R2944 += 1, R2850 += 1 };
  s3 -> s3 [0, 66] { R2944 += 1, R2850 += 1 };
  s3 -> s3 [0, 65535] { R2944 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [71, 65535] { R2944 += 1, R2850 += 1 };
  s4 -> s4 [0, 65535] { R2944 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R2946 += 1, R2852 += 1, R49 += 1 };
  s0 -> s0 [0, 65535] { R2945 += 1, R2946 += 1 };
  s0 -> s2 [0, 65535] { R2946 += 1, R2851 += 1, R2852 += 1 };
  s0 -> s3 [66, 66] { R2946 += 1, R2852 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R2946 += 1, R2852 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R2946 += 1, R2852 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R2946 += 1, R2852 += 1, R49 += 1 };
  s1 -> s1 [0, 65535] { R2946 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2946 += 1, R2852 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R2946 += 1, R2852 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R2946 += 1, R2852 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R2946 += 1, R2852 += 1, R49 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2946 += 1, R2851 += 1, R2852 += 1 };
  s2 -> s3 [66, 66] { R2946 += 1, R2852 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R2946 += 1, R2852 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R2946 += 1, R2852 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R2946 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2946 += 1 };
  s4 -> s4 [0, 65535] { R2946 += 1, R2852 += 1, R49 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2946 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R2948 += 1, R2854 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R2948 += 1, R2853 += 1, R2854 += 1 };
  s0 -> s0 [0, 65535] { R2947 += 1, R2948 += 1 };
  s0 -> s3 [66, 66] { R2948 += 1, R2854 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R2948 += 1, R2854 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R2948 += 1, R2854 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R2948 += 1, R2854 += 1, R51 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2948 += 1 };
  s1 -> s3 [66, 66] { R2948 += 1, R2854 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R2948 += 1, R2854 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R2948 += 1, R2854 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R2948 += 1, R2854 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R2948 += 1, R2853 += 1, R2854 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R2948 += 1, R2854 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R2948 += 1, R2854 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R2948 += 1, R2854 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R2948 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2948 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2948 += 1, R2854 += 1, R51 += 1 };
  s5 -> s5 [0, 65535] { R2948 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s0 -> s2 [0, 65535] { R2950 += 1, R2855 += 1, R2856 += 1 };
  s0 -> s0 [0, 65535] { R2949 += 1, R2950 += 1 };
  s0 -> s3 [66, 66] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535] { R2950 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s2 -> s2 [0, 65535] { R2950 += 1, R2855 += 1, R2856 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R2950 += 1, R2856 += 1, R53 += 1, R54 += 1 };
  s3 -> s6 [0, 65535] { R2950 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2950 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2950 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s0 -> s2 [0, 65535] { R2952 += 1, R2857 += 1, R2858 += 1 };
  s0 -> s0 [0, 65535] { R2951 += 1, R2952 += 1 };
  s0 -> s3 [66, 66] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R2952 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s2 -> s2 [0, 65535] { R2952 += 1, R2857 += 1, R2858 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s3 -> s3 [0, 65535] { R2952 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R2952 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2952 += 1, R2858 += 1, R57 += 1, R58 += 1 };
  s5 -> s5 [0, 65535] { R2952 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s0 -> s2 [0, 65535] { R2954 += 1, R2859 += 1, R2860 += 1 };
  s0 -> s0 [0, 65535] { R2953 += 1, R2954 += 1 };
  s0 -> s3 [66, 66] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65535] { R2954 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R2954 += 1, R2859 += 1, R2860 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2954 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2954 += 1, R2860 += 1, R63 += 1, R64 += 1 };
  s4 -> s6 [0, 65535] { R2954 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2954 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s0 -> s0 [0, 65535] { R2955 += 1, R2956 += 1 };
  s0 -> s2 [0, 65535] { R2956 += 1, R2861 += 1, R2862 += 1 };
  s0 -> s3 [66, 66] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R2956 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2956 += 1, R2861 += 1, R2862 += 1 };
  s2 -> s3 [66, 66] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s3 -> s6 [0, 65535] { R2956 += 1 };
  s3 -> s3 [0, 65535] { R2956 += 1, R2862 += 1, R67 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2956 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2956 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R2957 += 1, R2958 += 1 };
  s0 -> s2 [0, 65535] { R2958 += 1, R2863 += 1, R2864 += 1 };
  s0 -> s3 [66, 66] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65535] { R2958 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R2958 += 1, R2863 += 1, R2864 += 1 };
  s2 -> s3 [66, 66] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R2958 += 1, R2864 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R2958 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2958 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2958 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R2960 += 1, R2884 += 1 };
  s0 -> s0 [0, 65535] { R2959 += 1, R2960 += 1 };
  s0 -> s2 [0, 65535] { R2960 += 1, R2883 += 1, R2884 += 1 };
  s0 -> s3 [66, 66] { R2960 += 1, R2884 += 1 };
  s0 -> s1 [67, 65535] { R2960 += 1, R2884 += 1 };
  s1 -> s1 [0, 65] { R2960 += 1, R2884 += 1 };
  s1 -> s3 [66, 66] { R2960 += 1, R2884 += 1 };
  s1 -> s1 [67, 65535] { R2960 += 1, R2884 += 1 };
  s2 -> s1 [0, 65] { R2960 += 1, R2884 += 1 };
  s2 -> s2 [0, 65535] { R2960 += 1, R2883 += 1, R2884 += 1 };
  s2 -> s3 [66, 66] { R2960 += 1, R2884 += 1 };
  s2 -> s1 [67, 65535] { R2960 += 1, R2884 += 1 };
  s3 -> s4 [0, 65535] { R2960 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2960 += 1, R2884 += 1 };
  s4 -> s4 [0, 65535] { R2960 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s0 [0, 65535] { R2961 += 1, R2962 += 1 };
  s0 -> s1 [0, 65535] { R2962 += 1, R2886 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R2962 += 1, R2885 += 1, R2886 += 1 };
  s1 -> s1 [0, 65535] { R2962 += 1, R2886 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R2962 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R2962 += 1, R2886 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R2962 += 1, R2885 += 1, R2886 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R2962 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R2964 += 1, R2888 += 1 };
  s0 -> s2 [0, 65535] { R2964 += 1, R2888 += 1, R11 += 1 };
  s0 -> s0 [0, 65535] { R2963 += 1, R2964 += 1 };
  s0 -> s3 [0, 65535] { R2964 += 1, R2887 += 1, R2888 += 1 };
  s0 -> s4 [66, 66] { R2964 += 1, R2888 += 1 };
  s0 -> s1 [67, 65535] { R2964 += 1, R2888 += 1 };
  s1 -> s1 [0, 65] { R2964 += 1, R2888 += 1 };
  s1 -> s1 [0, 65535] { R2964 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s4 [66, 66] { R2964 += 1, R2888 += 1 };
  s1 -> s1 [67, 65535] { R2964 += 1, R2888 += 1 };
  s2 -> s1 [0, 65] { R2964 += 1, R2888 += 1 };
  s2 -> s2 [0, 65535] { R2964 += 1, R2888 += 1, R11 += 1 };
  s2 -> s6 [0, 65535] { R2964 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s4 [66, 66] { R2964 += 1, R2888 += 1 };
  s2 -> s1 [67, 65535] { R2964 += 1, R2888 += 1 };
  s3 -> s1 [0, 65] { R2964 += 1, R2888 += 1 };
  s3 -> s2 [0, 65535] { R2964 += 1, R2888 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R2964 += 1, R2887 += 1, R2888 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s4 [66, 66] { R2964 += 1, R2888 += 1 };
  s3 -> s1 [67, 65535] { R2964 += 1, R2888 += 1 };
  s4 -> s4 [0, 65535] { R2964 += 1, R2888 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2964 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R2966 += 1, R2890 += 1, R2828 += 1 };
  s0 -> s0 [0, 65535] { R2965 += 1, R2966 += 1 };
  s0 -> s2 [0, 65535] { R2966 += 1, R2890 += 1, R2827 += 1, R2828 += 1 };
  s0 -> s3 [0, 65535] { R2966 += 1, R2889 += 1, R2890 += 1 };
  s0 -> s1 [67, 65535] { R2966 += 1, R2890 += 1, R2828 += 1 };
  s1 -> s1 [0, 65] { R2966 += 1, R2890 += 1, R2828 += 1 };
  s1 -> s1 [0, 65535] { R2966 += 1, R2890 += 1 };
  s1 -> s5 [0, 65535] { R2966 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [67, 65535] { R2966 += 1, R2890 += 1, R2828 += 1 };
  s2 -> s1 [0, 65] { R2966 += 1, R2890 += 1, R2828 += 1 };
  s2 -> s2 [0, 65535] { R2966 += 1, R2890 += 1, R2827 += 1, R2828 += 1 };
  s2 -> s5 [0, 65535] { R2966 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [67, 65535] { R2966 += 1, R2890 += 1, R2828 += 1 };
  s3 -> s1 [0, 65] { R2966 += 1, R2890 += 1, R2828 += 1 };
  s3 -> s2 [0, 65535] { R2966 += 1, R2890 += 1, R2827 += 1, R2828 += 1 };
  s3 -> s3 [0, 65535] { R2966 += 1, R2889 += 1, R2890 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [67, 65535] { R2966 += 1, R2890 += 1, R2828 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2966 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R2968 += 1, R2892 += 1, R2829 += 1, R2830 += 1 };
  s0 -> s2 [0, 65535] { R2968 += 1, R2892 += 1, R2830 += 1, R20 += 1 };
  s0 -> s3 [0, 65535] { R2968 += 1, R2891 += 1, R2892 += 1 };
  s0 -> s0 [0, 65535] { R2967 += 1, R2968 += 1 };
  s1 -> s1 [0, 65535] { R2968 += 1, R2892 += 1, R2829 += 1, R2830 += 1 };
  s1 -> s2 [0, 65535] { R2968 += 1, R2892 += 1, R2830 += 1, R20 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R2968 += 1 };
  s2 -> s2 [0, 65535] { R2968 += 1, R2892 += 1, R2830 += 1, R20 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2968 += 1, R2892 += 1 };
  s2 -> s6 [0, 65535] { R2968 += 1 };
  s3 -> s1 [0, 65535] { R2968 += 1, R2892 += 1, R2829 += 1, R2830 += 1 };
  s3 -> s2 [0, 65535] { R2968 += 1, R2892 += 1, R2830 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R2968 += 1, R2891 += 1, R2892 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2968 += 1, R2892 += 1 };
  s5 -> s6 [0, 65535] { R2968 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R2968 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R2970 += 1, R2894 += 1, R2832 += 1 };
  s0 -> s0 [0, 65535] { R2969 += 1, R2970 += 1 };
  s0 -> s2 [0, 65535] { R2970 += 1, R2894 += 1, R2831 += 1, R2832 += 1 };
  s0 -> s3 [0, 65535] { R2970 += 1, R2893 += 1, R2894 += 1 };
  s0 -> s1 [70, 65535] { R2970 += 1, R2894 += 1, R2832 += 1 };
  s1 -> s1 [0, 66] { R2970 += 1, R2894 += 1, R2832 += 1 };
  s1 -> s5 [0, 65535] { R2970 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R2970 += 1, R2894 += 1 };
  s1 -> s1 [70, 65535] { R2970 += 1, R2894 += 1, R2832 += 1 };
  s2 -> s1 [0, 66] { R2970 += 1, R2894 += 1, R2832 += 1 };
  s2 -> s5 [0, 65535] { R2970 += 1 };
  s2 -> s2 [0, 65535] { R2970 += 1, R2894 += 1, R2831 += 1, R2832 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s1 [70, 65535] { R2970 += 1, R2894 += 1, R2832 += 1 };
  s3 -> s1 [0, 66] { R2970 += 1, R2894 += 1, R2832 += 1 };
  s3 -> s2 [0, 65535] { R2970 += 1, R2894 += 1, R2831 += 1, R2832 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R2970 += 1, R2893 += 1, R2894 += 1 };
  s3 -> s1 [70, 65535] { R2970 += 1, R2894 += 1, R2832 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2970 += 1 };
  s5 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R2972 += 1, R2896 += 1, R2834 += 1, R78 += 1 };
  s0 -> s2 [0, 65535] { R2972 += 1, R2896 += 1, R2833 += 1, R2834 += 1 };
  s0 -> s3 [0, 65535] { R2972 += 1, R2895 += 1, R2896 += 1 };
  s0 -> s0 [0, 65535] { R2971 += 1, R2972 += 1 };
  s1 -> s5 [0, 65535] { R2972 += 1 };
  s1 -> s1 [0, 65535] { R2972 += 1, R2896 += 1, R2834 += 1, R78 += 1 };
  s1 -> s6 [0, 65535] { R2972 += 1, R2896 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R2972 += 1 };
  s2 -> s1 [0, 65535] { R2972 += 1, R2896 += 1, R2834 += 1, R78 += 1 };
  s2 -> s2 [0, 65535] { R2972 += 1, R2896 += 1, R2833 += 1, R2834 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2972 += 1, R2896 += 1, R2834 += 1, R78 += 1 };
  s3 -> s2 [0, 65535] { R2972 += 1, R2896 += 1, R2833 += 1, R2834 += 1 };
  s3 -> s3 [0, 65535] { R2972 += 1, R2895 += 1, R2896 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2972 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2972 += 1 };
  s6 -> s6 [0, 65535] { R2972 += 1, R2896 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s0 -> s2 [0, 65535] { R2974 += 1, R2898 += 1, R2836 += 1, R80 += 1 };
  s0 -> s3 [0, 65535] { R2974 += 1, R2897 += 1, R2898 += 1 };
  s0 -> s4 [0, 65535] { R2974 += 1, R2898 += 1, R2835 += 1, R2836 += 1 };
  s0 -> s0 [0, 65535] { R2973 += 1, R2974 += 1 };
  s0 -> s1 [71, 65535] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s1 -> s1 [0, 69] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s1 -> s5 [0, 65535] { R2974 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R2974 += 1, R2898 += 1 };
  s1 -> s1 [71, 65535] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s2 -> s1 [0, 69] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s2 -> s5 [0, 65535] { R2974 += 1 };
  s2 -> s2 [0, 65535] { R2974 += 1, R2898 += 1, R2836 += 1, R80 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R2974 += 1, R2898 += 1 };
  s2 -> s1 [71, 65535] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s3 -> s1 [0, 69] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s3 -> s2 [0, 65535] { R2974 += 1, R2898 += 1, R2836 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R2974 += 1, R2897 += 1, R2898 += 1 };
  s3 -> s4 [0, 65535] { R2974 += 1, R2898 += 1, R2835 += 1, R2836 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s1 [71, 65535] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s4 -> s1 [0, 69] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s4 -> s5 [0, 65535] { R2974 += 1 };
  s4 -> s2 [0, 65535] { R2974 += 1, R2898 += 1, R2836 += 1, R80 += 1 };
  s4 -> s4 [0, 65535] { R2974 += 1, R2898 += 1, R2835 += 1, R2836 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s1 [71, 65535] { R2974 += 1, R2898 += 1, R2836 += 1 };
  s5 -> s5 [0, 65535] { R2974 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R2974 += 1 };
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2974 += 1, R2898 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s0 -> s2 [0, 65535] { R2976 += 1, R2900 += 1, R2838 += 1, R83 += 1, R84 += 1 };
  s0 -> s3 [0, 65535] { R2976 += 1, R2899 += 1, R2900 += 1 };
  s0 -> s4 [0, 65535] { R2976 += 1, R2900 += 1, R2837 += 1, R2838 += 1 };
  s0 -> s0 [0, 65535] { R2975 += 1, R2976 += 1 };
  s0 -> s1 [71, 65535] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s1 -> s7 [0, 65535] { R2976 += 1, R2900 += 1 };
  s1 -> s1 [0, 65535] { R2976 += 1, R2900 += 1, R2838 += 1 };
  s1 -> s5 [0, 65535] { R2976 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [71, 65535] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s2 -> s7 [0, 65535] { R2976 += 1, R2900 += 1 };
  s2 -> s5 [0, 65535] { R2976 += 1 };
  s2 -> s2 [0, 65535] { R2976 += 1, R2900 += 1, R2838 += 1, R83 += 1, R84 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [71, 65535] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s3 -> s2 [0, 65535] { R2976 += 1, R2900 += 1, R2838 += 1, R83 += 1, R84 += 1 };
  s3 -> s3 [0, 65535] { R2976 += 1, R2899 += 1, R2900 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R2976 += 1, R2900 += 1, R2837 += 1, R2838 += 1 };
  s3 -> s1 [71, 65535] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s4 -> s5 [0, 65535] { R2976 += 1 };
  s4 -> s2 [0, 65535] { R2976 += 1, R2900 += 1, R2838 += 1, R83 += 1, R84 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2976 += 1, R2900 += 1, R2837 += 1, R2838 += 1 };
  s4 -> s1 [71, 65535] { R2976 += 1, R2900 += 1, R2838 += 1, R84 += 1 };
  s5 -> s5 [0, 65535] { R2976 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2976 += 1, R2900 += 1 };
  s7 -> s5 [0, 65535] { R2976 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R2977 += 1, R2978 += 1 };
  s0 -> s1 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1, R88 += 1, R89 += 1 };
  s0 -> s2 [0, 65535] { R2978 += 1, R2901 += 1, R2902 += 1 };
  s0 -> s3 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1, R89 += 1, R90 += 1 };
  s0 -> s4 [0, 65535] { R2978 += 1, R2902 += 1, R2839 += 1, R2840 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s7 [0, 65535] { R2978 += 1, R2902 += 1 };
  s1 -> s1 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1, R88 += 1, R89 += 1 };
  s1 -> s6 [0, 65535] { R2978 += 1 };
  s1 -> s3 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1, R89 += 1, R90 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1, R88 += 1, R89 += 1 };
  s2 -> s2 [0, 65535] { R2978 += 1, R2901 += 1, R2902 += 1 };
  s2 -> s3 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1, R89 += 1, R90 += 1 };
  s2 -> s4 [0, 65535] { R2978 += 1, R2902 += 1, R2839 += 1, R2840 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s7 [0, 65535] { R2978 += 1, R2902 += 1 };
  s3 -> s8 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1 };
  s3 -> s6 [0, 65535] { R2978 += 1 };
  s3 -> s3 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1, R89 += 1, R90 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1, R88 += 1, R89 += 1 };
  s4 -> s6 [0, 65535] { R2978 += 1 };
  s4 -> s3 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1, R89 += 1, R90 += 1 };
  s4 -> s4 [0, 65535] { R2978 += 1, R2902 += 1, R2839 += 1, R2840 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2978 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2978 += 1, R2902 += 1 };
  s7 -> s6 [0, 65535] { R2978 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s7 [0, 65535] { R2978 += 1, R2902 += 1 };
  s8 -> s8 [0, 65535] { R2978 += 1, R2902 += 1, R2840 += 1 };
  s8 -> s6 [0, 65535] { R2978 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s0 -> s2 [0, 65535] { R2980 += 1, R2903 += 1, R2904 += 1 };
  s0 -> s3 [0, 65535] { R2980 += 1, R2904 += 1, R2841 += 1, R2842 += 1 };
  s0 -> s0 [0, 65535] { R2979 += 1, R2980 += 1 };
  s0 -> s4 [73, 73] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s0 -> s1 [74, 65535] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s1 -> s1 [0, 70] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s1 -> s4 [73, 73] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s1 -> s1 [74, 65535] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s2 -> s1 [0, 70] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s2 -> s2 [0, 65535] { R2980 += 1, R2903 += 1, R2904 += 1 };
  s2 -> s3 [0, 65535] { R2980 += 1, R2904 += 1, R2841 += 1, R2842 += 1 };
  s2 -> s4 [73, 73] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s2 -> s1 [74, 65535] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s3 -> s1 [0, 70] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s3 -> s3 [0, 65535] { R2980 += 1, R2904 += 1, R2841 += 1, R2842 += 1 };
  s3 -> s4 [73, 73] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s3 -> s1 [74, 65535] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s4 -> s4 [0, 70] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R2980 += 1 };
  s4 -> s4 [0, 65535] { R2980 += 1, R2904 += 1, R2842 += 1 };
  s4 -> s7 [0, 65535] { R2980 += 1, R2904 += 1 };
  s4 -> s4 [73, 65535] { R2980 += 1, R2904 += 1, R2842 += 1, R2276 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2980 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R2980 += 1 };
  s7 -> s7 [0, 65535] { R2980 += 1, R2904 += 1 };
  accepting s4, s5, s6, s7;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1, R2281 += 1, R2282 += 1 };
  s0 -> s2 [0, 65535] { R2982 += 1, R2906 += 1, R2843 += 1, R2844 += 1 };
  s0 -> s3 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1, R2280 += 1, R2281 += 1 };
  s0 -> s4 [0, 65535] { R2982 += 1, R2905 += 1, R2906 += 1 };
  s0 -> s0 [0, 65535] { R2981 += 1, R2982 += 1 };
  s1 -> s1 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1, R2281 += 1, R2282 += 1 };
  s1 -> s6 [0, 65535] { R2982 += 1, R2906 += 1 };
  s1 -> s7 [0, 65535] { R2982 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s8 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1 };
  s2 -> s1 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1, R2281 += 1, R2282 += 1 };
  s2 -> s2 [0, 65535] { R2982 += 1, R2906 += 1, R2843 += 1, R2844 += 1 };
  s2 -> s3 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1, R2280 += 1, R2281 += 1 };
  s2 -> s7 [0, 65535] { R2982 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s1 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1, R2281 += 1, R2282 += 1 };
  s3 -> s6 [0, 65535] { R2982 += 1, R2906 += 1 };
  s3 -> s3 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1, R2280 += 1, R2281 += 1 };
  s3 -> s7 [0, 65535] { R2982 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s1 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1, R2281 += 1, R2282 += 1 };
  s4 -> s2 [0, 65535] { R2982 += 1, R2906 += 1, R2843 += 1, R2844 += 1 };
  s4 -> s3 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1, R2280 += 1, R2281 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R2982 += 1, R2905 += 1, R2906 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R2982 += 1, R2906 += 1 };
  s6 -> s7 [0, 65535] { R2982 += 1 };
  s6 -> s5 [0, 65535];
  s7 -> s7 [0, 65535] { R2982 += 1 };
  s7 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R2982 += 1, R2906 += 1 };
  s8 -> s7 [0, 65535] { R2982 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s8 [0, 65535] { R2982 += 1, R2906 += 1, R2844 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 65535] { R2984 += 1, R2908 += 1, R2846 += 1 };
  s0 -> s0 [0, 65535] { R2983 += 1, R2984 += 1 };
  s0 -> s2 [0, 65535] { R2984 += 1, R2907 += 1, R2908 += 1 };
  s0 -> s3 [0, 65535] { R2984 += 1, R2908 += 1, R2845 += 1, R2846 += 1 };
  s1 -> s4 [0, 65535] { R2984 += 1 };
  s1 -> s1 [0, 65535] { R2984 += 1, R2908 += 1, R2846 += 1 };
  s1 -> s6 [0, 65535] { R2984 += 1, R2908 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R2984 += 1, R2908 += 1, R2846 += 1 };
  s2 -> s2 [0, 65535] { R2984 += 1, R2907 += 1, R2908 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R2984 += 1, R2908 += 1, R2845 += 1, R2846 += 1 };
  s3 -> s4 [0, 65535] { R2984 += 1 };
  s3 -> s1 [0, 65535] { R2984 += 1, R2908 += 1, R2846 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R2984 += 1, R2908 += 1, R2845 += 1, R2846 += 1 };
  s4 -> s4 [0, 65535] { R2984 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R2984 += 1 };
  s6 -> s6 [0, 65535] { R2984 += 1, R2908 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R2986 += 1, R2910 += 1, R2866 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R2985 += 1, R2986 += 1 };
  s0 -> s2 [0, 65535] { R2986 += 1, R2909 += 1, R2910 += 1 };
  s0 -> s3 [0, 65535] { R2986 += 1, R2910 += 1, R2865 += 1, R2866 += 1 };
  s1 -> s1 [0, 65535] { R2986 += 1, R2910 += 1, R2866 += 1, R21 += 1 };
  s1 -> s6 [0, 65535] { R2986 += 1, R2910 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R2986 += 1 };
  s2 -> s1 [0, 65535] { R2986 += 1, R2910 += 1, R2866 += 1, R21 += 1 };
  s2 -> s2 [0, 65535] { R2986 += 1, R2909 += 1, R2910 += 1 };
  s2 -> s3 [0, 65535] { R2986 += 1, R2910 += 1, R2865 += 1, R2866 += 1 };
  s2 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R2986 += 1, R2910 += 1, R2866 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R2986 += 1, R2910 += 1, R2865 += 1, R2866 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R2986 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R2986 += 1 };
  s6 -> s6 [0, 65535] { R2986 += 1, R2910 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s5 [0, 65535] { R2986 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s0 -> s0 [0, 65535] { R2987 += 1, R2988 += 1 };
  s0 -> s2 [0, 65535] { R2988 += 1, R2912 += 1, R2867 += 1, R2868 += 1 };
  s0 -> s3 [0, 65535] { R2988 += 1, R2911 += 1, R2912 += 1 };
  s0 -> s4 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s0 -> s5 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s0 -> s6 [70, 70] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s0 -> s1 [71, 65535] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s1 -> s1 [0, 65] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s1 -> s4 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s1 -> s5 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s1 -> s6 [70, 70] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s1 -> s1 [71, 65535] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s2 -> s1 [0, 65] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s2 -> s2 [0, 65535] { R2988 += 1, R2912 += 1, R2867 += 1, R2868 += 1 };
  s2 -> s4 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s2 -> s5 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s2 -> s6 [70, 70] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s2 -> s1 [71, 65535] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s3 -> s1 [0, 65] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s3 -> s2 [0, 65535] { R2988 += 1, R2912 += 1, R2867 += 1, R2868 += 1 };
  s3 -> s3 [0, 65535] { R2988 += 1, R2911 += 1, R2912 += 1 };
  s3 -> s4 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s3 -> s5 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s3 -> s6 [70, 70] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s3 -> s1 [71, 65535] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s5 -> s5 [0, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s5 -> s10 [70, 70] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s5 -> s5 [71, 65535] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s6 -> s6 [0, 65] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s6 -> s7 [0, 65535] { R2988 += 1 };
  s6 -> s6 [0, 65535] { R2988 += 1, R2912 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s6 -> s10 [66, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s6 -> s6 [70, 65535] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s7 -> s7 [0, 65535] { R2988 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R2988 += 1, R2912 += 1 };
  s9 -> s7 [0, 65535] { R2988 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s10 [0, 66] { R2988 += 1, R2912 += 1, R2868 += 1 };
  s10 -> s7 [0, 65535] { R2988 += 1 };
  s10 -> s10 [0, 65535] { R2988 += 1, R2912 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [70, 65535] { R2988 += 1, R2912 += 1, R2868 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R2990 += 1, R2913 += 1, R2914 += 1 };
  s0 -> s0 [0, 65535] { R2989 += 1, R2990 += 1 };
  s0 -> s3 [0, 65535] { R2990 += 1, R2914 += 1, R2869 += 1, R2870 += 1 };
  s0 -> s4 [66, 66] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s1 -> s6 [0, 65535] { R2990 += 1 };
  s1 -> s1 [0, 65535] { R2990 += 1, R2914 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s2 -> s2 [0, 65535] { R2990 += 1, R2913 += 1, R2914 += 1 };
  s2 -> s3 [0, 65535] { R2990 += 1, R2914 += 1, R2869 += 1, R2870 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s3 -> s6 [0, 65535] { R2990 += 1 };
  s3 -> s3 [0, 65535] { R2990 += 1, R2914 += 1, R2869 += 1, R2870 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s4 -> s6 [0, 65535] { R2990 += 1 };
  s4 -> s4 [0, 65535] { R2990 += 1, R2914 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R2990 += 1 };
  s5 -> s5 [0, 65535] { R2990 += 1, R2914 += 1, R2870 += 1, R77 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R2990 += 1, R2914 += 1 };
  s6 -> s6 [0, 65535] { R2990 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R2990 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R2990 += 1, R2914 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R2992 += 1, R2916 += 1, R2871 += 1, R2872 += 1 };
  s0 -> s3 [0, 65535] { R2992 += 1, R2915 += 1, R2916 += 1 };
  s0 -> s0 [0, 65535] { R2991 += 1, R2992 += 1 };
  s0 -> s4 [66, 66] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s1 -> s1 [0, 65535] { R2992 += 1, R2916 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2992 += 1 };
  s1 -> s4 [66, 66] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R2992 += 1, R2916 += 1, R2871 += 1, R2872 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R2992 += 1 };
  s2 -> s4 [66, 66] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s3 -> s2 [0, 65535] { R2992 += 1, R2916 += 1, R2871 += 1, R2872 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R2992 += 1, R2915 += 1, R2916 += 1 };
  s3 -> s4 [66, 66] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2992 += 1 };
  s4 -> s4 [0, 65535] { R2992 += 1, R2916 += 1, R2872 += 1, R79 += 1 };
  s4 -> s8 [0, 65535] { R2992 += 1, R2916 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2992 += 1 };
  s5 -> s5 [0, 65535] { R2992 += 1, R2916 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2992 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2992 += 1 };
  s8 -> s8 [0, 65535] { R2992 += 1, R2916 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R2994 += 1, R2917 += 1, R2918 += 1 };
  s0 -> s3 [0, 65535] { R2994 += 1, R2918 += 1, R2873 += 1, R2874 += 1 };
  s0 -> s0 [0, 65535] { R2993 += 1, R2994 += 1 };
  s0 -> s4 [66, 66] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535] { R2994 += 1, R2918 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2994 += 1 };
  s1 -> s4 [66, 66] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R2994 += 1, R2917 += 1, R2918 += 1 };
  s2 -> s3 [0, 65535] { R2994 += 1, R2918 += 1, R2873 += 1, R2874 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s3 -> s3 [0, 65535] { R2994 += 1, R2918 += 1, R2873 += 1, R2874 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R2994 += 1 };
  s3 -> s4 [66, 66] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R2994 += 1, R2918 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R2994 += 1, R2918 += 1, R2874 += 1, R81 += 1, R82 += 1 };
  s4 -> s7 [0, 65535] { R2994 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2994 += 1 };
  s5 -> s5 [0, 65535] { R2994 += 1, R2918 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2994 += 1 };
  s8 -> s8 [0, 65535] { R2994 += 1, R2918 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2994 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s0 -> s0 [0, 65535] { R2995 += 1, R2996 += 1 };
  s0 -> s2 [0, 65535] { R2996 += 1, R2920 += 1, R2875 += 1, R2876 += 1 };
  s0 -> s3 [0, 65535] { R2996 += 1, R2919 += 1, R2920 += 1 };
  s0 -> s4 [66, 66] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s0 -> s5 [66, 66] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s0 -> s1 [67, 65535] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [0, 65535] { R2996 += 1, R2920 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R2996 += 1 };
  s1 -> s4 [66, 66] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s1 -> s5 [66, 66] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s1 -> s1 [67, 65535] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [0, 65] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R2996 += 1, R2920 += 1, R2875 += 1, R2876 += 1 };
  s2 -> s7 [0, 65535] { R2996 += 1 };
  s2 -> s4 [66, 66] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s2 -> s5 [66, 66] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s2 -> s1 [67, 65535] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [0, 65] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R2996 += 1, R2920 += 1, R2875 += 1, R2876 += 1 };
  s3 -> s3 [0, 65535] { R2996 += 1, R2919 += 1, R2920 += 1 };
  s3 -> s4 [66, 66] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s3 -> s5 [66, 66] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s3 -> s1 [67, 65535] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R2996 += 1 };
  s4 -> s4 [0, 65535] { R2996 += 1, R2920 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R2996 += 1 };
  s5 -> s8 [0, 65535] { R2996 += 1, R2920 += 1 };
  s5 -> s5 [0, 65535] { R2996 += 1, R2920 += 1, R2876 += 1, R85 += 1, R86 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R2996 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R2996 += 1 };
  s8 -> s8 [0, 65535] { R2996 += 1, R2920 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s0 -> s2 [0, 65] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s0 -> s3 [0, 65535] { R2998 += 1, R2921 += 1, R2922 += 1 };
  s0 -> s4 [0, 65535] { R2998 += 1, R2922 += 1, R2877 += 1, R2878 += 1 };
  s0 -> s0 [0, 65535] { R2997 += 1, R2998 += 1 };
  s0 -> s5 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s0 -> s6 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s0 -> s7 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s0 -> s8 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s0 -> s1 [67, 70] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s0 -> s2 [67, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s0 -> s1 [74, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s1 -> s1 [0, 65] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s1 -> s1 [0, 65535] { R2998 += 1, R2922 += 1 };
  s1 -> s9 [0, 65535];
  s1 -> s10 [0, 65535] { R2998 += 1 };
  s1 -> s5 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s1 -> s7 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s1 -> s1 [67, 70] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s1 -> s1 [74, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s2 -> s1 [0, 65] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s2 -> s2 [0, 65] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s2 -> s5 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s2 -> s6 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s2 -> s7 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s2 -> s8 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s2 -> s1 [67, 70] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s2 -> s2 [67, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s2 -> s1 [74, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s3 -> s1 [0, 65] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s3 -> s2 [0, 65] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s3 -> s3 [0, 65535] { R2998 += 1, R2921 += 1, R2922 += 1 };
  s3 -> s4 [0, 65535] { R2998 += 1, R2922 += 1, R2877 += 1, R2878 += 1 };
  s3 -> s5 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s3 -> s6 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s3 -> s7 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s3 -> s8 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s3 -> s1 [67, 70] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s3 -> s2 [67, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s3 -> s1 [74, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s4 -> s1 [0, 65] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s4 -> s2 [0, 65] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s4 -> s4 [0, 65535] { R2998 += 1, R2922 += 1, R2877 += 1, R2878 += 1 };
  s4 -> s5 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s4 -> s6 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s4 -> s7 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s4 -> s8 [66, 66] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s4 -> s1 [67, 70] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s4 -> s2 [67, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s4 -> s1 [74, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s5 -> s5 [0, 65535] { R2998 += 1, R2922 += 1 };
  s5 -> s9 [0, 65535];
  s5 -> s10 [0, 65535] { R2998 += 1 };
  s7 -> s7 [0, 70] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s7 -> s9 [0, 65535];
  s7 -> s7 [0, 65535] { R2998 += 1, R2922 += 1 };
  s7 -> s10 [0, 65535] { R2998 += 1 };
  s7 -> s7 [74, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s8 -> s7 [0, 70] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s8 -> s8 [0, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2273 += 1, R2274 += 1 };
  s8 -> s7 [74, 65535] { R2998 += 1, R2922 += 1, R2878 += 1, R2274 += 1 };
  s9 -> s9 [0, 65535];
  s10 -> s9 [0, 65535];
  s10 -> s10 [0, 65535] { R2998 += 1 };
  accepting s5, s9, s1, s7, s10;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s0 -> s0 [0, 65535] { R2999 += 1, R3000 += 1 };
  s0 -> s2 [0, 65535] { R3000 += 1, R2924 += 1, R2879 += 1, R2880 += 1 };
  s0 -> s3 [0, 65535] { R3000 += 1, R2923 += 1, R2924 += 1 };
  s0 -> s4 [66, 66] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s0 -> s5 [66, 66] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s0 -> s1 [67, 65535] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s1 -> s1 [0, 65] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s1 -> s1 [0, 65535] { R3000 += 1, R2924 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R3000 += 1 };
  s1 -> s4 [66, 66] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s1 -> s5 [66, 66] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s1 -> s1 [67, 65535] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s2 -> s1 [0, 65] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s2 -> s2 [0, 65535] { R3000 += 1, R2924 += 1, R2879 += 1, R2880 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R3000 += 1 };
  s2 -> s4 [66, 66] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s2 -> s5 [66, 66] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s2 -> s1 [67, 65535] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s3 -> s1 [0, 65] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s3 -> s2 [0, 65535] { R3000 += 1, R2924 += 1, R2879 += 1, R2880 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R3000 += 1, R2923 += 1, R2924 += 1 };
  s3 -> s4 [66, 66] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s3 -> s5 [66, 66] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s3 -> s1 [67, 65535] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s4 -> s8 [0, 65535] { R3000 += 1, R2924 += 1 };
  s4 -> s4 [0, 65535] { R3000 += 1, R2924 += 1, R2880 += 1, R2277 += 1, R2278 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R3000 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R3000 += 1, R2924 += 1 };
  s5 -> s7 [0, 65535] { R3000 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R3000 += 1 };
  s8 -> s8 [0, 65535] { R3000 += 1, R2924 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R3000 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s0 -> s2 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s0 -> s0 [0, 65535] { R3001 += 1, R3002 += 1 };
  s0 -> s3 [0, 65535] { R3002 += 1, R2925 += 1, R2926 += 1 };
  s0 -> s4 [0, 65535] { R3002 += 1, R2926 += 1, R2881 += 1, R2882 += 1 };
  s0 -> s5 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s0 -> s6 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s0 -> s7 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s0 -> s8 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s0 -> s2 [67, 69] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s0 -> s1 [67, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s0 -> s9 [70, 70] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s0 -> s2 [74, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s1 -> s1 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s1 -> s2 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s1 -> s5 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s1 -> s6 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s1 -> s7 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s1 -> s8 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s1 -> s2 [67, 69] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s1 -> s1 [67, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s1 -> s9 [70, 70] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s1 -> s2 [74, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s2 -> s2 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s2 -> s7 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1 };
  s2 -> s8 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1 };
  s2 -> s2 [67, 69] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s2 -> s2 [67, 65535] { R3002 += 1, R2926 += 1, R2882 += 1 };
  s2 -> s9 [70, 70] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s2 -> s2 [74, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s3 -> s1 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s3 -> s2 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s3 -> s3 [0, 65535] { R3002 += 1, R2925 += 1, R2926 += 1 };
  s3 -> s4 [0, 65535] { R3002 += 1, R2926 += 1, R2881 += 1, R2882 += 1 };
  s3 -> s5 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s3 -> s6 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s3 -> s7 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s3 -> s8 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s3 -> s2 [67, 69] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s3 -> s1 [67, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s3 -> s9 [70, 70] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s3 -> s2 [74, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s4 -> s1 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s4 -> s2 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s4 -> s4 [0, 65535] { R3002 += 1, R2926 += 1, R2881 += 1, R2882 += 1 };
  s4 -> s5 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s4 -> s6 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s4 -> s7 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s4 -> s8 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s4 -> s2 [67, 69] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s4 -> s1 [67, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s4 -> s9 [70, 70] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s4 -> s2 [74, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s5 -> s7 [0, 69] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s5 -> s5 [0, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2823 += 1, R2824 += 1 };
  s5 -> s12 [70, 70] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s5 -> s7 [74, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s7 -> s7 [0, 69] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s7 -> s7 [0, 65535] { R3002 += 1, R2926 += 1, R2882 += 1 };
  s7 -> s12 [70, 70] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s7 -> s7 [74, 65535] { R3002 += 1, R2926 += 1, R2882 += 1, R2824 += 1 };
  s9 -> s9 [0, 65] { R3002 += 1, R2926 += 1, R2882 += 1 };
  s9 -> s10 [0, 65535] { R3002 += 1 };
  s9 -> s9 [0, 65535] { R3002 += 1, R2926 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1 };
  s9 -> s13 [66, 66] { R3002 += 1, R2926 += 1, R2882 += 1 };
  s9 -> s9 [67, 65535] { R3002 += 1, R2926 += 1, R2882 += 1 };
  s10 -> s10 [0, 65535] { R3002 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s10 [0, 65535] { R3002 += 1 };
  s12 -> s12 [0, 65535] { R3002 += 1, R2926 += 1, R2882 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s14 [0, 65535] { R3002 += 1, R2926 += 1 };
  s13 -> s10 [0, 65535] { R3002 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R3002 += 1, R2926 += 1 };
  s14 -> s10 [0, 65535] { R3002 += 1 };
  s14 -> s11 [0, 65535];
  s14 -> s14 [0, 65535] { R3002 += 1, R2926 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R1 = R2842 && R2 = R2926 && R3 - R3002 = 1 && R23 - R2926 = -1 && R24 = R2926 && R25 - R2926 = -1 && R26 = R2926 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R3002 && R32 - R3002 = 1 && R33 = R3002 && R34 - R3002 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R2276 + -1*R2274 - R64 = 0 && R63 + R2275 + R2273 = 0 && R2841 = 0 && R2867 = 0 && R2868 = 0 && R2877 = 0 && R2878 = 0 && R2881 = 0 && R2882 = 0 && R2883 = 0 && R2884 = R2926 && R2885 = 0 && R2886 = R2926 && R2887 = 0 && R2888 = R2926 && R2889 = 0 && R2890 = R2926 && R2891 = 0 && R2892 = R2926 && R2893 = 0 && R2894 = R2926 && R2895 = 0 && R2896 = R2926 && R2897 = 0 && R2898 = R2926 && R2899 = 0 && R2900 = R2926 && R2901 = 0 && R2902 = R2926 && R2903 = 0 && R2904 = R2926 && R2905 = 0 && R2906 = R2926 && R2907 = 0 && R2908 = R2926 && R2909 = 0 && R2910 = R2926 && R2911 = 0 && R2912 = R2926 && R2913 = 0 && R2914 = R2926 && R2915 = 0 && R2916 = R2926 && R2917 = 0 && R2918 = R2926 && R2919 = 0 && R2920 = R2926 && R2921 = 0 && R2922 = R2926 && R2923 = 0 && R2924 = R2926 && R2925 = 0 && R2927 = 0 && R2928 = R3002 && R2929 = 0 && R2930 = R3002 && R2931 = 0 && R2932 = R3002 && R2933 = 0 && R2934 = R3002 && R2935 = 0 && R2936 = R3002 && R2937 = 0 && R2938 = R3002 && R2939 = 0 && R2940 = R3002 && R2941 = 0 && R2942 = R3002 && R2943 = 0 && R2944 = R3002 && R2945 = 0 && R2946 = R3002 && R2947 = 0 && R2948 = R3002 && R2949 = 0 && R2950 = R3002 && R2951 = 0 && R2952 = R3002 && R2953 = 0 && R2954 = R3002 && R2955 = 0 && R2956 = R3002 && R2957 = 0 && R2958 = R3002 && R2959 = 0 && R2960 = R3002 && R2961 = 0 && R2962 = R3002 && R2963 = 0 && R2964 = R3002 && R2965 = 0 && R2966 = R3002 && R2967 = 0 && R2968 = R3002 && R2969 = 0 && R2970 = R3002 && R2971 = 0 && R2972 = R3002 && R2973 = 0 && R2974 = R3002 && R2975 = 0 && R2976 = R3002 && R2977 = 0 && R2978 = R3002 && R2979 = 0 && R2980 = R3002 && R2981 = 0 && R2982 = R3002 && R2983 = 0 && R2984 = R3002 && R2985 = 0 && R2986 = R3002 && R2987 = 0 && R2988 = R3002 && R2989 = 0 && R2990 = R3002 && R2991 = 0 && R2992 = R3002 && R2993 = 0 && R2994 = R3002 && R2995 = 0 && R2996 = R3002 && R2997 = 0 && R2998 = R3002 && R2999 = 0 && R3000 = R3002 && R3001 = 0 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R2276 + -1*R2274 - R64 < 1 && -1 < R2842 && 0 < R2926 && -1 < R3002 && (R59 + R90 + R87 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R2276 + -1*R2274 - R64 = 0 || R64 + R2276 + R2274 < 1) && (R53 + R83 + R81 = 0 || R64 + R2276 + R2274 < 1))) && (R59 + R90 + R87 != 0 || ((R57 + R88 + R85 != 0 || R58 + R89 + R86 + -1*R2276 + -1*R2274 - R64 = 0 || R64 + R2276 + R2274 < 1) && (R57 + R88 + R85 = 0 || R64 + R2276 + R2274 < 1))) && (R2827 != 0 || R2828 = R2842 || (R20 = 0 && R2842 = 0)) && (R2829 != 0 || R2830 = R2842 || (R20 = 0 && R2842 = 0)) && (R2831 != 0 || R2832 = R2842 || (R20 = 0 && R2842 = 0)) && (R2833 != 0 || R2834 = R2842 || (R20 = 0 && R2842 = 0)) && (R2835 != 0 || R2836 = R2842 || (R20 = 0 && R2842 = 0)) && (R2837 != 0 || R2838 = R2842 || (R20 = 0 && R2842 = 0)) && (R2839 != 0 || R2840 = R2842 || (R20 = 0 && R2842 = 0)) && (R2843 != 0 || R2842 = R2844 || (R20 = 0 && R2842 = 0)) && (R2845 != 0 || R2842 = R2846 || (R20 = 0 && R2842 = 0)) && (R21 = 0 || (R2865 = 0 && R2866 = 0)) && (R21 = 0 || (R2869 = 0 && R2870 = 0)) && (R21 = 0 || (R2871 = 0 && R2872 = 0)) && (R21 = 0 || (R2873 = 0 && R2874 = 0)) && (R21 = 0 || (R2875 = 0 && R2876 = 0)) && (R21 = 0 || (R2879 = 0 && R2880 = 0)) && (R22 = 0 || (R2847 = 0 && R2848 = 0)) && (R22 = 0 || (R2849 = 0 && R2850 = 0)) && (R22 = 0 || (R2851 = 0 && R2852 = 0)) && (R22 = 0 || (R2853 = 0 && R2854 = 0)) && (R22 = 0 || (R2855 = 0 && R2856 = 0)) && (R22 = 0 || (R2857 = 0 && R2858 = 0)) && (R22 = 0 || (R2859 = 0 && R2860 = 0)) && (R22 = 0 || (R2861 = 0 && R2862 = 0)) && (R22 = 0 || (R2863 = 0 && R2864 = 0)) && (R59 + R90 + R87 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R2276 + -1*R2274 - R64 = 0)) && (R59 + R90 + R87 = 0 || (R57 + R88 + R85 = 0 && R58 + R89 + R86 + -1*R2276 + -1*R2274 - R64 = 0)) && (R69 + R2282 + R2279 = 0 || (R67 + R2280 + R2277 = 0 && R68 + R2281 + R2278 = 0)) && (R69 + R2282 + R2279 = 0 || (R73 + R2825 + R2823 = 0 && R74 + R2826 + R2824 = 0)) && (R2827 = 0 || (R20 = 0 && R2842 = 0)) && (R2829 = 0 || (R20 = 0 && R2842 = 0)) && (R2831 = 0 || (R20 = 0 && R2842 = 0)) && (R2833 = 0 || (R20 = 0 && R2842 = 0)) && (R2835 = 0 || (R20 = 0 && R2842 = 0)) && (R2837 = 0 || (R20 = 0 && R2842 = 0)) && (R2839 = 0 || (R20 = 0 && R2842 = 0)) && (R2843 = 0 || (R20 = 0 && R2842 = 0)) && (R2845 = 0 || (R20 = 0 && R2842 = 0));
// End of Parikh automata intersection problem
