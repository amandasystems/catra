// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R13189, R13190, R13191, R13192, R13193, R13194, R13195, R13196, R13197, R13198, R13199, R13200, R13201, R13202, R13203, R13204, R13205, R13206, R13207, R13208, R13209, R13210, R13211, R13212, R13213, R13214, R13215, R13216, R13217, R13218, R13219, R13220, R13221, R13222, R13223, R13224, R13225, R13226, R13227, R13228, R13229, R13230, R13231, R13232, R13233, R13234, R13235, R13236, R13237, R13238, R13239, R13240, R13241, R13242, R13243, R13244, R13245, R13246, R13247, R13248, R13249, R13250, R13251, R13252, R13253, R13254, R13255, R13256, R13257, R13258, R13259, R13260, R13261, R13262, R13263, R13264, R13265, R13266, R13267, R13268, R13269, R13270, R13271, R13272, R13273, R13274, R13275, R13276, R13277, R13278, R13279, R13280, R13281, R13282, R13283, R13284, R13285, R13286, R13287, R13288, R13289, R13290, R13291, R13292, R13293, R13294, R13295, R13296, R13297, R13298, R13299, R13300, R13301, R13302, R13303, R13304, R13305, R13306, R13307, R13308, R13309, R13310, R13311, R13312, R13313, R13314, R13315, R13316, R13317, R13318, R13319, R13320, R13321, R13322, R13323, R13324, R13325, R13326, R13327, R13328, R13329, R13330, R13331, R13332, R13333, R13334, R13335, R13336, R13337, R13338, R13339, R13340, R13341, R13342, R13343, R13344, R13345, R13346, R13347, R13348, R13349, R13350, R13351, R13352, R13353, R13354, R13355, R13356, R13357, R13358, R13359, R13360, R13361, R13362, R13363, R13364, R13365, R13366, R13367, R13368, R13369, R13370, R13371, R13372, R13373, R13374, R13375, R13376, R13377, R13378, R13379, R13380, R13381, R13382, R13383, R13384, R14, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R13310 += 1 };
  s0 -> s0 [0, 65535] { R13309 += 1, R13310 += 1 };
  s0 -> s2 [66, 66] { R13310 += 1 };
  s0 -> s1 [67, 65535] { R13310 += 1 };
  s1 -> s1 [0, 64] { R13310 += 1 };
  s1 -> s2 [66, 66] { R13310 += 1 };
  s1 -> s1 [67, 65535] { R13310 += 1 };
  s2 -> s2 [0, 64] { R13310 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R13310 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s0 [0, 65535] { R13311 += 1, R13312 += 1 };
  s0 -> s1 [0, 65535] { R13312 += 1, R2 += 1 };
  s1 -> s1 [0, 65535] { R13312 += 1, R2 += 1 };
  s1 -> s2 [0, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R13314 += 1 };
  s0 -> s0 [0, 65535] { R13313 += 1, R13314 += 1 };
  s0 -> s2 [0, 65535] { R13314 += 1, R14 += 1 };
  s0 -> s3 [66, 66] { R13314 += 1 };
  s0 -> s1 [67, 65535] { R13314 += 1 };
  s1 -> s1 [0, 65] { R13314 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R13314 += 1 };
  s1 -> s1 [67, 65535] { R13314 += 1 };
  s2 -> s1 [0, 65] { R13314 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13314 += 1, R14 += 1 };
  s2 -> s3 [66, 66] { R13314 += 1 };
  s2 -> s1 [67, 65535] { R13314 += 1 };
  s3 -> s3 [0, 65535] { R13314 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R13316 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R13315 += 1, R13316 += 1 };
  s0 -> s2 [0, 65535] { R13316 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R13316 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R13316 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R13316 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R13316 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R13316 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R13316 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R13316 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13316 += 1, R23 += 1, R24 += 1 };
  s2 -> s3 [9, 13] { R13316 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R13316 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R13316 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R13316 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R13316 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13316 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R13318 += 1, R25 += 1, R26 += 1 };
  s0 -> s0 [0, 65535] { R13317 += 1, R13318 += 1 };
  s0 -> s2 [0, 65535] { R13318 += 1, R26 += 1, R4 += 1 };
  s1 -> s1 [0, 65535] { R13318 += 1, R25 += 1, R26 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13318 += 1, R26 += 1, R4 += 1 };
  s2 -> s3 [0, 65535] { R13318 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13318 += 1, R26 += 1, R4 += 1 };
  s3 -> s3 [0, 65535] { R13318 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R13320 += 1, R28 += 1 };
  s0 -> s2 [0, 65535] { R13320 += 1, R27 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R13319 += 1, R13320 += 1 };
  s0 -> s3 [9, 13] { R13320 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R13320 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R13320 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R13320 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R13320 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13320 += 1 };
  s2 -> s1 [0, 8] { R13320 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13320 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R13320 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R13320 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R13320 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R13320 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R13320 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13320 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R13322 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R13321 += 1, R13322 += 1 };
  s0 -> s2 [0, 65535] { R13322 += 1, R30 += 1, R5 += 1 };
  s1 -> s1 [0, 65535] { R13322 += 1, R29 += 1, R30 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13322 += 1, R30 += 1, R5 += 1 };
  s2 -> s3 [0, 65535] { R13322 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13322 += 1, R30 += 1, R5 += 1 };
  s3 -> s3 [0, 65535] { R13322 += 1 };
  s3 -> s4 [0, 65535];
  s4 -> s4 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s0 [0, 65535] { R13323 += 1, R13324 += 1 };
  s0 -> s1 [0, 65535] { R13324 += 1, R13229 += 1, R13230 += 1 };
  s0 -> s2 [0, 65535] { R13324 += 1, R13230 += 1, R22 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R13324 += 1, R13229 += 1, R13230 += 1 };
  s1 -> s2 [0, 65535] { R13324 += 1, R13230 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s2 [0, 65535] { R13324 += 1, R13230 += 1, R22 += 1 };
  s2 -> s4 [0, 65535] { R13324 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13324 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R13326 += 1, R13232 += 1 };
  s0 -> s0 [0, 65535] { R13325 += 1, R13326 += 1 };
  s0 -> s2 [0, 65535] { R13326 += 1, R13231 += 1, R13232 += 1 };
  s0 -> s3 [66, 66] { R13326 += 1, R13232 += 1 };
  s0 -> s4 [66, 66] { R13326 += 1, R13232 += 1 };
  s0 -> s1 [71, 65535] { R13326 += 1, R13232 += 1 };
  s1 -> s1 [0, 65] { R13326 += 1, R13232 += 1 };
  s1 -> s1 [0, 65535] { R13326 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13326 += 1, R13232 += 1 };
  s1 -> s4 [66, 66] { R13326 += 1, R13232 += 1 };
  s1 -> s1 [71, 65535] { R13326 += 1, R13232 += 1 };
  s2 -> s1 [0, 65] { R13326 += 1, R13232 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13326 += 1, R13231 += 1, R13232 += 1 };
  s2 -> s3 [66, 66] { R13326 += 1, R13232 += 1 };
  s2 -> s4 [66, 66] { R13326 += 1, R13232 += 1 };
  s2 -> s1 [71, 65535] { R13326 += 1, R13232 += 1 };
  s3 -> s3 [0, 65535] { R13326 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 66] { R13326 += 1, R13232 += 1 };
  s4 -> s4 [0, 65535] { R13326 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [71, 65535] { R13326 += 1, R13232 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R13328 += 1, R13234 += 1, R49 += 1 };
  s0 -> s2 [0, 65535] { R13328 += 1, R13233 += 1, R13234 += 1 };
  s0 -> s0 [0, 65535] { R13327 += 1, R13328 += 1 };
  s0 -> s3 [66, 66] { R13328 += 1, R13234 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R13328 += 1, R13234 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R13328 += 1, R13234 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R13328 += 1, R13234 += 1, R49 += 1 };
  s1 -> s1 [0, 65535] { R13328 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R13328 += 1, R13234 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R13328 += 1, R13234 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R13328 += 1, R13234 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R13328 += 1, R13234 += 1, R49 += 1 };
  s2 -> s2 [0, 65535] { R13328 += 1, R13233 += 1, R13234 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13328 += 1, R13234 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R13328 += 1, R13234 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R13328 += 1, R13234 += 1, R49 += 1 };
  s3 -> s3 [0, 65535] { R13328 += 1, R13234 += 1, R49 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13328 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13328 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13328 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R13330 += 1, R13236 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R13330 += 1, R13235 += 1, R13236 += 1 };
  s0 -> s0 [0, 65535] { R13329 += 1, R13330 += 1 };
  s0 -> s3 [66, 66] { R13330 += 1, R13236 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R13330 += 1, R13236 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R13330 += 1, R13236 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R13330 += 1, R13236 += 1, R51 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13330 += 1 };
  s1 -> s3 [66, 66] { R13330 += 1, R13236 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R13330 += 1, R13236 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R13330 += 1, R13236 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R13330 += 1, R13236 += 1, R51 += 1 };
  s2 -> s2 [0, 65535] { R13330 += 1, R13235 += 1, R13236 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13330 += 1, R13236 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R13330 += 1, R13236 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R13330 += 1, R13236 += 1, R51 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13330 += 1, R13236 += 1, R51 += 1 };
  s3 -> s6 [0, 65535] { R13330 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13330 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13330 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R13331 += 1, R13332 += 1 };
  s0 -> s2 [0, 65535] { R13332 += 1, R13237 += 1, R13238 += 1 };
  s0 -> s3 [66, 66] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13332 += 1 };
  s1 -> s3 [66, 66] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13332 += 1, R13237 += 1, R13238 += 1 };
  s2 -> s3 [66, 66] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13332 += 1, R13238 += 1, R53 += 1, R54 += 1 };
  s3 -> s6 [0, 65535] { R13332 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13332 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13332 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s0 -> s2 [0, 65535] { R13334 += 1, R13239 += 1, R13240 += 1 };
  s0 -> s0 [0, 65535] { R13333 += 1, R13334 += 1 };
  s0 -> s3 [66, 66] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13334 += 1 };
  s1 -> s3 [66, 66] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13334 += 1, R13239 += 1, R13240 += 1 };
  s2 -> s3 [66, 66] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13334 += 1, R13240 += 1, R57 += 1, R58 += 1 };
  s3 -> s6 [0, 65535] { R13334 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13334 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13334 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s0 -> s2 [0, 65535] { R13336 += 1, R13241 += 1, R13242 += 1 };
  s0 -> s0 [0, 65535] { R13335 += 1, R13336 += 1 };
  s0 -> s3 [66, 66] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13336 += 1 };
  s1 -> s3 [66, 66] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s2 -> s2 [0, 65535] { R13336 += 1, R13241 += 1, R13242 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13336 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13336 += 1 };
  s4 -> s4 [0, 65535] { R13336 += 1, R13242 += 1, R63 += 1, R64 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13336 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R13338 += 1, R13243 += 1, R13244 += 1 };
  s0 -> s0 [0, 65535] { R13337 += 1, R13338 += 1 };
  s0 -> s3 [66, 66] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13338 += 1 };
  s1 -> s3 [66, 66] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13338 += 1, R13243 += 1, R13244 += 1 };
  s2 -> s3 [66, 66] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R13338 += 1, R13244 += 1, R67 += 1, R68 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13338 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13338 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13338 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s0 -> s2 [0, 65535] { R13340 += 1, R13245 += 1, R13246 += 1 };
  s0 -> s0 [0, 65535] { R13339 += 1, R13340 += 1 };
  s0 -> s3 [66, 66] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13340 += 1 };
  s1 -> s3 [66, 66] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13340 += 1, R13245 += 1, R13246 += 1 };
  s2 -> s3 [66, 66] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R13340 += 1, R13246 += 1, R73 += 1, R74 += 1 };
  s3 -> s6 [0, 65535] { R13340 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R13340 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13340 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R13342 += 1, R13266 += 1 };
  s0 -> s0 [0, 65535] { R13341 += 1, R13342 += 1 };
  s0 -> s2 [0, 65535] { R13342 += 1, R13265 += 1, R13266 += 1 };
  s0 -> s3 [66, 66] { R13342 += 1, R13266 += 1 };
  s0 -> s1 [67, 65535] { R13342 += 1, R13266 += 1 };
  s1 -> s1 [0, 65] { R13342 += 1, R13266 += 1 };
  s1 -> s3 [66, 66] { R13342 += 1, R13266 += 1 };
  s1 -> s1 [67, 65535] { R13342 += 1, R13266 += 1 };
  s2 -> s1 [0, 65] { R13342 += 1, R13266 += 1 };
  s2 -> s2 [0, 65535] { R13342 += 1, R13265 += 1, R13266 += 1 };
  s2 -> s3 [66, 66] { R13342 += 1, R13266 += 1 };
  s2 -> s1 [67, 65535] { R13342 += 1, R13266 += 1 };
  s3 -> s3 [0, 65535] { R13342 += 1, R13266 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13342 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13342 += 1 };
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s1 [0, 65535] { R13344 += 1, R13268 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R13344 += 1, R13267 += 1, R13268 += 1 };
  s0 -> s0 [0, 65535] { R13343 += 1, R13344 += 1 };
  s1 -> s1 [0, 65535] { R13344 += 1, R13268 += 1, R1 += 1 };
  s1 -> s4 [0, 65535] { R13344 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R13344 += 1, R13268 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R13344 += 1, R13267 += 1, R13268 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R13344 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R13346 += 1, R13270 += 1 };
  s0 -> s0 [0, 65535] { R13345 += 1, R13346 += 1 };
  s0 -> s2 [0, 65535] { R13346 += 1, R13270 += 1, R11 += 1 };
  s0 -> s3 [0, 65535] { R13346 += 1, R13269 += 1, R13270 += 1 };
  s0 -> s4 [66, 66] { R13346 += 1, R13270 += 1 };
  s0 -> s1 [67, 65535] { R13346 += 1, R13270 += 1 };
  s1 -> s1 [0, 65] { R13346 += 1, R13270 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13346 += 1 };
  s1 -> s4 [66, 66] { R13346 += 1, R13270 += 1 };
  s1 -> s1 [67, 65535] { R13346 += 1, R13270 += 1 };
  s2 -> s1 [0, 65] { R13346 += 1, R13270 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13346 += 1, R13270 += 1, R11 += 1 };
  s2 -> s6 [0, 65535] { R13346 += 1 };
  s2 -> s4 [66, 66] { R13346 += 1, R13270 += 1 };
  s2 -> s1 [67, 65535] { R13346 += 1, R13270 += 1 };
  s3 -> s1 [0, 65] { R13346 += 1, R13270 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R13346 += 1, R13270 += 1, R11 += 1 };
  s3 -> s3 [0, 65535] { R13346 += 1, R13269 += 1, R13270 += 1 };
  s3 -> s4 [66, 66] { R13346 += 1, R13270 += 1 };
  s3 -> s1 [67, 65535] { R13346 += 1, R13270 += 1 };
  s4 -> s4 [0, 65535] { R13346 += 1, R13270 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13346 += 1 };
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R13348 += 1, R13272 += 1, R13210 += 1 };
  s0 -> s2 [0, 65535] { R13348 += 1, R13271 += 1, R13272 += 1 };
  s0 -> s0 [0, 65535] { R13347 += 1, R13348 += 1 };
  s0 -> s3 [0, 65535] { R13348 += 1, R13272 += 1, R13209 += 1, R13210 += 1 };
  s0 -> s1 [67, 65535] { R13348 += 1, R13272 += 1, R13210 += 1 };
  s1 -> s1 [0, 65] { R13348 += 1, R13272 += 1, R13210 += 1 };
  s1 -> s1 [0, 65535] { R13348 += 1, R13272 += 1 };
  s1 -> s4 [0, 65535] { R13348 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [67, 65535] { R13348 += 1, R13272 += 1, R13210 += 1 };
  s2 -> s1 [0, 65] { R13348 += 1, R13272 += 1, R13210 += 1 };
  s2 -> s2 [0, 65535] { R13348 += 1, R13271 += 1, R13272 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R13348 += 1, R13272 += 1, R13209 += 1, R13210 += 1 };
  s2 -> s1 [67, 65535] { R13348 += 1, R13272 += 1, R13210 += 1 };
  s3 -> s1 [0, 65] { R13348 += 1, R13272 += 1, R13210 += 1 };
  s3 -> s4 [0, 65535] { R13348 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R13348 += 1, R13272 += 1, R13209 += 1, R13210 += 1 };
  s3 -> s1 [67, 65535] { R13348 += 1, R13272 += 1, R13210 += 1 };
  s4 -> s4 [0, 65535] { R13348 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R13350 += 1, R13273 += 1, R13274 += 1 };
  s0 -> s2 [0, 65535] { R13350 += 1, R13274 += 1, R13212 += 1, R20 += 1 };
  s0 -> s0 [0, 65535] { R13349 += 1, R13350 += 1 };
  s0 -> s3 [0, 65535] { R13350 += 1, R13274 += 1, R13211 += 1, R13212 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13350 += 1, R13273 += 1, R13274 += 1 };
  s1 -> s2 [0, 65535] { R13350 += 1, R13274 += 1, R13212 += 1, R20 += 1 };
  s1 -> s3 [0, 65535] { R13350 += 1, R13274 += 1, R13211 += 1, R13212 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13350 += 1, R13274 += 1, R13212 += 1, R20 += 1 };
  s2 -> s6 [0, 65535] { R13350 += 1, R13274 += 1 };
  s2 -> s5 [0, 65535] { R13350 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13350 += 1, R13274 += 1, R13212 += 1, R20 += 1 };
  s3 -> s3 [0, 65535] { R13350 += 1, R13274 += 1, R13211 += 1, R13212 += 1 };
  s3 -> s5 [0, 65535] { R13350 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13350 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13350 += 1, R13274 += 1 };
  s6 -> s5 [0, 65535] { R13350 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R13352 += 1, R13276 += 1, R13214 += 1 };
  s0 -> s2 [0, 65535] { R13352 += 1, R13275 += 1, R13276 += 1 };
  s0 -> s0 [0, 65535] { R13351 += 1, R13352 += 1 };
  s0 -> s3 [0, 65535] { R13352 += 1, R13276 += 1, R13213 += 1, R13214 += 1 };
  s0 -> s1 [70, 65535] { R13352 += 1, R13276 += 1, R13214 += 1 };
  s1 -> s1 [0, 66] { R13352 += 1, R13276 += 1, R13214 += 1 };
  s1 -> s1 [0, 65535] { R13352 += 1, R13276 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R13352 += 1 };
  s1 -> s1 [70, 65535] { R13352 += 1, R13276 += 1, R13214 += 1 };
  s2 -> s1 [0, 66] { R13352 += 1, R13276 += 1, R13214 += 1 };
  s2 -> s2 [0, 65535] { R13352 += 1, R13275 += 1, R13276 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [0, 65535] { R13352 += 1, R13276 += 1, R13213 += 1, R13214 += 1 };
  s2 -> s1 [70, 65535] { R13352 += 1, R13276 += 1, R13214 += 1 };
  s3 -> s1 [0, 66] { R13352 += 1, R13276 += 1, R13214 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R13352 += 1 };
  s3 -> s3 [0, 65535] { R13352 += 1, R13276 += 1, R13213 += 1, R13214 += 1 };
  s3 -> s1 [70, 65535] { R13352 += 1, R13276 += 1, R13214 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13352 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s1 [0, 65535] { R13354 += 1, R13278 += 1, R13215 += 1, R13216 += 1 };
  s0 -> s0 [0, 65535] { R13353 += 1, R13354 += 1 };
  s0 -> s2 [0, 65535] { R13354 += 1, R13278 += 1, R13216 += 1, R78 += 1 };
  s0 -> s3 [0, 65535] { R13354 += 1, R13277 += 1, R13278 += 1 };
  s1 -> s1 [0, 65535] { R13354 += 1, R13278 += 1, R13215 += 1, R13216 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s2 [0, 65535] { R13354 += 1, R13278 += 1, R13216 += 1, R78 += 1 };
  s1 -> s6 [0, 65535] { R13354 += 1 };
  s2 -> s5 [0, 65535] { R13354 += 1, R13278 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13354 += 1, R13278 += 1, R13216 += 1, R78 += 1 };
  s2 -> s6 [0, 65535] { R13354 += 1 };
  s3 -> s1 [0, 65535] { R13354 += 1, R13278 += 1, R13215 += 1, R13216 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13354 += 1, R13278 += 1, R13216 += 1, R78 += 1 };
  s3 -> s3 [0, 65535] { R13354 += 1, R13277 += 1, R13278 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13354 += 1, R13278 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R13354 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13354 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s0 -> s2 [0, 65535] { R13356 += 1, R13280 += 1, R13217 += 1, R13218 += 1 };
  s0 -> s3 [0, 65535] { R13356 += 1, R13279 += 1, R13280 += 1 };
  s0 -> s4 [0, 65535] { R13356 += 1, R13280 += 1, R13218 += 1, R80 += 1 };
  s0 -> s0 [0, 65535] { R13355 += 1, R13356 += 1 };
  s0 -> s1 [71, 65535] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s1 -> s1 [0, 69] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R13356 += 1, R13280 += 1 };
  s1 -> s6 [0, 65535] { R13356 += 1 };
  s1 -> s1 [71, 65535] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s2 -> s1 [0, 69] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13356 += 1, R13280 += 1, R13217 += 1, R13218 += 1 };
  s2 -> s6 [0, 65535] { R13356 += 1 };
  s2 -> s4 [0, 65535] { R13356 += 1, R13280 += 1, R13218 += 1, R80 += 1 };
  s2 -> s1 [71, 65535] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s3 -> s1 [0, 69] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s2 [0, 65535] { R13356 += 1, R13280 += 1, R13217 += 1, R13218 += 1 };
  s3 -> s3 [0, 65535] { R13356 += 1, R13279 += 1, R13280 += 1 };
  s3 -> s4 [0, 65535] { R13356 += 1, R13280 += 1, R13218 += 1, R80 += 1 };
  s3 -> s1 [71, 65535] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s4 -> s1 [0, 69] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13356 += 1 };
  s4 -> s7 [0, 65535] { R13356 += 1, R13280 += 1 };
  s4 -> s4 [0, 65535] { R13356 += 1, R13280 += 1, R13218 += 1, R80 += 1 };
  s4 -> s1 [71, 65535] { R13356 += 1, R13280 += 1, R13218 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13356 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R13356 += 1 };
  s7 -> s7 [0, 65535] { R13356 += 1, R13280 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R13357 += 1, R13358 += 1 };
  s0 -> s2 [0, 65535] { R13358 += 1, R13281 += 1, R13282 += 1 };
  s0 -> s3 [0, 65535] { R13358 += 1, R13282 += 1, R13220 += 1, R83 += 1, R84 += 1 };
  s0 -> s4 [0, 65535] { R13358 += 1, R13282 += 1, R13219 += 1, R13220 += 1 };
  s0 -> s1 [71, 65535] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s1 -> s1 [0, 65535] { R13358 += 1, R13282 += 1, R13220 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s6 [0, 65535] { R13358 += 1 };
  s1 -> s7 [0, 65535] { R13358 += 1, R13282 += 1 };
  s1 -> s1 [71, 65535] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R13358 += 1, R13281 += 1, R13282 += 1 };
  s2 -> s3 [0, 65535] { R13358 += 1, R13282 += 1, R13220 += 1, R83 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R13358 += 1, R13282 += 1, R13219 += 1, R13220 += 1 };
  s2 -> s1 [71, 65535] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R13358 += 1 };
  s3 -> s3 [0, 65535] { R13358 += 1, R13282 += 1, R13220 += 1, R83 += 1, R84 += 1 };
  s3 -> s7 [0, 65535] { R13358 += 1, R13282 += 1 };
  s3 -> s1 [71, 65535] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R13358 += 1 };
  s4 -> s3 [0, 65535] { R13358 += 1, R13282 += 1, R13220 += 1, R83 += 1, R84 += 1 };
  s4 -> s4 [0, 65535] { R13358 += 1, R13282 += 1, R13219 += 1, R13220 += 1 };
  s4 -> s1 [71, 65535] { R13358 += 1, R13282 += 1, R13220 += 1, R84 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R13358 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R13358 += 1 };
  s7 -> s7 [0, 65535] { R13358 += 1, R13282 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s1 [0, 65535] { R13360 += 1, R13284 += 1, R13222 += 1 };
  s0 -> s0 [0, 65535] { R13359 += 1, R13360 += 1 };
  s0 -> s2 [0, 65535] { R13360 += 1, R13284 += 1, R13221 += 1, R13222 += 1 };
  s0 -> s3 [0, 65535] { R13360 += 1, R13283 += 1, R13284 += 1 };
  s1 -> s1 [0, 65535] { R13360 += 1, R13284 += 1, R13222 += 1 };
  s1 -> s6 [0, 65535] { R13360 += 1, R13284 += 1 };
  s1 -> s5 [0, 65535] { R13360 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 65535] { R13360 += 1, R13284 += 1, R13222 += 1 };
  s2 -> s5 [0, 65535] { R13360 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13360 += 1, R13284 += 1, R13221 += 1, R13222 += 1 };
  s3 -> s1 [0, 65535] { R13360 += 1, R13284 += 1, R13222 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13360 += 1, R13284 += 1, R13221 += 1, R13222 += 1 };
  s3 -> s3 [0, 65535] { R13360 += 1, R13283 += 1, R13284 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13360 += 1 };
  s5 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13360 += 1, R13284 += 1 };
  s6 -> s5 [0, 65535] { R13360 += 1 };
  s6 -> s4 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R13362 += 1, R13286 += 1, R13224 += 1, R13198 += 1 };
  s0 -> s2 [0, 65535] { R13362 += 1, R13286 += 1, R13223 += 1, R13224 += 1 };
  s0 -> s1 [0, 65535] { R13362 += 1, R13286 += 1, R13224 += 1 };
  s0 -> s3 [0, 65535] { R13362 += 1, R13285 += 1, R13286 += 1 };
  s0 -> s0 [0, 65535] { R13361 += 1, R13362 += 1 };
  s0 -> s1 [73, 65535] { R13362 += 1, R13286 += 1, R13224 += 1, R13198 += 1 };
  s1 -> s1 [0, 70] { R13362 += 1, R13286 += 1, R13224 += 1, R13198 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s1 [0, 65535] { R13362 += 1, R13286 += 1, R13224 += 1 };
  s1 -> s6 [0, 65535] { R13362 += 1, R13286 += 1 };
  s1 -> s5 [0, 65535] { R13362 += 1 };
  s1 -> s1 [73, 65535] { R13362 += 1, R13286 += 1, R13224 += 1, R13198 += 1 };
  s2 -> s1 [0, 70] { R13362 += 1, R13286 += 1, R13224 += 1, R13198 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R13362 += 1, R13286 += 1, R13223 += 1, R13224 += 1 };
  s2 -> s1 [0, 65535] { R13362 += 1, R13286 += 1, R13224 += 1 };
  s2 -> s5 [0, 65535] { R13362 += 1 };
  s2 -> s1 [73, 65535] { R13362 += 1, R13286 += 1, R13224 += 1, R13198 += 1 };
  s3 -> s1 [0, 70] { R13362 += 1, R13286 += 1, R13224 += 1, R13198 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s2 [0, 65535] { R13362 += 1, R13286 += 1, R13223 += 1, R13224 += 1 };
  s3 -> s1 [0, 65535] { R13362 += 1, R13286 += 1, R13224 += 1 };
  s3 -> s3 [0, 65535] { R13362 += 1, R13285 += 1, R13286 += 1 };
  s3 -> s1 [73, 65535] { R13362 += 1, R13286 += 1, R13224 += 1, R13198 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13362 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13362 += 1, R13286 += 1 };
  s6 -> s5 [0, 65535] { R13362 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R13364 += 1, R13288 += 1, R13225 += 1, R13226 += 1 };
  s0 -> s2 [0, 65535] { R13364 += 1, R13287 += 1, R13288 += 1 };
  s0 -> s3 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1, R13203 += 1, R13204 += 1 };
  s0 -> s4 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1, R13202 += 1, R13203 += 1 };
  s0 -> s0 [0, 65535] { R13363 += 1, R13364 += 1 };
  s1 -> s1 [0, 65535] { R13364 += 1, R13288 += 1, R13225 += 1, R13226 += 1 };
  s1 -> s3 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1, R13203 += 1, R13204 += 1 };
  s1 -> s4 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1, R13202 += 1, R13203 += 1 };
  s1 -> s6 [0, 65535] { R13364 += 1 };
  s1 -> s7 [0, 65535];
  s2 -> s1 [0, 65535] { R13364 += 1, R13288 += 1, R13225 += 1, R13226 += 1 };
  s2 -> s2 [0, 65535] { R13364 += 1, R13287 += 1, R13288 += 1 };
  s2 -> s3 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1, R13203 += 1, R13204 += 1 };
  s2 -> s4 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1, R13202 += 1, R13203 += 1 };
  s2 -> s7 [0, 65535];
  s3 -> s5 [0, 65535] { R13364 += 1, R13288 += 1 };
  s3 -> s8 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1 };
  s3 -> s3 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1, R13203 += 1, R13204 += 1 };
  s3 -> s6 [0, 65535] { R13364 += 1 };
  s3 -> s7 [0, 65535];
  s4 -> s5 [0, 65535] { R13364 += 1, R13288 += 1 };
  s4 -> s3 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1, R13203 += 1, R13204 += 1 };
  s4 -> s4 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1, R13202 += 1, R13203 += 1 };
  s4 -> s6 [0, 65535] { R13364 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R13364 += 1, R13288 += 1 };
  s5 -> s6 [0, 65535] { R13364 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R13364 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s5 [0, 65535] { R13364 += 1, R13288 += 1 };
  s8 -> s8 [0, 65535] { R13364 += 1, R13288 += 1, R13226 += 1 };
  s8 -> s6 [0, 65535] { R13364 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 69] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s0 -> s2 [0, 65535] { R13366 += 1, R13289 += 1, R13290 += 1 };
  s0 -> s3 [0, 65535] { R13366 += 1, R13290 += 1, R13227 += 1, R13228 += 1 };
  s0 -> s4 [0, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13207 += 1, R13208 += 1 };
  s0 -> s0 [0, 65535] { R13365 += 1, R13366 += 1 };
  s0 -> s5 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s0 -> s6 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s0 -> s1 [74, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s1 -> s1 [0, 69] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s8 [0, 65535] { R13366 += 1 };
  s1 -> s1 [0, 65535] { R13366 += 1, R13290 += 1, R13228 += 1 };
  s1 -> s9 [0, 65535] { R13366 += 1, R13290 += 1 };
  s1 -> s5 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s1 -> s6 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s1 -> s1 [74, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s2 -> s1 [0, 69] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s2 [0, 65535] { R13366 += 1, R13289 += 1, R13290 += 1 };
  s2 -> s3 [0, 65535] { R13366 += 1, R13290 += 1, R13227 += 1, R13228 += 1 };
  s2 -> s4 [0, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13207 += 1, R13208 += 1 };
  s2 -> s5 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s2 -> s6 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s2 -> s1 [74, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s3 -> s1 [0, 69] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s8 [0, 65535] { R13366 += 1 };
  s3 -> s3 [0, 65535] { R13366 += 1, R13290 += 1, R13227 += 1, R13228 += 1 };
  s3 -> s4 [0, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13207 += 1, R13208 += 1 };
  s3 -> s5 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s3 -> s6 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s3 -> s1 [74, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s4 -> s1 [0, 69] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s8 [0, 65535] { R13366 += 1 };
  s4 -> s9 [0, 65535] { R13366 += 1, R13290 += 1 };
  s4 -> s4 [0, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13207 += 1, R13208 += 1 };
  s4 -> s5 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s4 -> s6 [70, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s4 -> s1 [74, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s5 -> s5 [0, 70] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R13366 += 1, R13290 += 1, R13228 += 1 };
  s5 -> s8 [0, 65535] { R13366 += 1 };
  s5 -> s9 [0, 65535] { R13366 += 1, R13290 += 1 };
  s5 -> s5 [74, 65535] { R13366 += 1, R13290 += 1, R13228 += 1, R13208 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R13366 += 1 };
  s6 -> s9 [0, 65535] { R13366 += 1, R13290 += 1 };
  s6 -> s6 [0, 65535] { R13366 += 1, R13290 += 1, R13228 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R13366 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R13366 += 1 };
  s9 -> s9 [0, 65535] { R13366 += 1, R13290 += 1 };
  accepting s3, s4, s8, s5, s2, s9, s6, s1, s7, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s0 [0, 65535] { R13367 += 1, R13368 += 1 };
  s0 -> s1 [0, 65535] { R13368 += 1, R13292 += 1, R13247 += 1, R13248 += 1 };
  s0 -> s2 [0, 65535] { R13368 += 1, R13292 += 1, R13248 += 1, R21 += 1 };
  s0 -> s3 [0, 65535] { R13368 += 1, R13291 += 1, R13292 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s6 [0, 65535] { R13368 += 1 };
  s1 -> s1 [0, 65535] { R13368 += 1, R13292 += 1, R13247 += 1, R13248 += 1 };
  s1 -> s2 [0, 65535] { R13368 += 1, R13292 += 1, R13248 += 1, R21 += 1 };
  s2 -> s5 [0, 65535] { R13368 += 1, R13292 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R13368 += 1 };
  s2 -> s2 [0, 65535] { R13368 += 1, R13292 += 1, R13248 += 1, R21 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s1 [0, 65535] { R13368 += 1, R13292 += 1, R13247 += 1, R13248 += 1 };
  s3 -> s2 [0, 65535] { R13368 += 1, R13292 += 1, R13248 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R13368 += 1, R13291 += 1, R13292 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R13368 += 1, R13292 += 1 };
  s5 -> s4 [0, 65535];
  s5 -> s6 [0, 65535] { R13368 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R13368 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s0 -> s2 [0, 65535] { R13370 += 1, R13293 += 1, R13294 += 1 };
  s0 -> s0 [0, 65535] { R13369 += 1, R13370 += 1 };
  s0 -> s3 [0, 65535] { R13370 += 1, R13294 += 1, R13249 += 1, R13250 += 1 };
  s0 -> s4 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s0 -> s5 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s0 -> s6 [70, 70] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s0 -> s1 [71, 65535] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s1 -> s1 [0, 65] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s1 -> s4 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s1 -> s5 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s1 -> s6 [70, 70] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s1 -> s1 [71, 65535] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s2 -> s1 [0, 65] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s2 -> s2 [0, 65535] { R13370 += 1, R13293 += 1, R13294 += 1 };
  s2 -> s3 [0, 65535] { R13370 += 1, R13294 += 1, R13249 += 1, R13250 += 1 };
  s2 -> s4 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s2 -> s5 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s2 -> s6 [70, 70] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s2 -> s1 [71, 65535] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s3 -> s1 [0, 65] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s3 -> s3 [0, 65535] { R13370 += 1, R13294 += 1, R13249 += 1, R13250 += 1 };
  s3 -> s4 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s3 -> s5 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s3 -> s6 [70, 70] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s3 -> s1 [71, 65535] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s5 -> s5 [0, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s5 -> s10 [70, 70] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s5 -> s5 [71, 65535] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s6 -> s6 [0, 65] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s6 -> s7 [0, 65535] { R13370 += 1 };
  s6 -> s6 [0, 65535] { R13370 += 1, R13294 += 1 };
  s6 -> s8 [0, 65535];
  s6 -> s9 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s6 -> s10 [66, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s6 -> s6 [70, 65535] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s7 -> s7 [0, 65535] { R13370 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  s9 -> s9 [0, 65535] { R13370 += 1, R13294 += 1 };
  s9 -> s7 [0, 65535] { R13370 += 1 };
  s9 -> s8 [0, 65535];
  s10 -> s10 [0, 66] { R13370 += 1, R13294 += 1, R13250 += 1 };
  s10 -> s7 [0, 65535] { R13370 += 1 };
  s10 -> s10 [0, 65535] { R13370 += 1, R13294 += 1 };
  s10 -> s8 [0, 65535];
  s10 -> s10 [70, 65535] { R13370 += 1, R13294 += 1, R13250 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s0 -> s0 [0, 65535] { R13371 += 1, R13372 += 1 };
  s0 -> s2 [0, 65535] { R13372 += 1, R13295 += 1, R13296 += 1 };
  s0 -> s3 [0, 65535] { R13372 += 1, R13296 += 1, R13251 += 1, R13252 += 1 };
  s0 -> s4 [66, 66] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s1 -> s6 [0, 65535] { R13372 += 1 };
  s1 -> s1 [0, 65535] { R13372 += 1, R13296 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [66, 66] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s2 -> s2 [0, 65535] { R13372 += 1, R13295 += 1, R13296 += 1 };
  s2 -> s3 [0, 65535] { R13372 += 1, R13296 += 1, R13251 += 1, R13252 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [66, 66] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s3 -> s6 [0, 65535] { R13372 += 1 };
  s3 -> s3 [0, 65535] { R13372 += 1, R13296 += 1, R13251 += 1, R13252 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s4 [66, 66] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s4 -> s6 [0, 65535] { R13372 += 1 };
  s4 -> s4 [0, 65535] { R13372 += 1, R13296 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R13372 += 1 };
  s5 -> s7 [0, 65535] { R13372 += 1, R13296 += 1 };
  s5 -> s5 [0, 65535] { R13372 += 1, R13296 += 1, R13252 += 1, R77 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R13372 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s6 [0, 65535] { R13372 += 1 };
  s7 -> s7 [0, 65535] { R13372 += 1, R13296 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R13374 += 1, R13298 += 1, R13253 += 1, R13254 += 1 };
  s0 -> s0 [0, 65535] { R13373 += 1, R13374 += 1 };
  s0 -> s3 [0, 65535] { R13374 += 1, R13297 += 1, R13298 += 1 };
  s0 -> s4 [66, 66] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s1 -> s1 [0, 65535] { R13374 += 1, R13298 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13374 += 1 };
  s1 -> s4 [66, 66] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R13374 += 1, R13298 += 1, R13253 += 1, R13254 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s7 [0, 65535] { R13374 += 1 };
  s2 -> s4 [66, 66] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s3 -> s2 [0, 65535] { R13374 += 1, R13298 += 1, R13253 += 1, R13254 += 1 };
  s3 -> s3 [0, 65535] { R13374 += 1, R13297 += 1, R13298 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [66, 66] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s4 -> s4 [0, 65535] { R13374 += 1, R13298 += 1, R13254 += 1, R79 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R13374 += 1, R13298 += 1 };
  s4 -> s7 [0, 65535] { R13374 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13374 += 1 };
  s5 -> s5 [0, 65535] { R13374 += 1, R13298 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13374 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13374 += 1, R13298 += 1 };
  s8 -> s7 [0, 65535] { R13374 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R13376 += 1, R13299 += 1, R13300 += 1 };
  s0 -> s0 [0, 65535] { R13375 += 1, R13376 += 1 };
  s0 -> s3 [0, 65535] { R13376 += 1, R13300 += 1, R13255 += 1, R13256 += 1 };
  s0 -> s4 [66, 66] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535] { R13376 += 1, R13300 += 1 };
  s1 -> s6 [0, 65535] { R13376 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s2 -> s2 [0, 65535] { R13376 += 1, R13299 += 1, R13300 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s3 [0, 65535] { R13376 += 1, R13300 += 1, R13255 += 1, R13256 += 1 };
  s2 -> s4 [66, 66] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535] { R13376 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R13376 += 1, R13300 += 1, R13255 += 1, R13256 += 1 };
  s3 -> s4 [66, 66] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s4 -> s8 [0, 65535] { R13376 += 1, R13300 += 1 };
  s4 -> s4 [0, 65535] { R13376 += 1, R13300 += 1, R13256 += 1, R81 += 1, R82 += 1 };
  s4 -> s6 [0, 65535] { R13376 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s6 [0, 65535] { R13376 += 1 };
  s5 -> s5 [0, 65535] { R13376 += 1, R13300 += 1 };
  s5 -> s7 [0, 65535];
  s6 -> s6 [0, 65535] { R13376 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R13376 += 1, R13300 += 1 };
  s8 -> s6 [0, 65535] { R13376 += 1 };
  s8 -> s7 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s2 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s0 [0, 65535] { R13377 += 1, R13378 += 1 };
  s0 -> s3 [0, 65535] { R13378 += 1, R13301 += 1, R13302 += 1 };
  s0 -> s4 [0, 65535] { R13378 += 1, R13302 += 1, R13257 += 1, R13258 += 1 };
  s0 -> s5 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s6 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s7 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s8 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s1 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s2 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s1 -> s1 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s13 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s1 -> s9 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s1 -> s6 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s14 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s1 -> s7 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s1 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s13 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s2 -> s1 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s2 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s2 -> s5 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s2 -> s6 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s7 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s8 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s2 -> s1 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s2 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s1 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s2 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s3 [0, 65535] { R13378 += 1, R13301 += 1, R13302 += 1 };
  s3 -> s4 [0, 65535] { R13378 += 1, R13302 += 1, R13257 += 1, R13258 += 1 };
  s3 -> s5 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s6 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s7 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s8 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s1 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s2 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s1 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s2 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s4 [0, 65535] { R13378 += 1, R13302 += 1, R13257 += 1, R13258 += 1 };
  s4 -> s5 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s6 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s7 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s8 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s1 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s2 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s5 -> s5 [0, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13189 += 1, R13190 += 1 };
  s5 -> s7 [0, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s7 -> s9 [0, 65535] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s7 -> s7 [0, 65535] { R13378 += 1, R13302 += 1, R13258 += 1, R13190 += 1, R13191 += 1 };
  s9 -> s9 [0, 65535] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s9 -> s10 [0, 65535] { R13378 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [0, 65535] { R13378 += 1, R13302 += 1 };
  s10 -> s10 [0, 65535] { R13378 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s10 [0, 65535] { R13378 += 1 };
  s12 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R13378 += 1, R13302 += 1 };
  s13 -> s13 [0, 65] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s13 -> s10 [0, 65535] { R13378 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R13378 += 1, R13302 += 1 };
  s13 -> s9 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s13 -> s14 [66, 66] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s13 -> s13 [67, 65535] { R13378 += 1, R13302 += 1, R13258 += 1 };
  s14 -> s10 [0, 65535] { R13378 += 1 };
  s14 -> s14 [0, 65535] { R13378 += 1, R13302 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s0 -> s2 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s3 [0, 65535] { R13380 += 1, R13304 += 1, R13259 += 1, R13260 += 1 };
  s0 -> s0 [0, 65535] { R13379 += 1, R13380 += 1 };
  s0 -> s4 [0, 65535] { R13380 += 1, R13303 += 1, R13304 += 1 };
  s0 -> s5 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s0 -> s6 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s7 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s8 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s0 -> s1 [67, 70] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s0 -> s2 [67, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s0 -> s9 [73, 73] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s0 -> s1 [74, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s1 -> s1 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s1 -> s5 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s1 -> s8 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s1 -> s1 [67, 70] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s1 -> s9 [73, 73] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s1 -> s1 [74, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s2 -> s1 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s2 -> s2 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s2 -> s5 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s2 -> s6 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s2 -> s7 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s2 -> s8 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s2 -> s1 [67, 70] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s2 -> s2 [67, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s2 -> s9 [73, 73] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s2 -> s1 [74, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s3 -> s1 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s3 -> s2 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s3 [0, 65535] { R13380 += 1, R13304 += 1, R13259 += 1, R13260 += 1 };
  s3 -> s5 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s3 -> s6 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s7 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s8 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s3 -> s1 [67, 70] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s3 -> s2 [67, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s3 -> s9 [73, 73] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s3 -> s1 [74, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s4 -> s1 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s4 -> s2 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s3 [0, 65535] { R13380 += 1, R13304 += 1, R13259 += 1, R13260 += 1 };
  s4 -> s4 [0, 65535] { R13380 += 1, R13303 += 1, R13304 += 1 };
  s4 -> s5 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s4 -> s6 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s7 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s8 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s4 -> s1 [67, 70] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s4 -> s2 [67, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s4 -> s9 [73, 73] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s4 -> s1 [74, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s5 -> s5 [0, 70] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s5 -> s13 [73, 73] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s5 -> s5 [74, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s6 -> s5 [0, 70] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s6 -> s6 [0, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13195 += 1, R13196 += 1 };
  s6 -> s13 [73, 73] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s6 -> s5 [74, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s9 -> s9 [0, 65] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s9 -> s9 [0, 65535] { R13380 += 1, R13304 += 1 };
  s9 -> s10 [0, 65535] { R13380 += 1 };
  s9 -> s11 [0, 65535];
  s9 -> s12 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1 };
  s9 -> s13 [66, 66] { R13380 += 1, R13304 += 1, R13260 += 1 };
  s9 -> s9 [67, 70] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s9 -> s9 [67, 65535] { R13380 += 1, R13304 += 1, R13260 += 1 };
  s9 -> s9 [73, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s10 -> s10 [0, 65535] { R13380 += 1 };
  s10 -> s11 [0, 65535];
  s11 -> s11 [0, 65535];
  s12 -> s12 [0, 65535] { R13380 += 1, R13304 += 1 };
  s12 -> s10 [0, 65535] { R13380 += 1 };
  s12 -> s11 [0, 65535];
  s13 -> s13 [0, 70] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s13 -> s14 [0, 65535] { R13380 += 1, R13304 += 1 };
  s13 -> s10 [0, 65535] { R13380 += 1 };
  s13 -> s11 [0, 65535];
  s13 -> s13 [0, 65535] { R13380 += 1, R13304 += 1, R13260 += 1 };
  s13 -> s13 [73, 65535] { R13380 += 1, R13304 += 1, R13260 += 1, R13196 += 1 };
  s14 -> s14 [0, 65535] { R13380 += 1, R13304 += 1 };
  s14 -> s10 [0, 65535] { R13380 += 1 };
  s14 -> s11 [0, 65535];
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s0 -> s2 [0, 65535] { R13382 += 1, R13305 += 1, R13306 += 1 };
  s0 -> s3 [0, 65535] { R13382 += 1, R13306 += 1, R13261 += 1, R13262 += 1 };
  s0 -> s0 [0, 65535] { R13381 += 1, R13382 += 1 };
  s0 -> s4 [66, 66] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s0 -> s5 [66, 66] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s0 -> s1 [67, 65535] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s1 [0, 65] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13382 += 1 };
  s1 -> s1 [0, 65535] { R13382 += 1, R13306 += 1 };
  s1 -> s4 [66, 66] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s5 [66, 66] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s1 -> s1 [67, 65535] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s1 [0, 65] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s2 [0, 65535] { R13382 += 1, R13305 += 1, R13306 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R13382 += 1, R13306 += 1, R13261 += 1, R13262 += 1 };
  s2 -> s4 [66, 66] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s5 [66, 66] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s2 -> s1 [67, 65535] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s1 [0, 65] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R13382 += 1 };
  s3 -> s3 [0, 65535] { R13382 += 1, R13306 += 1, R13261 += 1, R13262 += 1 };
  s3 -> s4 [66, 66] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s5 [66, 66] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s3 -> s1 [67, 65535] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R13382 += 1 };
  s4 -> s4 [0, 65535] { R13382 += 1, R13306 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R13382 += 1 };
  s5 -> s8 [0, 65535] { R13382 += 1, R13306 += 1 };
  s5 -> s5 [0, 65535] { R13382 += 1, R13306 += 1, R13262 += 1, R13199 += 1, R13200 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13382 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R13382 += 1 };
  s8 -> s8 [0, 65535] { R13382 += 1, R13306 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s0 -> s2 [0, 65535] { R13384 += 1, R13307 += 1, R13308 += 1 };
  s0 -> s3 [0, 65535] { R13384 += 1, R13308 += 1, R13263 += 1, R13264 += 1 };
  s0 -> s0 [0, 65535] { R13383 += 1, R13384 += 1 };
  s0 -> s4 [66, 66] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s0 -> s5 [66, 66] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s0 -> s1 [67, 65535] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s1 -> s1 [0, 65] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R13384 += 1 };
  s1 -> s1 [0, 65535] { R13384 += 1, R13308 += 1 };
  s1 -> s4 [66, 66] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s1 -> s5 [66, 66] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s1 -> s1 [67, 65535] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s2 -> s1 [0, 65] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s2 -> s2 [0, 65535] { R13384 += 1, R13307 += 1, R13308 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [0, 65535] { R13384 += 1, R13308 += 1, R13263 += 1, R13264 += 1 };
  s2 -> s4 [66, 66] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s2 -> s5 [66, 66] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s2 -> s1 [67, 65535] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s3 -> s1 [0, 65] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R13384 += 1, R13308 += 1, R13263 += 1, R13264 += 1 };
  s3 -> s7 [0, 65535] { R13384 += 1 };
  s3 -> s4 [66, 66] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s3 -> s5 [66, 66] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s3 -> s1 [67, 65535] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s4 -> s4 [0, 65535] { R13384 += 1, R13308 += 1, R13264 += 1, R13205 += 1, R13206 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s8 [0, 65535] { R13384 += 1, R13308 += 1 };
  s4 -> s7 [0, 65535] { R13384 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R13384 += 1, R13308 += 1 };
  s5 -> s7 [0, 65535] { R13384 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R13384 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s8 [0, 65535] { R13384 += 1, R13308 += 1 };
  s8 -> s7 [0, 65535] { R13384 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R2 = R13308 && R3 - R13384 = 1 && R23 - R13308 = -1 && R24 = R13308 && R25 - R13308 = -1 && R26 = R13308 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R13384 && R32 - R13384 = 1 && R33 = R13384 && R34 - R13384 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R13198 + -1*R13196 - R64 = 0 && R63 + R13197 + R13195 = 0 && R13249 = 0 && R13250 = 0 && R13257 = 0 && R13258 = 0 && R13259 = 0 && R13260 = 0 && R13265 = 0 && R13266 = R13308 && R13267 = 0 && R13268 = R13308 && R13269 = 0 && R13270 = R13308 && R13271 = 0 && R13272 = R13308 && R13273 = 0 && R13274 = R13308 && R13275 = 0 && R13276 = R13308 && R13277 = 0 && R13278 = R13308 && R13279 = 0 && R13280 = R13308 && R13281 = 0 && R13282 = R13308 && R13283 = 0 && R13284 = R13308 && R13285 = 0 && R13286 = R13308 && R13287 = 0 && R13288 = R13308 && R13289 = 0 && R13290 = R13308 && R13291 = 0 && R13292 = R13308 && R13293 = 0 && R13294 = R13308 && R13295 = 0 && R13296 = R13308 && R13297 = 0 && R13298 = R13308 && R13299 = 0 && R13300 = R13308 && R13301 = 0 && R13302 = R13308 && R13303 = 0 && R13304 = R13308 && R13305 = 0 && R13306 = R13308 && R13307 = 0 && R13309 = 0 && R13310 = R13384 && R13311 = 0 && R13312 = R13384 && R13313 = 0 && R13314 = R13384 && R13315 = 0 && R13316 = R13384 && R13317 = 0 && R13318 = R13384 && R13319 = 0 && R13320 = R13384 && R13321 = 0 && R13322 = R13384 && R13323 = 0 && R13324 = R13384 && R13325 = 0 && R13326 = R13384 && R13327 = 0 && R13328 = R13384 && R13329 = 0 && R13330 = R13384 && R13331 = 0 && R13332 = R13384 && R13333 = 0 && R13334 = R13384 && R13335 = 0 && R13336 = R13384 && R13337 = 0 && R13338 = R13384 && R13339 = 0 && R13340 = R13384 && R13341 = 0 && R13342 = R13384 && R13343 = 0 && R13344 = R13384 && R13345 = 0 && R13346 = R13384 && R13347 = 0 && R13348 = R13384 && R13349 = 0 && R13350 = R13384 && R13351 = 0 && R13352 = R13384 && R13353 = 0 && R13354 = R13384 && R13355 = 0 && R13356 = R13384 && R13357 = 0 && R13358 = R13384 && R13359 = 0 && R13360 = R13384 && R13361 = 0 && R13362 = R13384 && R13363 = 0 && R13364 = R13384 && R13365 = 0 && R13366 = R13384 && R13367 = 0 && R13368 = R13384 && R13369 = 0 && R13370 = R13384 && R13371 = 0 && R13372 = R13384 && R13373 = 0 && R13374 = R13384 && R13375 = 0 && R13376 = R13384 && R13377 = 0 && R13378 = R13384 && R13379 = 0 && R13380 = R13384 && R13381 = 0 && R13382 = R13384 && R13383 = 0 && -1 < R1 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R13198 + -1*R13196 - R64 < 1 && 0 < R13308 && -1 < R13384 && (R1 != 0 || R20 = 0 || (R13209 = 0 && R13210 = 0)) && (R1 != 0 || R20 = 0 || (R13211 = 0 && R13212 = 0)) && (R1 != 0 || R20 = 0 || (R13213 = 0 && R13214 = 0)) && (R1 != 0 || R20 = 0 || (R13215 = 0 && R13216 = 0)) && (R1 != 0 || R20 = 0 || (R13217 = 0 && R13218 = 0)) && (R1 != 0 || R20 = 0 || (R13219 = 0 && R13220 = 0)) && (R1 != 0 || R20 = 0 || (R13221 = 0 && R13222 = 0)) && (R1 != 0 || R20 = 0 || (R13223 = 0 && R13224 = 0)) && (R1 != 0 || R20 = 0 || (R13225 = 0 && R13226 = 0)) && (R1 != 0 || R20 = 0 || (R13227 = 0 && R13228 = 0)) && (R59 + R13194 + R13191 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R13198 + -1*R13196 - R64 = 0 || R64 + R13198 + R13196 < 1) && (R53 + R83 + R81 = 0 || R64 + R13198 + R13196 < 1))) && (R59 + R13194 + R13191 != 0 || ((R57 + R13192 + R13189 != 0 || R58 + R13193 + R13190 + -1*R13198 + -1*R13196 - R64 = 0 || R64 + R13198 + R13196 < 1) && (R57 + R13192 + R13189 = 0 || R64 + R13198 + R13196 < 1))) && (R13209 != 0 || R1 = R13210 || R1 < 1) && (R13211 != 0 || R1 = R13212 || R1 < 1) && (R13213 != 0 || R1 = R13214 || R1 < 1) && (R13215 != 0 || R1 = R13216 || R1 < 1) && (R13217 != 0 || R1 = R13218 || R1 < 1) && (R13219 != 0 || R1 = R13220 || R1 < 1) && (R13221 != 0 || R1 = R13222 || R1 < 1) && (R13223 != 0 || R1 = R13224 || R1 < 1) && (R13225 != 0 || R1 = R13226 || R1 < 1) && (R13227 != 0 || R1 = R13228 || R1 < 1) && (R21 = 0 || (R13247 = 0 && R13248 = 0)) && (R21 = 0 || (R13251 = 0 && R13252 = 0)) && (R21 = 0 || (R13253 = 0 && R13254 = 0)) && (R21 = 0 || (R13255 = 0 && R13256 = 0)) && (R21 = 0 || (R13261 = 0 && R13262 = 0)) && (R21 = 0 || (R13263 = 0 && R13264 = 0)) && (R22 = 0 || (R13229 = 0 && R13230 = 0)) && (R22 = 0 || (R13231 = 0 && R13232 = 0)) && (R22 = 0 || (R13233 = 0 && R13234 = 0)) && (R22 = 0 || (R13235 = 0 && R13236 = 0)) && (R22 = 0 || (R13237 = 0 && R13238 = 0)) && (R22 = 0 || (R13239 = 0 && R13240 = 0)) && (R22 = 0 || (R13241 = 0 && R13242 = 0)) && (R22 = 0 || (R13243 = 0 && R13244 = 0)) && (R22 = 0 || (R13245 = 0 && R13246 = 0)) && (R59 + R13194 + R13191 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R13198 + -1*R13196 - R64 = 0)) && (R59 + R13194 + R13191 = 0 || (R57 + R13192 + R13189 = 0 && R58 + R13193 + R13190 + -1*R13198 + -1*R13196 - R64 = 0)) && (R69 + R13204 + R13201 = 0 || (R67 + R13202 + R13199 = 0 && R68 + R13203 + R13200 = 0)) && (R69 + R13204 + R13201 = 0 || (R73 + R13207 + R13205 = 0 && R74 + R13208 + R13206 = 0)) && (R13209 = 0 || R1 < 1) && (R13211 = 0 || R1 < 1) && (R13213 = 0 || R1 < 1) && (R13215 = 0 || R1 < 1) && (R13217 = 0 || R1 < 1) && (R13219 = 0 || R1 < 1) && (R13221 = 0 || R1 < 1) && (R13223 = 0 || R1 < 1) && (R13225 = 0 || R1 < 1) && (R13227 = 0 || R1 < 1);
// End of Parikh automata intersection problem
