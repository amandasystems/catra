// Parikh automata intersection problem, generated by OSTRICH+
counter int R1, R11, R13189, R13190, R13191, R13192, R13193, R13194, R14, R15377, R15378, R15379, R15380, R15381, R15382, R15383, R15384, R15385, R15386, R15747, R15748, R15749, R15750, R15751, R15752, R15753, R15754, R15755, R15756, R15757, R15758, R15759, R15760, R15761, R15762, R15763, R15764, R15765, R15766, R15767, R15768, R15769, R15770, R15771, R15772, R15773, R15774, R15775, R15776, R15777, R15778, R15779, R15780, R15781, R15782, R15783, R15784, R15785, R15786, R15787, R15788, R15789, R15790, R15791, R15792, R15793, R15794, R15795, R15796, R15797, R15798, R15799, R15800, R15801, R15802, R15803, R15804, R15805, R15806, R15807, R15808, R15809, R15810, R15811, R15812, R15813, R15814, R15815, R15816, R15817, R15818, R15819, R15820, R15821, R15822, R15823, R15824, R15825, R15826, R15827, R15828, R15829, R15830, R15831, R15832, R15833, R15834, R15835, R15836, R15837, R15838, R15839, R15840, R15841, R15842, R15843, R15844, R15845, R15846, R15847, R15848, R15849, R15850, R15851, R15852, R15853, R15854, R15855, R15856, R15857, R15858, R15859, R15860, R15861, R15862, R15863, R15864, R15865, R15866, R15867, R15868, R15869, R15870, R15871, R15872, R15873, R15874, R15875, R15876, R15877, R15878, R15879, R15880, R15881, R15882, R15883, R15884, R15885, R15886, R15887, R15888, R15889, R15890, R15891, R15892, R15893, R15894, R15895, R15896, R15897, R15898, R15899, R15900, R15901, R15902, R15903, R15904, R15905, R15906, R15907, R15908, R15909, R15910, R15911, R15912, R15913, R15914, R15915, R15916, R15917, R15918, R15919, R15920, R15921, R15922, R15923, R15924, R15925, R15926, R17, R2, R20, R21, R22, R23, R24, R25, R26, R27, R28, R29, R3, R30, R31, R32, R33, R34, R35, R36, R37, R38, R4, R49, R5, R51, R53, R54, R57, R58, R59, R6, R63, R64, R67, R68, R69, R7, R73, R74, R77, R78, R79, R80, R81, R82, R83, R84;
synchronised {  // Automata constraining P9
automaton P9_0 {
  init s0;
  s0 -> s1 [98, 98];
  accepting s1;
};
};
synchronised {  // Automata constraining P51
automaton P51_0 {
  init s0;
  s0 -> s1 [102, 102];
  accepting s1;
};
};
synchronised {  // Automata constraining value2
automaton value2_0 {
  init s0;
  s0 -> s0 [0, 43];
  s0 -> s0 [45, 65535];
  accepting s0;
};
automaton value2_1 {
  init s0;
  s0 -> s0 [0, 65535] { R3 += 1 };
  accepting s0;
};
automaton value2_2 {
  init s0;
  s0 -> s1 [0, 60];
  s0 -> s0 [0, 65535] { R17 += 1 };
  s0 -> s2 [61, 61];
  s0 -> s1 [62, 65535];
  s1 -> s1 [0, 60];
  s1 -> s2 [61, 61];
  s1 -> s1 [62, 65535];
  s2 -> s2 [0, 65535];
  accepting s0, s1;
};
automaton value2_3 {
  init s0;
  s0 -> s0 [0, 65535] { R31 += 1, R32 += 1 };
  s0 -> s1 [13, 13] { R32 += 1 };
  s1 -> s1 [0, 65535];
  accepting s1;
};
automaton value2_4 {
  init s0;
  s0 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s0 -> s0 [0, 65535] { R33 += 1, R34 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R34 += 1, R6 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_5 {
  init s0;
  s0 -> s1 [0, 8] { R36 += 1 };
  s0 -> s0 [0, 65535] { R35 += 1, R36 += 1 };
  s0 -> s2 [9, 13] { R36 += 1 };
  s0 -> s1 [14, 31] { R36 += 1 };
  s0 -> s2 [32, 32] { R36 += 1 };
  s0 -> s1 [33, 65535] { R36 += 1 };
  s1 -> s1 [0, 65535] { R36 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R36 += 1 };
  s3 -> s3 [0, 65535];
  accepting s0, s1, s3;
};
automaton value2_6 {
  init s0;
  s0 -> s0 [0, 65535] { R37 += 1, R38 += 1 };
  s0 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R38 += 1, R7 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_7 {
  init s0;
  s0 -> s1 [0, 64] { R15852 += 1 };
  s0 -> s0 [0, 65535] { R15851 += 1, R15852 += 1 };
  s0 -> s2 [66, 66] { R15852 += 1 };
  s0 -> s1 [67, 65535] { R15852 += 1 };
  s1 -> s1 [0, 64] { R15852 += 1 };
  s1 -> s2 [66, 66] { R15852 += 1 };
  s1 -> s1 [67, 65535] { R15852 += 1 };
  s2 -> s2 [0, 64] { R15852 += 1 };
  s2 -> s2 [0, 65535];
  s2 -> s2 [66, 65535] { R15852 += 1 };
  accepting s2;
};
automaton value2_8 {
  init s0;
  s0 -> s1 [0, 65535] { R15854 += 1, R2 += 1 };
  s0 -> s0 [0, 65535] { R15853 += 1, R15854 += 1 };
  s1 -> s2 [0, 65535];
  s1 -> s1 [0, 65535] { R15854 += 1, R2 += 1 };
  s2 -> s2 [0, 65535];
  accepting s0, s1, s2;
};
automaton value2_9 {
  init s0;
  s0 -> s1 [0, 65] { R15856 += 1 };
  s0 -> s2 [0, 65535] { R15856 += 1, R14 += 1 };
  s0 -> s0 [0, 65535] { R15855 += 1, R15856 += 1 };
  s0 -> s3 [66, 66] { R15856 += 1 };
  s0 -> s1 [67, 65535] { R15856 += 1 };
  s1 -> s1 [0, 65] { R15856 += 1 };
  s1 -> s1 [0, 65535];
  s1 -> s3 [66, 66] { R15856 += 1 };
  s1 -> s1 [67, 65535] { R15856 += 1 };
  s2 -> s1 [0, 65] { R15856 += 1 };
  s2 -> s2 [0, 65535] { R15856 += 1, R14 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [66, 66] { R15856 += 1 };
  s2 -> s1 [67, 65535] { R15856 += 1 };
  s3 -> s3 [0, 65535] { R15856 += 1 };
  s4 -> s4 [0, 65535];
  accepting s0, s1, s2, s4;
};
automaton value2_10 {
  init s0;
  s0 -> s1 [0, 8] { R15858 += 1, R24 += 1 };
  s0 -> s0 [0, 65535] { R15857 += 1, R15858 += 1 };
  s0 -> s2 [0, 65535] { R15858 += 1, R23 += 1, R24 += 1 };
  s0 -> s3 [9, 13] { R15858 += 1, R24 += 1 };
  s0 -> s1 [14, 31] { R15858 += 1, R24 += 1 };
  s0 -> s3 [32, 32] { R15858 += 1, R24 += 1 };
  s0 -> s1 [33, 65535] { R15858 += 1, R24 += 1 };
  s1 -> s1 [0, 65535] { R15858 += 1, R24 += 1 };
  s1 -> s5 [0, 65535] { R15858 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s1 [0, 8] { R15858 += 1, R24 += 1 };
  s2 -> s2 [0, 65535] { R15858 += 1, R23 += 1, R24 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s3 [9, 13] { R15858 += 1, R24 += 1 };
  s2 -> s1 [14, 31] { R15858 += 1, R24 += 1 };
  s2 -> s3 [32, 32] { R15858 += 1, R24 += 1 };
  s2 -> s1 [33, 65535] { R15858 += 1, R24 += 1 };
  s3 -> s1 [0, 65535] { R15858 += 1, R24 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15858 += 1 };
  s5 -> s4 [0, 65535];
  accepting s4, s5, s2, s1, s0;
};
automaton value2_11 {
  init s0;
  s0 -> s1 [0, 65535] { R15860 += 1, R26 += 1, R4 += 1 };
  s0 -> s0 [0, 65535] { R15859 += 1, R15860 += 1 };
  s0 -> s2 [0, 65535] { R15860 += 1, R25 += 1, R26 += 1 };
  s1 -> s1 [0, 65535] { R15860 += 1, R26 += 1, R4 += 1 };
  s1 -> s4 [0, 65535] { R15860 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15860 += 1, R26 += 1, R4 += 1 };
  s2 -> s2 [0, 65535] { R15860 += 1, R25 += 1, R26 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15860 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_12 {
  init s0;
  s0 -> s1 [0, 8] { R15862 += 1, R28 += 1 };
  s0 -> s0 [0, 65535] { R15861 += 1, R15862 += 1 };
  s0 -> s2 [0, 65535] { R15862 += 1, R27 += 1, R28 += 1 };
  s0 -> s3 [9, 13] { R15862 += 1, R28 += 1 };
  s0 -> s1 [14, 31] { R15862 += 1, R28 += 1 };
  s0 -> s3 [32, 32] { R15862 += 1, R28 += 1 };
  s0 -> s1 [33, 65535] { R15862 += 1, R28 += 1 };
  s1 -> s1 [0, 65535] { R15862 += 1, R28 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R15862 += 1 };
  s2 -> s1 [0, 8] { R15862 += 1, R28 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15862 += 1, R27 += 1, R28 += 1 };
  s2 -> s3 [9, 13] { R15862 += 1, R28 += 1 };
  s2 -> s1 [14, 31] { R15862 += 1, R28 += 1 };
  s2 -> s3 [32, 32] { R15862 += 1, R28 += 1 };
  s2 -> s1 [33, 65535] { R15862 += 1, R28 += 1 };
  s3 -> s1 [0, 65535] { R15862 += 1, R28 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15862 += 1 };
  accepting s4, s5, s2, s1, s0;
};
automaton value2_13 {
  init s0;
  s0 -> s1 [0, 65535] { R15864 += 1, R30 += 1, R5 += 1 };
  s0 -> s2 [0, 65535] { R15864 += 1, R29 += 1, R30 += 1 };
  s0 -> s0 [0, 65535] { R15863 += 1, R15864 += 1 };
  s1 -> s1 [0, 65535] { R15864 += 1, R30 += 1, R5 += 1 };
  s1 -> s4 [0, 65535] { R15864 += 1 };
  s1 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15864 += 1, R30 += 1, R5 += 1 };
  s2 -> s2 [0, 65535] { R15864 += 1, R29 += 1, R30 += 1 };
  s2 -> s3 [0, 65535];
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15864 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_14 {
  init s0;
  s0 -> s1 [0, 65535] { R15866 += 1, R15771 += 1, R15772 += 1 };
  s0 -> s0 [0, 65535] { R15865 += 1, R15866 += 1 };
  s0 -> s2 [0, 65535] { R15866 += 1, R15772 += 1, R22 += 1 };
  s1 -> s1 [0, 65535] { R15866 += 1, R15771 += 1, R15772 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s2 [0, 65535] { R15866 += 1, R15772 += 1, R22 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s4 [0, 65535] { R15866 += 1 };
  s2 -> s2 [0, 65535] { R15866 += 1, R15772 += 1, R22 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15866 += 1 };
  accepting s3, s4, s2, s1, s0;
};
automaton value2_15 {
  init s0;
  s0 -> s1 [0, 65] { R15868 += 1, R15774 += 1 };
  s0 -> s0 [0, 65535] { R15867 += 1, R15868 += 1 };
  s0 -> s2 [0, 65535] { R15868 += 1, R15773 += 1, R15774 += 1 };
  s0 -> s3 [66, 66] { R15868 += 1, R15774 += 1 };
  s0 -> s4 [66, 66] { R15868 += 1, R15774 += 1 };
  s0 -> s1 [71, 65535] { R15868 += 1, R15774 += 1 };
  s1 -> s1 [0, 65] { R15868 += 1, R15774 += 1 };
  s1 -> s1 [0, 65535] { R15868 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R15868 += 1, R15774 += 1 };
  s1 -> s4 [66, 66] { R15868 += 1, R15774 += 1 };
  s1 -> s1 [71, 65535] { R15868 += 1, R15774 += 1 };
  s2 -> s1 [0, 65] { R15868 += 1, R15774 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15868 += 1, R15773 += 1, R15774 += 1 };
  s2 -> s3 [66, 66] { R15868 += 1, R15774 += 1 };
  s2 -> s4 [66, 66] { R15868 += 1, R15774 += 1 };
  s2 -> s1 [71, 65535] { R15868 += 1, R15774 += 1 };
  s3 -> s3 [0, 66] { R15868 += 1, R15774 += 1 };
  s3 -> s3 [0, 65535] { R15868 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [71, 65535] { R15868 += 1, R15774 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15868 += 1 };
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_16 {
  init s0;
  s0 -> s1 [0, 65] { R15870 += 1, R15776 += 1, R49 += 1 };
  s0 -> s2 [0, 65535] { R15870 += 1, R15775 += 1, R15776 += 1 };
  s0 -> s0 [0, 65535] { R15869 += 1, R15870 += 1 };
  s0 -> s3 [66, 66] { R15870 += 1, R15776 += 1, R49 += 1 };
  s0 -> s4 [66, 66] { R15870 += 1, R15776 += 1, R49 += 1 };
  s0 -> s1 [67, 65535] { R15870 += 1, R15776 += 1, R49 += 1 };
  s1 -> s1 [0, 65] { R15870 += 1, R15776 += 1, R49 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15870 += 1 };
  s1 -> s3 [66, 66] { R15870 += 1, R15776 += 1, R49 += 1 };
  s1 -> s4 [66, 66] { R15870 += 1, R15776 += 1, R49 += 1 };
  s1 -> s1 [67, 65535] { R15870 += 1, R15776 += 1, R49 += 1 };
  s2 -> s1 [0, 65] { R15870 += 1, R15776 += 1, R49 += 1 };
  s2 -> s2 [0, 65535] { R15870 += 1, R15775 += 1, R15776 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [66, 66] { R15870 += 1, R15776 += 1, R49 += 1 };
  s2 -> s4 [66, 66] { R15870 += 1, R15776 += 1, R49 += 1 };
  s2 -> s1 [67, 65535] { R15870 += 1, R15776 += 1, R49 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15870 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15870 += 1 };
  s4 -> s4 [0, 65535] { R15870 += 1, R15776 += 1, R49 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15870 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_17 {
  init s0;
  s0 -> s1 [0, 65] { R15872 += 1, R15778 += 1, R51 += 1 };
  s0 -> s2 [0, 65535] { R15872 += 1, R15777 += 1, R15778 += 1 };
  s0 -> s0 [0, 65535] { R15871 += 1, R15872 += 1 };
  s0 -> s3 [66, 66] { R15872 += 1, R15778 += 1, R51 += 1 };
  s0 -> s4 [66, 66] { R15872 += 1, R15778 += 1, R51 += 1 };
  s0 -> s1 [67, 65535] { R15872 += 1, R15778 += 1, R51 += 1 };
  s1 -> s1 [0, 65] { R15872 += 1, R15778 += 1, R51 += 1 };
  s1 -> s1 [0, 65535] { R15872 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R15872 += 1, R15778 += 1, R51 += 1 };
  s1 -> s4 [66, 66] { R15872 += 1, R15778 += 1, R51 += 1 };
  s1 -> s1 [67, 65535] { R15872 += 1, R15778 += 1, R51 += 1 };
  s2 -> s1 [0, 65] { R15872 += 1, R15778 += 1, R51 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15872 += 1, R15777 += 1, R15778 += 1 };
  s2 -> s3 [66, 66] { R15872 += 1, R15778 += 1, R51 += 1 };
  s2 -> s4 [66, 66] { R15872 += 1, R15778 += 1, R51 += 1 };
  s2 -> s1 [67, 65535] { R15872 += 1, R15778 += 1, R51 += 1 };
  s3 -> s3 [0, 65535] { R15872 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15872 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15872 += 1, R15778 += 1, R51 += 1 };
  s5 -> s5 [0, 65535] { R15872 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_18 {
  init s0;
  s0 -> s1 [0, 65] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s0 -> s0 [0, 65535] { R15873 += 1, R15874 += 1 };
  s0 -> s2 [0, 65535] { R15874 += 1, R15779 += 1, R15780 += 1 };
  s0 -> s3 [66, 66] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s0 -> s4 [66, 66] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s0 -> s1 [67, 65535] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [0, 65535] { R15874 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [66, 66] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s1 -> s4 [66, 66] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s1 -> s1 [67, 65535] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [0, 65] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15874 += 1, R15779 += 1, R15780 += 1 };
  s2 -> s3 [66, 66] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s2 -> s4 [66, 66] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s2 -> s1 [67, 65535] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s3 -> s3 [0, 65535] { R15874 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15874 += 1 };
  s4 -> s4 [0, 65535] { R15874 += 1, R15780 += 1, R53 += 1, R54 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15874 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_19 {
  init s0;
  s0 -> s1 [0, 65] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s0 -> s0 [0, 65535] { R15875 += 1, R15876 += 1 };
  s0 -> s2 [0, 65535] { R15876 += 1, R15781 += 1, R15782 += 1 };
  s0 -> s3 [66, 66] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s0 -> s4 [66, 66] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s0 -> s1 [67, 65535] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [0, 65535] { R15876 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s1 -> s4 [66, 66] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s1 -> s1 [67, 65535] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [0, 65] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15876 += 1, R15781 += 1, R15782 += 1 };
  s2 -> s3 [66, 66] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s2 -> s4 [66, 66] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s2 -> s1 [67, 65535] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R15876 += 1 };
  s4 -> s5 [0, 65535] { R15876 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15876 += 1, R15782 += 1, R57 += 1, R58 += 1 };
  s5 -> s5 [0, 65535] { R15876 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_20 {
  init s0;
  s0 -> s1 [0, 65] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s0 -> s0 [0, 65535] { R15877 += 1, R15878 += 1 };
  s0 -> s2 [0, 65535] { R15878 += 1, R15783 += 1, R15784 += 1 };
  s0 -> s3 [66, 66] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s0 -> s4 [66, 66] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s0 -> s1 [67, 65535] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [0, 65] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15878 += 1 };
  s1 -> s3 [66, 66] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s1 -> s4 [66, 66] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s1 -> s1 [67, 65535] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [0, 65] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15878 += 1, R15783 += 1, R15784 += 1 };
  s2 -> s3 [66, 66] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s2 -> s4 [66, 66] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s2 -> s1 [67, 65535] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s3 -> s3 [0, 65535] { R15878 += 1, R15784 += 1, R63 += 1, R64 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15878 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15878 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15878 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_21 {
  init s0;
  s0 -> s1 [0, 65] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s0 -> s2 [0, 65535] { R15880 += 1, R15785 += 1, R15786 += 1 };
  s0 -> s0 [0, 65535] { R15879 += 1, R15880 += 1 };
  s0 -> s3 [66, 66] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s0 -> s4 [66, 66] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s0 -> s1 [67, 65535] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [0, 65535] { R15880 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s3 [66, 66] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s1 -> s4 [66, 66] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s1 -> s1 [67, 65535] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [0, 65] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s2 -> s2 [0, 65535] { R15880 += 1, R15785 += 1, R15786 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s3 [66, 66] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s2 -> s4 [66, 66] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s2 -> s1 [67, 65535] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s3 -> s3 [0, 65535] { R15880 += 1 };
  s3 -> s6 [0, 65535];
  s4 -> s5 [0, 65535] { R15880 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15880 += 1, R15786 += 1, R67 += 1, R68 += 1 };
  s5 -> s5 [0, 65535] { R15880 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_22 {
  init s0;
  s0 -> s1 [0, 65] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s0 -> s0 [0, 65535] { R15881 += 1, R15882 += 1 };
  s0 -> s2 [0, 65535] { R15882 += 1, R15787 += 1, R15788 += 1 };
  s0 -> s3 [66, 66] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s0 -> s4 [66, 66] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s0 -> s1 [67, 65535] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [0, 65] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [0, 65535] { R15882 += 1 };
  s1 -> s3 [66, 66] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s1 -> s4 [66, 66] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s1 -> s1 [67, 65535] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [0, 65] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15882 += 1, R15787 += 1, R15788 += 1 };
  s2 -> s3 [66, 66] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s2 -> s4 [66, 66] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s2 -> s1 [67, 65535] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s3 -> s3 [0, 65535] { R15882 += 1, R15788 += 1, R73 += 1, R74 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15882 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15882 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15882 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_23 {
  init s0;
  s0 -> s1 [0, 65] { R15884 += 1, R15808 += 1 };
  s0 -> s2 [0, 65535] { R15884 += 1, R15807 += 1, R15808 += 1 };
  s0 -> s0 [0, 65535] { R15883 += 1, R15884 += 1 };
  s0 -> s3 [66, 66] { R15884 += 1, R15808 += 1 };
  s0 -> s1 [67, 65535] { R15884 += 1, R15808 += 1 };
  s1 -> s1 [0, 65] { R15884 += 1, R15808 += 1 };
  s1 -> s3 [66, 66] { R15884 += 1, R15808 += 1 };
  s1 -> s1 [67, 65535] { R15884 += 1, R15808 += 1 };
  s2 -> s1 [0, 65] { R15884 += 1, R15808 += 1 };
  s2 -> s2 [0, 65535] { R15884 += 1, R15807 += 1, R15808 += 1 };
  s2 -> s3 [66, 66] { R15884 += 1, R15808 += 1 };
  s2 -> s1 [67, 65535] { R15884 += 1, R15808 += 1 };
  s3 -> s3 [0, 65535] { R15884 += 1, R15808 += 1 };
  s3 -> s4 [0, 65535] { R15884 += 1 };
  s3 -> s5 [0, 65535];
  s4 -> s4 [0, 65535] { R15884 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5;
};
automaton value2_24 {
  init s0;
  s0 -> s0 [0, 65535] { R15885 += 1, R15886 += 1 };
  s0 -> s1 [0, 65535] { R15886 += 1, R15810 += 1, R1 += 1 };
  s0 -> s2 [0, 65535] { R15886 += 1, R15809 += 1, R15810 += 1 };
  s1 -> s4 [0, 65535] { R15886 += 1 };
  s1 -> s3 [0, 65535];
  s1 -> s1 [0, 65535] { R15886 += 1, R15810 += 1, R1 += 1 };
  s2 -> s3 [0, 65535];
  s2 -> s1 [0, 65535] { R15886 += 1, R15810 += 1, R1 += 1 };
  s2 -> s2 [0, 65535] { R15886 += 1, R15809 += 1, R15810 += 1 };
  s3 -> s3 [0, 65535];
  s4 -> s4 [0, 65535] { R15886 += 1 };
  s4 -> s3 [0, 65535];
  accepting s3, s4, s2, s1, s0;
};
automaton value2_25 {
  init s0;
  s0 -> s1 [0, 65] { R15888 += 1, R15812 += 1 };
  s0 -> s2 [0, 65535] { R15888 += 1, R15811 += 1, R15812 += 1 };
  s0 -> s0 [0, 65535] { R15887 += 1, R15888 += 1 };
  s0 -> s3 [0, 65535] { R15888 += 1, R15812 += 1, R11 += 1 };
  s0 -> s4 [66, 66] { R15888 += 1, R15812 += 1 };
  s0 -> s1 [67, 65535] { R15888 += 1, R15812 += 1 };
  s1 -> s1 [0, 65] { R15888 += 1, R15812 += 1 };
  s1 -> s1 [0, 65535] { R15888 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s4 [66, 66] { R15888 += 1, R15812 += 1 };
  s1 -> s1 [67, 65535] { R15888 += 1, R15812 += 1 };
  s2 -> s1 [0, 65] { R15888 += 1, R15812 += 1 };
  s2 -> s2 [0, 65535] { R15888 += 1, R15811 += 1, R15812 += 1 };
  s2 -> s3 [0, 65535] { R15888 += 1, R15812 += 1, R11 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R15888 += 1, R15812 += 1 };
  s2 -> s1 [67, 65535] { R15888 += 1, R15812 += 1 };
  s3 -> s1 [0, 65] { R15888 += 1, R15812 += 1 };
  s3 -> s3 [0, 65535] { R15888 += 1, R15812 += 1, R11 += 1 };
  s3 -> s5 [0, 65535] { R15888 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [66, 66] { R15888 += 1, R15812 += 1 };
  s3 -> s1 [67, 65535] { R15888 += 1, R15812 += 1 };
  s4 -> s4 [0, 65535] { R15888 += 1, R15812 += 1 };
  s5 -> s5 [0, 65535] { R15888 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  accepting s3, s5, s2, s6, s1, s0;
};
automaton value2_26 {
  init s0;
  s0 -> s1 [0, 65] { R15890 += 1, R15814 += 1, R15752 += 1 };
  s0 -> s2 [0, 65535] { R15890 += 1, R15813 += 1, R15814 += 1 };
  s0 -> s3 [0, 65535] { R15890 += 1, R15814 += 1, R15751 += 1, R15752 += 1 };
  s0 -> s0 [0, 65535] { R15889 += 1, R15890 += 1 };
  s0 -> s1 [67, 65535] { R15890 += 1, R15814 += 1, R15752 += 1 };
  s1 -> s1 [0, 65] { R15890 += 1, R15814 += 1, R15752 += 1 };
  s1 -> s4 [0, 65535] { R15890 += 1 };
  s1 -> s1 [0, 65535] { R15890 += 1, R15814 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [67, 65535] { R15890 += 1, R15814 += 1, R15752 += 1 };
  s2 -> s1 [0, 65] { R15890 += 1, R15814 += 1, R15752 += 1 };
  s2 -> s2 [0, 65535] { R15890 += 1, R15813 += 1, R15814 += 1 };
  s2 -> s3 [0, 65535] { R15890 += 1, R15814 += 1, R15751 += 1, R15752 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [67, 65535] { R15890 += 1, R15814 += 1, R15752 += 1 };
  s3 -> s1 [0, 65] { R15890 += 1, R15814 += 1, R15752 += 1 };
  s3 -> s4 [0, 65535] { R15890 += 1 };
  s3 -> s3 [0, 65535] { R15890 += 1, R15814 += 1, R15751 += 1, R15752 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [67, 65535] { R15890 += 1, R15814 += 1, R15752 += 1 };
  s4 -> s4 [0, 65535] { R15890 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_27 {
  init s0;
  s0 -> s1 [0, 65535] { R15892 += 1, R15815 += 1, R15816 += 1 };
  s0 -> s0 [0, 65535] { R15891 += 1, R15892 += 1 };
  s0 -> s2 [0, 65535] { R15892 += 1, R15816 += 1, R15753 += 1, R15754 += 1 };
  s0 -> s3 [0, 65535] { R15892 += 1, R15816 += 1, R15754 += 1, R20 += 1 };
  s1 -> s1 [0, 65535] { R15892 += 1, R15815 += 1, R15816 += 1 };
  s1 -> s2 [0, 65535] { R15892 += 1, R15816 += 1, R15753 += 1, R15754 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R15892 += 1, R15816 += 1, R15754 += 1, R20 += 1 };
  s2 -> s4 [0, 65535] { R15892 += 1 };
  s2 -> s2 [0, 65535] { R15892 += 1, R15816 += 1, R15753 += 1, R15754 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s3 [0, 65535] { R15892 += 1, R15816 += 1, R15754 += 1, R20 += 1 };
  s3 -> s4 [0, 65535] { R15892 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s6 [0, 65535] { R15892 += 1, R15816 += 1 };
  s3 -> s3 [0, 65535] { R15892 += 1, R15816 += 1, R15754 += 1, R20 += 1 };
  s4 -> s4 [0, 65535] { R15892 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R15892 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15892 += 1, R15816 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_28 {
  init s0;
  s0 -> s1 [0, 66] { R15894 += 1, R15818 += 1, R15756 += 1 };
  s0 -> s0 [0, 65535] { R15893 += 1, R15894 += 1 };
  s0 -> s2 [0, 65535] { R15894 += 1, R15818 += 1, R15755 += 1, R15756 += 1 };
  s0 -> s3 [0, 65535] { R15894 += 1, R15817 += 1, R15818 += 1 };
  s0 -> s1 [70, 65535] { R15894 += 1, R15818 += 1, R15756 += 1 };
  s1 -> s1 [0, 66] { R15894 += 1, R15818 += 1, R15756 += 1 };
  s1 -> s1 [0, 65535] { R15894 += 1, R15818 += 1 };
  s1 -> s4 [0, 65535];
  s1 -> s5 [0, 65535] { R15894 += 1 };
  s1 -> s1 [70, 65535] { R15894 += 1, R15818 += 1, R15756 += 1 };
  s2 -> s1 [0, 66] { R15894 += 1, R15818 += 1, R15756 += 1 };
  s2 -> s2 [0, 65535] { R15894 += 1, R15818 += 1, R15755 += 1, R15756 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s5 [0, 65535] { R15894 += 1 };
  s2 -> s1 [70, 65535] { R15894 += 1, R15818 += 1, R15756 += 1 };
  s3 -> s1 [0, 66] { R15894 += 1, R15818 += 1, R15756 += 1 };
  s3 -> s2 [0, 65535] { R15894 += 1, R15818 += 1, R15755 += 1, R15756 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s3 [0, 65535] { R15894 += 1, R15817 += 1, R15818 += 1 };
  s3 -> s1 [70, 65535] { R15894 += 1, R15818 += 1, R15756 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15894 += 1 };
  accepting s3, s4, s5, s2, s1, s0;
};
automaton value2_29 {
  init s0;
  s0 -> s0 [0, 65535] { R15895 += 1, R15896 += 1 };
  s0 -> s1 [0, 65535] { R15896 += 1, R15820 += 1, R15757 += 1, R15758 += 1 };
  s0 -> s2 [0, 65535] { R15896 += 1, R15819 += 1, R15820 += 1 };
  s0 -> s3 [0, 65535] { R15896 += 1, R15820 += 1, R15758 += 1, R78 += 1 };
  s1 -> s4 [0, 65535] { R15896 += 1 };
  s1 -> s1 [0, 65535] { R15896 += 1, R15820 += 1, R15757 += 1, R15758 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s3 [0, 65535] { R15896 += 1, R15820 += 1, R15758 += 1, R78 += 1 };
  s2 -> s1 [0, 65535] { R15896 += 1, R15820 += 1, R15757 += 1, R15758 += 1 };
  s2 -> s2 [0, 65535] { R15896 += 1, R15819 += 1, R15820 += 1 };
  s2 -> s3 [0, 65535] { R15896 += 1, R15820 += 1, R15758 += 1, R78 += 1 };
  s2 -> s5 [0, 65535];
  s3 -> s4 [0, 65535] { R15896 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15896 += 1, R15820 += 1, R15758 += 1, R78 += 1 };
  s3 -> s6 [0, 65535] { R15896 += 1, R15820 += 1 };
  s4 -> s4 [0, 65535] { R15896 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R15896 += 1 };
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15896 += 1, R15820 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_30 {
  init s0;
  s0 -> s1 [0, 69] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s0 -> s2 [0, 65535] { R15898 += 1, R15822 += 1, R15760 += 1, R80 += 1 };
  s0 -> s3 [0, 65535] { R15898 += 1, R15821 += 1, R15822 += 1 };
  s0 -> s4 [0, 65535] { R15898 += 1, R15822 += 1, R15759 += 1, R15760 += 1 };
  s0 -> s0 [0, 65535] { R15897 += 1, R15898 += 1 };
  s0 -> s1 [71, 65535] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s1 -> s1 [0, 69] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s1 -> s5 [0, 65535] { R15898 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R15898 += 1, R15822 += 1 };
  s1 -> s1 [71, 65535] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s2 -> s1 [0, 69] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s2 -> s2 [0, 65535] { R15898 += 1, R15822 += 1, R15760 += 1, R80 += 1 };
  s2 -> s5 [0, 65535] { R15898 += 1 };
  s2 -> s7 [0, 65535] { R15898 += 1, R15822 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s1 [71, 65535] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s3 -> s1 [0, 69] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s3 -> s2 [0, 65535] { R15898 += 1, R15822 += 1, R15760 += 1, R80 += 1 };
  s3 -> s3 [0, 65535] { R15898 += 1, R15821 += 1, R15822 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s4 [0, 65535] { R15898 += 1, R15822 += 1, R15759 += 1, R15760 += 1 };
  s3 -> s1 [71, 65535] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s4 -> s1 [0, 69] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s4 -> s2 [0, 65535] { R15898 += 1, R15822 += 1, R15760 += 1, R80 += 1 };
  s4 -> s5 [0, 65535] { R15898 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s4 [0, 65535] { R15898 += 1, R15822 += 1, R15759 += 1, R15760 += 1 };
  s4 -> s1 [71, 65535] { R15898 += 1, R15822 += 1, R15760 += 1 };
  s5 -> s5 [0, 65535] { R15898 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R15898 += 1 };
  s7 -> s7 [0, 65535] { R15898 += 1, R15822 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_31 {
  init s0;
  s0 -> s1 [0, 69] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s0 -> s0 [0, 65535] { R15899 += 1, R15900 += 1 };
  s0 -> s2 [0, 65535] { R15900 += 1, R15823 += 1, R15824 += 1 };
  s0 -> s3 [0, 65535] { R15900 += 1, R15824 += 1, R15762 += 1, R83 += 1, R84 += 1 };
  s0 -> s4 [0, 65535] { R15900 += 1, R15824 += 1, R15761 += 1, R15762 += 1 };
  s0 -> s1 [71, 65535] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s1 -> s1 [0, 69] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s1 -> s5 [0, 65535] { R15900 += 1 };
  s1 -> s7 [0, 65535] { R15900 += 1, R15824 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s1 [0, 65535] { R15900 += 1, R15824 += 1, R15762 += 1 };
  s1 -> s1 [71, 65535] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s2 -> s1 [0, 69] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15900 += 1, R15823 += 1, R15824 += 1 };
  s2 -> s3 [0, 65535] { R15900 += 1, R15824 += 1, R15762 += 1, R83 += 1, R84 += 1 };
  s2 -> s4 [0, 65535] { R15900 += 1, R15824 += 1, R15761 += 1, R15762 += 1 };
  s2 -> s1 [71, 65535] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s3 -> s1 [0, 69] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s3 -> s5 [0, 65535] { R15900 += 1 };
  s3 -> s7 [0, 65535] { R15900 += 1, R15824 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s3 [0, 65535] { R15900 += 1, R15824 += 1, R15762 += 1, R83 += 1, R84 += 1 };
  s3 -> s1 [71, 65535] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s4 -> s1 [0, 69] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s4 -> s5 [0, 65535] { R15900 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s3 [0, 65535] { R15900 += 1, R15824 += 1, R15762 += 1, R83 += 1, R84 += 1 };
  s4 -> s4 [0, 65535] { R15900 += 1, R15824 += 1, R15761 += 1, R15762 += 1 };
  s4 -> s1 [71, 65535] { R15900 += 1, R15824 += 1, R15762 += 1, R84 += 1 };
  s5 -> s5 [0, 65535] { R15900 += 1 };
  s5 -> s6 [0, 65535];
  s6 -> s6 [0, 65535];
  s7 -> s5 [0, 65535] { R15900 += 1 };
  s7 -> s7 [0, 65535] { R15900 += 1, R15824 += 1 };
  s7 -> s6 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s7, s0;
};
automaton value2_32 {
  init s0;
  s0 -> s0 [0, 65535] { R15901 += 1, R15902 += 1 };
  s0 -> s1 [0, 65535] { R15902 += 1, R15826 += 1, R15764 += 1 };
  s0 -> s2 [0, 65535] { R15902 += 1, R15825 += 1, R15826 += 1 };
  s0 -> s3 [0, 65535] { R15902 += 1, R15826 += 1, R15763 += 1, R15764 += 1 };
  s1 -> s4 [0, 65535] { R15902 += 1 };
  s1 -> s6 [0, 65535] { R15902 += 1, R15826 += 1 };
  s1 -> s1 [0, 65535] { R15902 += 1, R15826 += 1, R15764 += 1 };
  s1 -> s5 [0, 65535];
  s2 -> s1 [0, 65535] { R15902 += 1, R15826 += 1, R15764 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15902 += 1, R15825 += 1, R15826 += 1 };
  s2 -> s3 [0, 65535] { R15902 += 1, R15826 += 1, R15763 += 1, R15764 += 1 };
  s3 -> s4 [0, 65535] { R15902 += 1 };
  s3 -> s1 [0, 65535] { R15902 += 1, R15826 += 1, R15764 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15902 += 1, R15826 += 1, R15763 += 1, R15764 += 1 };
  s4 -> s4 [0, 65535] { R15902 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s4 [0, 65535] { R15902 += 1 };
  s6 -> s6 [0, 65535] { R15902 += 1, R15826 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_33 {
  init s0;
  s0 -> s1 [0, 70] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s0 -> s2 [0, 65535] { R15904 += 1, R15827 += 1, R15828 += 1 };
  s0 -> s0 [0, 65535] { R15903 += 1, R15904 += 1 };
  s0 -> s3 [0, 65535] { R15904 += 1, R15828 += 1, R15765 += 1, R15766 += 1 };
  s0 -> s4 [0, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15379 += 1, R15380 += 1 };
  s0 -> s5 [76, 76] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s0 -> s1 [77, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s1 -> s1 [0, 70] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s1 -> s5 [76, 76] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s1 -> s1 [77, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s2 -> s1 [0, 70] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s2 -> s2 [0, 65535] { R15904 += 1, R15827 += 1, R15828 += 1 };
  s2 -> s3 [0, 65535] { R15904 += 1, R15828 += 1, R15765 += 1, R15766 += 1 };
  s2 -> s4 [0, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15379 += 1, R15380 += 1 };
  s2 -> s5 [76, 76] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s2 -> s1 [77, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s3 -> s1 [0, 70] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s3 -> s3 [0, 65535] { R15904 += 1, R15828 += 1, R15765 += 1, R15766 += 1 };
  s3 -> s4 [0, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15379 += 1, R15380 += 1 };
  s3 -> s5 [76, 76] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s3 -> s1 [77, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s4 -> s1 [0, 70] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s4 -> s4 [0, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15379 += 1, R15380 += 1 };
  s4 -> s5 [76, 76] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s4 -> s1 [77, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s5 -> s5 [0, 70] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s5 -> s6 [0, 65535] { R15904 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R15904 += 1, R15828 += 1 };
  s5 -> s5 [0, 65535] { R15904 += 1, R15828 += 1, R15766 += 1 };
  s5 -> s5 [76, 65535] { R15904 += 1, R15828 += 1, R15766 += 1, R15380 += 1 };
  s6 -> s6 [0, 65535] { R15904 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R15904 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R15904 += 1, R15828 += 1 };
  accepting s5, s6, s7, s8;
};
automaton value2_34 {
  init s0;
  s0 -> s1 [0, 65535] { R15906 += 1, R15829 += 1, R15830 += 1 };
  s0 -> s0 [0, 65535] { R15905 += 1, R15906 += 1 };
  s0 -> s2 [0, 65535] { R15906 += 1, R15830 += 1, R15767 += 1, R15768 += 1 };
  s0 -> s3 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1, R15384 += 1, R15385 += 1 };
  s0 -> s4 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1, R15385 += 1, R15386 += 1 };
  s1 -> s1 [0, 65535] { R15906 += 1, R15829 += 1, R15830 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s2 [0, 65535] { R15906 += 1, R15830 += 1, R15767 += 1, R15768 += 1 };
  s1 -> s3 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1, R15384 += 1, R15385 += 1 };
  s1 -> s4 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1, R15385 += 1, R15386 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s2 [0, 65535] { R15906 += 1, R15830 += 1, R15767 += 1, R15768 += 1 };
  s2 -> s3 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1, R15384 += 1, R15385 += 1 };
  s2 -> s6 [0, 65535] { R15906 += 1 };
  s2 -> s4 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1, R15385 += 1, R15386 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s3 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1, R15384 += 1, R15385 += 1 };
  s3 -> s6 [0, 65535] { R15906 += 1 };
  s3 -> s7 [0, 65535] { R15906 += 1, R15830 += 1 };
  s3 -> s4 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1, R15385 += 1, R15386 += 1 };
  s4 -> s5 [0, 65535];
  s4 -> s6 [0, 65535] { R15906 += 1 };
  s4 -> s7 [0, 65535] { R15906 += 1, R15830 += 1 };
  s4 -> s8 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1 };
  s4 -> s4 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1, R15385 += 1, R15386 += 1 };
  s5 -> s5 [0, 65535];
  s6 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15906 += 1 };
  s7 -> s5 [0, 65535];
  s7 -> s6 [0, 65535] { R15906 += 1 };
  s7 -> s7 [0, 65535] { R15906 += 1, R15830 += 1 };
  s8 -> s5 [0, 65535];
  s8 -> s6 [0, 65535] { R15906 += 1 };
  s8 -> s7 [0, 65535] { R15906 += 1, R15830 += 1 };
  s8 -> s8 [0, 65535] { R15906 += 1, R15830 += 1, R15768 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_35 {
  init s0;
  s0 -> s1 [0, 70] { R15908 += 1, R15832 += 1, R15770 += 1, R15750 += 1 };
  s0 -> s0 [0, 65535] { R15907 += 1, R15908 += 1 };
  s0 -> s1 [0, 65535] { R15908 += 1, R15832 += 1, R15770 += 1 };
  s0 -> s2 [0, 65535] { R15908 += 1, R15831 += 1, R15832 += 1 };
  s0 -> s3 [0, 65535] { R15908 += 1, R15832 += 1, R15769 += 1, R15770 += 1 };
  s0 -> s1 [77, 65535] { R15908 += 1, R15832 += 1, R15770 += 1, R15750 += 1 };
  s1 -> s1 [0, 70] { R15908 += 1, R15832 += 1, R15770 += 1, R15750 += 1 };
  s1 -> s6 [0, 65535] { R15908 += 1, R15832 += 1 };
  s1 -> s1 [0, 65535] { R15908 += 1, R15832 += 1, R15770 += 1 };
  s1 -> s4 [0, 65535] { R15908 += 1 };
  s1 -> s5 [0, 65535];
  s1 -> s1 [77, 65535] { R15908 += 1, R15832 += 1, R15770 += 1, R15750 += 1 };
  s2 -> s1 [0, 70] { R15908 += 1, R15832 += 1, R15770 += 1, R15750 += 1 };
  s2 -> s1 [0, 65535] { R15908 += 1, R15832 += 1, R15770 += 1 };
  s2 -> s2 [0, 65535] { R15908 += 1, R15831 += 1, R15832 += 1 };
  s2 -> s3 [0, 65535] { R15908 += 1, R15832 += 1, R15769 += 1, R15770 += 1 };
  s2 -> s5 [0, 65535];
  s2 -> s1 [77, 65535] { R15908 += 1, R15832 += 1, R15770 += 1, R15750 += 1 };
  s3 -> s1 [0, 70] { R15908 += 1, R15832 += 1, R15770 += 1, R15750 += 1 };
  s3 -> s1 [0, 65535] { R15908 += 1, R15832 += 1, R15770 += 1 };
  s3 -> s3 [0, 65535] { R15908 += 1, R15832 += 1, R15769 += 1, R15770 += 1 };
  s3 -> s4 [0, 65535] { R15908 += 1 };
  s3 -> s5 [0, 65535];
  s3 -> s1 [77, 65535] { R15908 += 1, R15832 += 1, R15770 += 1, R15750 += 1 };
  s4 -> s4 [0, 65535] { R15908 += 1 };
  s4 -> s5 [0, 65535];
  s5 -> s5 [0, 65535];
  s6 -> s6 [0, 65535] { R15908 += 1, R15832 += 1 };
  s6 -> s4 [0, 65535] { R15908 += 1 };
  s6 -> s5 [0, 65535];
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_36 {
  init s0;
  s0 -> s1 [0, 65535] { R15910 += 1, R15833 += 1, R15834 += 1 };
  s0 -> s2 [0, 65535] { R15910 += 1, R15834 += 1, R15790 += 1, R21 += 1 };
  s0 -> s0 [0, 65535] { R15909 += 1, R15910 += 1 };
  s0 -> s3 [0, 65535] { R15910 += 1, R15834 += 1, R15789 += 1, R15790 += 1 };
  s1 -> s1 [0, 65535] { R15910 += 1, R15833 += 1, R15834 += 1 };
  s1 -> s2 [0, 65535] { R15910 += 1, R15834 += 1, R15790 += 1, R21 += 1 };
  s1 -> s3 [0, 65535] { R15910 += 1, R15834 += 1, R15789 += 1, R15790 += 1 };
  s1 -> s4 [0, 65535];
  s2 -> s2 [0, 65535] { R15910 += 1, R15834 += 1, R15790 += 1, R21 += 1 };
  s2 -> s4 [0, 65535];
  s2 -> s6 [0, 65535] { R15910 += 1, R15834 += 1 };
  s2 -> s5 [0, 65535] { R15910 += 1 };
  s3 -> s2 [0, 65535] { R15910 += 1, R15834 += 1, R15790 += 1, R21 += 1 };
  s3 -> s3 [0, 65535] { R15910 += 1, R15834 += 1, R15789 += 1, R15790 += 1 };
  s3 -> s4 [0, 65535];
  s3 -> s5 [0, 65535] { R15910 += 1 };
  s4 -> s4 [0, 65535];
  s5 -> s4 [0, 65535];
  s5 -> s5 [0, 65535] { R15910 += 1 };
  s6 -> s4 [0, 65535];
  s6 -> s6 [0, 65535] { R15910 += 1, R15834 += 1 };
  s6 -> s5 [0, 65535] { R15910 += 1 };
  accepting s3, s4, s5, s2, s6, s1, s0;
};
automaton value2_37 {
  init s0;
  s0 -> s1 [0, 65] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s0 -> s2 [0, 65535] { R15912 += 1, R15836 += 1, R15791 += 1, R15792 += 1 };
  s0 -> s0 [0, 65535] { R15911 += 1, R15912 += 1 };
  s0 -> s3 [0, 65535] { R15912 += 1, R15835 += 1, R15836 += 1 };
  s0 -> s4 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s0 -> s5 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s0 -> s6 [70, 70] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s0 -> s1 [71, 65535] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s1 -> s1 [0, 65] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s1 -> s4 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s1 -> s5 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s1 -> s6 [70, 70] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s1 -> s1 [71, 65535] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s2 -> s1 [0, 65] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s2 -> s2 [0, 65535] { R15912 += 1, R15836 += 1, R15791 += 1, R15792 += 1 };
  s2 -> s4 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s2 -> s5 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s2 -> s6 [70, 70] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s2 -> s1 [71, 65535] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s3 -> s1 [0, 65] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s3 -> s2 [0, 65535] { R15912 += 1, R15836 += 1, R15791 += 1, R15792 += 1 };
  s3 -> s3 [0, 65535] { R15912 += 1, R15835 += 1, R15836 += 1 };
  s3 -> s4 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s3 -> s5 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s3 -> s6 [70, 70] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s3 -> s1 [71, 65535] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s5 -> s5 [0, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s5 -> s9 [70, 70] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s5 -> s5 [71, 65535] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s6 -> s6 [0, 65] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s6 -> s7 [0, 65535];
  s6 -> s8 [0, 65535] { R15912 += 1 };
  s6 -> s6 [0, 65535] { R15912 += 1, R15836 += 1 };
  s6 -> s9 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s6 -> s10 [66, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s6 -> s6 [70, 65535] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s7 -> s7 [0, 65535];
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R15912 += 1 };
  s9 -> s9 [0, 66] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s9 -> s9 [0, 65535] { R15912 += 1, R15836 += 1 };
  s9 -> s7 [0, 65535];
  s9 -> s8 [0, 65535] { R15912 += 1 };
  s9 -> s9 [70, 65535] { R15912 += 1, R15836 += 1, R15792 += 1 };
  s10 -> s7 [0, 65535];
  s10 -> s8 [0, 65535] { R15912 += 1 };
  s10 -> s10 [0, 65535] { R15912 += 1, R15836 += 1 };
  accepting s8, s9, s6, s7, s10;
};
automaton value2_38 {
  init s0;
  s0 -> s1 [0, 65] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s0 -> s2 [0, 65535] { R15914 += 1, R15838 += 1, R15793 += 1, R15794 += 1 };
  s0 -> s0 [0, 65535] { R15913 += 1, R15914 += 1 };
  s0 -> s3 [0, 65535] { R15914 += 1, R15837 += 1, R15838 += 1 };
  s0 -> s4 [66, 66] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s0 -> s5 [66, 66] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s0 -> s1 [67, 65535] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s1 -> s1 [0, 65] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s1 -> s6 [0, 65535] { R15914 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s1 [0, 65535] { R15914 += 1, R15838 += 1 };
  s1 -> s4 [66, 66] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s1 -> s5 [66, 66] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s1 -> s1 [67, 65535] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s2 -> s1 [0, 65] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s2 -> s2 [0, 65535] { R15914 += 1, R15838 += 1, R15793 += 1, R15794 += 1 };
  s2 -> s6 [0, 65535] { R15914 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s2 -> s5 [66, 66] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s2 -> s1 [67, 65535] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s3 -> s1 [0, 65] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s3 -> s2 [0, 65535] { R15914 += 1, R15838 += 1, R15793 += 1, R15794 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s3 [0, 65535] { R15914 += 1, R15837 += 1, R15838 += 1 };
  s3 -> s4 [66, 66] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s3 -> s5 [66, 66] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s3 -> s1 [67, 65535] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s4 -> s4 [0, 65535] { R15914 += 1, R15838 += 1 };
  s4 -> s6 [0, 65535] { R15914 += 1 };
  s4 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R15914 += 1, R15838 += 1, R15794 += 1, R77 += 1 };
  s5 -> s6 [0, 65535] { R15914 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s8 [0, 65535] { R15914 += 1, R15838 += 1 };
  s6 -> s6 [0, 65535] { R15914 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R15914 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R15914 += 1, R15838 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_39 {
  init s0;
  s0 -> s1 [0, 65] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s0 -> s2 [0, 65535] { R15916 += 1, R15839 += 1, R15840 += 1 };
  s0 -> s3 [0, 65535] { R15916 += 1, R15840 += 1, R15795 += 1, R15796 += 1 };
  s0 -> s0 [0, 65535] { R15915 += 1, R15916 += 1 };
  s0 -> s4 [66, 66] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s0 -> s5 [66, 66] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s0 -> s1 [67, 65535] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s1 -> s1 [0, 65] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s1 -> s6 [0, 65535] { R15916 += 1 };
  s1 -> s1 [0, 65535] { R15916 += 1, R15840 += 1 };
  s1 -> s7 [0, 65535];
  s1 -> s4 [66, 66] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s1 -> s5 [66, 66] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s1 -> s1 [67, 65535] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s2 -> s1 [0, 65] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s2 -> s2 [0, 65535] { R15916 += 1, R15839 += 1, R15840 += 1 };
  s2 -> s3 [0, 65535] { R15916 += 1, R15840 += 1, R15795 += 1, R15796 += 1 };
  s2 -> s7 [0, 65535];
  s2 -> s4 [66, 66] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s2 -> s5 [66, 66] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s2 -> s1 [67, 65535] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s3 -> s1 [0, 65] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s3 -> s6 [0, 65535] { R15916 += 1 };
  s3 -> s3 [0, 65535] { R15916 += 1, R15840 += 1, R15795 += 1, R15796 += 1 };
  s3 -> s7 [0, 65535];
  s3 -> s4 [66, 66] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s3 -> s5 [66, 66] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s3 -> s1 [67, 65535] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s4 -> s6 [0, 65535] { R15916 += 1 };
  s4 -> s7 [0, 65535];
  s4 -> s4 [0, 65535] { R15916 += 1, R15840 += 1, R15796 += 1, R79 += 1 };
  s4 -> s8 [0, 65535] { R15916 += 1, R15840 += 1 };
  s5 -> s6 [0, 65535] { R15916 += 1 };
  s5 -> s7 [0, 65535];
  s5 -> s5 [0, 65535] { R15916 += 1, R15840 += 1 };
  s6 -> s6 [0, 65535] { R15916 += 1 };
  s6 -> s7 [0, 65535];
  s7 -> s7 [0, 65535];
  s8 -> s6 [0, 65535] { R15916 += 1 };
  s8 -> s7 [0, 65535];
  s8 -> s8 [0, 65535] { R15916 += 1, R15840 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_40 {
  init s0;
  s0 -> s1 [0, 65] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s0 -> s2 [0, 65535] { R15918 += 1, R15842 += 1, R15797 += 1, R15798 += 1 };
  s0 -> s0 [0, 65535] { R15917 += 1, R15918 += 1 };
  s0 -> s3 [0, 65535] { R15918 += 1, R15841 += 1, R15842 += 1 };
  s0 -> s4 [66, 66] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s0 -> s5 [66, 66] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s0 -> s1 [67, 65535] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [0, 65535] { R15918 += 1, R15842 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R15918 += 1 };
  s1 -> s4 [66, 66] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s1 -> s5 [66, 66] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s1 -> s1 [67, 65535] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [0, 65] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s2 [0, 65535] { R15918 += 1, R15842 += 1, R15797 += 1, R15798 += 1 };
  s2 -> s7 [0, 65535] { R15918 += 1 };
  s2 -> s4 [66, 66] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s2 -> s5 [66, 66] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s2 -> s1 [67, 65535] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [0, 65] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s2 [0, 65535] { R15918 += 1, R15842 += 1, R15797 += 1, R15798 += 1 };
  s3 -> s3 [0, 65535] { R15918 += 1, R15841 += 1, R15842 += 1 };
  s3 -> s4 [66, 66] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s3 -> s5 [66, 66] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s3 -> s1 [67, 65535] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s4 -> s4 [0, 65535] { R15918 += 1, R15842 += 1, R15798 += 1, R81 += 1, R82 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R15918 += 1 };
  s4 -> s8 [0, 65535] { R15918 += 1, R15842 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s7 [0, 65535] { R15918 += 1 };
  s5 -> s5 [0, 65535] { R15918 += 1, R15842 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R15918 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R15918 += 1 };
  s8 -> s8 [0, 65535] { R15918 += 1, R15842 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_41 {
  init s0;
  s0 -> s1 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s2 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s3 [0, 65535] { R15920 += 1, R15843 += 1, R15844 += 1 };
  s0 -> s0 [0, 65535] { R15919 += 1, R15920 += 1 };
  s0 -> s4 [0, 65535] { R15920 += 1, R15844 += 1, R15799 += 1, R15800 += 1 };
  s0 -> s5 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s6 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s7 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s8 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s0 -> s1 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s0 -> s2 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s1 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s1 -> s2 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s5 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s1 -> s6 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s7 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s1 -> s8 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s1 -> s1 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s1 -> s2 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s13 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s2 -> s2 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s9 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s2 -> s14 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s2 -> s6 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s8 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s2 -> s13 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s2 -> s2 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s1 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s2 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s3 [0, 65535] { R15920 += 1, R15843 += 1, R15844 += 1 };
  s3 -> s4 [0, 65535] { R15920 += 1, R15844 += 1, R15799 += 1, R15800 += 1 };
  s3 -> s5 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s6 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s7 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s8 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s3 -> s1 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s3 -> s2 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s1 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s2 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s4 [0, 65535] { R15920 += 1, R15844 += 1, R15799 += 1, R15800 += 1 };
  s4 -> s5 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s6 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s7 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s8 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s4 -> s1 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s4 -> s2 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s5 -> s5 [0, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13189 += 1, R13190 += 1 };
  s5 -> s8 [0, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s8 -> s9 [0, 65535] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s8 -> s8 [0, 65535] { R15920 += 1, R15844 += 1, R15800 += 1, R13190 += 1, R13191 += 1 };
  s9 -> s9 [0, 65535] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R15920 += 1, R15844 += 1 };
  s9 -> s12 [0, 65535] { R15920 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R15920 += 1, R15844 += 1 };
  s11 -> s12 [0, 65535] { R15920 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s12 [0, 65535] { R15920 += 1 };
  s13 -> s13 [0, 65] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s13 -> s13 [0, 65535] { R15920 += 1, R15844 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s12 [0, 65535] { R15920 += 1 };
  s13 -> s9 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s13 -> s14 [66, 66] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s13 -> s13 [67, 65535] { R15920 += 1, R15844 += 1, R15800 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s14 [0, 65535] { R15920 += 1, R15844 += 1 };
  s14 -> s12 [0, 65535] { R15920 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
automaton value2_42 {
  init s0;
  s0 -> s1 [0, 65] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s0 -> s0 [0, 65535] { R15921 += 1, R15922 += 1 };
  s0 -> s2 [0, 65535] { R15922 += 1, R15846 += 1, R15801 += 1, R15802 += 1 };
  s0 -> s3 [0, 65535] { R15922 += 1, R15845 += 1, R15846 += 1 };
  s0 -> s4 [66, 66] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s0 -> s5 [66, 66] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s0 -> s1 [67, 65535] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s1 -> s1 [0, 65] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s1 -> s1 [0, 65535] { R15922 += 1, R15846 += 1 };
  s1 -> s7 [0, 65535] { R15922 += 1 };
  s1 -> s8 [0, 65535];
  s1 -> s4 [66, 66] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s1 -> s5 [66, 66] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s1 -> s1 [67, 65535] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s2 -> s1 [0, 65] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s2 -> s2 [0, 65535] { R15922 += 1, R15846 += 1, R15801 += 1, R15802 += 1 };
  s2 -> s7 [0, 65535] { R15922 += 1 };
  s2 -> s8 [0, 65535];
  s2 -> s4 [66, 66] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s2 -> s5 [66, 66] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s2 -> s1 [67, 65535] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s3 -> s1 [0, 65] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s3 -> s2 [0, 65535] { R15922 += 1, R15846 += 1, R15801 += 1, R15802 += 1 };
  s3 -> s8 [0, 65535];
  s3 -> s3 [0, 65535] { R15922 += 1, R15845 += 1, R15846 += 1 };
  s3 -> s4 [66, 66] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s3 -> s5 [66, 66] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s3 -> s1 [67, 65535] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s4 -> s4 [0, 65535] { R15922 += 1, R15846 += 1 };
  s4 -> s7 [0, 65535] { R15922 += 1 };
  s4 -> s8 [0, 65535];
  s5 -> s6 [0, 65535] { R15922 += 1, R15846 += 1 };
  s5 -> s5 [0, 65535] { R15922 += 1, R15846 += 1, R15802 += 1, R15377 += 1, R15378 += 1 };
  s5 -> s7 [0, 65535] { R15922 += 1 };
  s5 -> s8 [0, 65535];
  s6 -> s6 [0, 65535] { R15922 += 1, R15846 += 1 };
  s6 -> s7 [0, 65535] { R15922 += 1 };
  s6 -> s8 [0, 65535];
  s7 -> s7 [0, 65535] { R15922 += 1 };
  s7 -> s8 [0, 65535];
  s8 -> s8 [0, 65535];
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_43 {
  init s0;
  s0 -> s1 [0, 65] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s0 -> s2 [0, 65535] { R15924 += 1, R15847 += 1, R15848 += 1 };
  s0 -> s3 [0, 65535] { R15924 += 1, R15848 += 1, R15803 += 1, R15804 += 1 };
  s0 -> s0 [0, 65535] { R15923 += 1, R15924 += 1 };
  s0 -> s4 [66, 66] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s0 -> s5 [66, 66] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s0 -> s1 [67, 65535] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s1 -> s1 [0, 65] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s1 -> s1 [0, 65535] { R15924 += 1, R15848 += 1 };
  s1 -> s6 [0, 65535];
  s1 -> s7 [0, 65535] { R15924 += 1 };
  s1 -> s4 [66, 66] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s1 -> s5 [66, 66] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s1 -> s1 [67, 65535] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s2 -> s1 [0, 65] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s2 -> s2 [0, 65535] { R15924 += 1, R15847 += 1, R15848 += 1 };
  s2 -> s3 [0, 65535] { R15924 += 1, R15848 += 1, R15803 += 1, R15804 += 1 };
  s2 -> s6 [0, 65535];
  s2 -> s4 [66, 66] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s2 -> s5 [66, 66] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s2 -> s1 [67, 65535] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s3 -> s1 [0, 65] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s3 -> s3 [0, 65535] { R15924 += 1, R15848 += 1, R15803 += 1, R15804 += 1 };
  s3 -> s6 [0, 65535];
  s3 -> s7 [0, 65535] { R15924 += 1 };
  s3 -> s4 [66, 66] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s3 -> s5 [66, 66] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s3 -> s1 [67, 65535] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s4 -> s8 [0, 65535] { R15924 += 1, R15848 += 1 };
  s4 -> s4 [0, 65535] { R15924 += 1, R15848 += 1, R15804 += 1, R15381 += 1, R15382 += 1 };
  s4 -> s6 [0, 65535];
  s4 -> s7 [0, 65535] { R15924 += 1 };
  s5 -> s6 [0, 65535];
  s5 -> s5 [0, 65535] { R15924 += 1, R15848 += 1 };
  s5 -> s7 [0, 65535] { R15924 += 1 };
  s6 -> s6 [0, 65535];
  s7 -> s6 [0, 65535];
  s7 -> s7 [0, 65535] { R15924 += 1 };
  s8 -> s8 [0, 65535] { R15924 += 1, R15848 += 1 };
  s8 -> s6 [0, 65535];
  s8 -> s7 [0, 65535] { R15924 += 1 };
  accepting s3, s4, s8, s5, s2, s6, s1, s7, s0;
};
automaton value2_44 {
  init s0;
  s0 -> s1 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s0 -> s2 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s0 -> s0 [0, 65535] { R15925 += 1, R15926 += 1 };
  s0 -> s3 [0, 65535] { R15926 += 1, R15850 += 1, R15805 += 1, R15806 += 1 };
  s0 -> s4 [0, 65535] { R15926 += 1, R15849 += 1, R15850 += 1 };
  s0 -> s5 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s0 -> s6 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s0 -> s7 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s0 -> s8 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s0 -> s1 [67, 69] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s0 -> s2 [67, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s0 -> s9 [70, 70] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s0 -> s1 [77, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s1 -> s1 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s1 -> s6 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1 };
  s1 -> s8 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1 };
  s1 -> s1 [67, 69] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s1 -> s1 [67, 65535] { R15926 += 1, R15850 += 1, R15806 += 1 };
  s1 -> s9 [70, 70] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s1 -> s1 [77, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s2 -> s1 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s2 -> s2 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s2 -> s5 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s2 -> s6 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s2 -> s7 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s2 -> s8 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s2 -> s1 [67, 69] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s2 -> s2 [67, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s2 -> s9 [70, 70] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s2 -> s1 [77, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s3 -> s1 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s3 -> s2 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s3 -> s3 [0, 65535] { R15926 += 1, R15850 += 1, R15805 += 1, R15806 += 1 };
  s3 -> s5 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s3 -> s6 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s3 -> s7 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s3 -> s8 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s3 -> s1 [67, 69] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s3 -> s2 [67, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s3 -> s9 [70, 70] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s3 -> s1 [77, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s4 -> s1 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s4 -> s2 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s4 -> s3 [0, 65535] { R15926 += 1, R15850 += 1, R15805 += 1, R15806 += 1 };
  s4 -> s4 [0, 65535] { R15926 += 1, R15849 += 1, R15850 += 1 };
  s4 -> s5 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s4 -> s6 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s4 -> s7 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s4 -> s8 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s4 -> s1 [67, 69] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s4 -> s2 [67, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s4 -> s9 [70, 70] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s4 -> s1 [77, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s5 -> s6 [0, 69] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s5 -> s5 [0, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15747 += 1, R15748 += 1 };
  s5 -> s12 [70, 70] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s5 -> s6 [77, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s6 -> s6 [0, 69] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s6 -> s6 [0, 65535] { R15926 += 1, R15850 += 1, R15806 += 1 };
  s6 -> s12 [70, 70] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s6 -> s6 [77, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s9 -> s9 [0, 65] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s9 -> s10 [0, 65535];
  s9 -> s11 [0, 65535] { R15926 += 1 };
  s9 -> s9 [0, 65535] { R15926 += 1, R15850 += 1 };
  s9 -> s12 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1 };
  s9 -> s13 [66, 66] { R15926 += 1, R15850 += 1, R15806 += 1 };
  s9 -> s9 [67, 70] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s9 -> s9 [67, 65535] { R15926 += 1, R15850 += 1, R15806 += 1 };
  s9 -> s9 [77, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s10 -> s10 [0, 65535];
  s11 -> s10 [0, 65535];
  s11 -> s11 [0, 65535] { R15926 += 1 };
  s12 -> s12 [0, 70] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s12 -> s10 [0, 65535];
  s12 -> s11 [0, 65535] { R15926 += 1 };
  s12 -> s12 [0, 65535] { R15926 += 1, R15850 += 1, R15806 += 1 };
  s12 -> s14 [0, 65535] { R15926 += 1, R15850 += 1 };
  s12 -> s12 [77, 65535] { R15926 += 1, R15850 += 1, R15806 += 1, R15748 += 1 };
  s13 -> s10 [0, 65535];
  s13 -> s11 [0, 65535] { R15926 += 1 };
  s13 -> s13 [0, 65535] { R15926 += 1, R15850 += 1 };
  s14 -> s10 [0, 65535];
  s14 -> s11 [0, 65535] { R15926 += 1 };
  s14 -> s14 [0, 65535] { R15926 += 1, R15850 += 1 };
  accepting s12, s13, s9, s14, s10, s11;
};
};
synchronised {  // Automata constraining P37
automaton P37_0 {
  init s0;
  s0 -> s1 [9, 9];
  accepting s1;
};
};
synchronised {  // Automata constraining P38
automaton P38_0 {
  init s0;
  s0 -> s1 [10, 10];
  accepting s1;
};
};
synchronised {  // Automata constraining P36
automaton P36_0 {
  init s0;
  s0 -> s1 [32, 32];
  accepting s1;
};
};
constraint R1 = R15766 && R2 = R15850 && R3 - R15926 = 1 && R23 - R15850 = -1 && R24 = R15850 && R25 - R15850 = -1 && R26 = R15850 && R27 = 0 && R28 = 1 && R29 = 0 && R30 = 1 && R31 = R15926 && R32 - R15926 = 1 && R33 = R15926 && R34 - R15926 = 1 && R35 = 0 && R36 = 1 && R37 = 0 && R38 = 1 && R49 + R78 + R77 + -1*R15380 + -1*R15378 - R64 = 0 && R63 + R15379 + R15377 = 0 && R15765 = 0 && R15791 = 0 && R15792 = 0 && R15799 = 0 && R15800 = 0 && R15805 = 0 && R15806 = 0 && R15807 = 0 && R15808 = R15850 && R15809 = 0 && R15810 = R15850 && R15811 = 0 && R15812 = R15850 && R15813 = 0 && R15814 = R15850 && R15815 = 0 && R15816 = R15850 && R15817 = 0 && R15818 = R15850 && R15819 = 0 && R15820 = R15850 && R15821 = 0 && R15822 = R15850 && R15823 = 0 && R15824 = R15850 && R15825 = 0 && R15826 = R15850 && R15827 = 0 && R15828 = R15850 && R15829 = 0 && R15830 = R15850 && R15831 = 0 && R15832 = R15850 && R15833 = 0 && R15834 = R15850 && R15835 = 0 && R15836 = R15850 && R15837 = 0 && R15838 = R15850 && R15839 = 0 && R15840 = R15850 && R15841 = 0 && R15842 = R15850 && R15843 = 0 && R15844 = R15850 && R15845 = 0 && R15846 = R15850 && R15847 = 0 && R15848 = R15850 && R15849 = 0 && R15851 = 0 && R15852 = R15926 && R15853 = 0 && R15854 = R15926 && R15855 = 0 && R15856 = R15926 && R15857 = 0 && R15858 = R15926 && R15859 = 0 && R15860 = R15926 && R15861 = 0 && R15862 = R15926 && R15863 = 0 && R15864 = R15926 && R15865 = 0 && R15866 = R15926 && R15867 = 0 && R15868 = R15926 && R15869 = 0 && R15870 = R15926 && R15871 = 0 && R15872 = R15926 && R15873 = 0 && R15874 = R15926 && R15875 = 0 && R15876 = R15926 && R15877 = 0 && R15878 = R15926 && R15879 = 0 && R15880 = R15926 && R15881 = 0 && R15882 = R15926 && R15883 = 0 && R15884 = R15926 && R15885 = 0 && R15886 = R15926 && R15887 = 0 && R15888 = R15926 && R15889 = 0 && R15890 = R15926 && R15891 = 0 && R15892 = R15926 && R15893 = 0 && R15894 = R15926 && R15895 = 0 && R15896 = R15926 && R15897 = 0 && R15898 = R15926 && R15899 = 0 && R15900 = R15926 && R15901 = 0 && R15902 = R15926 && R15903 = 0 && R15904 = R15926 && R15905 = 0 && R15906 = R15926 && R15907 = 0 && R15908 = R15926 && R15909 = 0 && R15910 = R15926 && R15911 = 0 && R15912 = R15926 && R15913 = 0 && R15914 = R15926 && R15915 = 0 && R15916 = R15926 && R15917 = 0 && R15918 = R15926 && R15919 = 0 && R15920 = R15926 && R15921 = 0 && R15922 = R15926 && R15923 = 0 && R15924 = R15926 && R15925 = 0 && R11 < 1 && R14 < 1 && R17 < 1 && R51 + R80 + R79 < 1 && -1*R15380 + -1*R15378 - R64 < 1 && -1 < R15766 && 0 < R15850 && -1 < R15926 && (R59 + R13194 + R13191 != 0 || ((R53 + R83 + R81 != 0 || R54 + R84 + R82 + -1*R15380 + -1*R15378 - R64 = 0 || R64 + R15380 + R15378 < 1) && (R53 + R83 + R81 = 0 || R64 + R15380 + R15378 < 1))) && (R59 + R13194 + R13191 != 0 || ((R57 + R13192 + R13189 != 0 || R58 + R13193 + R13190 + -1*R15380 + -1*R15378 - R64 = 0 || R64 + R15380 + R15378 < 1) && (R57 + R13192 + R13189 = 0 || R64 + R15380 + R15378 < 1))) && (R15751 != 0 || R15752 = R15766 || (R20 = 0 && R15766 = 0)) && (R15753 != 0 || R15754 = R15766 || (R20 = 0 && R15766 = 0)) && (R15755 != 0 || R15756 = R15766 || (R20 = 0 && R15766 = 0)) && (R15757 != 0 || R15758 = R15766 || (R20 = 0 && R15766 = 0)) && (R15759 != 0 || R15760 = R15766 || (R20 = 0 && R15766 = 0)) && (R15761 != 0 || R15762 = R15766 || (R20 = 0 && R15766 = 0)) && (R15763 != 0 || R15764 = R15766 || (R20 = 0 && R15766 = 0)) && (R15767 != 0 || R15766 = R15768 || (R20 = 0 && R15766 = 0)) && (R15769 != 0 || R15766 = R15770 || (R20 = 0 && R15766 = 0)) && (R21 = 0 || (R15789 = 0 && R15790 = 0)) && (R21 = 0 || (R15793 = 0 && R15794 = 0)) && (R21 = 0 || (R15795 = 0 && R15796 = 0)) && (R21 = 0 || (R15797 = 0 && R15798 = 0)) && (R21 = 0 || (R15801 = 0 && R15802 = 0)) && (R21 = 0 || (R15803 = 0 && R15804 = 0)) && (R22 = 0 || (R15771 = 0 && R15772 = 0)) && (R22 = 0 || (R15773 = 0 && R15774 = 0)) && (R22 = 0 || (R15775 = 0 && R15776 = 0)) && (R22 = 0 || (R15777 = 0 && R15778 = 0)) && (R22 = 0 || (R15779 = 0 && R15780 = 0)) && (R22 = 0 || (R15781 = 0 && R15782 = 0)) && (R22 = 0 || (R15783 = 0 && R15784 = 0)) && (R22 = 0 || (R15785 = 0 && R15786 = 0)) && (R22 = 0 || (R15787 = 0 && R15788 = 0)) && (R59 + R13194 + R13191 = 0 || (R53 + R83 + R81 = 0 && R54 + R84 + R82 + -1*R15380 + -1*R15378 - R64 = 0)) && (R59 + R13194 + R13191 = 0 || (R57 + R13192 + R13189 = 0 && R58 + R13193 + R13190 + -1*R15380 + -1*R15378 - R64 = 0)) && (R69 + R15386 + R15383 = 0 || (R67 + R15384 + R15381 = 0 && R68 + R15385 + R15382 = 0)) && (R69 + R15386 + R15383 = 0 || (R73 + R15749 + R15747 = 0 && R74 + R15750 + R15748 = 0)) && (R15751 = 0 || (R20 = 0 && R15766 = 0)) && (R15753 = 0 || (R20 = 0 && R15766 = 0)) && (R15755 = 0 || (R20 = 0 && R15766 = 0)) && (R15757 = 0 || (R20 = 0 && R15766 = 0)) && (R15759 = 0 || (R20 = 0 && R15766 = 0)) && (R15761 = 0 || (R20 = 0 && R15766 = 0)) && (R15763 = 0 || (R20 = 0 && R15766 = 0)) && (R15767 = 0 || (R20 = 0 && R15766 = 0)) && (R15769 = 0 || (R20 = 0 && R15766 = 0));
// End of Parikh automata intersection problem
